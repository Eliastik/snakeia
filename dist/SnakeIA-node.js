/*! For license information please see SnakeIA-node.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SnakeIA=t():e.SnakeIA=t()}("undefined"!=typeof self?self:this,()=>(()=>{var __webpack_modules__={79:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=Array(t);n<t;n++)a[n]=e[n];return a},e.exports.__esModule=!0,e.exports.default=e.exports},349:(e,t,n)=>{"use strict";n.r(t),n.d(t,{FetchError:()=>h,Headers:()=>_,Request:()=>j,Response:()=>P,default:()=>Z});const a=require("stream"),s=require("http"),i=require("url");var r=n(4652);const o=require("https"),l=require("zlib"),p=a.Readable,d=Symbol("buffer"),u=Symbol("type");class c{constructor(){this[u]="";const e=arguments[0],t=arguments[1],n=[];let a=0;if(e){const t=e,s=Number(t.length);for(let e=0;e<s;e++){const s=t[e];let i;i=s instanceof Buffer?s:ArrayBuffer.isView(s)?Buffer.from(s.buffer,s.byteOffset,s.byteLength):s instanceof ArrayBuffer?Buffer.from(s):s instanceof c?s[d]:Buffer.from("string"==typeof s?s:String(s)),a+=i.length,n.push(i)}}this[d]=Buffer.concat(n);let s=t&&void 0!==t.type&&String(t.type).toLowerCase();s&&!/[^\u0020-\u007E]/.test(s)&&(this[u]=s)}get size(){return this[d].length}get type(){return this[u]}text(){return Promise.resolve(this[d].toString())}arrayBuffer(){const e=this[d],t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new p;return e._read=function(){},e.push(this[d]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,t=arguments[0],n=arguments[1];let a,s;a=void 0===t?0:t<0?Math.max(e+t,0):Math.min(t,e),s=void 0===n?e:n<0?Math.max(e+n,0):Math.min(n,e);const i=Math.max(s-a,0),r=this[d].slice(a,a+i),o=new c([],{type:arguments[2]});return o[d]=r,o}}function h(e,t,n){Error.call(this,e),this.message=e,this.type=t,n&&(this.code=this.errno=n.code),Error.captureStackTrace(this,this.constructor)}let m;Object.defineProperties(c.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(c.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),h.prototype=Object.create(Error.prototype),h.prototype.constructor=h,h.prototype.name="FetchError";try{m=require("encoding").convert}catch(e){}const f=Symbol("Body internals"),g=a.PassThrough;function v(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=n.size;let i=void 0===s?0:s;var r=n.timeout;let o=void 0===r?0:r;null==e?e=null:y(e)?e=Buffer.from(e.toString()):x(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof a||(e=Buffer.from(String(e)))),this[f]={body:e,disturbed:!1,error:null},this.size=i,this.timeout=o,e instanceof a&&e.on("error",function(e){const n="AbortError"===e.name?e:new h(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[f].error=n})}function b(){var e=this;if(this[f].disturbed)return v.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[f].disturbed=!0,this[f].error)return v.Promise.reject(this[f].error);let t=this.body;if(null===t)return v.Promise.resolve(Buffer.alloc(0));if(x(t)&&(t=t.stream()),Buffer.isBuffer(t))return v.Promise.resolve(t);if(!(t instanceof a))return v.Promise.resolve(Buffer.alloc(0));let n=[],s=0,i=!1;return new v.Promise(function(a,r){let o;e.timeout&&(o=setTimeout(function(){i=!0,r(new h(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),t.on("error",function(t){"AbortError"===t.name?(i=!0,r(t)):r(new h(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}),t.on("data",function(t){if(!i&&null!==t){if(e.size&&s+t.length>e.size)return i=!0,void r(new h(`content size at ${e.url} over limit: ${e.size}`,"max-size"));s+=t.length,n.push(t)}}),t.on("end",function(){if(!i){clearTimeout(o);try{a(Buffer.concat(n,s))}catch(t){r(new h(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}})})}function y(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function x(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function w(e){let t,n,s=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return s instanceof a&&"function"!=typeof s.getBoundary&&(t=new g,n=new g,s.pipe(t),s.pipe(n),e[f].body=t,s=n),s}function k(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":y(e)?"application/x-www-form-urlencoded;charset=UTF-8":x(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof a?null:"text/plain;charset=UTF-8"}function I(e){const t=e.body;return null===t?0:x(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}v.prototype={get body(){return this[f].body},get bodyUsed(){return this[f].disturbed},arrayBuffer(){return b.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return b.call(this).then(function(t){return Object.assign(new c([],{type:e.toLowerCase()}),{[d]:t})})},json(){var e=this;return b.call(this).then(function(t){try{return JSON.parse(t.toString())}catch(t){return v.Promise.reject(new h(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}})},text(){return b.call(this).then(function(e){return e.toString()})},buffer(){return b.call(this)},textConverted(){var e=this;return b.call(this).then(function(t){return function(e,t){if("function"!=typeof m)throw new Error("The package `encoding` must be installed to use the textConverted() function");const n=t.get("content-type");let a,s,i="utf-8";return n&&(a=/charset=([^;]*)/i.exec(n)),s=e.slice(0,1024).toString(),!a&&s&&(a=/<meta.+?charset=(['"])(.+?)\1/i.exec(s)),!a&&s&&(a=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(s),a||(a=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(s),a&&a.pop()),a&&(a=/charset=(.*)/i.exec(a.pop()))),!a&&s&&(a=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(s)),a&&(i=a.pop(),"gb2312"!==i&&"gbk"!==i||(i="gb18030")),m(e,"UTF-8",i).toString()}(t,e.headers)})}},Object.defineProperties(v.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),v.mixIn=function(e){for(const t of Object.getOwnPropertyNames(v.prototype))if(!(t in e)){const n=Object.getOwnPropertyDescriptor(v.prototype,t);Object.defineProperty(e,t,n)}},v.Promise=global.Promise;const S=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,N=/[^\t\x20-\x7e\x80-\xff]/;function T(e){if(e=`${e}`,S.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function C(e){if(e=`${e}`,N.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function E(e,t){t=t.toLowerCase();for(const n in e)if(n.toLowerCase()===t)return n}const $=Symbol("map");class _{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[$]=Object.create(null),e instanceof _){const t=e.raw(),n=Object.keys(t);for(const e of n)for(const n of t[e])this.append(e,n);return}if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw new TypeError("Header pairs must be iterable");const n=[];for(const t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw new TypeError("Each header pair must be iterable");n.push(Array.from(t))}for(const e of n){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const t of Object.keys(e)){const n=e[t];this.append(t,n)}}}}get(e){T(e=`${e}`);const t=E(this[$],e);return void 0===t?null:this[$][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,n=R(this),a=0;for(;a<n.length;){var s=n[a];const i=s[0],r=s[1];e.call(t,r,i,this),n=R(this),a++}}set(e,t){t=`${t}`,T(e=`${e}`),C(t);const n=E(this[$],e);this[$][void 0!==n?n:e]=[t]}append(e,t){t=`${t}`,T(e=`${e}`),C(t);const n=E(this[$],e);void 0!==n?this[$][n].push(t):this[$][e]=[t]}has(e){return T(e=`${e}`),void 0!==E(this[$],e)}delete(e){T(e=`${e}`);const t=E(this[$],e);void 0!==t&&delete this[$][t]}raw(){return this[$]}keys(){return D(this,"key")}values(){return D(this,"value")}[Symbol.iterator](){return D(this,"key+value")}}function R(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[$]).sort().map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[$][t].join(", ")}:function(t){return[t.toLowerCase(),e[$][t].join(", ")]})}_.prototype.entries=_.prototype[Symbol.iterator],Object.defineProperty(_.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(_.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const A=Symbol("internal");function D(e,t){const n=Object.create(F);return n[A]={target:e,kind:t,index:0},n}const F=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==F)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[A];const t=e.target,n=e.kind,a=e.index,s=R(t,n);return a>=s.length?{value:void 0,done:!0}:(this[A].index=a+1,{value:s[a],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function O(e){const t=Object.assign({__proto__:null},e[$]),n=E(e[$],"Host");return void 0!==n&&(t[n]=t[n][0]),t}Object.defineProperty(F,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const M=Symbol("Response internals"),L=s.STATUS_CODES;class P{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};v.call(this,e,t);const n=t.status||200,a=new _(t.headers);if(null!=e&&!a.has("Content-Type")){const t=k(e);t&&a.append("Content-Type",t)}this[M]={url:t.url,status:n,statusText:t.statusText||L[n],headers:a,counter:t.counter}}get url(){return this[M].url||""}get status(){return this[M].status}get ok(){return this[M].status>=200&&this[M].status<300}get redirected(){return this[M].counter>0}get statusText(){return this[M].statusText}get headers(){return this[M].headers}clone(){return new P(w(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}v.mixIn(P.prototype),Object.defineProperties(P.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(P.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const z=Symbol("Request internals"),V=i.URL||r.URL,B=i.parse,U=i.format;function W(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new V(e).toString()),B(e)}const G="destroy"in a.Readable.prototype;function H(e){return"object"==typeof e&&"object"==typeof e[z]}class j{constructor(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};H(e)?t=W(e.url):(t=e&&e.href?W(e.href):W(`${e}`),e={});let a=n.method||e.method||"GET";if(a=a.toUpperCase(),(null!=n.body||H(e)&&null!==e.body)&&("GET"===a||"HEAD"===a))throw new TypeError("Request with GET/HEAD method cannot have body");let s=null!=n.body?n.body:H(e)&&null!==e.body?w(e):null;v.call(this,s,{timeout:n.timeout||e.timeout||0,size:n.size||e.size||0});const i=new _(n.headers||e.headers||{});if(null!=s&&!i.has("Content-Type")){const e=k(s);e&&i.append("Content-Type",e)}let r=H(e)?e.signal:null;if("signal"in n&&(r=n.signal),null!=r&&!function(e){const t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!t||"AbortSignal"!==t.constructor.name)}(r))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[z]={method:a,redirect:n.redirect||e.redirect||"follow",headers:i,parsedURL:t,signal:r},this.follow=void 0!==n.follow?n.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==n.compress?n.compress:void 0===e.compress||e.compress,this.counter=n.counter||e.counter||0,this.agent=n.agent||e.agent}get method(){return this[z].method}get url(){return U(this[z].parsedURL)}get headers(){return this[z].headers}get redirect(){return this[z].redirect}get signal(){return this[z].signal}clone(){return new j(this)}}function q(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}v.mixIn(j.prototype),Object.defineProperty(j.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(j.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),q.prototype=Object.create(Error.prototype),q.prototype.constructor=q,q.prototype.name="AbortError";const K=i.URL||r.URL,X=a.PassThrough;function Y(e,t){if(!Y.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return v.Promise=Y.Promise,new Y.Promise(function(n,i){const r=new j(e,t),p=function(e){const t=e[z].parsedURL,n=new _(e[z].headers);if(n.has("Accept")||n.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof a.Readable&&!G)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let s=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(s="0"),null!=e.body){const t=I(e);"number"==typeof t&&(s=String(t))}s&&n.set("Content-Length",s),n.has("User-Agent")||n.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!n.has("Accept-Encoding")&&n.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(t)),Object.assign({},t,{method:e.method,headers:O(n),agent:i})}(r),d=("https:"===p.protocol?o:s).request,u=r.signal;let c=null;const m=function(){let e=new q("The user aborted a request.");i(e),r.body&&r.body instanceof a.Readable&&J(r.body,e),c&&c.body&&c.body.emit("error",e)};if(u&&u.aborted)return void m();const f=function(){m(),b()},g=d(p);let v;function b(){g.abort(),u&&u.removeEventListener("abort",f),clearTimeout(v)}u&&u.addEventListener("abort",f),r.timeout&&g.once("socket",function(e){v=setTimeout(function(){i(new h(`network timeout at: ${r.url}`,"request-timeout")),b()},r.timeout)}),g.on("error",function(e){i(new h(`request to ${r.url} failed, reason: ${e.message}`,"system",e)),c&&c.body&&J(c.body,e),b()}),function(e,t){let n;e.on("socket",function(e){n=e}),e.on("response",function(e){const a=e.headers;"chunked"!==a["transfer-encoding"]||a["content-length"]||e.once("close",function(e){if(n&&n.listenerCount("data")>0&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",t(e)}})})}(g,function(e){u&&u.aborted||c&&c.body&&J(c.body,e)}),parseInt(process.version.substring(1))<14&&g.on("socket",function(e){e.addListener("close",function(t){const n=e.listenerCount("data")>0;if(c&&n&&!t&&(!u||!u.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",c.body.emit("error",e)}})}),g.on("response",function(e){clearTimeout(v);const t=function(e){const t=new _;for(const n of Object.keys(e))if(!S.test(n))if(Array.isArray(e[n]))for(const a of e[n])N.test(a)||(void 0===t[$][n]?t[$][n]=[a]:t[$][n].push(a));else N.test(e[n])||(t[$][n]=[e[n]]);return t}(e.headers);if(Y.isRedirect(e.statusCode)){const s=t.get("Location");let o=null;try{o=null===s?null:new K(s,r.url).toString()}catch(e){if("manual"!==r.redirect)return i(new h(`uri requested responds with an invalid redirect URL: ${s}`,"invalid-redirect")),void b()}switch(r.redirect){case"error":return i(new h(`uri requested responds with a redirect, redirect mode is set to error: ${r.url}`,"no-redirect")),void b();case"manual":if(null!==o)try{t.set("Location",o)}catch(e){i(e)}break;case"follow":if(null===o)break;if(r.counter>=r.follow)return i(new h(`maximum redirect reached at: ${r.url}`,"max-redirect")),void b();const s={headers:new _(r.headers),follow:r.follow,counter:r.counter+1,agent:r.agent,compress:r.compress,method:r.method,body:r.body,signal:r.signal,timeout:r.timeout,size:r.size};if(!function(e,t){const n=new K(t).hostname,a=new K(e).hostname;return n===a||"."===n[n.length-a.length-1]&&n.endsWith(a)}(r.url,o)||(a=r.url,new K(o).protocol!==new K(a).protocol))for(const e of["authorization","www-authenticate","cookie","cookie2"])s.headers.delete(e);return 303!==e.statusCode&&r.body&&null===I(r)?(i(new h("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void b()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==r.method)||(s.method="GET",s.body=void 0,s.headers.delete("content-length")),n(Y(new j(o,s))),void b())}}var a;e.once("end",function(){u&&u.removeEventListener("abort",f)});let s=e.pipe(new X);const o={url:r.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:r.size,timeout:r.timeout,counter:r.counter},p=t.get("Content-Encoding");if(!r.compress||"HEAD"===r.method||null===p||204===e.statusCode||304===e.statusCode)return c=new P(s,o),void n(c);const d={flush:l.Z_SYNC_FLUSH,finishFlush:l.Z_SYNC_FLUSH};if("gzip"==p||"x-gzip"==p)return s=s.pipe(l.createGunzip(d)),c=new P(s,o),void n(c);if("deflate"==p||"x-deflate"==p){const t=e.pipe(new X);return t.once("data",function(e){s=8==(15&e[0])?s.pipe(l.createInflate()):s.pipe(l.createInflateRaw()),c=new P(s,o),n(c)}),void t.on("end",function(){c||(c=new P(s,o),n(c))})}if("br"==p&&"function"==typeof l.createBrotliDecompress)return s=s.pipe(l.createBrotliDecompress()),c=new P(s,o),void n(c);c=new P(s,o),n(c)}),function(e,t){const n=t.body;null===n?e.end():x(n)?n.stream().pipe(e):Buffer.isBuffer(n)?(e.write(n),e.end()):n.pipe(e)}(g,r)})}function J(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}Y.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},Y.Promise=global.Promise;const Z=Y},579:(e,t,n)=>{var a=n(3738).default;e.exports=function(e){if(null!=e){var t=e["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],n=0;if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}throw new TypeError(a(e)+" is not iterable")},e.exports.__esModule=!0,e.exports.default=e.exports},750:(e,t,n)=>{"use strict";var a=n(4876),s=n(6149),i={TRANSITIONAL:0,NONTRANSITIONAL:1};function r(e){return e.split("\0").map(function(e){return e.normalize("NFC")}).join("\0")}function o(e){for(var t=0,n=s.length-1;t<=n;){var a=Math.floor((t+n)/2),i=s[a];if(i[0][0]<=e&&i[0][1]>=e)return i;i[0][0]>e?n=a-1:t=a+1}return null}var l=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function p(e){return e.replace(l,"_").length}var d=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function u(e,t){"xn--"===e.substr(0,4)&&(e=a.toUnicode(e));var n=!1;(r(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(d))&&(n=!0);for(var s=p(e),l=0;l<s;++l){var u=o(e.codePointAt(l));if(c===i.TRANSITIONAL&&"valid"!==u[1]||c===i.NONTRANSITIONAL&&"valid"!==u[1]&&"deviation"!==u[1]){n=!0;break}}return{label:e,error:n}}function c(e,t,n){var a=function(e,t,n){for(var a=!1,s="",r=p(e),l=0;l<r;++l){var d=e.codePointAt(l),u=o(d);switch(u[1]){case"disallowed":a=!0,s+=String.fromCodePoint(d);break;case"ignored":break;case"mapped":s+=String.fromCodePoint.apply(String,u[2]);break;case"deviation":s+=n===i.TRANSITIONAL?String.fromCodePoint.apply(String,u[2]):String.fromCodePoint(d);break;case"valid":s+=String.fromCodePoint(d);break;case"disallowed_STD3_mapped":t?(a=!0,s+=String.fromCodePoint(d)):s+=String.fromCodePoint.apply(String,u[2]);break;case"disallowed_STD3_valid":t&&(a=!0),s+=String.fromCodePoint(d)}}return{string:s,error:a}}(e,t,n);a.string=r(a.string);for(var s=a.string.split("."),l=0;l<s.length;++l)try{var d=u(s[l]);s[l]=d.label,a.error=a.error||d.error}catch(e){a.error=!0}return{string:s.join("."),error:a.error}}e.exports.toASCII=function(e,t,n,s){var i=c(e,t,n),r=i.string.split(".");if(r=r.map(function(e){try{return a.toASCII(e)}catch(t){return i.error=!0,e}}),s){var o=r.slice(0,r.length-1).join(".").length;(o.length>253||0===o.length)&&(i.error=!0);for(var l=0;l<r.length;++l)if(r.length>63||0===r.length){i.error=!0;break}}return i.error?null:r.join(".")},e.exports.toUnicode=function(e,t){var n=c(e,t,i.NONTRANSITIONAL);return{domain:n.string,error:n.error}},e.exports.PROCESSING_OPTIONS=i},887:(e,t,n)=>{var a=n(6993),s=n(1791);e.exports=function(e,t,n,i,r){return new s(a().w(e,t,n,i),r||Promise)},e.exports.__esModule=!0,e.exports.default=e.exports},1023:(e,t,n)=>{"use strict";const a=n(1663),s=n(2151),i=n(9810),r=s.implSymbol;function o(t){if(!this||this[r]||!(this instanceof o))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const n=[];for(let e=0;e<arguments.length&&e<2;++e)n[e]=arguments[e];n[0]=a.USVString(n[0]),void 0!==n[1]&&(n[1]=a.USVString(n[1])),e.exports.setup(this,n)}o.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[r].toJSON.apply(this[r],t)},Object.defineProperty(o.prototype,"href",{get(){return this[r].href},set(e){e=a.USVString(e),this[r].href=e},enumerable:!0,configurable:!0}),o.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(o.prototype,"origin",{get(){return this[r].origin},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"protocol",{get(){return this[r].protocol},set(e){e=a.USVString(e),this[r].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"username",{get(){return this[r].username},set(e){e=a.USVString(e),this[r].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"password",{get(){return this[r].password},set(e){e=a.USVString(e),this[r].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"host",{get(){return this[r].host},set(e){e=a.USVString(e),this[r].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"hostname",{get(){return this[r].hostname},set(e){e=a.USVString(e),this[r].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"port",{get(){return this[r].port},set(e){e=a.USVString(e),this[r].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"pathname",{get(){return this[r].pathname},set(e){e=a.USVString(e),this[r].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"search",{get(){return this[r].search},set(e){e=a.USVString(e),this[r].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"hash",{get(){return this[r].hash},set(e){e=a.USVString(e),this[r].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[r]instanceof i.implementation,create(e,t){let n=Object.create(o.prototype);return this.setup(n,e,t),n},setup(e,t,n){n||(n={}),n.wrapper=e,e[r]=new i.implementation(t,n),e[r][s.wrapperSymbol]=e},interface:o,expose:{Window:{URL:o},Worker:{URL:o}}}},1156:e=>{e.exports=function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var a,s,i,r,o=[],l=!0,p=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(a=i.call(n)).done)&&(o.push(a.value),o.length!==t);l=!0);}catch(e){p=!0,s=e}finally{try{if(!l&&null!=n.return&&(r=n.return(),Object(r)!==r))return}finally{if(p)throw s}}return o}},e.exports.__esModule=!0,e.exports.default=e.exports},1663:e=>{"use strict";var t={};function n(e){return e<0?-1:1}function a(e,t){t.unsigned||--e;const a=t.unsigned?0:-Math.pow(2,e),s=Math.pow(2,e)-1,i=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),r=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,o){o||(o={});let l=+e;if(o.enforceRange){if(!Number.isFinite(l))throw new TypeError("Argument is not a finite number");if(l=n(l)*Math.floor(Math.abs(l)),l<a||l>s)throw new TypeError("Argument is not in byte range");return l}if(!isNaN(l)&&o.clamp)return l=function(e){return e%1!=.5||1&e?Math.round(e):Math.floor(e)}(l),l<a&&(l=a),l>s&&(l=s),l;if(!Number.isFinite(l)||0===l)return 0;if(l=n(l)*Math.floor(Math.abs(l)),l%=i,!t.unsigned&&l>=r)return l-i;if(t.unsigned)if(l<0)l+=i;else if(-0===l)return 0;return l}}e.exports=t,t.void=function(){},t.boolean=function(e){return!!e},t.byte=a(8,{unsigned:!1}),t.octet=a(8,{unsigned:!0}),t.short=a(16,{unsigned:!1}),t["unsigned short"]=a(16,{unsigned:!0}),t.long=a(32,{unsigned:!1}),t["unsigned long"]=a(32,{unsigned:!0}),t["long long"]=a(32,{unsigned:!1,moduloBitLength:64}),t["unsigned long long"]=a(32,{unsigned:!0,moduloBitLength:64}),t.double=function(e){const t=+e;if(!Number.isFinite(t))throw new TypeError("Argument is not a finite floating-point value");return t},t["unrestricted double"]=function(e){const t=+e;if(isNaN(t))throw new TypeError("Argument is NaN");return t},t.float=t.double,t["unrestricted float"]=t["unrestricted double"],t.DOMString=function(e,t){return t||(t={}),t.treatNullAsEmptyString&&null===e?"":String(e)},t.ByteString=function(e,t){const n=String(e);let a;for(let e=0;void 0!==(a=n.codePointAt(e));++e)if(a>255)throw new TypeError("Argument is not a valid bytestring");return n},t.USVString=function(e){const t=String(e),n=t.length,a=[];for(let e=0;e<n;++e){const s=t.charCodeAt(e);if(s<55296||s>57343)a.push(String.fromCodePoint(s));else if(56320<=s&&s<=57343)a.push(String.fromCodePoint(65533));else if(e===n-1)a.push(String.fromCodePoint(65533));else{const n=t.charCodeAt(e+1);if(56320<=n&&n<=57343){const t=1023&s,i=1023&n;a.push(String.fromCodePoint(65536+1024*t+i)),++e}else a.push(String.fromCodePoint(65533))}}return a.join("")},t.Date=function(e,t){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},t.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e}},1791:(e,t,n)=>{var a=n(5172),s=n(5546);e.exports=function e(t,n){function i(e,s,r,o){try{var l=t[e](s),p=l.value;return p instanceof a?n.resolve(p.v).then(function(e){i("next",e,r,o)},function(e){i("throw",e,r,o)}):n.resolve(p).then(function(e){l.value=e,r(l)},function(e){return i("throw",e,r,o)})}catch(e){o(e)}}var r;this.next||(s(e.prototype),s(e.prototype,"function"==typeof Symbol&&Symbol.asyncIterator||"@asyncIterator",function(){return this})),s(this,"_invoke",function(e,t,a){function s(){return new n(function(t,n){i(e,a,t,n)})}return r=r?r.then(s,s):s()},!0)},e.exports.__esModule=!0,e.exports.default=e.exports},2151:e=>{"use strict";e.exports.mixin=function(e,t){const n=Object.getOwnPropertyNames(t);for(let a=0;a<n.length;++a)Object.defineProperty(e,n[a],Object.getOwnPropertyDescriptor(t,n[a]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},2395:(e,t,n)=>{var a=n(9552);function s(){return e.exports=s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var s=a(e,t);if(s){var i=Object.getOwnPropertyDescriptor(s,t);return i.get?i.get.call(arguments.length<3?e:n):i.value}},e.exports.__esModule=!0,e.exports.default=e.exports,s.apply(null,arguments)}e.exports=s,e.exports.__esModule=!0,e.exports.default=e.exports},2475:e=>{e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e},e.exports.__esModule=!0,e.exports.default=e.exports},2723:(e,t,n)=>{"use strict";const a=n(4876),s=n(750),i={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},r=Symbol("failure");function o(e){return a.ucs2.decode(e).length}function l(e,t){const n=e[t];return isNaN(n)?void 0:String.fromCodePoint(n)}function p(e){return e>=48&&e<=57}function d(e){return e>=65&&e<=90||e>=97&&e<=122}function u(e){return p(e)||e>=65&&e<=70||e>=97&&e<=102}function c(e){return"."===e||"%2e"===e.toLowerCase()}function h(e){return 2===e.length&&d(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function m(e){return void 0!==i[e]}function f(e){return m(e.scheme)}function g(e){let t=e.toString(16).toUpperCase();return 1===t.length&&(t="0"+t),"%"+t}function v(e){return e<=31||e>126}const b=new Set([32,34,35,60,62,63,96,123,125]);function y(e){return v(e)||b.has(e)}const x=new Set([47,58,59,61,64,91,92,93,94,124]);function w(e){return y(e)||x.has(e)}function k(e,t){const n=String.fromCodePoint(e);return t(e)?function(e){const t=new Buffer(e);let n="";for(let e=0;e<t.length;++e)n+=g(t[e]);return n}(n):n}function I(e){let t=10;return e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),t=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),t=8),""===e?0:(10===t?/[^0-9]/:16===t?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?r:parseInt(e,t)}function S(e,t){if("["===e[0])return"]"!==e[e.length-1]?r:function(e){const t=[0,0,0,0,0,0,0,0];let n=0,s=null,i=0;if(58===(e=a.ucs2.decode(e))[i]){if(58!==e[i+1])return r;i+=2,++n,s=n}for(;i<e.length;){if(8===n)return r;if(58===e[i]){if(null!==s)return r;++i,++n,s=n;continue}let a=0,o=0;for(;o<4&&u(e[i]);)a=16*a+parseInt(l(e,i),16),++i,++o;if(46===e[i]){if(0===o)return r;if(i-=o,n>6)return r;let a=0;for(;void 0!==e[i];){let s=null;if(a>0){if(!(46===e[i]&&a<4))return r;++i}if(!p(e[i]))return r;for(;p(e[i]);){const t=parseInt(l(e,i));if(null===s)s=t;else{if(0===s)return r;s=10*s+t}if(s>255)return r;++i}t[n]=256*t[n]+s,++a,2!==a&&4!==a||++n}if(4!==a)return r;break}if(58===e[i]){if(++i,void 0===e[i])return r}else if(void 0!==e[i])return r;t[n]=a,++n}if(null!==s){let e=n-s;for(n=7;0!==n&&e>0;){const a=t[s+e-1];t[s+e-1]=t[n],t[n]=a,--n,--e}}else if(null===s&&8!==n)return r;return t}(e.substring(1,e.length-1));if(!t)return function(e){if(-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return r;let t="";const n=a.ucs2.decode(e);for(let e=0;e<n.length;++e)t+=k(n[e],v);return t}(e);const n=function(e){const t=new Buffer(e),n=[];for(let e=0;e<t.length;++e)37!==t[e]?n.push(t[e]):37===t[e]&&u(t[e+1])&&u(t[e+2])?(n.push(parseInt(t.slice(e+1,e+3).toString(),16)),e+=2):n.push(t[e]);return new Buffer(n).toString()}(e),i=s.toASCII(n,!1,s.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===i)return r;if(-1!==i.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return r;const o=function(e){const t=e.split(".");if(""===t[t.length-1]&&t.length>1&&t.pop(),t.length>4)return e;const n=[];for(const a of t){if(""===a)return e;const t=I(a);if(t===r)return e;n.push(t)}for(let e=0;e<n.length-1;++e)if(n[e]>255)return r;if(n[n.length-1]>=Math.pow(256,5-n.length))return r;let a=n.pop(),s=0;for(const e of n)a+=e*Math.pow(256,3-s),++s;return a}(i);return"number"==typeof o||o===r?o:i}function N(e){return"number"==typeof e?function(e){let t="",n=e;for(let e=1;e<=4;++e)t=String(n%256)+t,4!==e&&(t="."+t),n=Math.floor(n/256);return t}(e):e instanceof Array?"["+function(e){let t="";const n=function(e){let t=null,n=1,a=null,s=0;for(let i=0;i<e.length;++i)0!==e[i]?(s>n&&(t=a,n=s),a=null,s=0):(null===a&&(a=i),++s);return s>n&&(t=a,n=s),{idx:t,len:n}}(e).idx;let a=!1;for(let s=0;s<=7;++s)if(!a||0!==e[s]){if(a&&(a=!1),n===s){t+=0===s?"::":":",a=!0;continue}t+=e[s].toString(16),7!==s&&(t+=":")}return t}(e)+"]":e}function T(e){const t=e.path;var n;0!==t.length&&("file"===e.scheme&&1===t.length&&(n=t[0],/^[A-Za-z]:$/.test(n))||t.pop())}function C(e){return""!==e.username||""!==e.password}function E(e,t,n,s,i){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=n||"utf-8",this.stateOverride=i,this.url=s,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const o=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(o!==this.input&&(this.parseError=!0),this.input=o,this.state=i||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=a.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],t=isNaN(e)?void 0:String.fromCodePoint(e),n=this["parse "+this.state](e,t);if(!n)break;if(n===r){this.failure=!0;break}}}E.prototype["parse scheme start"]=function(e,t){if(d(e))this.buffer+=t.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,r;this.state="no scheme",--this.pointer}return!0},E.prototype["parse scheme"]=function(e,t){if(function(e){return d(e)||p(e)}(e)||43===e||45===e||46===e)this.buffer+=t.toLowerCase();else if(58===e){if(this.stateOverride){if(f(this.url)&&!m(this.buffer))return!1;if(!f(this.url)&&m(this.buffer))return!1;if((C(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):f(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":f(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,r;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},E.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?r:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},E.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},E.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},E.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):f(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},E.prototype["parse relative slash"]=function(e){return!f(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},E.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},E.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},E.prototype["parse authority"]=function(e,t){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=o(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const n=k(e,w);this.passwordTokenSeenFlag?this.url.password+=n:this.url.username+=n}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,r;this.pointer-=o(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0},E.prototype["parse hostname"]=E.prototype["parse host"]=function(e,t){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(--this.pointer,f(this.url)&&""===this.buffer)return this.parseError=!0,r;if(this.stateOverride&&""===this.buffer&&(C(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=S(this.buffer,f(this.url));if(e===r)return r;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=t;else{if(""===this.buffer)return this.parseError=!0,r;const e=S(this.buffer,f(this.url));if(e===r)return r;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},E.prototype["parse port"]=function(e,t){if(p(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e||this.stateOverride))return this.parseError=!0,r;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,r;this.url.port=e===(n=this.url.scheme,i[n])?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}var n;return!0};const $=new Set([47,92,63,35]);E.prototype["parse file"]=function(e){var t,n;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(t=e,n=this.input[this.pointer+1],!d(t)||58!==n&&124!==n)||this.input.length-this.pointer-1>=2&&!$.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),T(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},E.prototype["parse file slash"]=function(e){return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(2===(t=this.base.path[0]).length&&d(t.codePointAt(0))&&":"===t[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0;var t},E.prototype["parse file host"]=function(e,t){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&h(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=S(this.buffer,f(this.url));if(e===r)return r;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=t;return!0},E.prototype["parse path start"]=function(e){return f(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},E.prototype["parse path"]=function(e){if(isNaN(e)||47===e||f(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(f(this.url)&&92===e&&(this.parseError=!0),".."===(t=(t=this.buffer).toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t?(T(this.url),47===e||f(this.url)&&92===e||this.url.path.push("")):!c(this.buffer)||47===e||f(this.url)&&92===e?c(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&h(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=k(e,y);var t;return!0},E.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+k(e,v))),!0},E.prototype["parse query"]=function(e,t){if(isNaN(e)||!this.stateOverride&&35===e){f(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e)t[e]<33||t[e]>126||34===t[e]||35===t[e]||60===t[e]||62===t[e]?this.url.query+=g(t[e]):this.url.query+=String.fromCodePoint(t[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=t;return!0},E.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||u(this.input[this.pointer+1])&&u(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=k(e,v))),!0},e.exports.serializeURL=function(e,t){let n=e.scheme+":";if(null!==e.host?(n+="//",""===e.username&&""===e.password||(n+=e.username,""!==e.password&&(n+=":"+e.password),n+="@"),n+=N(e.host),null!==e.port&&(n+=":"+e.port)):null===e.host&&"file"===e.scheme&&(n+="//"),e.cannotBeABaseURL)n+=e.path[0];else for(const t of e.path)n+="/"+t;return null!==e.query&&(n+="?"+e.query),t||null===e.fragment||(n+="#"+e.fragment),n},e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let t=e.scheme+"://";return t+=N(e.host),null!==e.port&&(t+=":"+e.port),t}({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,t){void 0===t&&(t={});const n=new E(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return n.failure?"failure":n.url},e.exports.setTheUsername=function(e,t){e.username="";const n=a.ucs2.decode(t);for(let t=0;t<n.length;++t)e.username+=k(n[t],w)},e.exports.setThePassword=function(e,t){e.password="";const n=a.ucs2.decode(t);for(let t=0;t<n.length;++t)e.password+=k(n[t],w)},e.exports.serializeHost=N,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(t,n){return void 0===n&&(n={}),e.exports.basicURLParse(t,{baseURL:n.baseURL,encodingOverride:n.encodingOverride})}},2987:e=>{e.exports=function(e){if(Array.isArray(e))return e},e.exports.__esModule=!0,e.exports.default=e.exports},3031:function(e,t,n){var a;!function(e,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&r(a,n),s.state=function(){return r(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},3072:e=>{function t(n){return e.exports=t=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},3181:function(e,t,n){var a;!function(e,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&r(a,n),s.state=function(){return r(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.xor128=o}(0,e=n.nmd(e),n.amdD)},3193:e=>{"use strict";e.exports=require("string_decoder")},3293:function(module){(function(a){var b=Math.sign,c=Math.min,d=Math.abs;void 0===a.Lowlight&&(a.Lowlight={}),"object"==typeof module.exports&&(module.exports=a.Lowlight);class e{constructor(){this.nodes=new Map}id(e){return e}node(e,t=!1){return t?this.nodes.get(this.id(arguments[0])):this.nodes.get(e)}data(e,t){return 2===arguments.length&&(e.graph.get(this)._data=t),e.graph.get(this)._data}adjacent(e,t){return e.graph.get(this).has(t)}neighbors(e){return Array.from(e.graph.get(this).keys())}connected(e,t){return e.graph.get(this)._connectivity===t.graph.get(this)._connectivity}connect(){let e=Array.from(this.nodes.values()),t=0;for(let t=0;t<e.length;t++)e[t].graph.get(this)._connectivity=void 0;for(let n=0;n<e.length;n++){if(void 0!==e[n].graph.get(this)._connectivity)continue;let a=[e[n]];for(t++;a.length;){let e=a.shift();e.graph.get(this)._connectivity=t,this.neighbors(e).map(e=>{void 0===e.graph.get(this)._connectivity&&0>a.indexOf(e)&&a.push(e)})}}}add(e){return 1<arguments.length?Array.from(arguments).map(e=>this.add(e)):(e.graph.set(this,new Map),this.nodes.set(e.id,e),e)}delete(e){return 1<arguments.length?Array.from(arguments).map(e=>this.delete(e)):(e.graph.delete(this),this.nodes.delete(e.id),e)}edge(e,t,n=1,a=1){if(!e.graph.has(this)||!t.graph.has(this))throw new Error("Nodes must be on the same graph");return null===n?e.graph.get(this).delete(t):e.graph.get(this).set(t,n),null===a?t.graph.get(this).delete(e):t.graph.get(this).set(e,a),this}cost(e,t){return this.adjacent(e,t)?e.graph.get(this).get(t):null}}e.fromArray=function(t,n={}){let a=e.fromArray.X(t,n.order),s=e.fromArray.Y(t,n.order),i=e.fromArray.at.bind(null,t,n.order),r=[],o=null;for(let t,l=1;l<Math.max(2,arguments.length);l++){t=new e,r.push(t),n=arguments[l]||{};let p=e.fromArray.id.bind(null,a,s,n.torus),d=n.cost||e.fromArray.cost,u=e.fromArray.edge.bind(null,t,d);for(let e=0;e<a;e++)for(let n,a=0;a<s;a++)n=t.add(o?o.get(p(e,a)):new f(p(e,a))),n.x=e,n.y=a,n.graph.get(t)._data=i(e,a),u(n,t.nodes.get(p(e-1,a))),u(n,t.nodes.get(p(e+1,a))),u(n,t.nodes.get(p(e,a-1))),u(n,t.nodes.get(p(e,a+1)));if(n.diagonals)for(let e=0;e<a;e++)for(let a=0;a<s;a++){let s=t.nodes.get(p(e,a)),i=t.adjacent(s,t.nodes.get(p(e-1,a))),r=t.adjacent(s,t.nodes.get(p(e+1,a))),o=t.adjacent(s,t.nodes.get(p(e,a-1))),l=t.adjacent(s,t.nodes.get(p(e,a+1)));"strict"===n.cutting?(i&&o&&u(s,t.nodes.get(p(e-1,a-1))),i&&l&&u(s,t.nodes.get(p(e-1,a+1))),r&&o&&u(s,t.nodes.get(p(e+1,a-1))),r&&l&&u(s,t.nodes.get(p(e+1,a+1)))):((i||o||n.cutting)&&u(s,t.nodes.get(p(e-1,a-1))),(i||l||n.cutting)&&u(s,t.nodes.get(p(e-1,a+1))),(r||o||n.cutting)&&u(s,t.nodes.get(p(e+1,a-1))),(r||l||n.cutting)&&u(s,t.nodes.get(p(e+1,a+1))))}Object.defineProperty(t,"id",{enumerable:!1,configurable:!1,writable:!0,value:e=>p(e.x,e.y)}),t.connect(),t.X=a,t.Y=s,t.TORUS=n.torus,o||(o=t.nodes)}return 1<r.length?r:r[0]},e.fromArray.X=function(e,t="yx"){return"xy"===t?e.length:"yx"===t?e[0].length:0},e.fromArray.Y=function(e,t="yx"){return"xy"===t?e[0].length:"yx"===t?e.length:0},e.fromArray.at=function(e,t="yx",n,a){return"xy"===t?e[n][a]:e[a][n]},e.fromArray.id=function(e=0,t=0,n=!1,a,s){return n?(s+t)%t*e+(a+e)%e:0<=a&&a<e&&0<=s&&s<t?s*e+a:null},e.fromArray.cost=function(){return 1},e.fromArray.edge=function(e,t,n,a){a&&e.edge(n,a,t(e.data(n),e.data(a)),t(e.data(a),e.data(n)))},e.fromArray.update=function(){console.warn("Graph.fromArray isn't implemented yet")};class f{constructor(e,t){for(let n in this.id=e,this.graph=new Map,t)"id"!=n&&"graph"!=n&&(this[n]=t[n])}}class g{constructor(e){this.nodes=[],this.score="function"==typeof e?e:e=>+e}get size(){return this.nodes.length}add(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return this.nodes.push(e),this.bubble(this.size-1)}set(e){let t=this.nodes.indexOf(e);return~t?this.score(e)<=this.score(this.nodes[t])?this.bubble(this.nodes.indexOf(e)):this.sink(this.nodes.indexOf(e)):this.add(e)}pop(){let e=this.nodes[0],t=this.nodes.pop();return 0<this.size&&(this.nodes[0]=t,this.sink(0)),e}top(){return this.nodes[0]}delete(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.delete(arguments[e]);return this}for(let t=0;t<this.size;t++){if(this.nodes[t]!=e)continue;let n=this.nodes.pop();return t==this.size-1?this:(this.nodes[t]=n,this.bubble(t).sink(t))}}bubble(e){let t=this.nodes[e],n=this.score(t);for(;0<e;){let a=Math.floor((e+1)/2)-1,s=this.nodes[a];if(n>=this.score(s))break;this.nodes[a]=t,this.nodes[e]=s,e=a}return this}sink(e){let t=this.nodes[e],n=this.score(t);for(;;){let a=2*(e+1),s=a-1,i=null;if(s<this.size&&this.score(this.nodes[s])<n&&(i=s),a<this.size&&this.score(this.nodes[a])<(i?this.score(this.nodes[i]):n)&&(i=a),null===i)break;this.nodes[e]=this.nodes[i],this.nodes[i]=t,e=i}return this}}let h={manhattan:function(e,t,n={}){let a=d(t.x-e.x),s=d(t.y-e.y);return(n.multiplier||1)*(a+s)},manhattanTorus:function(e,t,n={}){let a=c(d(t.x-e.x),t.x+(n.x||0)-e.x,e.x+(n.x||0)-t.x),s=c(d(t.y-e.y),t.y+(n.y||0)-e.y,e.y+(n.y||0)-t.y);return(n.multiplier||1)*(a+s)},diagonal:function(e,t,n={}){let a=d(t.x-e.x),s=d(t.y-e.y);return m*(a+s)+(dm-2*m)*c(a,s)},diagonalTorus:function(e,t,n={}){let a=c(d(t.x-e.x),t.x+(n.x||0)-e.x,e.x+(n.x||0)-t.x),s=c(d(t.y-e.y),t.y+(n.y||0)-e.y,e.y+(n.y||0)-t.y);return(n.multiplier||1)*(a+s)+((n.diagonalMultiplier||1.4)-2*(n.multiplier||1))*c(a,s)},euclidian:function(e,t,n={}){let a=d(t.x-e.x),s=d(t.y-e.y);return(n.multiplier||1)*Math.sqrt(a*a+s*s)},euclidianTorus:function(e,t,n={}){let a=c(d(t.x-e.x),t.x+(n.x||0)-e.x,e.x+(n.x||0)-t.x),s=c(d(t.y-e.y),t.y+(n.y||0)-e.y,e.y+(n.y||0)-t.y);return(n.multiplier||1)*(a+s)+((n.diagonalMultiplier||1.4)-2*(n.multiplier||1))*c(a,s)}};class i extends Error{constructor(e){super(e),this.name="WorkerError"}}class j{constructor(t,n={}){if(this.graphs=[],this.heuristic=n.heuristic||"manhattan",this.heuristicOptions=n.heuristicOptions||{},Array.isArray(t)&&(this.heuristic=n.heuristic in h?n.heuristic:n.diagonals?n.torus?"diagonalTorus":"diagonal":n.torus?"manhattanTorus":"manhattan",this.heuristicOptions.x=e.fromArray.X(t,n.order),this.heuristicOptions.y=e.fromArray.Y(t,n.order),this.graphs=e.fromArray.apply(this,arguments),!Array.isArray(this.graphs)&&(this.graphs=[this.graphs])),n.thread&&("undefined"==typeof WorkerGlobalScope||!(self instanceof WorkerGlobalScope))){this.worker=null;try{this.worker=new Worker(n.thread)}catch(t){throw"file:"===window.location.protocol&&console.warn("WebWorkers in local files may not be supported by your browser."),new i(`${n.thread} couldn't be opened.`)}"cost"in n&&(n.cost=n.cost.toString()),this.worker.postMessage(["constructor",t,n]),this.path=(e,t,n={})=>{this._worker_path_callback=n.callback,delete n.callback,this.worker.postMessage(["path",e,t,n])},this.worker.onmessage=e=>{let t=JSON.parse(e.data);"path"===t[0]&&this._worker_path_callback(t[1])}}}path(e,t,n={}){if(n.jps)return this.jps(e,t,n);let a=new g(e=>e.estimated),s=new Map,i=this.graphs[n.layer||0];if(e=i.node(e,!0),t=i.node(t,!0),a.add({node:e,estimated:0}),s.set(e,{score:0,from:null}),!n.static||i.connected(e,t))for(;a.size;){let e=a.pop().node;if(e===t)break;i.neighbors(e).map(r=>{let o=(s.has(e)?s.get(e).score:0)+i.cost(e,r);o<(s.has(r)?s.get(r).score:1/0)&&(s.set(r,{score:o,from:e}),a.set({node:r,estimated:o+h[n.heuristic||this.heuristic](r,t,n.heuristicOptions||this.heuristicOptions)}))}),a.delete(e)}let r=[];if(s.has(t)){let e=t;for(r.push(t);null!==(e=s.get(e).from);)r.push(e);r=r.reverse()}return n.callback&&n.callback(r,s),r}}if(j.JPS=class{constructor(){}static access(e,t,n,a){return e.adjacent(t,a?e.node(n,!0):n)}static neighborhood(e,t,n,a){let s=[],i=n.get(a).from||null;if(null===i)return t.neighbors(a);{let n={x:b(a.x-i.x),y:b(a.y-i.y)};if(0!=n.x&&0!=n.y){let i=e(a,{x:a.x+n.x,y:a.y},!0),r=e(a,{x:a.x,y:a.y+n.y},!0);(i||r)&&(s.push(t.node({x:a.x+n.x,y:a.y+n.y},!0)),i&&(s.push(t.node({x:a.x+n.x,y:a.y},!0)),!e(a,{x:a.x,y:a.y-n.y},!0)&&s.push(t.node({x:a.x+n.x,y:a.y-n.y},!0))),r&&(s.push(t.node({x:a.x,y:a.y+n.y},!0)),!e(a,{x:a.x-n.x,y:a.y},!0)&&s.push(t.node({x:a.x-n.x,y:a.y+n.y},!0))))}else e(a,{x:a.x+n.x,y:a.y+n.y},!0)&&(s.push(t.node({x:a.x+n.x,y:a.y+n.y},!0)),0==n.x?0!=n.y&&(!e(a,{x:a.x-1,y:a.y},!0)&&s.push(t.node({x:a.x-1,y:a.y+n.y},!0)),!e(a,{x:a.x+1,y:a.y},!0)&&s.push(t.node({x:a.x+1,y:a.y+n.y},!0))):(!e(a,{x:a.x,y:a.y-1},!0)&&s.push(t.node({x:a.x+n.x,y:a.y-1},!0)),!e(a,{x:a.x,y:a.y+1},!0)&&s.push(t.node({x:a.x+n.x,y:a.y+1},!0))))}return s.filter(e=>e)}static jump(e,t,n,a,s,i){for(;;){if(!e(i,s))return null;if(s.x===a.x&&s.y===a.y)return s;let r={x:b(s.x-i.x),y:b(s.y-i.y)};if(0!=r.x&&0!=r.y){if(!e(s,{x:s.x-r.x,y:s.y},!0)&&e(s,{x:s.x-r.x,y:s.y+r.y},!0)||!e(s,{x:s.x,y:s.y-r.y},!0)&&e(s,{x:s.x+r.x,y:s.y-r.y},!0))return s;let i=j.JPS.jump.bind(this,e,t,n,a);if(null!==i(t.node({x:s.x+r.x,y:s.y},!0),s)||null!==i(t.node({x:s.x,y:s.y+r.y},!0),s))return s}else if(0!=r.x){if(!e(s,{x:s.x,y:s.y-1},!0)&&e(s,{x:s.x+r.x,y:s.y-1},!0)||!e(s,{x:s.x,y:s.y+1},!0)&&e(s,{x:s.x+r.x,y:s.y+1},!0))return s}else if(0!=r.y&&(!e(s,{x:s.x-1,y:s.y},!0)&&e(s,{x:s.x-1,y:s.y+r.y},!0)||!e(s,{x:s.x+1,y:s.y},!0)&&e(s,{x:s.x+1,y:s.y+r.y},!0)))return s;i=s,s=t.node({x:s.x+r.x,y:s.y+r.y},!0)}return null}},j.prototype.jps=function(e,t,n={}){if(this.graphs[n.layer||0].TORUS)return console.warn("Torus map aren't yet supported by JPS"),n.callback&&n.callback([],new Map),[];let a=new g(e=>e.estimated),s=new Map,i=this.graphs[n.layer||0],r=null;e=i.node(e,!0),t=i.node(t,!0),a.add({node:e,estimated:0}),s.set(e,{score:0,from:null});let o=j.JPS.access.bind(this,i),l=j.JPS.neighborhood.bind(this,o,i,s),p=j.JPS.jump.bind(this,o,i,s,t);if(!n.static||i.connected(e,t))for(;a.size;){let e=a.pop().node;if(e===t)break;l(e).map(o=>{if(null!==(r=p(o,e))){let o=(s.has(e)?s.get(e).score:0)+i.cost(e,r);o<(s.has(r)?s.get(r).score:1/0)&&(s.set(r,{score:o,from:e,jumped:!0}),a.set({node:r,estimated:o+h[n.heuristic||this.heuristic](r,t,n.heuristicOptions||this.heuristicOptions)}))}}),a.delete(e)}let d=[];if(s.has(t)){let n=t;for(;n.x!=e.x||n.y!=e.y;)for(let e=s.get(n).from;n.x!=e.x||n.y!=e.y;)d.push(n),n=i.node({x:n.x+b(e.x-n.x),y:n.y+b(e.y-n.y)},!0);d.push(n),d.reverse()}return n.callback&&n.callback(d,s),d},"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope){let a;onmessage=function(b){let c=b.data;switch(c[0]){case"constructor":if("cost"in c[2]){let a=/^\((.*?)\)\s*=>\s*{/.test(c[2].cost),b=/^function /.test(c[2].cost);c[2].cost=eval(`(${a||b?"":"function "}${c[2].cost})`)}a=new j(c[1],c[2]);break;case"path":postMessage(JSON.stringify(["path",a.path(c[1],c[2],c[3])]))}}}a.Lowlight.Astar={Graph:e,Node:f,BinaryHeap:g,Heuristic:h,Configuration:j,WorkerError:i}})("undefined"==typeof window?this:window)},3693:(e,t,n)=>{var a=n(7736);e.exports=function(e,t,n){return(t=a(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e},e.exports.__esModule=!0,e.exports.default=e.exports},3717:function(e,t,n){var a;!function(e,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&("object"==typeof a&&r(a,n),s.state=function(){return r(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.tychei=o}(0,e=n.nmd(e),n.amdD)},3738:e=>{function t(n){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},4373:e=>{e.exports=function(e){var t=Object(e),n=[];for(var a in t)n.unshift(a);return function e(){for(;n.length;)if((a=n.pop())in t)return e.value=a,e.done=!1,e;return e.done=!0,e}},e.exports.__esModule=!0,e.exports.default=e.exports},4579:(e,t,n)=>{var a=n(7736);function s(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,a(s.key),s)}}e.exports=function(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e},e.exports.__esModule=!0,e.exports.default=e.exports},4633:(e,t,n)=>{var a=n(5172),s=n(6993),i=n(5869),r=n(887),o=n(1791),l=n(4373),p=n(579);function d(){"use strict";var t=s(),n=t.m(d),u=(Object.getPrototypeOf?Object.getPrototypeOf(n):n.__proto__).constructor;function c(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===u||"GeneratorFunction"===(t.displayName||t.name))}var h={throw:1,return:2,break:3,continue:3};function m(e){var t,n;return function(a){t||(t={stop:function(){return n(a.a,2)},catch:function(){return a.v},abrupt:function(e,t){return n(a.a,h[e],t)},delegateYield:function(e,s,i){return t.resultName=s,n(a.d,p(e),i)},finish:function(e){return n(a.f,e)}},n=function(e,n,s){a.p=t.prev,a.n=t.next;try{return e(n,s)}finally{t.next=a.n}}),t.resultName&&(t[t.resultName]=a.v,t.resultName=void 0),t.sent=a.v,t.next=a.n;try{return e.call(this,t)}finally{a.p=t.prev,a.n=t.next}}}return(e.exports=d=function(){return{wrap:function(e,n,a,s){return t.w(m(e),n,a,s&&s.reverse())},isGeneratorFunction:c,mark:t.m,awrap:function(e,t){return new a(e,t)},AsyncIterator:o,async:function(e,t,n,a,s){return(c(t)?r:i)(m(e),t,n,a,s)},keys:l,values:p}},e.exports.__esModule=!0,e.exports.default=e.exports)()}e.exports=d,e.exports.__esModule=!0,e.exports.default=e.exports},4652:(e,t,n)=>{"use strict";t.URL=n(1023).interface,n(2723).serializeURL,n(2723).serializeURLOrigin,n(2723).basicURLParse,n(2723).setTheUsername,n(2723).setThePassword,n(2723).serializeHost,n(2723).serializeInteger,n(2723).parseURL},4756:(e,t,n)=>{var a=n(4633)();e.exports=a;try{regeneratorRuntime=a}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=a:Function("r","regeneratorRuntime = r")(a)}},4801:function(e,t,n){var a;!function(s,i,r){var o,l=256,p=r.pow(l,6),d=r.pow(2,52),u=2*d,c=255;function h(e,t,n){var a=[],c=v(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(i)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(i)]}}():e,3),a),h=new m(a),y=function(){for(var e=h.g(6),t=p,n=0;e<d;)e=(e+n)*l,t*=l,n=h.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|h.g(4)},y.quick=function(){return h.g(4)/4294967296},y.double=y,v(b(h.S),i),(t.pass||n||function(e,t,n,a){return a&&(a.S&&f(a,h),e.state=function(){return f(h,{})}),n?(r.random=e,t):e})(y,c,"global"in t?t.global:this==r,t.state)}function m(e){var t,n=e.length,a=this,s=0,i=a.i=a.j=0,r=a.S=[];for(n||(e=[n++]);s<l;)r[s]=s++;for(s=0;s<l;s++)r[s]=r[i=c&i+e[s%n]+(t=r[s])],r[i]=t;(a.g=function(e){for(var t,n=0,s=a.i,i=a.j,r=a.S;e--;)t=r[s=c&s+1],n=n*l+r[c&(r[s]=r[i=c&i+t])+(r[i]=t)];return a.i=s,a.j=i,n})(l)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],s=typeof e;if(t&&"object"==s)for(n in e)try{a.push(g(e[n],t-1))}catch(e){}return a.length?a:"string"==s?e:e+"\0"}function v(e,t){for(var n,a=e+"",s=0;s<a.length;)t[c&s]=c&(n^=19*t[c&s])+a.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(v(r.random(),i),e.exports){e.exports=h;try{o=n(6982)}catch(e){}}else void 0===(a=function(){return h}.call(t,n,t,e))||(e.exports=a)}("undefined"!=typeof self?self:this,[],Math)},4876:e=>{"use strict";e.exports=require("punycode")},5172:e=>{e.exports=function(e,t){this.v=e,this.k=t},e.exports.__esModule=!0,e.exports.default=e.exports},5546:e=>{function t(n,a,s,i){var r=Object.defineProperty;try{r({},"",{})}catch(n){r=0}e.exports=t=function(e,n,a,s){if(n)r?r(e,n,{value:a,enumerable:!s,configurable:!s,writable:!s}):e[n]=a;else{var i=function(n,a){t(e,n,function(e){return this._invoke(n,a,e)})};i("next",0),i("throw",1),i("return",2)}},e.exports.__esModule=!0,e.exports.default=e.exports,t(n,a,s,i)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},5636:e=>{function t(n,a){return e.exports=t=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n,a)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},5715:(e,t,n)=>{var a=n(2987),s=n(1156),i=n(7122),r=n(7752);e.exports=function(e,t){return a(e)||s(e,t)||i(e,t)||r()},e.exports.__esModule=!0,e.exports.default=e.exports},5869:(e,t,n)=>{var a=n(887);e.exports=function(e,t,n,s,i){var r=a(e,t,n,s,i);return r.next().then(function(e){return e.done?e.value:r.next()})},e.exports.__esModule=!0,e.exports.default=e.exports},6149:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')},6833:function(e,t,n){var a;!function(e,s){function i(e){var t=this;t.next=function(){var e,n,a=t.w,s=t.X,i=t.i;return t.w=a=a+1640531527|0,n=s[i+34&127],e=s[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[i]=n^e,t.i=i,n+(a^a>>>16)|0},function(e,t){var n,a,s,i,r,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),s=0,i=-32;i<l;++i)t&&(a^=t.charCodeAt((i+32)%t.length)),0===i&&(r=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,i>=0&&(r=r+1640531527|0,s=0==(n=o[127&i]^=a+r)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,i=512;i>0;--i)a=o[s+34&127],n=o[s=s+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[s]=a^n;e.w=r,e.X=o,e.i=s}(t,e)}function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&(a.X&&r(a,n),s.state=function(){return r(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},6982:e=>{"use strict";e.exports=require("crypto")},6993:(e,t,n)=>{var a=n(5546);function s(){var t,n,i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",o=i.toStringTag||"@@toStringTag";function l(e,s,i,r){var o=s&&s.prototype instanceof d?s:d,l=Object.create(o.prototype);return a(l,"_invoke",function(e,a,s){var i,r,o,l=0,d=s||[],u=!1,c={p:0,n:0,v:t,a:h,f:h.bind(t,4),d:function(e,n){return i=e,r=0,o=t,c.n=n,p}};function h(e,a){for(r=e,o=a,n=0;!u&&l&&!s&&n<d.length;n++){var s,i=d[n],h=c.p,m=i[2];e>3?(s=m===a)&&(o=i[(r=i[4])?5:(r=3,3)],i[4]=i[5]=t):i[0]<=h&&((s=e<2&&h<i[1])?(r=0,c.v=a,c.n=i[1]):h<m&&(s=e<3||i[0]>a||a>m)&&(i[4]=e,i[5]=a,c.n=m,r=0))}if(s||e>1)return p;throw u=!0,a}return function(s,d,m){if(l>1)throw TypeError("Generator is already running");for(u&&1===d&&h(d,m),r=d,o=m;(n=r<2?t:o)||!u;){i||(r?r<3?(r>1&&(c.n=-1),h(r,o)):c.n=o:c.v=o);try{if(l=2,i){if(r||(s="next"),n=i[s]){if(!(n=n.call(i,o)))throw TypeError("iterator result is not an object");if(!n.done)return n;o=n.value,r<2&&(r=0)}else 1===r&&(n=i.return)&&n.call(i),r<2&&(o=TypeError("The iterator does not provide a '"+s+"' method"),r=1);i=t}else if((n=(u=c.n<0)?o:e.call(a,c))!==p)break}catch(e){i=t,r=1,o=e}finally{l=1}}return{value:n,done:u}}}(e,i,r),!0),l}var p={};function d(){}function u(){}function c(){}n=Object.getPrototypeOf;var h=[][r]?n(n([][r]())):(a(n={},r,function(){return this}),n),m=c.prototype=d.prototype=Object.create(h);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,a(e,o,"GeneratorFunction")),e.prototype=Object.create(m),e}return u.prototype=c,a(m,"constructor",c),a(c,"constructor",u),u.displayName="GeneratorFunction",a(c,o,"GeneratorFunction"),a(m),a(m,o,"Generator"),a(m,r,function(){return this}),a(m,"toString",function(){return"[object Generator]"}),(e.exports=s=function(){return{w:l,m:f}},e.exports.__esModule=!0,e.exports.default=e.exports)()}e.exports=s,e.exports.__esModule=!0,e.exports.default=e.exports},7122:(e,t,n)=>{var a=n(79);e.exports=function(e,t){if(e){if("string"==typeof e)return a(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},7180:function(e,t,n){var a;!function(e,s){function i(e){var t,n=this,a=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=a(" "),n.s1=a(" "),n.s2=a(" "),n.s0-=a(e),n.s0<0&&(n.s0+=1),n.s1-=a(e),n.s1<0&&(n.s1+=1),n.s2-=a(e),n.s2<0&&(n.s2+=1),a=null}function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new i(e),a=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,a&&("object"==typeof a&&r(a,n),s.state=function(){return r(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.alea=o}(0,e=n.nmd(e),n.amdD)},7383:e=>{e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},e.exports.__esModule=!0,e.exports.default=e.exports},7391:(e,t,n)=>{var a=n(7180),s=n(3181),i=n(3031),r=n(9067),o=n(6833),l=n(3717),p=n(4801);p.alea=a,p.xor128=s,p.xorwow=i,p.xorshift7=r,p.xor4096=o,p.tychei=l,e.exports=p},7736:(e,t,n)=>{var a=n(3738).default,s=n(9045);e.exports=function(e){var t=s(e,"string");return"symbol"==a(t)?t:t+""},e.exports.__esModule=!0,e.exports.default=e.exports},7752:e=>{e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},8452:(e,t,n)=>{var a=n(3738).default,s=n(2475);e.exports=function(e,t){if(t&&("object"==a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return s(e)},e.exports.__esModule=!0,e.exports.default=e.exports},8570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var s={},i={};function r(e,t){var n,a,r;return t?(r=0<=(e>>>=0)&&e<256)&&(a=i[e])?a:(n=l(e,(0|e)<0?-1:0,!0),r&&(i[e]=n),n):(r=-128<=(e|=0)&&e<128)&&(a=s[e])?a:(n=l(e,e<0?-1:0,!1),r&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?v:g;if(t){if(e<0)return v;if(e>=h)return k}else{if(e<=-m)return I;if(e+1>=m)return w}return e<0?o(-e,t).neg():l(e%c|0,e/c|0,t)}function l(e,t,a){return new n(e,t,a)}n.fromInt=r,n.fromNumber=o,n.fromBits=l;var p=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return d(e.substring(1),t,n).neg();for(var s=o(p(n,8)),i=g,r=0;r<e.length;r+=8){var l=Math.min(8,e.length-r),u=parseInt(e.substring(r,r+l),n);if(l<8){var c=o(p(n,l));i=i.mul(c).add(o(u))}else i=(i=i.mul(s)).add(o(u))}return i.unsigned=t,i}function u(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?d(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=d,n.fromValue=u;var c=4294967296,h=c*c,m=h/2,f=r(1<<24),g=r(0);n.ZERO=g;var v=r(0,!0);n.UZERO=v;var b=r(1);n.ONE=b;var y=r(1,!0);n.UONE=y;var x=r(-1);n.NEG_ONE=x;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(p(e,6),this.unsigned),i=this,r="";;){var l=i.div(s),d=(i.sub(l.mul(s)).toInt()>>>0).toString(e);if((i=l).isZero())return d+r;for(;d.length<6;)d="0"+d;r=""+d+r}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return!(1&~this.low)},S.isEven=function(){return!(1&this.low)},S.equals=function(e){return a(e)||(e=u(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(a(e)||(e=u(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){a(e)||(e=u(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,i=65535&this.low,r=e.high>>>16,o=65535&e.high,p=e.low>>>16,d=0,c=0,h=0,m=0;return h+=(m+=i+(65535&e.low))>>>16,c+=(h+=s+p)>>>16,d+=(c+=n+o)>>>16,d+=t+r,l((h&=65535)<<16|(m&=65535),(d&=65535)<<16|(c&=65535),this.unsigned)},S.subtract=function(e){return a(e)||(e=u(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=u(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(f)&&e.lt(f))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,i=this.low>>>16,r=65535&this.low,p=e.high>>>16,d=65535&e.high,c=e.low>>>16,h=65535&e.low,m=0,v=0,b=0,y=0;return b+=(y+=r*h)>>>16,v+=(b+=i*h)>>>16,b&=65535,v+=(b+=r*c)>>>16,m+=(v+=s*h)>>>16,v&=65535,m+=(v+=i*c)>>>16,v&=65535,m+=(v+=r*d)>>>16,m+=n*h+s*c+i*d+r*p,l((b&=65535)<<16|(y&=65535),(m&=65535)<<16|(v&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(a(e)||(e=u(e)),e.isZero())throw Error("division by zero");var n,s,i;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?v:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return v;if(e.gt(this.shru(1)))return y;i=v}else{if(this.eq(I))return e.eq(b)||e.eq(x)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(s=this.sub(e.mul(n)),i=n.add(s.div(e)));if(e.eq(I))return this.unsigned?v:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var r=Math.ceil(Math.log(n)/Math.LN2),d=r<=48?1:p(2,r-48),c=o(n),h=c.mul(e);h.isNegative()||h.gt(s);)h=(c=o(n-=d,this.unsigned)).mul(e);c.isZero()&&(c=b),i=i.add(c),s=s.sub(h)}return i},S.div=S.divide,S.modulo=function(e){return a(e)||(e=u(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return a(e)||(e=u(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return a(e)||(e=u(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return a(e)||(e=u(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},9023:e=>{"use strict";e.exports=require("util")},9045:(e,t,n)=>{var a=n(3738).default;e.exports=function(e,t){if("object"!=a(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t||"default");if("object"!=a(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)},e.exports.__esModule=!0,e.exports.default=e.exports},9067:function(e,t,n){var a;!function(e,s){function i(e){var t=this;t.next=function(){var e,n,a=t.x,s=t.i;return e=a[s],n=(e^=e>>>7)^e<<24,n^=(e=a[s+1&7])^e>>>10,n^=(e=a[s+3&7])^e>>>3,n^=(e=a[s+4&7])^e<<7,e=a[s+7&7],n^=(e^=e<<13)^e<<9,a[s]=n,t.i=s+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new i(e),a=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,a&&(a.x&&r(a,n),s.state=function(){return r(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(a=function(){return o}.call(t,n,t,s))||(s.exports=a):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},9293:e=>{function t(e,t,n,a,s,i,r){try{var o=e[i](r),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(a,s)}e.exports=function(e){return function(){var n=this,a=arguments;return new Promise(function(s,i){var r=e.apply(n,a);function o(e){t(r,s,i,o,l,"next",e)}function l(e){t(r,s,i,o,l,"throw",e)}o(void 0)})}},e.exports.__esModule=!0,e.exports.default=e.exports},9511:(e,t,n)=>{var a=n(5636);e.exports=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)},e.exports.__esModule=!0,e.exports.default=e.exports},9552:(e,t,n)=>{var a=n(3072);e.exports=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=a(e)););return e},e.exports.__esModule=!0,e.exports.default=e.exports},9810:(e,t,n)=>{"use strict";const a=n(2723);t.implementation=class{constructor(e){const t=e[0],n=e[1];let s=null;if(void 0!==n&&(s=a.basicURLParse(n),"failure"===s))throw new TypeError("Invalid base URL");const i=a.basicURLParse(t,{baseURL:s});if("failure"===i)throw new TypeError("Invalid URL");this._url=i}get href(){return a.serializeURL(this._url)}set href(e){const t=a.basicURLParse(e);if("failure"===t)throw new TypeError("Invalid URL");this._url=t}get origin(){return a.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){a.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){a.cannotHaveAUsernamePasswordPort(this._url)||a.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){a.cannotHaveAUsernamePasswordPort(this._url)||a.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?a.serializeHost(e.host):a.serializeHost(e.host)+":"+a.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||a.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":a.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||a.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":a.serializeInteger(this._url.port)}set port(e){a.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:a.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],a.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const t=this._url;if(""===e)return void(t.query=null);const n="?"===e[0]?e.substring(1):e;t.query="",a.basicURLParse(n,{url:t,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const t="#"===e[0]?e.substring(1):e;this._url.fragment="",a.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},9896:e=>{"use strict";e.exports=require("fs")}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.loaded=!0,n.exports}__webpack_require__.amdD=function(){throw new Error("define cannot be used indirect")},__webpack_require__.amdO={},__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var __webpack_exports__={};return(()=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Event:()=>p,GameConstants:()=>s,GameEngine:()=>pL,GameGroup:()=>rL,GameUtils:()=>u,Grid:()=>b,Position:()=>c,Reactor:()=>d,Snake:()=>iL});var e={};__webpack_require__.r(e),__webpack_require__.d(e,{assertParamsValid:()=>qr,computeFlatOffset:()=>ro,computeOutShape:()=>Xr,getNormalizedAxes:()=>Qr,isSliceContinous:()=>io,maskToAxes:()=>Kr,parseSliceParams:()=>oo,sliceInfo:()=>lo,startForAxis:()=>ao,startIndicesWithElidedDims:()=>eo,stopForAxis:()=>so,stopIndicesWithElidedDims:()=>to,stridesForAxis:()=>no,stridesWithElidedDims:()=>Yr});var t={};__webpack_require__.r(t),__webpack_require__.d(t,{collectGatherOpShapeInfo:()=>Fu,computeOutShape:()=>Du,segOpComputeOptimalWindowSize:()=>Au});var n={};__webpack_require__.r(n),__webpack_require__.d(n,{ERF_A1:()=>Yd,ERF_A2:()=>Jd,ERF_A3:()=>Zd,ERF_A4:()=>Qd,ERF_A5:()=>eu,ERF_P:()=>Xd,PARALLELIZE_THRESHOLD:()=>Od,RowPartitionType:()=>_d,SELU_SCALE:()=>Kd,SELU_SCALEALPHA:()=>qd,applyActivation:()=>Tp,assertAndGetBroadcastShape:()=>_r,assertAxesAreInnerMostDims:()=>yl,assertParamsConsistent:()=>Ed,assignToTypedArray:()=>ru,axesAreInnerMostDims:()=>fl,calculateShapes:()=>jd,checkEinsumDimSizes:()=>fu,checkPadOnDimRoundingMode:()=>Eo,combineLocations:()=>gl,combineRaggedTensorToTensorShapes:()=>Rd,complexWithEvenIndex:()=>au,complexWithOddIndex:()=>su,computeConv2DInfo:()=>vo,computeConv3DInfo:()=>bo,computeDefaultPad:()=>yo,computeDilation2DInfo:()=>mo,computeOptimalWindowSize:()=>Md,computeOutAndReduceShapes:()=>vl,computeOutShape:()=>$d,computePool2DInfo:()=>fo,computePool3DInfo:()=>go,convertConv2DDataFormat:()=>Co,decodeEinsumEquation:()=>hu,eitherStridesOrDilationsAreOne:()=>No,expandShapeToKeepDim:()=>bl,exponent:()=>lu,exponents:()=>ou,fromStringArrayToUint8:()=>Mu,fromUint8ToStringArray:()=>Ou,getAxesPermutation:()=>xl,getBroadcastDims:()=>Er,getComplexWithIndex:()=>iu,getEinsumComputePath:()=>gu,getEinsumPermutation:()=>mu,getFusedBiasGradient:()=>Np,getFusedDyActivation:()=>Sp,getImageCenter:()=>Ld,getInnerMostAxes:()=>kl,getPermuted:()=>zd,getRaggedRank:()=>Dd,getReductionAxes:()=>$r,getReshaped:()=>Pd,getReshapedPermuted:()=>Vd,getRowPartitionTypesHelper:()=>Ad,getSliceBeginCoords:()=>Bd,getSliceSize:()=>Ud,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>xu,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>wu,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ku,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Nu,getSparseReshapeInputOutputMismatchErrorMessage:()=>Cu,getSparseReshapeInputOutputMultipleErrorMessage:()=>Tu,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Iu,getSparseReshapeNegativeOutputDimErrorMessage:()=>Su,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Ru,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Eu,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>$u,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>_u,getUndoAxesPermutation:()=>wl,isIdentityPermutation:()=>vu,log:()=>Ha,mergeRealAndImagArrays:()=>tu,prepareAndValidate:()=>Wd,prepareSplitSize:()=>yu,segment_util:()=>t,shouldFuse:()=>Cp,slice_util:()=>e,splitRealAndImagArrays:()=>nu,stridesOrDilationsArePositive:()=>To,tupleValuesAreOne:()=>So,upcastType:()=>Ws,validateDefaultValueShape:()=>Fd,validateInput:()=>Hd,validateUpdateShape:()=>Gd,warn:()=>Ga});var a={};__webpack_require__.r(a),__webpack_require__.d(a,{mx:()=>bw,XI:()=>dk,Nk:()=>uk,f6:()=>hk,ct:()=>hw,YG:()=>gk,hH:()=>kk,z3:()=>rI,sG:()=>vI,uM:()=>kI,vS:()=>zI,qB:()=>qI,GG:()=>XI,lg:()=>eS,rq:()=>JI,cu:()=>hS,WR:()=>dS,GE:()=>gS,px:()=>bS,jC:()=>DS,He:()=>MS,hE:()=>jS,BF:()=>Zk,Dk:()=>nN,cl:()=>dN,_B:()=>IN,ub:()=>TN,_f:()=>$N,Ku:()=>ON,qy:()=>LN,Zy:()=>XN,bu:()=>ZN,zv:()=>sw,dH:()=>Cw,HS:()=>rk,yH:()=>bT,l3:()=>xT,z9:()=>kT,x6:()=>CT,_m:()=>FT,eW:()=>PT,GK:()=>BT,SP:()=>GT,yr:()=>jT,dl:()=>EI,Dw:()=>ZT,xT:()=>nC,_X:()=>Fw,wz:()=>pC});const s={CaseType:{EMPTY:0,SNAKE:1,FRUIT:2,WALL:3,SNAKE_DEAD:4,SURROUNDED:5,FRUIT_GOLD:6,CROSSED:7},CaseTypeText:{0:"-",1:"o",2:"x",3:"#",4:"O",5:"/",6:"X",7:" "},CaseTypeAIValue:{0:0,1:4,2:1,3:3,4:3,5:0,6:2,7:0},PlayerType:{AI:"PLAYER_AI",HUMAN:"PLAYER_HUMAN",HYBRID_HUMAN_AI:"PLAYER_HYBRID_HUMAN_AI"},AiLevel:{RANDOM:"AI_LEVEL_RANDOM",LOW:"AI_LEVEL_LOW",DEFAULT:"AI_LEVEL_DEFAULT",HIGH:"AI_LEVEL_HIGH",ULTRA:"AI_LEVEL_ULTRA",CUSTOM:"AI_LEVEL_CUSTOM",MOCK:"AI_LEVEL_MOCK"},OutputType:{TEXT:"OUTPUT_TEXT",GRAPHICAL:"OUTPUT_GRAPHICAL"},Setting:{CANVAS_WIDTH:800,CANVAS_HEIGHT:600,FONT_FAMILY:"Delius",FONT_SIZE:32,HEADER_HEIGHT_DEFAULT:75,TARGET_FPS:60,TIME_MULTIPLIER:15,IMAGE_SNAKE_HUE:75,IMAGE_SNAKE_SATURATION:50,IMAGE_SNAKE_VALUE:77,CARS_TO_PRERENDER:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","×"],APP_VERSION:"2.2",DATE_VERSION:"10/18/2020",PROB_GOLD_FRUIT_1_PLAYER:100,PROB_GOLD_FRUIT_MULTIPLE_PLAYERS:50,INFO_NOTIF_COLOR:"rgba(52, 152, 219, 0.5)",ERROR_NOTIF_COLOR:"rgba(231, 76, 60, 0.5)"},Direction:{UP:0,TOP:0,RIGHT:1,BOTTOM:2,DOWN:2,LEFT:3,ANGLE_1:4,ANGLE_2:5,ANGLE_3:6,ANGLE_4:7},SimpleDirection:{UP:0,RIGHT:1,BOTTOM:2,LEFT:3},VerticalDirection:{UP:0,BOTTOM:2},HorizontalDirection:{RIGHT:1,LEFT:3},Key:{UP:38,RIGHT:39,BOTTOM:40,LEFT:37,ENTER:13},ActionMapping:{38:0,39:1,40:2,37:3},ActionMappingInverse:{0:38,1:39,2:40,3:37},AIRewards:{GAME_OVER:-1,GAME_OVER_WITH_EMPTY_CASES_AROUND:-1,FRUIT_EATEN:.5,GOLD_FRUIT_EATEN:1,MOVE:-.001,STUCK:0},AIActions:{TURN_LEFT:0,TURN_RIGHT:1,CONTINUE:2},Error:{ROOM_NOT_FOUND:"ROOM_NOT_FOUND",ROOM_ALREADY_JOINED:"ROOM_ALREADY_JOINED",INVALID_SETTINGS:"INVALID_SETTINGS",MAX_ROOM_LIMIT_REACHED:"MAX_ROOM_LIMIT_REACHED",AUTHENTICATION_REQUIRED:"AUTHENTICATION_REQUIRED",ALREADY_CREATED_ROOM:"ALREADY_CREATED_ROOM",BANNED:"BANNED",DISCONNECTED:"DISCONNECTED"},GameState:{STARTING:"STARTING",STARTED:"STARTED",SEARCHING_PLAYERS:"SEARCHING_PLAYERS",AUTHENTICATION_SUCCESS:"AUTHENTICATION_SUCCESS"},AIModelLocation:"/models/2025-06-29T20-25-27-674Z/model.json"};var i=__webpack_require__(7383),r=__webpack_require__.n(i),o=__webpack_require__(4579),l=__webpack_require__.n(o),p=function(){return l()(function e(t){r()(this,e),this.name=t,this.callbacks=[]},[{key:"registerCallback",value:function(e){this.callbacks.push(e)}}])}(),d=function(){return l()(function e(){r()(this,e),this.events={}},[{key:"registerEvent",value:function(e){this.events[e]=new p(e)}},{key:"dispatchEvent",value:function(e,t){for(var n=this.events[e].callbacks,a=0,s=n.length;a<s;a++)n[a](t)}},{key:"addEventListener",value:function(e,t){this.events[e].registerCallback(t)}}])}();const u={randRange:function(e,t,n){return Math.floor((n?n():Math.random())*(t-e+1))+e},addHue:function(e,t){var n=e+t;return n>360?n-360:n<0?360+n:n},shuffle:function(e,t){for(var n,a,s=e.length-1;s>0;s--)n=Math.floor((t?t():Math.random())*(s+1)),a=e[s],e[s]=e[n],e[n]=a;return e},millisecondsFormat:function(e){return e/=1e3,("0"+Math.trunc(e/60)).slice(-2)+":"+("0"+Math.trunc(e%60)).slice(-2)},secondsFormat:function(e){return this.millisecondsFormat(1e3*e)},getImageCase:function(e){switch(e){case s.CaseType.WALL:return"wall.png";case s.CaseType.FRUIT:return"fruit.png";case s.CaseType.FRUIT_GOLD:return"fruit_gold.png";case s.CaseType.EMPTY:case s.CaseType.SNAKE:case s.CaseType.SNAKE_DEAD:case s.CaseType.SURROUNDED:case s.CaseType.CROSSED:return""}return"unknown.png"},fastArgMax:function(e){for(var t=-1/0,n=-1,a=0;a<e.length;a++)e[a]>t&&(t=e[a],n=a);return{maxValue:t,maxIndex:n}}};var c=function(){function e(t,n,a){r()(this,e),this.x=t,this.y=n,this.direction=a}return l()(e,[{key:"copy",value:function(){return new e(this.x,this.y,this.direction)}},{key:"convertToKeyDirection",value:function(){switch(this.direction){case s.Direction.UP:return s.Key.UP;case s.Direction.RIGHT:return s.Key.RIGHT;case s.Direction.LEFT:return s.Key.LEFT;case s.Direction.BOTTOM:return s.Key.BOTTOM;default:return this.direction}}},{key:"convertToSimpleDirection",value:function(){switch(this.direction){case s.Key.UP:return s.Direction.UP;case s.Key.RIGHT:return s.Direction.RIGHT;case s.Key.LEFT:return s.Direction.LEFT;case s.Key.BOTTOM:return s.Direction.BOTTOM;default:return this.direction}}},{key:"equals",value:function(e){return null!=e&&this.x==e.x&&this.y==e.y}}])}(),h=__webpack_require__(7391),m=__webpack_require__.n(h),f=__webpack_require__(3293),g=__webpack_require__.n(f);function v(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=Array(t);n<t;n++)a[n]=e[n];return a}var b=function(){return l()(function e(t,n,a,i,o,l,p,d,u,h){r()(this,e),this.width=null==t?20:t,this.height=null==n?20:n,this.generateWalls=null!=a&&a,this.borderWalls=null!=i&&i,this.maze=null!=o&&o,this.mazeFirstPosition=new c(1,1,s.Direction.RIGHT),this.mazeForceAuto=null!=p&&p,this.grid,this.initialGrid,this.fruitPos,this.fruitPosGold,this.customGrid=l,this.seedGrid=d?""+parseInt(d):void 0,this.seedGame=d?""+parseInt(u):void 0,this.rngGrid,this.rngGame,this.probGoldFruitIncrease=null!=h&&h},[{key:"init",value:function(){if(null!=this.customGrid||null!=this.initialGrid){var e;e=null!=this.initialGrid?this.initialGrid:this.customGrid,this.height=e.length,this.width=e[0].length,this.initialGrid=new Array(this.height),this.grid=new Array(this.height);for(var t=0;t<this.height;t++)this.initialGrid[t]=e[t].slice(),this.grid[t]=e[t].slice()}else{this.grid=new Array(this.height);for(var n=0;n<this.height;n++){this.grid[n]=new Array(this.width);for(var a=0;a<this.width;a++)this.borderWalls&&(0==n||n==this.height-1||0==a||a==this.width-1)||this.generateWalls&&this.rngGrid&&this.rngGrid()>.65||this.maze?this.grid[n][a]=s.CaseType.WALL:this.grid[n][a]=s.CaseType.EMPTY}this.maze?this.generateMaze():this.generateWalls&&this.fixWalls(this.borderWalls)}this.fruitPosGold=null}},{key:"reset",value:function(){this.grid=void 0,this.initialGrid=void 0,this.fruitPos=void 0,this.fruitPosGold=void 0,this.rngGrid=new(m())(this.seedGrid),this.rngGame=new(m())(this.seedGame)}},{key:"fixWalls",value:function(e){var t,n,a,i;e?(t=1,a=this.height-1,n=1,i=this.width-1):(t=0,a=this.height,n=0,i=this.width);for(var r=t;r<a;r++)for(var o=n;o<i;o++){var l=new c(o,r),p=this.getNextPosition(l,s.Direction.UP),d=this.getNextPosition(p,s.Direction.LEFT),u=this.getNextPosition(p,s.Direction.RIGHT),h=this.getNextPosition(l,s.Direction.BOTTOM),m=this.getNextPosition(h,s.Direction.LEFT),f=this.getNextPosition(h,s.Direction.RIGHT);this.get(d)!=s.CaseType.WALL&&this.get(u)!=s.CaseType.WALL&&this.get(m)!=s.CaseType.WALL&&this.get(f)!=s.CaseType.WALL||this.set(s.CaseType.EMPTY,l)}}},{key:"mazeRecursion",value:function(e,t){for(var n=u.shuffle([s.Direction.UP,s.Direction.RIGHT,s.Direction.BOTTOM,s.Direction.LEFT],this.rngGrid),a=0;a<n.length;a++)switch(n[a]){case s.Direction.UP:if(e-2<=0)continue;this.get(new c(t,e-2))!=s.CaseType.EMPTY&&(this.set(s.CaseType.EMPTY,new c(t,e-2)),this.set(s.CaseType.EMPTY,new c(t,e-1)),this.mazeRecursion(e-2,t));break;case s.Direction.RIGHT:if(t+2>=this.width-1)continue;this.get(new c(t+2,e))!=s.CaseType.EMPTY&&(this.set(s.CaseType.EMPTY,new c(t+2,e)),this.set(s.CaseType.EMPTY,new c(t+1,e)),this.mazeRecursion(e,t+2));break;case s.Direction.BOTTOM:if(e+2>=this.height-1)continue;this.get(new c(t,e+2))!=s.CaseType.EMPTY&&(this.set(s.CaseType.EMPTY,new c(t,e+2)),this.set(s.CaseType.EMPTY,new c(t,e+1)),this.mazeRecursion(e+2,t));break;case s.Direction.LEFT:if(t-2<=0)continue;this.get(new c(t-2,e))!=s.CaseType.EMPTY&&(this.set(s.CaseType.EMPTY,new c(t-2,e)),this.set(s.CaseType.EMPTY,new c(t-1,e)),this.mazeRecursion(e,t-2))}}},{key:"generateMaze",value:function(){this.mazeFirstPosition=new c(1,1,s.Direction.RIGHT),this.set(s.CaseType.EMPTY,this.mazeFirstPosition),this.mazeRecursion(1,1)}},{key:"set",value:function(e,t){this.grid[t.y][t.x]=e}},{key:"get",value:function(e){return this.grid[e.y][e.x]}},{key:"valToChar",value:function(e){return s.CaseTypeText[e]}},{key:"getImageCase",value:function(e){return u.getImageCase(this.get(e))}},{key:"getGraph",value:function(e){for(var t=new Array(this.height),n=0;n<this.height;n++){t[n]=new Array(this.width);for(var a=0;a<this.width;a++){var i=new c(a,n);e&&this.get(i)==s.CaseType.SNAKE?t[n][a]=0:this.isDeadPosition(i)?t[n][a]=1:t[n][a]=0}}return t}},{key:"getRandomPosition",value:function(){return new c(u.randRange(0,this.width-1,this.rngGame),u.randRange(0,this.height-1,this.rngGame))}},{key:"setFruit",value:function(e,t){var n,a,i=[1];if(t||null==this.fruitPos||this.get(this.fruitPos)!=s.CaseType.FRUIT||this.set(s.CaseType.EMPTY,this.fruitPos),!(this.getTotal(s.CaseType.EMPTY)>0))return!!(this.getTotal(s.CaseType.EMPTY)<=0&&this.fruitPosGold);do{if(n=this.getRandomPosition(),(a=this.detectCorridor(n))&&this.get(n)==s.CaseType.EMPTY&&this.set(s.CaseType.SURROUNDED,n),this.getTotal(s.CaseType.EMPTY)<=0)return!!this.fruitPosGold}while(this.get(n)!=s.CaseType.EMPTY||this.isFruitSurrounded(n,!0)||this.maze&&!this.testFruitMaze(n,i)||a);return t?(this.fruitPosGold=n,this.set(s.CaseType.FRUIT_GOLD,n)):(this.fruitPos=n,this.set(s.CaseType.FRUIT,n)),this.maze||null!=this.fruitPosGold||1!=u.randRange(1,this.probGoldFruitIncrease?3:e>1?s.Setting.PROB_GOLD_FRUIT_MULTIPLE_PLAYERS:s.Setting.PROB_GOLD_FRUIT_1_PLAYER,this.rngGame)||this.setFruit(e,!0),!0}},{key:"testFruitMaze",value:function(e,t){var n=this.getGraph(!0);return new(g().Astar.Configuration)(n,{order:"yx",torus:!1,diagonals:!1,cutting:!1,cost:function(e,t){return 1==t?null:1}}).path({x:this.mazeFirstPosition.x,y:this.mazeFirstPosition.y},{x:e.x,y:e.y}).length<Math.ceil(this.getTotal(s.CaseType.EMPTY)/(1*Math.ceil(t[0]/4)))?(t[0]++,!1):(t[0]++,!0)}},{key:"isCaseSurrounded",value:function(e,t,n,a){var i=this;if(!e)return!1;for(var r,o=new Set(a),l=new Set(n),p=new Set,d=[e],u=function(){var e,n=d.pop(),a=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return v(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?v(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var a=0,s=function(){};return{s,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,r=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return r=e.done,e},e:function(e){o=!0,i=e},f:function(){try{r||null==n.return||n.return()}finally{if(o)throw i}}}}([s.Direction.UP,s.Direction.BOTTOM,s.Direction.LEFT,s.Direction.RIGHT].map(function(e){return i.getNextPosition(n,e)}));try{for(a.s();!(e=a.n()).done;){var r=e.value,u=r.y*i.width+r.x;if(!p.has(u)){var c=i.get(r);if(o.has(c)){if(l.has(c))return{v:!1};p.add(u),d.push(r),t&&c==s.CaseType.EMPTY&&i.set(s.CaseType.SURROUNDED,r)}}}}catch(e){a.e(e)}finally{a.f()}};d.length>0;)if(r=u())return r.v;var c=this.get(e);return t&&[s.CaseType.EMPTY,s.CaseType.FRUIT,s.CaseType.FRUIT_GOLD].includes(c)&&this.set(s.CaseType.SURROUNDED,e),!0}},{key:"isFruitSurrounded",value:function(e,t){var n=this.isCaseSurrounded(e,!1,[s.CaseType.SNAKE],[s.CaseType.EMPTY,s.CaseType.SNAKE]);return n&&t&&this.isCaseSurrounded(e,!0,[s.CaseType.SNAKE],[s.CaseType.EMPTY,s.CaseType.SNAKE]),n}},{key:"detectCorridor",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.grid?JSON.parse(JSON.stringify(this.grid)):null;if(this.maze||!e||!t)return!1;var n=this.getNextPosition(e,s.Direction.TOP),a=this.getNextPosition(e,s.Direction.BOTTOM),i=this.getNextPosition(e,s.Direction.RIGHT),r=this.getNextPosition(e,s.Direction.LEFT),o=this.isDeadPosition(n,!0,!0)+this.isDeadPosition(a,!0,!0)+this.isDeadPosition(i,!0,!0)+this.isDeadPosition(r,!0,!0);if(o<=1||this.isDeadPosition(e,!0))return!1;if(o>=3)return!0;t[e.y][e.x]=s.CaseType.CROSSED;var l=t[n.y][n.x]!=s.CaseType.CROSSED&&this.detectCorridor(n,t),p=t[a.y][a.x]!=s.CaseType.CROSSED&&this.detectCorridor(a,t),d=t[r.y][r.x]!=s.CaseType.CROSSED&&this.detectCorridor(r,t),u=t[i.y][i.x]!=s.CaseType.CROSSED&&this.detectCorridor(i,t);return!!(p||l||d||u)}},{key:"getOnLine",value:function(e,t){for(var n=0,a=0;a<this.width;a++)this.get(new c(a,t))==e&&n++;return n}},{key:"getTotal",value:function(e){for(var t=0,n=0;n<this.height;n++)t+=this.getOnLine(e,n);return t}},{key:"getNextPosition",value:function(e,t){var n=new c(e.x,e.y,t);switch(t){case s.Direction.LEFT:n.x--,n.direction=s.Direction.LEFT;break;case s.Direction.UP:n.y--,n.direction=s.Direction.UP;break;case s.Direction.RIGHT:n.x++,n.direction=s.Direction.RIGHT;break;case s.Direction.BOTTOM:n.y++,n.direction=s.Direction.BOTTOM;break;case s.Key.LEFT:n.x--,n.direction=s.Key.LEFT;break;case s.Key.UP:n.y--,n.direction=s.Key.UP;break;case s.Key.RIGHT:n.x++,n.direction=s.Direction.RIGHT;break;case s.Key.BOTTOM:n.y++,n.direction=s.Direction.BOTTOM}return n.x<0?n.x=this.width-1:n.x>=this.width&&(n.x=0),n.y<0?n.y=this.height-1:n.y>=this.height&&(n.y=0),n}},{key:"getDirectionTo",value:function(e,t){return this.getNextPosition(e,s.Direction.UP).equals(t)?s.Direction.UP:this.getNextPosition(e,s.Direction.BOTTOM).equals(t)?s.Direction.BOTTOM:this.getNextPosition(e,s.Direction.RIGHT).equals(t)?s.Direction.RIGHT:this.getNextPosition(e,s.Direction.LEFT).equals(t)?s.Direction.LEFT:-1}},{key:"invertDirection",value:function(e){return e==s.Direction.UP?s.Direction.BOTTOM:e==s.Direction.BOTTOM?s.Direction.UP:e==s.Direction.RIGHT?s.Direction.LEFT:e==s.Direction.LEFT?s.Direction.RIGHT:null}},{key:"isDeadPosition",value:function(e,t,n){return!t&&this.get(e)==s.CaseType.SNAKE||this.get(e)==s.CaseType.WALL||this.get(e)==s.CaseType.SNAKE_DEAD||!!n&&this.get(e)==s.CaseType.SURROUNDED}},{key:"toString",value:function(){for(var e="",t=0;t<this.height;t++){for(var n=0;n<this.width;n++)e+=this.valToChar(this.get(new c(n,t)))+" ";e+="\n"}return e}}])}(),y=__webpack_require__(9293),x=__webpack_require__.n(y),w=__webpack_require__(4756),k=__webpack_require__.n(w),I=function(){return l()(function e(){r()(this,e),this.aiFruitGoal=s.CaseType.FRUIT,this.aiLevelText="custom"},[{key:"ai",value:function(e){var t=e.getHeadPosition(),n=e.grid.fruitPos,a=e.grid.fruitPosGold;if(n&&e.grid.get(n)==s.CaseType.FRUIT){var i=Math.abs(n.x-t.x)+Math.abs(n.y-t.y),r=a?Math.abs(a.x-t.x)+Math.abs(a.y-t.y):-1;a&&e.grid.get(a)==s.CaseType.FRUIT_GOLD&&this.aiFruitGoal==s.CaseType.FRUIT?this.aiFruitGoal=r<=i?s.CaseType.FRUIT_GOLD:s.CaseType.FRUIT:a&&e.grid.get(a)==s.CaseType.FRUIT_GOLD||(this.aiFruitGoal=s.CaseType.FRUIT)}else n&&e.grid.get(n)==s.CaseType.FRUIT||!a||e.grid.get(a)!=s.CaseType.FRUIT_GOLD||(this.aiFruitGoal=s.CaseType.FRUIT_GOLD);return null}}])}(),S=__webpack_require__(8452),N=__webpack_require__.n(S),T=__webpack_require__(3072),C=__webpack_require__.n(T),E=__webpack_require__(2395),$=__webpack_require__.n(E),_=__webpack_require__(9511),R=__webpack_require__.n(_);function A(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(A=function(){return!!e})()}var D=function(e){function t(){var e,n,a,s;return r()(this,t),n=this,a=t,a=C()(a),(e=N()(n,A()?Reflect.construct(a,[],C()(n).constructor):a.apply(n,s))).aiLevelText="random",e}return R()(t,e),l()(t,[{key:"ai",value:function(e){!function(e,t,n){var a=$()(C()(e.prototype),"ai",n);return"function"==typeof a?function(e){return a.apply(n,e)}:a}(t,0,this)([e]);var n=e.getHeadPosition(),a=e.grid.isDeadPosition(e.getNextPosition(n,s.Key.UP)),i=e.grid.isDeadPosition(e.getNextPosition(n,s.Key.LEFT)),r=e.grid.isDeadPosition(e.getNextPosition(n,s.Key.BOTTOM)),o=e.grid.isDeadPosition(e.getNextPosition(n,s.Key.RIGHT));if(a&&i&&r&&o)return s.Key.UP;for(var l=null;null==l||e.grid.isDeadPosition(e.getNextPosition(n,l));)switch(u.randRange(1,4,e.grid?e.grid.rngGame:null)){case 1:l=s.Key.UP;break;case 2:l=s.Key.LEFT;break;case 3:l=s.Key.BOTTOM;break;case 4:l=s.Key.RIGHT}return l}}])}(I);function F(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(F=function(){return!!e})()}var O=function(e){function t(){var e,n,a,s;return r()(this,t),n=this,a=t,a=C()(a),(e=N()(n,F()?Reflect.construct(a,[],C()(n).constructor):a.apply(n,s))).aiLevelText="low",e}return R()(t,e),l()(t,[{key:"ai",value:function(e){if(function(e,t,n){var a=$()(C()(e.prototype),"ai",n);return"function"==typeof a?function(e){return a.apply(n,e)}:a}(t,0,this)([e]),null!=e.grid.fruitPos){var n=e.getHeadPosition(),a=this.aiFruitGoal==s.CaseType.FRUIT_GOLD?e.grid.fruitPosGold:e.grid.fruitPos,i=s.Key.RIGHT;a.x>n.x?i=a.x-n.x>e.grid.width/2?s.Key.LEFT:s.Key.RIGHT:a.x<n.x?i=n.x-a.x>e.grid.width/2?s.Key.RIGHT:s.Key.LEFT:a.y<n.y?i=n.y-a.y>e.grid.height/2?s.Key.BOTTOM:s.Key.UP:a.y>n.y&&(i=a.y-n.y>e.grid.height/2?s.Key.UP:s.Key.BOTTOM);var r=e.getNextPosition(n,i);if(e.grid.isDeadPosition(r)){for(var o=this.direction,l=null,p=1;p<e.queue.length;p++)if(e.get(p).direction!=o){l=e.get(p).direction;break}r=e.getNextPosition(n,l),e.grid.isDeadPosition(r)?e.grid.isDeadPosition(e.getNextPosition(n,s.Key.UP))?e.grid.isDeadPosition(e.getNextPosition(n,s.Key.RIGHT))?e.grid.isDeadPosition(e.getNextPosition(n,s.Key.BOTTOM))?e.grid.isDeadPosition(e.getNextPosition(n,s.Key.LEFT))||(i=s.Key.LEFT):i=s.Key.BOTTOM:i=s.Key.RIGHT:i=s.Key.UP:i=r.convertToKeyDirection()}return i}}}])}(I);function M(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(M=function(){return!!e})()}var L=function(e){function t(e){var n,a,s,i;return r()(this,t),a=this,s=t,s=C()(s),(n=N()(a,M()?Reflect.construct(s,[],C()(a).constructor):s.apply(a,i))).enableTorus=e,n.aiLevelText="normal",n}return R()(t,e),l()(t,[{key:"ai",value:function(e){!function(e,t,n){var a=$()(C()(e.prototype),"ai",n);return"function"==typeof a?function(e){return a.apply(n,e)}:a}(t,0,this)([e]);var n=e.getHeadPosition(),a=e.grid.fruitPos,i=e.grid.fruitPosGold,r=a;if(n&&(a||i)){var o=e.grid.getGraph(!1),l=new(g().Astar.Configuration)(o,{order:"yx",torus:!!this.enableTorus,diagonals:!1,cutting:!1,static:!0,cost:function(e,t){return 1==t?null:1}});i&&this.aiFruitGoal==s.CaseType.FRUIT_GOLD&&(r=i);var p=l.path({x:n.x,y:n.y},{x:r?r.x:null,y:r?r.y:null});if(p.length<1&&(this.aiFruitGoal!=s.CaseType.FRUIT_GOLD&&i||(r=a),p=l.path({x:n.x,y:n.y},{x:r?r.x:null,y:r?r.y:null})),p.length>1){var d=new c(p[1].x,p[1].y);return new c(null,null,e.getDirectionTo(n,d)).convertToKeyDirection()}p=null}return null}}])}(I);function P(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(P=function(){return!!e})()}var z=function(e){function t(e){var n,a,s,i;return r()(this,t),a=this,s=t,i=[!0],s=C()(s),(n=N()(a,P()?Reflect.construct(s,i||[],C()(a).constructor):s.apply(a,i))).aiLow=new O(e),n.aiLevelText="high",n}return R()(t,e),l()(t,[{key:"ai",value:function(e){var n=function(e,t,n){var a=$()(C()(e.prototype),"ai",n);return"function"==typeof a?function(e){return a.apply(n,e)}:a}(t,0,this)([e]);return n||this.aiLow.ai(e)}}])}(L),V=__webpack_require__(3693),B=__webpack_require__.n(V);class U{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class W{refCount(e){return G("refCount")}incRef(e){return G("incRef")}timerAvailable(){return!0}time(e){return G("time")}read(e){return G("read")}readSync(e){return G("readSync")}readToGPU(e,t){return G("readToGPU")}numDataIds(){return G("numDataIds")}disposeData(e,t){return G("disposeData")}write(e,t,n){return G("write")}move(e,t,n,a,s){return G("move")}createTensorFromGPUData(e,t,n){return G("createTensorFromGPUData")}memory(){return G("memory")}floatPrecision(){return G("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return G("dispose")}}function G(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function H(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,K(e,t,n)}function j(e,t,n){return Math.max(e,Math.min(t,n))}function q(e){return e%2==0?e:e+1}function K(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function X(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Y(e,t,n=""){X(Q(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function J(e){X(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function Z(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Q(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ee(e){return e%1==0}function te(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ne(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ae(e,t=e=>0,n,a){return new Promise((s,i)=>{let r=0;const o=()=>{if(e())return void s();r++;const l=t(r);null!=n&&r>=n?i():null!=a?a(o,l):setTimeout(o,l)};o()})}function se(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[a]=t/n,s}function ie(e,t){const n=t.length;return X((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),X(e.every(e=>ee(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function re(e,t){const n=[],a=[],s=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||s?null:ie(t,e).sort();let r=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[r]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[r]||i[r]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),i[r]<=t&&r++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function oe(e,t){return le(e,t)}function le(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function pe(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function de(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ue(e){return"string"==typeof e||e instanceof String}function ce(e){return"number"==typeof e}function he(e){return Array.isArray(e)?he(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":ce(e)?"float32":ue(e)?"string":"boolean"==typeof e?"bool":"float32"}function me(e){return!!(e&&e.constructor&&e.call&&e.apply)}function fe(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function ge(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function ve(e,t,n,a=!1){const s=new Array;if(1===t.length){const i=t[0]*(a?2:1);for(let t=0;t<i;t++)s[t]=n[e+t]}else{const i=t[0],r=t.slice(1),o=r.reduce((e,t)=>e*t)*(a?2:1);for(let t=0;t<i;t++)s[t]=ve(e+t*o,r,n,a)}return s}function be(e,t,n=!1){if(0===e.length)return t[0];const a=e.reduce((e,t)=>e*t)*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return ve(0,e,t,n)}function ye(e,t){const n=xe(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function xe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function we(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return be(e,new Float32Array(n));if("int32"===t)return be(e,new Int32Array(n));if("bool"===t)return be(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ke(e){e.forEach(t=>{X(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Ie(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function Se(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function Ne(e){return e&&e.then&&"function"==typeof e.then}const Te="tfjsflags";class Ce{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ee,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&($e().getBool("IS_TEST")||$e().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];$e().getBool("IS_TEST")||$e().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ne(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);Te in e&&e[Te].split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)})}}function Ee(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function $e(){return Re}let _e,Re=null;function Ae(){if(null==_e){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}_e=e}return _e}function De(e,t){const n=function(){const e=Ae();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const Fe="Abs",Oe="Acos",Me="Acosh",Le="Add",Pe="AddN",ze="All",Ve="Any",Be="ArgMax",Ue="ArgMin",We="Asin",Ge="Asinh",He="Atan",je="Atanh",qe="Atan2",Ke="AvgPool",Xe="AvgPoolGrad",Ye="AvgPool3D",Je="AvgPool3DGrad",Ze="BatchMatMul",Qe="BatchToSpaceND",et="Bincount",tt="BitwiseAnd",nt="BroadcastArgs",at="Cast",st="Ceil",it="ClipByValue",rt="Complex",ot="ComplexAbs",lt="Concat",pt="Conv2D",dt="Conv2DBackpropFilter",ut="Conv2DBackpropInput",ct="Conv3D",ht="Conv3DBackpropFilterV2",mt="Conv3DBackpropInputV2",ft="Cos",gt="Cosh",vt="Cumprod",bt="Cumsum",yt="CropAndResize",xt="DenseBincount",wt="DepthToSpace",kt="DepthwiseConv2dNative",It="DepthwiseConv2dNativeBackpropFilter",St="DepthwiseConv2dNativeBackpropInput",Nt="Diag",Tt="Dilation2D",Ct="Dilation2DBackpropInput",Et="Dilation2DBackpropFilter",$t="RealDiv",_t="Einsum",Rt="Elu",At="EluGrad",Dt="Erf",Ft="Equal",Ot="Exp",Mt="ExpandDims",Lt="Expm1",Pt="FFT",zt="Fill",Vt="FlipLeftRight",Bt="Floor",Ut="FloorDiv",Wt="FusedBatchNorm",Gt="GatherV2",Ht="GatherNd",jt="Greater",qt="GreaterEqual",Kt="Identity",Xt="IFFT",Yt="Imag",Jt="IsFinite",Zt="IsInf",Qt="IsNan",en="LeakyRelu",tn="Less",nn="LessEqual",an="LinSpace",sn="Log",rn="Log1p",on="LogicalAnd",ln="LogicalNot",pn="LogicalOr",dn="LRN",un="LRNGrad",cn="Max",hn="Maximum",mn="MaxPool",fn="MaxPoolGrad",gn="MaxPool3D",vn="MaxPool3DGrad",bn="MaxPoolWithArgmax",yn="Mean",xn="Min",wn="Minimum",kn="MirrorPad",In="Mod",Sn="Multinomial",Nn="Multiply",Tn="Neg",Cn="NotEqual",En="NonMaxSuppressionV3",$n="NonMaxSuppressionV4",_n="NonMaxSuppressionV5",Rn="OnesLike",An="OneHot",Dn="Pack",Fn="PadV2",On="Pow",Mn="Prelu",Ln="Prod",Pn="RaggedGather",zn="RaggedRange",Vn="RaggedTensorToTensor",Bn="Range",Un="Real",Wn="Reciprocal",Gn="Relu",Hn="Reshape",jn="ResizeNearestNeighbor",qn="ResizeNearestNeighborGrad",Kn="ResizeBilinear",Xn="ResizeBilinearGrad",Yn="Relu6",Jn="Reverse",Zn="Round",Qn="Rsqrt",ea="ScatterNd",ta="TensorScatterUpdate",na="SearchSorted",aa="Select",sa="Selu",ia="Slice",ra="Sin",oa="Sinh",la="Sign",pa="Sigmoid",da="Softplus",ua="Sqrt",ca="Sum",ha="SpaceToBatchND",ma="SplitV",fa="Softmax",ga="SparseFillEmptyRows",va="SparseReshape",ba="SparseSegmentMean",ya="SparseSegmentSum",xa="SparseToDense",wa="SquaredDifference",ka="Square",Ia="StaticRegexReplace",Sa="StridedSlice",Na="StringNGrams",Ta="StringSplit",Ca="StringToHashBucketFast",Ea="Sub",$a="Tan",_a="Tanh",Ra="Tile",Aa="TopK",Da="Transform",Fa="Transpose",Oa="Unique",Ma="Unpack",La="UnsortedSegmentSum",Pa="ZerosLike",za="Step",Va="RotateWithOffset",Ba="_FusedMatMul",Ua="FusedConv2D",Wa="FusedDepthwiseConv2D";function Ga(...e){$e().getBool("IS_TEST")||$e().getBool("PROD")||console.warn(...e)}function Ha(...e){$e().getBool("IS_TEST")||$e().getBool("PROD")||console.log(...e)}const ja=De("kernelRegistry",()=>new Map),qa=De("gradRegistry",()=>new Map);function Ka(e,t){const n=Qa(e,t);return ja.get(n)}function Xa(e){return qa.get(e)}function Ya(e){const t=ja.entries(),n=[];for(;;){const{done:a,value:s}=t.next();if(a)break;const[i,r]=s,[o]=i.split("_");o===e&&n.push(r)}return n}function Ja(e){const{kernelName:t,backendName:n}=e,a=Qa(t,n);ja.has(a)&&Ga(`The kernel '${t}' for backend '${n}' is already registered`),ja.set(a,e)}function Za(e){const{kernelName:t}=e;qa.has(t)&&$e().getBool("DEBUG")&&Ga(`Overriding the gradient for '${t}'`),qa.set(t,e)}function Qa(e,t){return`${t}_${e}`}function es(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var ts=__webpack_require__(8570);const ns=__webpack_require__.n(ts)()||ts;function as(e){return ns.fromString(e,!0,16)}const ss=as("c3a5c85c97cb3127"),is=as("b492b66fbe98f273"),rs=as("9ae16a3b2f90404f");function os(e){return e.xor(e.shru(47))}function ls(e,t,n){const a=e.slice(t,t+n);return ns.fromBytes(Array.from(a),!0,!0)}function ps(e,t){return ls(e,t,8)}function ds(e,t){return ls(e,t,4)}function us(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function cs(e,t,n=as("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let s=t.xor(a).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function hs(e,t,n,a){return function(e,t,n,a,s,i){s=s.add(e),i=us(i.add(s).add(a),21);const r=s;return s=(s=s.add(t)).add(n),i=i.add(us(s,44)),[s.add(a),i.add(r)]}(ps(e,t),ps(e,t+8),ps(e,t+16),ps(e,t+24),n,a)}function ms(e,t=e.length){const n=ns.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=rs.add(2*t),a=ps(e,0).add(rs),s=ps(e,t-8);return cs(us(s,37).mul(n).add(a),us(a,25).add(s).mul(n),n)}if(t>=4){const n=rs.add(2*t);return cs(ds(e,0).shl(3).add(t),ds(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return os(rs.mul(n).xor(ss.mul(a))).mul(rs)}return rs}(e,t):function(e,t=e.length){const n=rs.add(2*t),a=ps(e,0).mul(is),s=ps(e,8),i=ps(e,t-8).mul(n),r=ps(e,t-16).mul(rs);return cs(us(a.add(s),43).add(us(i,30)).add(r),a.add(us(s.add(rs),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=rs.add(2*t),a=ps(e,0).mul(rs),s=ps(e,8),i=ps(e,t-8).mul(n),r=ps(e,t-16).mul(rs),o=us(a.add(s),43).add(us(i,30)).add(r),l=cs(o,a.add(us(s.add(rs),18)).add(i),n),p=ps(e,16).mul(n),d=ps(e,24),u=o.add(ps(e,t-32)).mul(n),c=l.add(ps(e,t-24)).mul(n);return cs(us(p.add(d),43).add(us(u,30)).add(c),p.add(us(d.add(a),18)).add(u),n)}(e,t);let a=n,s=n.mul(is).add(113),i=os(s.mul(rs).add(113)).mul(rs),r=[ns.UZERO,ns.UZERO],o=[ns.UZERO,ns.UZERO];a=a.mul(rs).add(ps(e,0));let l=0;const p=64*(t-1>>6),d=p+(t-1&63)-63;do{a=us(a.add(s).add(r[0]).add(ps(e,l+8)),37).mul(is),s=us(s.add(r[1]).add(ps(e,l+48)),42).mul(is),a=a.xor(o[1]),s=s.add(r[0]).add(ps(e,l+40)),i=us(i.add(o[0]),33).mul(is),r=hs(e,l,r[1].mul(is),a.add(o[0])),o=hs(e,l+32,i.add(o[1]),s.add(ps(e,l+16))),[i,a]=[a,i],l+=64}while(l!==p);const u=is.add(i.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),r[0]=r[0].add(o[0]),o[0]=o[0].add(r[0]),a=us(a.add(s).add(r[0]).add(ps(e,l+8)),37).mul(u),s=us(s.add(r[1]).add(ps(e,l+48)),42).mul(u),a=a.xor(o[1].mul(9)),s=s.add(r[0].mul(9).add(ps(e,l+40))),i=us(i.add(o[0]),33).mul(u),r=hs(e,l,r[1].mul(u),a.add(o[0])),o=hs(e,l+32,i.add(o[1]),s.add(ps(e,l+16))),[i,a]=[a,i],cs(cs(r[0],o[0],u).add(os(s).mul(ss)).add(i),cs(r[1],o[1],u).add(a),u)}function fs(e,t){return"string"===t?bs(e):gs([e],t)}function gs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ws(e)),$e().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function vs(){return $e().platform.now()}function bs(e,t="utf-8"){return t=t||"utf-8",$e().platform.encode(e,t)}function ys(e,t="utf-8"){return t=t||"utf-8",$e().platform.decode(e,t)}function xs(e){return null!=$e().platform.isTypedArray?$e().platform.isTypedArray(e):es(e)}function ws(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Ne(e)||null==e||xs(e)&&n)t.push(e);else if(Array.isArray(e)||xs(e))for(let a=0;a<e.length;++a)ws(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let s=0;s<=a;s++)ws(e[s],t,n)}return t}class ks{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ss)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let i;const r=vs();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();i=Promise.resolve({kernelMs:vs()-r})}if($e().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){const n=a[t];n.data().then(t=>{Is(t,n.dtype,e)})}return{kernelName:e,outputs:a,inputs:t,timeMs:i.then(e=>e.kernelMs),extraInfo:i.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:s,extraInfo:i}=e;n.forEach(e=>{Promise.all([e.data(),a,i]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function Is(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}class Ss{logKernelProfile(e,t,n,a,s,i){const r="number"==typeof a?ne(`${a}ms`,9):a.error,o=ne(e,25),l=t.rank,p=t.size,d=ne(t.shape.toString(),14);let u="";for(const e in s){const n=s[e];if(null!=n){const a=n.shape||t.shape,s=a.length;u+=`${e}: ${s}D ${s>0?a:""} `}}console.log(`%c${o}\t%c${r}\t%c${l}D ${d}\t%c${p}\t%c${u}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ns(e,t,n,a){const s=ge(t),i=function(e,t,n,a){const s=Z(t),i=a[a.length-1],r=new Array(i).fill(0),o=t.length,l="complex64"===n?$s(e):e;if(o>1)for(let e=0;e<s/i;e++){const t=e*i;for(let e=0;e<i;e++)r[e]=Math.max(r[e],Ts(l[t+e],0,n).length)}return r}(e,t,n,s),r=t.length,o=Es(e,t,n,s,i),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${r}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join("\n")),l.join("\n")}function Ts(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ue(e)?`'${e}'`:"bool"===n?Cs(e):parseFloat(e.toFixed(7)).toString(),ne(a,t)}function Cs(e){return 0===e?"false":"true"}function Es(e,t,n,a,s,i=!0){const r="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Ts($s(e)[0],0,n)]:"bool"===n?[Cs(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*r;let a=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-3)*r,o*r));return"complex64"===n&&(a=$s(a),i=$s(i)),["["+a.map((e,t)=>Ts(e,s[t],n)).join(", ")+", ..., "+i.map((e,t)=>Ts(e,s[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?$s(e):Array.from(e)).map((e,t)=>Ts(e,s[t],n)).join(", ")+"]"]}const p=t.slice(1),d=a.slice(1),u=a[0]*r,c=[];if(o>20){for(let t=0;t<3;t++){const a=t*u,i=a+u;c.push(...Es(e.slice(a,i),p,n,d,s,!1))}c.push("...");for(let t=o-3;t<o;t++){const a=t*u,i=a+u;c.push(...Es(e.slice(a,i),p,n,d,s,t===o-1))}}else for(let t=0;t<o;t++){const a=t*u,i=a+u;c.push(...Es(e.slice(a,i),p,n,d,s,t===o-1))}const h=2===l?",":"";c[0]="["+(o>0?c[0]+h:"");for(let e=1;e<c.length-1;e++)c[e]=" "+c[e]+h;let m=",\n";for(let e=2;e<l;e++)m+="\n";return c[c.length-1]=" "+c[c.length-1]+"]"+(i?"":m),c}function $s(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class _s{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Z(e),null!=n){const e=n.length;X(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||le(t,this.size),this.strides=ge(e)}set(e,...t){0===t.length&&(t=[0]),X(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Rs().makeTensor(this.values,this.shape,this.dtype)}}let Rs=null,As=null,Ds=null;class Fs{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Z(e),this.strides=ge(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return As.buffer(this.shape,this.dtype,e)}bufferSync(){return As.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return be(this.shape,e,"complex64"===this.dtype)}arraySync(){return be(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Rs().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>ys(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Rs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Rs().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>ys(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Rs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Rs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return As.print(this,e)}clone(){return this.throwIfDisposed(),As.clone(this)}toString(e=!1){return Ns(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),As.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Rs().makeVariable(this,e,t,n)}}function Os(){return De("Tensor",()=>Fs)}Object.defineProperty(Fs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Os();class Ms extends Fs{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Q(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Rs().disposeTensor(this),this.dataId=e.dataId,Rs().incRef(this,null)}dispose(){Rs().disposeVariable(this),this.isDisposedInternal=!0}}var Ls,Ps,zs,Vs,Bs;Object.defineProperty(Ms,Symbol.hasInstance,{value:e=>e instanceof Fs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ls||(Ls={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Ps||(Ps={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(zs||(zs={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Vs||(Vs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Bs||(Bs={}));const Us={float32:Vs,int32:Ps,bool:zs,complex64:Bs};function Ws(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Us[e][t]}function Gs(e){return Ws(e,"int32")}function Hs(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function js(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function qs(e,t){if(e.dtype===t.dtype)return[e,t];const n=Ws(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ks(e,t){return t.some(t=>t.id===e.id)}function Xs(e){const t=[];return Ys(e,t,new Set),t}function Ys(e,t,n){if(null==e)return;if(e instanceof Fs)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const a=s[e];n.has(a)||(n.add(a),Ys(a,t,n))}}function Js(e){return null!=e.kernelName}class Zs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Qs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Zs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ga(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ks(this.backendInstance),!0}setupRegisteredKernels(){Ya(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ya(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof W||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ga(`Initialization of backend ${e} failed`),Ga(n.stack||n.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return Ga(`Initialization of backend ${e} failed`),Ga(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:s}=this.initializeBackend(n);if(s||a)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,s=this.readSync(t),i=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun(()=>this.startScope(a),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Qs.nextTensorId++}nextVariableId(){return Qs.nextVariableId++}clone(e){const t=ti.runKernel(Kt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e};return ti.runKernel(at,t,{dtype:"float32"})}}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Ka(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],r=a-t-s-i;if(r>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${r} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let r,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Js(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Js(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const l=Ka(t,this.backendName);X(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),r=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});const r=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,r);const p=r.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(a){const e=this.getTensorsForGradient(t,s,p);n=this.saveTensorsForBackwardMode(e)}return p}}else{const{forwardFunc:t}=e,s=e=>{a&&(n=e.map(e=>this.keep(this.clone(e))))};r=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,s));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:p,attrs:d}=e,u=Js(e)?null:e.backwardsFunc;let c;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(c=this.profiler.profileKernel(l,p,()=>r()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(c),t=c.outputs):t=r()}),a&&this.addTapeNode(l,p,t,u,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(e=>null!=p[e]?p[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:c.timeMs,extraInfo:c.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const a=Xa(e);if(null!=a){const e=a.inputsToSave||[],s=a.outputsToSave||[];let i;a.saveAllInputs?(X(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(e=>t[e])):i=e.map(e=>t[e]);const r=n.filter((e,t)=>s[t]);return i.concat(r)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let s=e;"string"===n&&ue(e[0])&&(s=e.map(e=>bs(e)));const i=a.write(s,t,n),r=new Fs(t,n,i,this.nextTensorId());if(this.trackTensor(r,a),"string"===n){const e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return r}makeTensorFromDataId(e,t,n,a){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:s}=e,i=new Fs(a,s,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const s=new Ms(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*de(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ms||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*de(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,s,i){const r={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Xa(e);null!=o&&(a=o.gradFunc),null!=a&&(r.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],a=xe(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e}),a(e.length>1?e:e[0],s,i))),this.state.activeTape.push(r)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Xs(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==a.id||this.track(e)})}gradients(e,t,n,a=!1){if(X(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));X(s instanceof Fs,()=>"The result y returned by f() must be a tensor.");const i=function(e,t,n){const a={},s={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],r=i.inputs;for(const e in r){const n=r[e];let o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){i.outputs.forEach(e=>a[e.id]=!0),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const r={};for(let t=e.length-1;t>=0;t--){const n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in a)i[a[e].id]=!0,r[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&r[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];a[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!a&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=ye(Z(e),"float32");return ti.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,a){for(let s=t.length-1;s>=0;s--){const i=t[s],r=[];if(i.outputs.forEach(t=>{const n=e[t.id];null!=n?r.push(n):r.push(null)}),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(r);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n(()=>o[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const r=i.inputs[t];if(!Q(s.shape,r.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${r.shape}'`);if(null==e[r.id])e[r.id]=s;else{const t=e[r.id];e[r.id]=a(t,s),t.dispose()}}}}(e,i,e=>this.tidy(e),ni);const a=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:a}})}customGrad(e){return X(me(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;X(t.every(e=>e instanceof Fs),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const a={};return t.forEach((e,t)=>{a[t]=e}),this.runKernelFunc({forwardFunc:(a,s)=>(n=e(...t,s),X(n.value instanceof Fs,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),X(me(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,a)=>{const s=n.gradFunc(e,a),i=Array.isArray(s)?s:[s];X(i.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),X(i.every(e=>e instanceof Fs),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const r={};return i.forEach((e,t)=>{r[t]=()=>e}),r},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=vs(),n=await this.backend.time(e);return n.wallMs=vs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Zs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ei(){const e=Ae();if(null==e._tfengine){const t=new Ce(e);e._tfengine=new Qs(t)}var t;return t=e._tfengine.ENV,Re=t,Rs=()=>e._tfengine,e._tfengine}Qs.nextTensorId=0,Qs.nextVariableId=0;const ti=ei();function ni(e,t){const n={a:e,b:t};return ti.runKernel(Le,n)}function ai(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function si(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ii=$e();function ri(e,t){let n=e;if(xs(e))return"string"===t?[]:[e.length];if(Hs(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(js(e))return[e.buffer.size/(null==t?4:de(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||xs(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&$e().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&oi(e,a,[]),a}function oi(e,t,n){if(n=n||[],!Array.isArray(e)&&!xs(e))return void X(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);X(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),X(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const a=t.slice(1);for(let t=0;t<e.length;++t)oi(e[t],a,n.concat(t))}function li(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function pi(e,t,n,a="numeric"){if(e instanceof Os())return li(a,e.dtype,t,n),e;let s=he(e);if("string"!==s&&["bool","int32","float32"].indexOf(a)>=0&&(s=a),li(a,s,t,n),null==e||!xs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}const i=ri(e,s);xs(e)||Array.isArray(e)||(e=[e]);const r="string"!==s?gs(e,s):ws(e,[],!0);return ti.makeTensor(r,i,s)}function di(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,s)=>pi(e,`${t}[${s}]`,n,a))}function ui(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{ti.startScope(n);try{const t=a(...e);return Ne(t)&&console.error("Cannot return a Promise inside of tidy."),ti.endScope(t),t}catch(e){throw ti.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}ii.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ii.registerFlag("IS_BROWSER",()=>si()),ii.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),ii.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ii.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),ii.registerFlag("PROD",()=>!1),ii.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ii.getBool("DEBUG")),ii.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ii.registerFlag("IS_TEST",()=>!1),ii.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ii.getBool("DEBUG")),ii.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),ii.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),ii.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const ci=ui({complex_:function(e,t){const n=pi(e,"real","complex"),a=pi(t,"imag","complex");Y(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);const s={real:n,imag:a};return ti.runKernel(rt,s)}});function hi(e,t,n,a){if(null==a)a=he(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(js(e)||Hs(e)){if("float32"!==a&&"int32"!==a)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return ti.backend.createTensorFromGPUData(e,t||n,a)}if(!xs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ke(t);const e=Z(t),a=Z(n);X(e===a,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`);for(let e=0;e<n.length;++e){const a=n[e],s=e!==n.length-1||a!==Z(t.slice(e));X(n[e]===t[e]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return xs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?gs(e,a):ws(e,[],!0),ti.makeTensor(e,t,a)}function mi(e,t,n){return hi(e,t,ri(e,n),n)}const fi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class gi{static join(e){return new gi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map(e=>xs(e)?e.buffer:e)).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+a.byteLength;this.shards.push({buffer:a,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const a=new ArrayBuffer(t-e),s=new Uint8Array(a);let i=0;for(let a=n;a<this.shards.length;a++){const n=this.shards[a],r=e+i-n.start,o=i,l=Math.min(t,n.end)-n.start,p=new Uint8Array(n.buffer,r,l-r);if(s.set(p,o),i+=p.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const s=Math.floor((a-n)/2)+n,i=t(e[s]);if(0===i)return s;i<0?a=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function vi(){return ti}function bi(){return ti.memory()}function yi(e,t){return ti.tidy(e,t)}function xi(e){Xs(e).forEach(e=>e.dispose())}function wi(e){return ti.keep(e)}function ki(e,t,n=1){return ti.registerBackend(e,t,n)}async function Ii(e,t){const n=[],a=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let i=0;i<s.length;++i){const r=s[i],o=Array.isArray(e)?e[i].tensor:e[r];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${r}': ${o.dtype}`);const l={name:r,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,a=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);a.set(i,s),s+=4,a.set(n,s),s+=n.length}e(a)});a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ti(await Promise.all(a)),specs:n}}function Si(e,t){const n=Z(e.shape);let a;if("quantization"in e){const t=e.quantization;a=fi[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=4+new Uint32Array(t(e,e+4))[0];return e}a=fi[e.dtype]}return n*a}function Ni(e,t){const n=e.name,a=e.dtype,s=e.shape,i=Z(s);let r,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${a}.`)}const l=fi[s.dtype],p="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===s.dtype||"uint16"===s.dtype){r=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];r[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const s=new ArrayBuffer(4*a.length),i=new Uint32Array(s);for(let s=0;s<a.length;s++){const r=a[s],o=e[n[r>>10]+(1023&r)]+t[r>>10];i[s]=o}return new Float32Array(s)}}();r=e(p)}}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${n}': ${a}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);r=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];r[e]=Math.round(t*s.scale+s.min)}}o+=i*l}else if("string"===a){const n=Z(e.shape);r=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+4))[0];o+=4;const n=new Uint8Array(t.slice(o,o+e));r.push(n),o+=e}}else{const e=fi[a];if("float32"===a)r=new Float32Array(t);else if("int32"===a)r=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){r=new Float32Array(t);const e=new Float32Array(r.length/2),n=new Float32Array(r.length/2);for(let t=0;t<e.length;t++)e[t]=r[2*t],n[t]=r[2*t+1];const a=mi(e,s,"float32"),i=mi(n,s,"float32"),o=ci(a,i);return a.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${a}`)}r=new Uint8Array(t)}o+=i*e}return mi(r,s,a)}function Ti(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const a=new Uint8Array(t);let s=0;return n.forEach(e=>{a.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),a.buffer}Ds=function(e){$e().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Ci="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ei(e){return Ci?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function $i(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function _i(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ei(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ei(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new gi(e.weightData).byteLength}}function Ri(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Ai{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ai.instance&&(Ai.instance=new Ai),Ai.instance}static registerSaveRouter(e){Ai.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ai.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ai.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ai.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?Ai.getInstance().loadRouters:Ai.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&a.push(s)}),a}}const Di="tensorflowjs",Fi="models_store",Oi="model_info_store";function Mi(){if(!$e().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Li(e){const t=e.result;t.createObjectStore(Fi,{keyPath:"modelPath"}),t.createObjectStore(Oi,{keyPath:"modelPath"})}class Pi{constructor(e){if(this.indexedDB=Mi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const a=this.indexedDB.open(Di,1);a.onupgradeneeded=()=>Li(a),a.onsuccess=()=>{const s=a.result;if(null==t){const t=s.transaction(Fi,"readonly"),a=t.objectStore(Fi).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(s.close(),n(a.error)),t.oncomplete=()=>s.close()}else{t.weightData=gi.join(t.weightData);const a=_i(t),i=s.transaction(Oi,"readwrite");let r,o,l=i.objectStore(Oi);try{r=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(e){return n(e)}r.onsuccess=()=>{o=s.transaction(Fi,"readwrite");const r=o.objectStore(Fi);let p;try{p=r.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(e){return n(e)}p.onsuccess=()=>e({modelArtifactsInfo:a}),p.onerror=e=>{l=i.objectStore(Oi);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(p.error)),t.onerror=e=>(s.close(),n(p.error))}},r.onerror=e=>(s.close(),n(r.error)),i.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},a.onerror=e=>n(a.error)})}}Pi.URL_SCHEME="indexeddb://";const zi=e=>{return $e().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Pi.URL_SCHEME)?(t=e.slice(Pi.URL_SCHEME.length),new Pi(t)):null;var t};Ai.registerSaveRouter(zi),Ai.registerLoadRouter(zi);class Vi{constructor(){this.indexedDB=Mi()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(Di,1);n.onupgradeneeded=()=>Li(n),n.onsuccess=()=>{const a=n.result,s=a.transaction(Oi,"readonly"),i=s.objectStore(Oi).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(a.close(),t(i.error)),s.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Pi.URL_SCHEME)?t.slice(Pi.URL_SCHEME.length):t,new Promise((t,n)=>{const a=this.indexedDB.open(Di,1);a.onupgradeneeded=()=>Li(a),a.onsuccess=()=>{const s=a.result,i=s.transaction(Oi,"readwrite"),r=i.objectStore(Oi),o=r.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const a=r.delete(e),i=()=>{l=s.transaction(Fi,"readwrite");const a=l.objectStore(Fi).delete(e);a.onsuccess=()=>t(o.result.modelArtifactsInfo),a.onerror=e=>n(o.error)};a.onsuccess=i,a.onerror=e=>(i(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},a.onerror=e=>n(a.error)})}}const Bi="/",Ui="tensorflowjs_models",Wi="info",Gi="model_topology",Hi="weight_specs",ji="weight_data",qi="model_metadata";function Ki(e){return{info:[Ui,e,Wi].join(Bi),topology:[Ui,e,Gi].join(Bi),weightSpecs:[Ui,e,Hi].join(Bi),weightData:[Ui,e,ji].join(Bi),modelMetadata:[Ui,e,qi].join(Bi)}}function Xi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Yi(e){const t=e.split(Bi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Bi)}class Ji{constructor(e){if(!$e().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ki(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=_i(e),s=gi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ci)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch(e){throw Xi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ci){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}Ji.URL_SCHEME="localstorage://";const Zi=e=>{return $e().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ji.URL_SCHEME)?(t=e.slice(Ji.URL_SCHEME.length),new Ji(t)):null;var t};Ai.registerSaveRouter(Zi),Ai.registerLoadRouter(Zi);class Qi{constructor(){X($e().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),X("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Ui+Bi,n=Bi+Wi;for(let a=0;a<this.LS.length;++a){const s=this.LS.key(a);s.startsWith(t)&&s.endsWith(n)&&(e[Yi(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Ki(e=(t=e).startsWith(Ji.URL_SCHEME)?t.slice(Ji.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const a=JSON.parse(this.LS.getItem(n.info));return Xi(n),a}}class er{constructor(){this.managers={}}static getInstance(){return null==er.instance&&(er.instance=new er),er.instance}static registerManager(e,t){X(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),X(e.length>0,()=>"scheme must not be an empty string.");const n=er.getInstance();X(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=er.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(er.getInstance().managers)}}class tr{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&$e().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(e,t)}isTypedArray(e){return es(e)}}if($e().get("IS_BROWSER")){$e().setPlatform("browser",new tr);try{er.registerManager(Ji.URL_SCHEME,new Qi)}catch(e){}try{er.registerManager(Pi.URL_SCHEME,new Vi)}catch(e){}}let nr;function ar(e,t="float32",n){return t=t||"float32",ke(e),new _s(e,t,n)}$e().get("IS_NODE")&&!$e().get("IS_BROWSER")&&$e().setPlatform("node",new class{constructor(){this.util=__webpack_require__(9023),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=$e().global.fetch?$e().global.fetch(e,t):(null==nr&&(nr=__webpack_require__(349)),nr(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const sr=ui({cast_:function(e,t){const n=pi(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},s={dtype:t};return ti.runKernel(at,a,s)}}),ir=ui({clone_:function(e){const t={x:pi(e,"x","clone","string_or_numeric")};return ti.runKernel(Kt,t)}});ei(),As={buffer:ar,cast:sr,clone:ir,print:function(e,t=!1){console.log(e.toString(t))}};const rr=ui({add_:function(e,t){let n=pi(e,"a","add"),a=pi(t,"b","add");[n,a]=qs(n,a);const s={a:n,b:a};return ti.runKernel(Le,s)}}),or=ui({floorDiv_:function(e,t){let n=pi(e,"a","floorDiv"),a=pi(t,"b","floorDiv");[n,a]=qs(n,a);const s={a:n,b:a};return ti.runKernel(Ut,s)}}),lr=ui({div_:function(e,t){let n=pi(e,"a","div"),a=pi(t,"b","div");if([n,a]=qs(n,a),"int32"===n.dtype&&"int32"===a.dtype)return or(n,a);const s={a:n,b:a};return ti.runKernel($t,s,{})}}),pr=ui({mul_:function(e,t){let n=pi(e,"a","mul"),a=pi(t,"b","mul");[n,a]=qs(n,a);const s={a:n,b:a};return ti.runKernel(Nn,s)}}),dr=ui({sqrt_:function(e){const t={x:pi(e,"x","sqrt","float32")};return ti.runKernel(ua,t)}}),ur=ui({square_:function(e){const t=pi(e,"x","square");return ti.runKernel("Square",{x:t},{})}}),cr=ui({zerosLike_:function(e){const t={x:pi(e,"x","zerosLike")};return ti.runKernel(Pa,t)}});function hr(e){return ti.customGrad(e)}function mr(e,t){if((xs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&xs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return hi(e,[],[],t)}const fr=new Map,gr=new Map;class vr{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class br{constructor(){this.classNameMap={}}static getMap(){return null==br.instance&&(br.instance=new br),br.instance}static register(e){br.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function yr(e,t,n){X(null!=e.className,()=>"Class being registered does not have the static className property defined."),X("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),X(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const a=t+">"+n;return br.register(e),fr.set(a,e),gr.set(e,a),e}class xr extends vr{minimize(e,t=!1,n){const{value:a,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return xi(s),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){X(me(e),()=>"The f passed in variableGrads(f) must be a function"),X(null==t||Array.isArray(t)&&t.every(e=>e instanceof Ms),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ti.registeredVariables)t.push(ti.registeredVariables[e])}const a=n?t.filter(e=>!e.trainable):null,s=t.length;X((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:i,grads:r}=ti.gradients(e,t,null,!0);X(r.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),X(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=r[t]&&(o[e.name]=r[t])}),null!=a&&a.forEach(e=>o[e.name]=null),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&xi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:mr(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(xr,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class wr extends xr{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ti.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=ti.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:yi(()=>cr(a).variable(s))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:yi(()=>cr(a).variable(s))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const r=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;yi(()=>{const e=rr(pr(r,this.rho),pr(ur(i),1-this.rho)),t=pr(lr(dr(rr(o,this.epsilon)),dr(rr(r,this.epsilon))),i),n=rr(pr(o,this.rho),pr(ur(t),1-this.rho));r.assign(e),o.assign(n);const s=rr(pr(t,-this.learningRate),a);a.assign(s)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(xi(this.accumulatedGrads.map(e=>e.variable)),xi(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function kr(e,t,n){ke(e);const a={shape:e,value:t,dtype:n=n||he(t)};return ti.runKernel(zt,{},a)}class Ir extends xr{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=ti.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:yi(()=>kr(a.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable;yi(()=>{const e=rr(i,ur(s));i.assign(e);const t=rr(pr(lr(s,dr(rr(e,ti.backend.epsilon()))),-this.learningRate),a);a.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&xi(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Sr=ui({pow_:function(e,t){let n=pi(e,"base","pow"),a=pi(t,"exp","pow");[n,a]=qs(n,a);const s={a:n,b:a};return ti.runKernel(On,s)}}),Nr=ui({sub_:function(e,t){let n=pi(e,"a","sub"),a=pi(t,"b","sub");[n,a]=qs(n,a);const s={a:n,b:a};return ti.runKernel(Ea,s)}});class Tr extends xr{static get className(){return"Adam"}constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],yi(()=>{this.accBeta1=mr(t).variable(),this.accBeta2=mr(n).variable()}),null==a&&(this.epsilon=ti.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);yi(()=>{const n=Nr(1,this.accBeta1),a=Nr(1,this.accBeta2);t.forEach((t,s)=>{const i=ti.registeredVariables[t],r=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:yi(()=>cr(i).variable(r))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:yi(()=>cr(i).variable(r))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,p=this.accumulatedSecondMoment[s].variable,d=rr(pr(l,this.beta1),pr(o,1-this.beta1)),u=rr(pr(p,this.beta2),pr(ur(o),1-this.beta2)),c=lr(d,n),h=lr(u,a);l.assign(d),p.assign(u);const m=rr(pr(lr(c,rr(dr(h),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(pr(this.accBeta1,this.beta1)),this.accBeta2.assign(pr(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&xi(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&xi(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),yi(()=>{this.accBeta1.assign(Sr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Sr(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Cr=ui({abs_:function(e){const t=pi(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ti.runKernel(ot,e)}{const e={x:t};return ti.runKernel(Fe,e)}}});function Er(e,t){const n=e.length,a=[];for(let s=0;s<n;s++){const i=n-1-s,r=e[i]||1;(t[t.length-1-s]||1)>1&&1===r&&a.unshift(i)}return a}function $r(e,t){const n=[];for(let a=0;a<t.length;a++){const s=e[e.length-a-1],i=t.length-a-1,r=t[i];(null==s||1===s&&r>1)&&n.unshift(i)}return n}function _r(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let s=0;s<n;s++){let i=e[e.length-s-1];null==i&&(i=1);let r=t[t.length-s-1];if(null==r&&(r=1),1===i)a[n-s-1]=r;else if(1===r)a[n-s-1]=i;else{if(i!==r)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);a[n-s-1]=i}}return a}const Rr=ui({maximum_:function(e,t){let n=pi(e,"a","maximum"),a=pi(t,"b","maximum");[n,a]=qs(n,a),"bool"===n.dtype&&(n=sr(n,"int32"),a=sr(a,"int32")),_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(hn,s)}});class Ar extends xr{static get className(){return"Adamax"}constructor(e,t,n,a=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],yi(()=>{this.iteration=mr(0).variable(),this.accBeta1=mr(t).variable()}),null==a&&(this.epsilon=ti.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);yi(()=>{const n=Nr(1,this.accBeta1),a=lr(-this.learningRate,rr(pr(this.iteration,this.decay),1));t.forEach((t,s)=>{const i=ti.registeredVariables[t],r=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:cr(i).variable(r)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:cr(i).variable(r)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,p=this.accumulatedWeightedInfNorm[s].variable,d=rr(pr(l,this.beta1),pr(o,1-this.beta1)),u=pr(p,this.beta2),c=Cr(o),h=Rr(u,c);l.assign(d),p.assign(h);const m=rr(pr(lr(a,n),lr(d,rr(h,this.epsilon))),i);i.assign(m)}),this.iteration.assign(rr(this.iteration,1)),this.accBeta1.assign(pr(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&xi(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&xi(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Dr extends xr{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=ti.registeredVariables[t];yi(()=>{const e=rr(pr(this.c,a),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=wi(mr(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Fr extends Dr{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=mr(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=ti.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:yi(()=>cr(a).variable(e))}}const s=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&yi(()=>{let e;const t=rr(pr(this.m,s),i);e=this.useNesterov?rr(pr(this.c,rr(i,pr(t,this.m))),a):rr(pr(this.c,t),a),s.assign(t),a.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&xi(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Or extends xr{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,a=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==a&&(this.epsilon=ti.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const a=ti.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:yi(()=>cr(a).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:yi(()=>cr(a).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:yi(()=>cr(a).variable(s))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const r=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;yi(()=>{const e=rr(pr(r,this.decay),pr(ur(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=rr(pr(t,this.decay),pr(i,1-this.decay)),l=lr(pr(i,this.learningRate),dr(Nr(e,rr(ur(s),this.epsilon)))),p=rr(pr(o,this.momentum),l);r.assign(e),t.assign(s),o.assign(p);const d=Nr(a,p);a.assign(d)}else{const e=rr(pr(r,this.decay),pr(ur(i),1-this.decay)),t=rr(pr(o,this.momentum),lr(pr(i,this.learningRate),dr(rr(e,this.epsilon))));r.assign(e),o.assign(t);const n=Nr(a,t);a.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&xi(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&xi(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&xi(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Mr=[wr,Ir,Tr,Ar,Fr,Or,Dr];function Lr(e){return new Promise(e=>setTimeout(e)).then(e)}class Pr{constructor(e){if(!$e().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Pr.URL_SCHEME)&&(e=e.slice(Pr.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=gi.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=$i(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await Lr(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Lr(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:_i(e)}}}}function zr(e,t,n,a){!function(e){X(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){X(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),X(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),X(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,a=null==a?1:a);let s=0;return Promise.all(e.map(i=>(i.then(i=>{const r=n+ ++s/e.length*(a-n);return t(r),i}),i)))}async function Vr(e,t){null==t&&(t={});const n=null==t.fetchFunc?$e().platform.fetch:t.fetchFunc,a=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(a):await zr(a,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await zr(s,t.onProgress,.5,1)}Pr.URL_SCHEME="downloads://",Ai.registerSaveRouter(e=>$e().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Pr.URL_SCHEME)?function(e="model"){return new Pr(e)}(e.slice(Pr.URL_SCHEME.length)):null);class Br{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(X("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=$e().platform.fetch,X(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&X(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=$i(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=gi.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:_i(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():async function(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),function(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}(e,n,a)}(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Ri(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?$e().platform.fetch:t.fetchFunc;let s,i=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var r;i<e.length;){if(!s){const n=(await a(e[i],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);i++,s=void 0,null===(r=t.onProgress)||void 0===r||r.call(t,i/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,i=[],r=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?r.push(this.weightUrlConverter(e)):i.push(s+e+a);return this.weightUrlConverter&&i.push(...await Promise.all(r)),i}async loadWeights(e){const t=await this.getWeightUrls(e);return[Ri(e),await Vr(t,this.loadOptions)]}}function Ur(e){return null!=e.match(Br.URL_SCHEME_REGEX)}Br.URL_SCHEME_REGEX=/^https?:\/\//;const Wr=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Ur(e)):Ur(e),n)return Gr(e,t)}return null};function Gr(e,t){return new Br(e,t)}Ai.registerSaveRouter(Wr),Ai.registerLoadRouter(Wr);const Hr=-2,jr=-1;function qr(e,t,n){const a=e.shape.length;X(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),X(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let s=0;s<a;++s)X(t[s]+n[s]<=e.shape[s],()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function Kr(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Xr(e,t,n){const a=[];for(let s=0;s<e.length;s++)a[s]=Math.ceil((t[s]-e[s])/n[s]);return a}function Yr(e,t,n,a){const s=[...e];for(let e=s.length;e<a.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Jr(e,t,n){return n<=e?n:n-(t-1)}function Zr(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Qr(e,t,n,a,s,i,r,o,l){const p=e.length;let d=new Array(p),u=new Array(p),c=new Array(p);if(t.length&&n>0){const l=t[0],p=n+1;d=eo(r,l,p,a,e),u=to(o,l,p,s,e),c=Yr(i,l,p,e)}else for(let t=0;t<p;t++)d[t]=ao(r,a,i,e,t,l),u[t]=so(o,s,i,e,t,l),c[t]=no(i,t,l);return{begin:d,end:u,strides:c}}function eo(e,t,n,a,s){const i=[...s],r=Zr(n,t);for(let s=0;s<i.length;s++)if(r.indexOf(s)>-1)i[s]=0;else{const r=Jr(t,n,s);let o=a[r];e&1<<r&&(o=0),i[s]=o}return i}function to(e,t,n,a,s){const i=[...s],r=Zr(n,t);for(let s=0;s<i.length;s++)if(r.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const r=Jr(t,n,s);let o=a[r];e&1<<r&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let e=0;e<i.length;e++){const t=s[e];i[e]<0&&(i[e]+=t),i[e]=j(0,i[e],s[e])}return i}function no(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function ao(e,t,n,a,s,i){let r=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==r)&&(r=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=a[s];return r<0&&(r+=l),r=j(0,r,l-1),r}function so(e,t,n,a,s,i){let r=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==r)&&(r=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=a[s];return r<0&&(r+=l),r=o>0?j(0,r,l):j(-1,r,l-1),r}function io(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let s=a+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function ro(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function oo(e,t,n){let a;const s=e.shape.length;let i;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach(e=>{X(-1!==e,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map((t,n)=>t>=0?t:(X(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-a[n])),[a,i]}function lo(e,t,n,a,s,i,r,o,l){let p;if(null==a?(p=new Array(t.length),p.fill(1)):p=a,null!=r&&r&r-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const u={dims:p.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:p.slice(),beginMask:s,endMask:i,ellipsisMask:r,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<u.dims;e++)d&&1<<e&o&&u.numAddAxisAfterEllipsis++,1<<e&r&&(d=!0);d||(u.ellipsisMask|=1<<u.dims,u.dims++);const c={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(Hr),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(jr),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(u,c);let h=!0,m=!0,f=!0;const g=[],v=[];for(let t=0;t<e.length;++t){if(0===c.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(c.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}const s=[c.beginMask&1<<t,c.endMask&1<<t],i=[c.strides[t]>0?0:-1,c.strides[t]>0?a:a-1];if(n&&c.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&1===c.strides[t];const r=!!(c.beginMask&1<<t&&c.endMask&1<<t);if(c.beginValid&&c.endValid){if(n){const e=c.begin[t]<0?a+c.begin[t]:c.begin[t];if(c.begin[t]=e,c.end[t]=c.begin[t]+1,e<0||e>=a)throw Error(`slice index ${c.begin[t]} of dimension ${t} out of bounds.`)}else c.begin[t]=po(c.begin[t],0,c.strides[t],a,s,i),c.end[t]=po(c.end[t],1,c.strides[t],a,s,i);const e=1===c.strides[t]&&0===c.begin[t]&&c.end[t]===a;h=h&&e,m=m&&(0===t&&1===c.strides[t]||e)}else h=h&&1===c.strides[t]&&r,m=m&&(0===t&&1===c.strides[t]||r);let o,l=!1;if(c.beginValid&&c.endValid?(o=c.end[t]-c.begin[t],l=!0):n?(o=1,l=!0):r&&a>=0&&(o=c.strides[t]<0?-a:a,l=!0),l){let e;e=0===o||o<0!=c.strides[t]<0?0:Math.trunc(o/c.strides[t])+(o%c.strides[t]!==0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<c.finalShapeGatherIndices.length;++e){const t=c.finalShapeGatherIndices[e];t>=0?v.push(g[t]):t===Hr&&v.push(1)}return{finalShapeSparse:v.filter((e,t)=>c.finalShapeGatherIndices[t]!==Hr),finalShape:v,isIdentity:h,sliceDim0:m,isSimpleSlice:f,begin:c.begin,end:c.end,strides:c.strides}}function po(e,t,n,a,s,i){if(s[t])return n>0?i[t]:i[t+1&1];{const t=e<0?a+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}const uo=ui({all_:function(e,t=null,n=!1){const a={x:pi(e,"x","all","bool")},s={axis:t,keepDims:n};return ti.runKernel(ze,a,s)}}),co=ui({any_:function(e,t=null,n=!1){const a={x:pi(e,"x","any","bool")},s={axis:t,keepDims:n};return ti.runKernel(Ve,a,s)}}),ho=ui({argMax_:function(e,t=0){const n={x:pi(e,"x","argMax")},a={axis:t};return ti.runKernel(Be,n,a)}});function mo(e,t,n,a,s="NHWC",i){return vo(e,[...t,e[3]],n,i,a,null,null,Co(s))}function fo(e,t,n,a,s,i,r="channelsLast"){const[o,l]=xo(t);let p;if("channelsLast"===r)p=[o,l,e[3],e[3]];else{if("channelsFirst"!==r)throw new Error(`Unknown dataFormat ${r}`);p=[o,l,e[1],e[1]]}return vo(e,p,n,a,s,i,!1,r)}function go(e,t,n,a,s,i,r="NDHWC"){const[o,l,p]=wo(t);let d,u;if("NDHWC"===r)u="channelsLast",d=[o,l,p,e[4],e[4]];else{if("NCDHW"!==r)throw new Error(`Unknown dataFormat ${r}`);u="channelsFirst",d=[o,l,p,e[1],e[1]]}return bo(e,d,n,a,s,!1,u,i)}function vo(e,t,n,a,s,i,r=!1,o="channelsLast"){let[l,p,d,u]=[-1,-1,-1,-1];if("channelsLast"===o)[l,p,d,u]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,u,p,d]=e}const[c,h,,m]=t,[f,g]=xo(n),[v,b]=xo(a),y=ko(c,v),x=ko(h,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,a,s,i,r,o,l){let p,d,u;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,a,s){null==a&&(a=yo(e,t,n));const i=e[1];return[Io((e[0]-t+2*a)/n+1,s),Io((i-t+2*a)/n+1,s)]}([t,n],i,a,e,o);d=s[0],u=s[1]}else if("same"===e){d=Math.ceil(t/a),u=Math.ceil(n/s);const e=Math.max(0,(d-1)*a+i-t),o=Math.max(0,(u-1)*s+r-n),l=Math.floor(e/2),c=e-l,h=Math.floor(o/2);p={top:l,bottom:c,left:h,right:o-h,type:"SAME"}}else if("valid"===e)p={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-i+1)/a),u=Math.ceil((n-r+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const c="channelsLast"===l?e[1][0]:e[2][0],h="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],f="channelsLast"===l?e[2][1]:e[3][1];p={top:c,bottom:h,left:m,right:f,type:0===c&&0===h&&0===m&&0===f?"VALID":"EXPLICIT"},d=Io((t-i+c+h)/a+1,o),u=Io((n-r+m+f)/s+1,o)}}return{padInfo:p,outHeight:d,outWidth:u}}(s,p,d,f,g,y,x,i,o),S=r?m*u:m;let N;return"channelsFirst"===o?N=[l,S,k,I]:"channelsLast"===o&&(N=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:p,inWidth:d,inChannels:u,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:f,strideWidth:g,filterHeight:c,filterWidth:h,effectiveFilterHeight:y,effectiveFilterWidth:x,dilationHeight:v,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function bo(e,t,n,a,s,i=!1,r="channelsLast",o){let[l,p,d,u,c]=[-1,-1,-1,-1,-1];if("channelsLast"===r)[l,p,d,u,c]=e;else{if("channelsFirst"!==r)throw new Error(`Unknown dataFormat ${r}`);[l,c,p,d,u]=e}const[h,m,f,,g]=t,[v,b,y]=wo(n),[x,w,k]=wo(a),I=ko(h,x),S=ko(m,w),N=ko(f,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,a,s,i,r,o,l,p,d){let u,c,h,m;if("valid"===e&&(e=0),"number"==typeof e){u={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const f=function(e,t,n,a,s,i){null==s&&(s=yo(e,t[0],a[0]));const r=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(r[n]=Io((e[n]-t[n]+2*s)/a[n]+1,i));return r}([t,n,a,1],[o,l,p],0,[s,i,r],e,d);c=f[0],h=f[1],m=f[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{c=Math.ceil(t/s),h=Math.ceil(n/i),m=Math.ceil(a/r);const e=(c-1)*s+o-t,d=(h-1)*i+l-n,f=(m-1)*r+p-a,g=Math.floor(e/2),v=e-g,b=Math.floor(d/2),y=d-b,x=Math.floor(f/2);u={top:b,bottom:y,left:x,right:f-x,front:g,back:v,type:"SAME"}}}return{padInfo:u,outDepth:c,outHeight:h,outWidth:m}}(s,p,d,u,v,b,y,I,S,N,o),_=i?g*c:g;let R;return"channelsFirst"===r?R=[l,_,C,E,$]:"channelsLast"===r&&(R=[l,C,E,$,_]),{batchSize:l,dataFormat:r,inDepth:p,inHeight:d,inWidth:u,inChannels:c,outDepth:C,outHeight:E,outWidth:$,outChannels:_,padInfo:T,strideDepth:v,strideHeight:b,strideWidth:y,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function yo(e,t,n,a=1){const s=ko(t,a);return Math.floor((e[0]*(n-1)-n+s)/2)}function xo(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function wo(e){return"number"==typeof e?[e,e,e]:e}function ko(e,t){return t<=1?e:e+(e-1)*(t-1)}function Io(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function So(e){const[t,n,a]=xo(e);return 1===t&&1===n&&1===a}function No(e,t){return So(e)||So(t)}function To(e){return xo(e).every(e=>e>0)}function Co(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Eo(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)X(ee(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(t=>{t.forEach(t=>{X(ee(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})})}}}const $o=ui({reshape_:function(e,t){const n={x:pi(e,"x","reshape","string_or_numeric")},a={shape:t};return ti.runKernel(Hn,n,a)}}),_o=ui({avgPool_:function(e,t,n,a,s){const i=pi(e,"x","avgPool","float32");X(No(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let r=i,o=!1;3===i.rank&&(o=!0,r=$o(i,[1,i.shape[0],i.shape[1],i.shape[2]])),X(4===r.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${r.rank}.`),Eo("avgPool",a,s);const l={x:r},p={filterSize:t,strides:n,pad:a,dimRoundingMode:s};let d=ti.runKernel(Ke,l,p);return d=sr(d,i.dtype),o?$o(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Ro=ui({avgPool3d_:function(e,t,n,a,s,i="NDHWC"){const r=pi(e,"x","avgPool3d","float32");let o=r,l=!1;4===r.rank&&(l=!0,o=$o(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),X(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),X("NDHWC"===i,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),X("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),Eo("avgPool3d",a,s);const p={x:o},d={filterSize:t,strides:n,pad:a,dimRoundingMode:s,dataFormat:i};let u=ti.runKernel(Ye,p,d);return u=sr(u,o.dtype),l?$o(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}}),Ao=ui({batchNorm_:function(e,t,n,a,s,i){null==i&&(i=.001);const r=pi(e,"x","batchNorm"),o=pi(t,"mean","batchNorm"),l=pi(n,"variance","batchNorm");let p,d;null!=s&&(p=pi(s,"scale","batchNorm")),null!=a&&(d=pi(a,"offset","batchNorm")),X(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),X(null==d||o.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),X(null==p||o.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const u={x:function(e){let t;return t=0===e.rank||1===e.rank?$o(e,[1,1,1,e.size]):2===e.rank?$o(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?$o(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(r),scale:p,offset:d,mean:o,variance:l},c={varianceEpsilon:i},h=ti.runKernel(Wt,u,c);return $o(h,r.shape)}}),Do=ui({batchNorm2d_:function(e,t,n,a,s,i){const r=pi(e,"x","batchNorm"),o=pi(t,"mean","batchNorm"),l=pi(n,"variance","batchNorm");let p,d;return null!=s&&(p=pi(s,"scale","batchNorm")),null!=a&&(d=pi(a,"offset","batchNorm")),X(2===r.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${r.rank}.`),X(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),X(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=p&&X(2===p.rank||1===p.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${p.rank}.`),null!=d&&X(2===d.rank||1===d.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),Ao(r,o,l,d,p,i)}}),Fo=ui({batchNorm3d_:function(e,t,n,a,s,i){const r=pi(e,"x","batchNorm"),o=pi(t,"mean","batchNorm"),l=pi(n,"variance","batchNorm");let p,d;return null!=s&&(p=pi(s,"scale","batchNorm")),null!=a&&(d=pi(a,"offset","batchNorm")),X(3===r.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${r.rank}.`),X(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),X(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=p&&X(3===p.rank||1===p.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${p.rank}.`),null!=d&&X(3===d.rank||1===d.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),Ao(r,o,l,d,p,i)}}),Oo=ui({batchNorm4d_:function(e,t,n,a,s,i){const r=pi(e,"x","batchNorm"),o=pi(t,"mean","batchNorm"),l=pi(n,"variance","batchNorm");let p,d;return null!=s&&(p=pi(s,"scale","batchNorm")),null!=a&&(d=pi(a,"offset","batchNorm")),X(4===r.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${r.rank}.`),X(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),X(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=p&&X(4===p.rank||1===p.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${p.rank}.`),null!=d&&X(4===d.rank||1===d.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),Ao(r,o,l,d,p,i)}}),Mo=ui({broadcastTo_:function(e,t){let n=pi(e,"broadcastTo","x");const a=n.shape;if(ke(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=$o(n,e)}const s=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===i.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return ir(n);const r={x:n},o={reps:i};return ti.runKernel(Ra,r,o)}}),Lo=ui({clipByValue_:function(e,t,n){const a=pi(e,"x","clipByValue");if(X(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return kr(a.shape,t,a.dtype);const s={x:a},i={clipValueMin:t,clipValueMax:n};return ti.runKernel(it,s,i)}}),Po=ui({concat_:function(e,t=0){X(e.length>=1,()=>"Pass at least one tensor to concat");const n=di(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return ir(n[0]);const a=n,s={axis:t};return ti.runKernel(lt,a,s)}}),zo=ui({concat1d_:function(e){return Po(e,0)}}),Vo=ui({concat2d_:function(e,t){return Po(e,t)}}),Bo=ui({concat3d_:function(e,t){return Po(e,t)}}),Uo=ui({concat4d_:function(e,t){return Po(e,t)}}),Wo=ui({conv2d_:function(e,t,n,a,s="NHWC",i=[1,1],r){const o=pi(e,"x","conv2d","float32"),l=pi(t,"filter","conv2d","float32");let p=o,d=!1;3===o.rank&&(d=!0,p=$o(o,[1,o.shape[0],o.shape[1],o.shape[2]])),X(4===p.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`),X(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Eo("conv2d",a,r);const u="NHWC"===s?p.shape[3]:p.shape[1];X(u===l.shape[2],()=>`Error in conv2d: depth of input (${u}) must match input depth for filter ${l.shape[2]}.`),X(No(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),X(To(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),X(To(n),()=>"Error in conv2D: Strides should be larger than 0.");const c={x:p,filter:l},h={strides:n,pad:a,dataFormat:s,dilations:i,dimRoundingMode:r},m=ti.runKernel(pt,c,h);return d?$o(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Go=ui({conv1d_:function(e,t,n,a,s="NWC",i=1,r){const o=pi(e,"x","conv1d"),l=pi(t,"filter","conv1d");let p=o,d=!1;2===o.rank&&(d=!0,p=$o(o,[1,o.shape[0],o.shape[1]])),X(3===p.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${p.rank}.`),X(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Eo("conv1d",a,r),X(p.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${p.shape[2]}) must match input depth for filter ${l.shape[1]}.`),X(No(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),X(To(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),X(To(n),()=>"Error in conv1D: Stride should be larger than 0."),X("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const u=$o(l,[1,l.shape[0],l.shape[1],l.shape[2]]),c=$o(p,[p.shape[0],1,p.shape[1],p.shape[2]]),h=Wo(c,u,[1,n],a,"NHWC",[1,i],r);return $o(h,d?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}}),Ho=ui({conv2DBackpropInput_:function(e,t,n,a,s,i="NHWC",r){X(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,p=!1;3===t.rank&&(p=!0,l=$o(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),X(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),X(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),X(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const d="NHWC"===i?o[3]:o[1],u="NHWC"===i?l.shape[3]:l.shape[1];X(d===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`),X(u===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[3]}.`),Eo("conv2dDerInput",s,r);const c={dy:l,filter:n},h={strides:a,pad:s,dataFormat:i,dimRoundingMode:r,inputShape:o},m=ti.runKernel(ut,c,h);return p?$o(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),jo=ui({conv2dTranspose_:function(e,t,n,a,s,i){const r=pi(e,"x","conv2dTranspose"),o=pi(t,"filter","conv2dTranspose");return Ho(n,r,o,a,s,"NHWC",i)}}),qo=ui({conv3d_:function(e,t,n,a,s="NDHWC",i=[1,1,1]){const r=pi(e,"x","conv3d"),o=pi(t,"filter","conv3d");let l=r,p=!1;4===r.rank&&(p=!0,l=$o(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),X(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),X(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),X(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),X(No(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),X("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),X(To(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),X(To(n),()=>"Error in conv3D: Strides should be larger than 0.");const d={x:l,filter:o},u={strides:n,pad:a,dataFormat:s,dilations:i},c=ti.runKernel(ct,d,u);return p?$o(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Ko=ui({conv3DBackpropInput_:function(e,t,n,a,s){X(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,r=t,o=!1;4===t.rank&&(o=!0,r=$o(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const l=i[4],p=r.shape[4];X(5===i.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),X(5===r.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${r.rank}`),X(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),X(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),X(p===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`);const d={dy:r,filter:n},u={pad:s,strides:a,inputShape:i},c=ti.runKernel(mt,d,u);return o?$o(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Xo=ui({conv3dTranspose_:function(e,t,n,a,s){const i=pi(e,"x","conv3dTranspose"),r=pi(t,"filter","conv3dTranspose");return Ko(n,i,r,a,s)}}),Yo=ui({denseBincount_:function(e,t,n,a=!1){const s=pi(e,"x","denseBincount"),i=pi(t,"weights","denseBincount");X("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),X(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),X(n>=0,()=>`size must be non-negative, but got ${n}.`),X(i.size===s.size||0===i.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`);const r={x:s,weights:i},o={size:n,binaryOutput:a};return ti.runKernel(xt,r,o)}}),Jo=ui({depthwiseConv2d_:function(e,t,n,a,s="NHWC",i=[1,1],r){const o=pi(e,"x","depthwiseConv2d","float32"),l=pi(t,"filter","depthwiseConv2d","float32");let p=o,d=!1;3===o.rank&&(d=!0,p=$o(o,[1,o.shape[0],o.shape[1],o.shape[2]])),X(4===p.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),X(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const u="NHWC"===s?p.shape[3]:p.shape[1];X(u===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u}) must match the inChannels dimension in filter ${l.shape[2]}.`),Eo("depthwiseConv2d",a,r);const c={x:p,filter:l},h={strides:n,pad:a,dataFormat:s,dilations:i,dimRoundingMode:r},m=ti.runKernel(kt,c,h);return d?$o(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Zo=ui({elu_:function(e){const t={x:pi(e,"x","elu","float32")};return ti.runKernel(Rt,t)}}),Qo=ui({equal_:function(e,t){let n=pi(e,"a","equal","string_or_numeric"),a=pi(t,"b","equal","string_or_numeric");[n,a]=qs(n,a),_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(Ft,s)}}),el=ui({erf_:function(e){let t=pi(e,"x","erf");X("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=sr(t,"float32"));const n={x:t};return ti.runKernel(Dt,n)}}),tl=ui({exp_:function(e){const t={x:pi(e,"x","exp")};return ti.runKernel(Ot,t)}}),nl=ui({expandDims_:function(e,t=0){const n=pi(e,"x","expandDims","string_or_numeric");X(t<=n.rank,()=>"Axis must be <= rank of the tensor");const a={input:n},s={dim:t};return ti.runKernel(Mt,a,s)}}),al=ui({tile_:function(e,t){const n=pi(e,"x","tile","string_or_numeric");X(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const a={x:n},s={reps:t};return ti.runKernel(Ra,a,s)}}),sl=ui({eye_:function(e,t,n,a="float32"){null==t&&(t=e);const s=ar([e,t],a),i=e<=t?e:t;for(let e=0;e<i;++e)s.set(1,e,e);const r=$o(s.toTensor(),[e,t]);if(null==n)return r;if(1===n.length)return al(nl(r,0),[n[0],1,1]);if(2===n.length)return al(nl(nl(r,0),0),[n[0],n[1],1,1]);if(3===n.length)return al(nl(nl(nl(r,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),il=ui({floor_:function(e){const t={x:pi(e,"x","floor","float32")};return ti.runKernel(Bt,t)}}),rl=ui({gather_:function(e,t,n=0,a=0){const s={x:pi(e,"x","gather"),indices:pi(t,"indices","gather","int32")},i={axis:n,batchDims:a};return ti.runKernel(Gt,s,i)}}),ol=ui({greater_:function(e,t){let n=pi(e,"a","greater","string_or_numeric"),a=pi(t,"b","greater","string_or_numeric");[n,a]=qs(n,a),_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(jt,s)}}),ll=ui({greaterEqual_:function(e,t){let n=pi(e,"a","greaterEqual","string_or_numeric"),a=pi(t,"b","greaterEqual","string_or_numeric");[n,a]=qs(n,a),_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(qt,s)}}),pl=ui({leakyRelu_:function(e,t=.2){const n={x:pi(e,"x","leakyRelu")},a={alpha:t};return ti.runKernel(en,n,a)}}),dl=ui({log_:function(e){const t={x:pi(e,"x","log","float32")};return ti.runKernel(sn,t)}}),ul=ui({log1p_:function(e){const t={x:pi(e,"x","log1p")};return ti.runKernel(rn,t)}}),cl=ui({max_:function(e,t=null,n=!1){const a={x:pi(e,"x","max")},s={reductionIndices:t,keepDims:n};return ti.runKernel(cn,a,s)}}),hl=ui({sum_:function(e,t=null,n=!1){let a=pi(e,"x","sum");"bool"===a.dtype&&(a=sr(a,"int32"));const s={x:a},i={axis:t,keepDims:n};return ti.runKernel(ca,s,i)}}),ml=ui({logSoftmax_:function(e,t=-1){const n=pi(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const a=hr((e,n)=>{const a=cl(e,t,!0),s=Nr(e,a),i=Nr(sr(s,"float32"),dl(hl(tl(s),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{const[a]=n,s=tl(a);return Nr(e,pr(hl(e,t,!0),s))}}});return a(n)}});function fl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function gl(e,t,n){const a=e.length+t.length,s=[];let i=0,r=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?s.push(e[i++]):s.push(t[r++]);return s}function vl(e,t){const n=[],a=e.length;for(let s=0;s<a;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]}function bl(e,t){return gl(e,t.map(e=>1),t)}function yl(e,t,n){X(fl(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function xl(e,t){if(fl(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach(e=>n.push(e)),n}function wl(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function kl(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const Il=ui({logSumExp_:function(e,t=null,n=!1){const a=pi(e,"x","logSumExp"),s=ie(t,a.shape),i=cl(a,s,!0),r=Nr(a,i),o=tl(r),l=hl(o,s),p=dl(l),d=rr($o(i,p.shape),p);if(n){const e=bl(d.shape,s);return $o(d,e)}return d}}),Sl=ui({logicalAnd_:function(e,t){const n=pi(e,"a","logicalAnd","bool"),a=pi(t,"b","logicalAnd","bool");_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(on,s)}}),Nl=ui({matMul_:function(e,t,n=!1,a=!1){let s=pi(e,"a","matMul"),i=pi(t,"b","matMul");[s,i]=qs(s,i);const r={a:s,b:i},o={transposeA:n,transposeB:a};return ti.runKernel(Ze,r,o)}}),Tl=ui({maxPool_:function(e,t,n,a,s){const i=pi(e,"x","maxPool");let r=i,o=!1;3===i.rank&&(o=!0,r=$o(i,[1,i.shape[0],i.shape[1],i.shape[2]])),X(4===r.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${r.rank}.`),X(No(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),Eo("maxPool",a,s);const l={x:r},p={filterSize:t,strides:n,pad:a,dimRoundingMode:s},d=ti.runKernel(mn,l,p);return o?$o(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Cl=ui({maxPool3d_:function(e,t=[1,1,1],n,a,s,i="NDHWC"){const r=pi(e,"x","maxPool3d");let o=r,l=!1;4===r.rank&&(l=!0,o=$o(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]])),X(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),X("NDHWC"===i,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Eo("maxPool3d",a,s);const p={x:o},d={filterSize:t,strides:n,pad:a,dimRoundingMode:s,dataFormat:i},u=ti.runKernel(gn,p,d);return l?$o(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}}),El=ui({mean_:function(e,t=null,n=!1){const a={x:pi(e,"x","mean")},s={axis:t,keepDims:n};return ti.runKernel(yn,a,s)}}),$l=ui({min_:function(e,t=null,n=!1){const a={x:pi(e,"x","min")},s={axis:t,keepDims:n};return ti.runKernel(xn,a,s)}}),_l=ui({minimum_:function(e,t){let n=pi(e,"a","minimum"),a=pi(t,"b","minimum");[n,a]=qs(n,a),"bool"===n.dtype&&(n=sr(n,"int32"),a=sr(a,"int32")),_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(wn,s)}}),Rl=ui({moments_:function(e,t=null,n=!1){const a=ie(t,(e=pi(e,"x","moments")).shape),s=El(e,a,n);let i=s.shape;n||(i=bl(s.shape,a));const r=ur(Nr(sr(e,"float32"),$o(s,i)));return{mean:s,variance:El(r,a,n)}}}),Al=ui({neg_:function(e){const t={x:pi(e,"x","neg")};return ti.runKernel(Tn,t)}}),Dl=ui({notEqual_:function(e,t){let n=pi(e,"a","notEqual","string_or_numeric"),a=pi(t,"b","notEqual","string_or_numeric");[n,a]=qs(n,a),_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(Cn,s)}}),Fl=ui({oneHot_:function(e,t,n=1,a=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:pi(e,"indices","oneHot","int32")},r={dtype:s,depth:t,onValue:n,offValue:a};return ti.runKernel(An,i,r)}});function Ol(e,t="float32"){if(ke(e),"complex64"===t){const t=Ol(e,"float32"),n=Ol(e,"float32");return ci(t,n)}const n=xe(Z(e),t);return ti.makeTensor(n,e,t)}function Ml(e,t="float32"){if(ke(e),"complex64"===t){const t=Ml(e,"float32"),n=Ol(e,"float32");return ci(t,n)}const n=ye(Z(e),t);return ti.makeTensor(n,e,t)}const Ll=ui({onesLike_:function(e){const t={x:pi(e,"x","onesLike")};return ti.runKernel(Rn,t)}}),Pl=ui({pad_:function(e,t,n=0){const a=pi(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},i={x:a};return ti.runKernel(Fn,i,s)}}),zl=ui({prelu_:function(e,t){const n={x:pi(e,"x","prelu"),alpha:pi(t,"alpha","prelu")};return ti.runKernel(Mn,n)}});class Vl{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=h.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,s,i;do{a=2*this.random()-1,s=2*this.random()-1,i=a*a+s*s}while(i>=1||0===i);const r=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*a*r,t=this.mean+this.stdDev*s*r,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Bl{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=h.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ul=ui({randomNormal_:function(e,t=0,n=1,a,s){if(ke(e),null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);const i=new Vl(t,n,a,!1,s),r=ar(e,a);for(let e=0;e<r.values.length;e++)r.values[e]=i.nextValue();return r.toTensor()}}),Wl=ui({randomUniform_:function(e,t=0,n=1,a="float32",s){ke(e);const i=ar(e,a),r=new Bl(t,n,null,s);for(let e=0;e<i.values.length;e++)i.values[e]=r.nextValue();return i.toTensor()}});function Gl(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:a};return ti.runKernel(Bn,{},s)}const Hl=ui({relu_:function(e){const t={x:pi(e,"x","relu")};return ti.runKernel(Gn,t)}}),jl=ui({reverse_:function(e,t){const n={x:pi(e,"x","reverse")},a={dims:t};return ti.runKernel(Jn,n,a)}}),ql=ui({selu_:function(e){const t={x:pi(e,"x","selu")};return ti.runKernel(sa,t)}}),Kl=ui({separableConv2d_:function(e,t,n,a,s,i=[1,1],r="NHWC"){const o=pi(e,"x","separableConv2d"),l=pi(t,"depthwiseFilter","separableConv2d"),p=pi(n,"pointwiseFilter","separableConv2d");let d=o,u=!1;if(3===o.rank&&(u=!0,d=$o(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===r)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");X(4===d.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),X(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),X(4===p.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),X(1===p.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${p.shape[0]}.`),X(1===p.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${p.shape[1]}.`);const c=l.shape[2],h=l.shape[3];X(p.shape[2]===c*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*h}, but got ${p.shape[2]}.`);const m=Jo(d,l,a,s,r,i),f=Wo(m,p,1,"valid",r);return u?$o(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Xl=ui({sigmoid_:function(e){const t={x:pi(e,"x","sigmoid","float32")};return ti.runKernel(pa,t)}}),Yl=ui({sign_:function(e){const t={x:pi(e,"x","sign")};return ti.runKernel(la,t)}}),Jl=ui({slice_:function(e,t,n){const a=pi(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const s={x:a},i={begin:t,size:n};return ti.runKernel(ia,s,i)}}),Zl=ui({slice1d_:function(e,t,n){const a=pi(e,"x","slice1d");return X(1===a.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`),Jl(a,[t],[n])}}),Ql=ui({slice2d_:function(e,t,n){const a=pi(e,"x","slice2d");return X(2===a.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`),Jl(a,t,n)}}),ep=ui({slice3d_:function(e,t,n){const a=pi(e,"x","slice3d");return X(3===a.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`),Jl(a,t,n)}}),tp=ui({slice4d_:function(e,t,n){const a=pi(e,"x","slice4d");return X(4===a.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`),Jl(a,t,n)}}),np=ui({softmax_:function(e,t=-1){const n=pi(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const a={logits:n},s={dim:t};return ti.runKernel(fa,a,s)}}),ap=ui({softplus_:function(e){const t={x:pi(e,"x","softplus")};return ti.runKernel(da,t)}}),sp=ui({split_:function(e,t,n=0){const a={x:pi(e,"x","split")},s={numOrSizeSplits:t,axis:n};return ti.runKernel(ma,a,s)}}),ip=ui({squeeze_:function(e,t){const n=pi(e,"x","squeeze","string_or_numeric");return $o(n,re(n.shape,t).newShape)}}),rp=ui({stack_:function(e,t=0){const n=di(e,"tensors","stack","string_or_numeric");X(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&X(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const a=n,s={axis:t};return ti.runKernel(Dn,a,s)}}),op=ui({tanh_:function(e){const t={x:pi(e,"x","tanh","float32")};return ti.runKernel(_a,t)}});function lp(e,t){J(e);const n=ri(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return hi(e,null,n,t)}function pp(e,t,n){if(J(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=ri(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return hi(e,t,a,n)}const dp=ui({truncatedNormal_:function(e,t=0,n=1,a,s){if(ke(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const i=new Vl(t,n,a,!0,s),r=ar(e,a);for(let e=0;e<r.values.length;e++)r.values[e]=i.nextValue();return r.toTensor()}}),up=ui({unstack_:function(e,t=0){const n=pi(e,"x","unstack","string_or_numeric");X(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const a={value:n},s={axis:t};return ti.runKernel(Ma,a,s)}}),cp=ui({where_:function(e,t,n){const a=pi(t,"a","where"),s=pi(n,"b","where"),i=pi(e,"condition","where","bool"),r=_r(_r(i.shape,a.shape),s.shape),o={condition:Mo(i,r),t:Mo(a,r),e:Mo(s,r)};return ti.runKernel(aa,o)}}),hp=ui({imag_:function(e){const t={input:pi(e,"input","imag")};return ti.runKernel(Yt,t)}}),mp=ui({real_:function(e){const t={input:pi(e,"input","real")};return ti.runKernel(Un,t)}}),fp=ui({transpose_:function(e,t,n){const a=pi(e,"x","transpose");if(null==t&&(t=a.shape.map((e,t)=>t).reverse()),X(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`),t.forEach(e=>{X(e>=0&&e<a.rank,()=>"All entries in 'perm' must be between 0 and "+(a.rank-1)+` but got ${t}`)}),a.rank<=1)return a.clone();const s={x:a},i={perm:t};return"complex64"===a.dtype?yi(()=>{let e=mp(a),t=hp(a);return e=ti.runKernel(Fa,{x:e},i),t=ti.runKernel(Fa,{x:t},i),n&&(t=Al(t)),ci(e,t)}):ti.runKernel(Fa,s,i)}}),gp=ui({dropout_:function(e,t,n,a){const s=pi(e,"x","dropout");if(X("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),X(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Fs?s.clone():s;const i=function(e,t){if(null==t)return e.shape.slice();if(Q(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(s,n),r=1-t,o=lr(il(rr(Wl(i,0,1,"float32",a),r)),r);return pr(s,o)}}),vp=ui({fft_:function(e){X("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ti.runKernel(Pt,t)}}),bp=ui({rfft_:function(e,t){X("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const a=e.size/n;let s;if(null!=t&&t<n){const a=e.shape.map(e=>0),i=e.shape.map(e=>e);i[e.shape.length-1]=t,s=Jl(e,a,i),n=t}else if(null!=t&&t>n){const a=e.shape.map(e=>e);a[e.shape.length-1]=t-n,s=Po([e,Ol(a)],e.shape.length-1),n=t}else s=e;const i=cr(s),r=$o(ci(s,i),[a,n]),o=vp(r),l=Math.floor(n/2)+1,p=mp(o),d=hp(o),u=sp(p,[l,n-l],p.shape.length-1),c=sp(d,[l,n-l],d.shape.length-1),h=s.shape.slice();return h[s.shape.length-1]=l,$o(ci(u[0],c[0]),h)}}),yp=ui({ifft_:function(e){X("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ti.runKernel(Xt,t)}}),xp=ui({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const s=$o(e,[n,t]);a=yp(s)}else{const s=[n,2*(t-1)],i=$o(mp(e),[n,t]),r=$o(hp(e),[n,t]),o=jl(Jl(i,[0,1],[n,t-2]),1),l=pr(jl(Jl(r,[0,1],[n,t-2]),1),mr(-1)),p=Po([i,o],1),d=Po([r,l],1),u=$o(ci(p,d),[s[0],s[1]]);a=yp(u)}if(a=mp(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=$o(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}}),wp=ui({conv2DBackpropFilter_:function(e,t,n,a,s,i="NHWC",r){let o=e;3===e.rank&&(o=$o(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=$o(t,[1,t.shape[0],t.shape[1],t.shape[2]])),X(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),X(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),X(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const p="NHWC"===i?o.shape[3]:o.shape[1],d="NHWC"===i?l.shape[3]:l.shape[1];X(p===n[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`),X(d===n[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`),Eo("conv2dDerFilter",s,r);const u={x:o,dy:l},c={strides:a,pad:s,dataFormat:i,dimRoundingMode:r,filterShape:n};return ti.runKernel(dt,u,c)}}),kp=ui({relu6_:function(e){const t={x:pi(e,"x","relu6")};return ti.runKernel(Yn,t)}}),Ip=ui({step_:function(e,t=0){const n={x:pi(e,"x","step")},a={alpha:t};return ti.runKernel(za,n,a)}});function Sp(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return pr(e,Ip(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Np(e,t){let n=t;const a=$r(e.shape,t.shape);return a.length>0&&(n=hl(n,a)),$o(n,e.shape)}function Tp(e,t,n,a){if("linear"===t)return e;if("relu"===t)return Hl(e);if("elu"===t)return Zo(e);if("relu6"===t)return kp(e);if("prelu"===t)return zl(e,n);if("leakyrelu"===t)return pl(e,a);if("sigmoid"===t)return Xl(e);throw new Error(`Unknown fused activation ${t}.`)}const Cp=(e,t)=>!(e>0)||"linear"===t,Ep=ui({fusedConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:r,bias:o,activation:l="linear",preluActivationWeights:p,leakyreluAlpha:d}){if(l=l||"linear",!1===Cp(ti.state.gradientDepth,l)){X("NHWC"===s,()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let u=Wo(e,t,n,a,s,i,r);return null!=o&&(u=rr(u,o)),Tp(u,l,p,d)}const u=pi(e,"x","conv2d","float32"),c=pi(t,"filter","conv2d","float32");let h=u,m=!1;3===u.rank&&(m=!0,h=$o(u,[1,u.shape[0],u.shape[1],u.shape[2]])),X(4===h.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),X(4===c.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Eo("fused conv2d",a,r);const f="NHWC"===s?h.shape[3]:h.shape[1];X(c.shape[2]===f,()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${c.shape[2]}.`),X(No(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const g=vo(h.shape,c.shape,n,i,a,r);let v,b;if(null!=o&&(v=pi(o,"bias","fused conv2d"),[v]=qs(v,u),"NHWC"===s?_r(g.outShape,v.shape):(X(v.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${v.shape.length}.`),X(0===v.shape.length||v.shape[0]===g.outChannels||1===v.shape[0],()=>`Error in fused conv2d: bias shape (${v.shape}) is not compatible with the number of output channels (${g.outChannels})`))),null!=p){const e=p.shape;if(X(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)X(1===e[0]||e[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`);else if(3===e.length)try{_r(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=pi(p,"prelu weights","fused conv2d")}const y=(e,t)=>{X("NHWC"===s,()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[r,o,p,d]=t,u=Sp(e,p,l);X(So(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const c=[Ho(o.shape,u,r,n,a),wp(o,u,r.shape,n,a)];if(null!=d){const e=Np(d,u);c.push(e)}return c},x={x:h,filter:c,bias:v,preluActivationWeights:b},w={strides:n,pad:a,dataFormat:s,dilations:i,dimRoundingMode:r,activation:l,leakyreluAlpha:d};if(null==o){const e=hr((e,t,n)=>{let a=ti.runKernel(Ua,x,w);return n([t,e,a]),m&&(a=$o(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}});return e(h,c)}{const e=hr((e,t,n,a)=>{let s=ti.runKernel(Ua,x,w);return a([t,e,s,n]),m&&(s=$o(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}});return e(h,c,v)}}}),$p=ui({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,s,i=[1,1],r){let o=e;3===e.rank&&(o=$o(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=$o(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:o,dy:l},d={strides:a,pad:s,dimRoundingMode:r,dilations:i,filterShape:n};return ti.runKernel(It,p,d)}}),_p=ui({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,s,i=[1,1],r){let o=t,l=!1;3===t.rank&&(l=!0,o=$o(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:o,filter:n},d={strides:a,pad:s,dimRoundingMode:r,dilations:i,inputShape:e},u=ti.runKernel(St,p,d);return l?$o(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Rp=ui({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:s,activation:i="linear",preluActivationWeights:r,leakyreluAlpha:o=.2}){if(!1===Cp(ti.state.gradientDepth,i)){let l=Nl(e,t,n,a);return null!=s&&(l=rr(l,s)),Tp(l,i,r,o)}let l=pi(e,"a","fused matMul"),p=pi(t,"b","fused matMul");[l,p]=qs(l,p);const d=n?l.shape[l.rank-2]:l.shape[l.rank-1],u=a?p.shape[p.rank-1]:p.shape[p.rank-2],c=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=a?p.shape[p.rank-2]:p.shape[p.rank-1],m=l.shape.slice(0,-2),f=p.shape.slice(0,-2),g=Z(m),v=Z(f);X(d===u,()=>`Error in fused matMul: inner shapes (${d}) and (${u}) of Tensors with shapes ${l.shape} and ${p.shape} and transposeA=${n} and transposeB=${a} must match.`);const b=_r(l.shape.slice(0,-2),p.shape.slice(0,-2)).concat([c,h]),y=$o(l,n?[g,d,c]:[g,c,d]),x=$o(p,a?[v,h,u]:[v,u,h]);let w,k;null!=s&&(w=pi(s,"bias","fused matMul"),[w]=qs(w,l),_r(b,w.shape)),null!=r&&(k=pi(r,"prelu weights","fused matMul"));const I=(e,t)=>{const[r,o,l,p]=t,d=Sp($o(e,l.shape),l,i);let u,c;return n||a?!n&&a?(u=Nl(d,o,!1,!1),c=Nl(d,r,!0,!1)):n&&!a?(u=Nl(o,d,!1,!0),c=Nl(r,d,!1,!1)):(u=Nl(o,d,!0,!0),c=Nl(d,r,!0,!0)):(u=Nl(d,o,!1,!0),c=Nl(r,d,!0,!1)),null!=s?[u,c,Np(p,d)]:[u,c]},S={a:y,b:x,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:a,activation:i,leakyreluAlpha:o};if(null==s){const e=hr((e,t,n)=>{const a=ti.runKernel(Ba,S,N);return n([e,t,a]),{value:$o(a,b),gradFunc:I}});return e(y,x)}{const e=hr((e,t,n,a)=>{const s=ti.runKernel(Ba,S,N);return a([e,t,s,n]),{value:$o(s,b),gradFunc:I}});return e(y,x,w)}}}),Ap=ui({cropAndResize_:function(e,t,n,a,s="bilinear",i=0){const r=pi(e,"image","cropAndResize"),o=pi(t,"boxes","cropAndResize","float32"),l=pi(n,"boxInd","cropAndResize","int32"),p=o.shape[0];X(4===r.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${r.rank}.`),X(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${o.shape}.`),X(1===l.rank&&l.shape[0]===p,()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${o.shape}.`),X(2===a.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`),X(a[0]>=1&&a[1]>=1,()=>`cropSize must be atleast [1,1], but was ${a}`),X("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`);const d={image:r,boxes:o,boxInd:l},u={method:s,extrapolationValue:i,cropSize:a};return ti.runKernel(yt,d,u)}}),Dp=ui({flipLeftRight_:function(e){const t=pi(e,"image","flipLeftRight","float32");X(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return ti.runKernel(Vt,n,{})}}),Fp=ui({grayscaleToRGB_:function(e){const t=pi(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];X(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),X(1===a,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`);const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,al(t,s)}}),Op=ui({einsum_:function(e,...t){const n=t.map((e,t)=>pi(e,`tensors${t}`,"einsum")),a={equation:e};return ti.runKernel(_t,n,a)}}),Mp=ui({rgbToGrayscale_:function(e){const t=pi(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];X(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),X(3===a,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`);const s=t.dtype,i=sr(t,"float32"),r=lp([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Op("ij,j->i",i,r);break;case 3:o=Op("ijk,k->ij",i,r);break;case 4:o=Op("ijkl,l->ijk",i,r);break;case 5:o=Op("ijklm,m->ijkl",i,r);break;case 6:o=Op("ijklmn,n->ijklm",i,r);break;default:throw new Error("Not a valid tensor rank.")}return o=nl(o,-1),sr(o,s)}}),Lp=ui({rotateWithOffset_:function(e,t,n=0,a=.5){const s=pi(e,"image","rotateWithOffset","float32");X(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const i={image:s},r={radians:t,fillValue:n,center:a};return ti.runKernel(Va,i,r)}});function Pp(e,t,n,a,s,i){null==a&&(a=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const r=e.shape[0];return n=Math.min(n,r),X(0<=a&&a<=1,()=>`iouThreshold must be in [0, 1], but was '${a}'`),X(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),X(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),X(1===t.rank,()=>"scores must be a 1D tensor"),X(t.shape[0]===r,()=>`scores has incompatible shape with boxes. Expected ${r}, but was ${t.shape[0]}`),X(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:a,scoreThreshold:s,softNmsSigma:i}}const zp=ui({nonMaxSuppression_:function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY){const i=pi(e,"boxes","nonMaxSuppression","float32"),r=pi(t,"scores","nonMaxSuppression","float32"),o=Pp(i,r,n,a,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return ti.runKernel(En,{boxes:i,scores:r},l)}});function Vp(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,s=e.length,i=0,r=!1;for(;a<s;){i=a+(s-a>>>1);const o=n(t,e[i]);o>0?a=i+1:(s=i,r=!o)}return r?a:-a-1}(e,t,n||Bp)}(e,t,n),s=a<0?-(a+1):a;e.splice(s,0,t)}function Bp(e,t){return e>t?1:e<t?-1:0}function Up(e,t,n,a,s){return Hp(e,t,n,a,s,0)}function Wp(e,t,n,a,s,i){return Hp(e,t,n,a,s,0,!1,i,!0)}function Gp(e,t,n,a,s,i){return Hp(e,t,n,a,s,i,!0)}function Hp(e,t,n,a,s,i,r=!1,o=!1,l=!1){const p=[];for(let e=0;e<t.length;e++)t[e]>s&&p.push({score:t[e],boxIndex:e,suppressBeginIndex:0});p.sort(Kp);const d=i>0?-.5/i:0,u=[],c=[];for(;u.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:r}=t;if(n<s)break;let o=!1;for(let n=u.length-1;n>=r;--n){const r=jp(e,i,u[n]);if(r>=a){o=!0;break}if(t.score=t.score*qp(a,d,r),t.score<=s)break}t.suppressBeginIndex=u.length,o||(t.score===n?(u.push(i),c.push(t.score)):t.score>s&&Vp(p,t,Kp))}const h=u.length,m=n-h;o&&m>0&&(u.push(...new Array(m).fill(0)),c.push(...new Array(m).fill(0)));const f={selectedIndices:u};return r&&(f.selectedScores=c),l&&(f.validOutputs=h),f}function jp(e,t,n){const a=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),i=Math.min(a[0],a[2]),r=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),p=Math.min(s[0],s[2]),d=Math.min(s[1],s[3]),u=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),h=(o-i)*(l-r),m=(u-p)*(c-d);if(h<=0||m<=0)return 0;const f=Math.max(i,p),g=Math.max(r,d),v=Math.min(o,u),b=Math.min(l,c),y=Math.max(v-f,0)*Math.max(b-g,0);return y/(h+m-y)}function qp(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function Kp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Xp=ui({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,i=0){const r=pi(e,"boxes","nonMaxSuppression"),o=pi(t,"scores","nonMaxSuppression"),l=Pp(r,o,n,a,s,i),p={boxes:r,scores:o},d={maxOutputSize:n=l.maxOutputSize,iouThreshold:a=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},u=ti.runKernel(_n,p,d);return{selectedIndices:u[0],selectedScores:u[1]}}}),Yp=ui({nonMaxSuppressionPadded_:function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,i=!1){const r=pi(e,"boxes","nonMaxSuppression"),o=pi(t,"scores","nonMaxSuppression"),l=Pp(r,o,n,a,s,null),p={boxes:r,scores:o},d={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},u=ti.runKernel($n,p,d);return{selectedIndices:u[0],validOutputs:u[1]}}}),Jp=ui({resizeBilinear_:function(e,t,n=!1,a=!1){const s=pi(e,"images","resizeBilinear");X(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),X(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),X(!1===a||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=s,r=!1;3===s.rank&&(r=!0,i=$o(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:a,size:t},p=ti.runKernel(Kn,o,l);return r?$o(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Zp=ui({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){const s=pi(e,"images","resizeNearestNeighbor");X(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),X(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),X("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),X(!1===a||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=s,r=!1;3===s.rank&&(r=!0,i=$o(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:a,size:t},p=ti.runKernel(jn,o,l);return r?$o(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Qp=ui({bincount_:function(e,t,n){const a=pi(e,"x","bincount"),s=pi(t,"weights","bincount");X("int32"===a.dtype,()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`),X(n>=0,()=>`size must be non-negative, but got ${n}.`),X(s.size===a.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${s.shape}.`);const i={x:a,weights:s},r={size:n};return ti.runKernel(et,i,r)}}),ed=ui({lessEqual_:function(e,t){let n=pi(e,"a","lessEqual","string_or_numeric"),a=pi(t,"b","lessEqual","string_or_numeric");[n,a]=qs(n,a),_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(nn,s)}}),td=ui({round_:function(e){const t={x:pi(e,"x","round")};return ti.runKernel(Zn,t)}}),nd=ui({threshold_:function(e,t="binary",n=!1,a=.5){const s=pi(e,"image","threshold"),i=s.shape[0]*s.shape[1];let r,o,l,p,d=pr(lp([a]),255);if(X(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),X(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),X("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),X("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===s.shape[2]){[r,o,l]=sp(s,[1,1,1],-1);const e=pr(r,.2989),t=pr(o,.587),n=pr(l,.114);p=rr(rr(e,t),n)}else p=e;"otsu"===t&&(d=function(e,t){let n,a,s,i,r,o,l=lp([-1]),p=lp([0]),d=lp([0]);for(let u=0;u<e.size-1;u++){n=Jl(e,0,u+1),a=Jl(e,u+1),r=lr(hl(n),t),o=lr(hl(a),t);const c=hl(pr(n,Gl(0,n.size)));s=lr(c,hl(n));const h=kr(a.shape,n.size),m=rr(Gl(0,a.size),h),f=pr(a,m);i=lr(hl(f),hl(a));const g=Nr(s,i),v=Nr(s,i),b=pr(r,o);d=pr(pr(b,g),v);const y=ol(d,p);p=cp(y,d,p),l=cp(y,lp([u]),l)}return l}(Qp(sr(td(p),"int32"),mi([]),256),i));const u=n?ed(p,d):ol(p,d);return sr(pr(u,255),"int32")}}),ad=ui({transform_:function(e,t,n="nearest",a="constant",s=0,i){const r=pi(e,"image","transform","float32"),o=pi(t,"transforms","transform","float32");X(4===r.rank,()=>`Error in transform: image must be rank 4,but got rank ${r.rank}.`),X(2===o.rank&&(o.shape[0]===r.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),X(null==i||2===i.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:r,transforms:o},p={interpolation:n,fillMode:a,fillValue:s,outputShape:i};return ti.runKernel(Da,l,p)}}),sd=ui({less_:function(e,t){let n=pi(e,"a","less","string_or_numeric"),a=pi(t,"b","less","string_or_numeric");[n,a]=qs(n,a),_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(tn,s)}}),id=ui({bandPart_:function(e,t,n){const a=pi(e,"a","bandPart");X(a.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`);const s=a.shape,[i,r]=a.shape.slice(-2);let o,l;"number"==typeof t?(X(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),X(t<=i,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`),o=pi(t<0?i:t,"numLower","bandPart")):(X("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),o=cp(sd(t,0),i,_l(t,i))),"number"==typeof n?(X(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),X(n<=r,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${r}).`),l=pi(n<0?r:n,"numUpper","bandPart")):(X("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),l=cp(sd(n,0),r,_l(n,r)));const p=$o(Gl(0,i,1,"int32"),[-1,1]),d=Gl(0,r,1,"int32"),u=Nr(p,d),c=Sl(ed(u,o),ll(u,Al(l))),h=Ol([i,r],a.dtype);return $o(rp(up($o(a,[-1,i,r])).map(e=>cp(c,e,h))),s)}});function rd(e,t,n=null){if(0===e.rank)return Cr(e);if(1!==e.rank&&null===n)return rd($o(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return hl(Cr(e),n);if(t===1/0)return cl(Cr(e),n);if(t===-1/0)return $l(Cr(e),n);if("euclidean"===t||2===t)return dr(hl(Sr(Cr(e),mr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return cl(hl(Cr(e),n[0]),n[1]-1);if(t===1/0)return cl(hl(Cr(e),n[1]),n[0]);if(t===-1/0)return $l(hl(Cr(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return dr(hl(ur(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const od=ui({norm_:function(e,t="euclidean",n=null,a=!1){const s=rd(e=pi(e,"x","norm"),t,n);let i=s.shape;if(a){const t=ie(n,e.shape);i=bl(s.shape,t)}return $o(s,i)}}),ld=ui({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,X(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)X(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=sp(e,e.shape[0],0).map(e=>ip(e,[0]));X(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],a=e;for(let t=0;t<e.length;++t)n.push(ti.tidy(()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){const t=pr(hl(pr(n[a],e)),n[a]);e=Nr(e,t)}return lr(e,od(e,"euclidean"))}));return t?rp(n,0):n}});function pd(e,t=!1){return ti.tidy(()=>{X(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],a=e.shape[1];let s=sl(n),i=ir(e);const r=pp([[1]],[1,1]);let o=ir(r);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=i,l=o,p=s;[o,i,s]=ti.tidy(()=>{const t=Jl(i,[e,e],[n-e,1]),l=od(t),p=Jl(i,[e,e],[1,1]),d=cp(ol(p,0),pp([[-1]]),pp([[1]])),u=Nr(p,pr(d,l)),c=lr(t,u);o=1===c.shape[0]?ir(r):Po([r,Jl(c,[1,0],[c.shape[0]-1,c.shape[1]])],0);const h=Al(lr(Nl(d,u),l)),m=Jl(i,[e,0],[n-e,a]),f=pr(h,o),g=fp(o);if(0===e)i=Nr(m,Nl(f,Nl(g,m)));else{const t=Nr(m,Nl(f,Nl(g,m)));i=Po([Jl(i,[0,0],[e,a]),t],0)}const v=fp(f),b=Jl(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Nr(b,Nl(Nl(b,o),v));else{const t=Nr(b,Nl(Nl(b,o),v));s=Po([Jl(s,[0,0],[n,e]),t],1)}return[o,i,s]}),xi([t,l,p])}return!t&&n>a&&(s=Jl(s,[0,0],[n,a]),i=Jl(i,[0,0],[a,a])),[s,i]})}const dd=ui({qr_:function(e,t=!1){if(X(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return pd(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),a=up($o(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],i=[];return a.forEach(e=>{const[n,a]=pd(e,t);s.push(n),i.push(a)}),[$o(rp(s,0),e.shape),$o(rp(i,0),e.shape)]}}});var ud;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ud||(ud={}));const cd=ui({computeWeightedLoss_:function(e,t,n=ud.SUM_BY_NONZERO_WEIGHTS){const a=pi(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=pi(t,"weights","computeWeightedLoss"));const i=null==s?a:pr(a,s);if(n===ud.NONE)return i;if(n===ud.SUM)return hl(i);if(n===ud.MEAN){if(null==s)return El(i);{const e=a.size/s.size,t=lr(hl(i),hl(s));return e>1?lr(t,mr(e)):t}}if(n===ud.SUM_BY_NONZERO_WEIGHTS){if(null==s)return lr(hl(i),mr(a.size));{const e=pr(s,Ml(a.shape)),t=sr(hl(Dl(e,mr(0))),"float32");return lr(hl(i),t)}}throw Error(`Unknown reduction: ${n}`)}}),hd=ui({absoluteDifference_:function(e,t,n,a=ud.SUM_BY_NONZERO_WEIGHTS){const s=pi(e,"labels","absoluteDifference"),i=pi(t,"predictions","absoluteDifference");let r=null;null!=n&&(r=pi(n,"weights","absoluteDifference")),Y(s.shape,i.shape,"Error in absoluteDifference: ");const o=Cr(Nr(s,i));return cd(o,r,a)}}),md=ui({cosineDistance_:function(e,t,n,a,s=ud.SUM_BY_NONZERO_WEIGHTS){const i=pi(e,"labels","cosineDistance"),r=pi(t,"predictions","cosineDistance");let o=null;null!=a&&(o=pi(a,"weights","cosineDistance")),Y(i.shape,r.shape,"Error in cosineDistance: ");const l=mr(1),p=Nr(l,hl(pr(i,r),n,!0));return cd(p,o,s)}}),fd=ui({hingeLoss_:function(e,t,n,a=ud.SUM_BY_NONZERO_WEIGHTS){let s=pi(e,"labels","hingeLoss");const i=pi(t,"predictions","hingeLoss");let r=null;null!=n&&(r=pi(n,"weights","hingeLoss")),Y(s.shape,i.shape,"Error in hingeLoss: ");const o=mr(1);s=Nr(pr(mr(2),s),o);const l=Hl(Nr(o,pr(s,i)));return cd(l,r,a)}}),gd=ui({huberLoss_:function(e,t,n,a=1,s=ud.SUM_BY_NONZERO_WEIGHTS){const i=pi(e,"labels","huberLoss"),r=pi(t,"predictions","huberLoss");let o=null;null!=n&&(o=pi(n,"weights","huberLoss")),Y(i.shape,r.shape,"Error in huberLoss: ");const l=mr(a),p=Cr(Nr(r,i)),d=_l(p,l),u=Nr(p,d),c=rr(pr(mr(.5),ur(d)),pr(l,u));return cd(c,o,s)}}),vd=ui({logLoss_:function(e,t,n,a=1e-7,s=ud.SUM_BY_NONZERO_WEIGHTS){const i=pi(e,"labels","logLoss"),r=pi(t,"predictions","logLoss");let o=null;null!=n&&(o=pi(n,"weights","logLoss")),Y(i.shape,r.shape,"Error in logLoss: ");const l=mr(1),p=mr(a),d=Al(pr(i,dl(rr(r,p)))),u=pr(Nr(l,i),dl(rr(Nr(l,r),p))),c=Nr(d,u);return cd(c,o,s)}}),bd=ui({squaredDifference_:function(e,t){let n=pi(e,"a","squaredDifference"),a=pi(t,"b","squaredDifference");[n,a]=qs(n,a),_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(wa,s,{})}}),yd=ui({meanSquaredError_:function(e,t,n,a=ud.SUM_BY_NONZERO_WEIGHTS){const s=pi(e,"labels","meanSquaredError"),i=pi(t,"predictions","meanSquaredError");let r=null;null!=n&&(r=pi(n,"weights","meanSquaredError")),Y(s.shape,i.shape,"Error in meanSquaredError: ");const o=bd(s,i);return cd(o,r,a)}}),xd=ui({sigmoidCrossEntropy_:function(e,t,n,a=0,s=ud.SUM_BY_NONZERO_WEIGHTS){let i=pi(e,"multiClassLabels","sigmoidCrossEntropy");const r=pi(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=pi(n,"weights","sigmoidCrossEntropy")),Y(i.shape,r.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=mr(a),t=mr(1),n=mr(.5);i=rr(pr(i,Nr(t,e)),pr(n,e))}const l=function(e,t){const n=pi(e,"labels","sigmoidCrossEntropyWithLogits"),a=pi(t,"logits","sigmoidCrossEntropyWithLogits");Y(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Hl(a),i=pr(a,n),r=ul(tl(Al(Cr(a))));return rr(Nr(s,i),r)}(i,r);return cd(l,o,s)}}),wd=ui({softmaxCrossEntropy_:function(e,t,n,a=0,s=ud.SUM_BY_NONZERO_WEIGHTS){let i=pi(e,"onehotLabels","softmaxCrossEntropy");const r=pi(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=pi(n,"weights","softmaxCrossEntropy")),Y(i.shape,r.shape,"Error in softmaxCrossEntropy: "),a>0){const e=mr(a),t=mr(1),n=mr(i.shape[1]);i=rr(pr(i,Nr(t,e)),lr(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const a=hr((e,t,a)=>{const s=Il(t,[n],!0),i=Nr(sr(t,"float32"),s);a([e,i]);const r=Al(pr(i,e));return{value:hl(r,[n]),gradFunc:(e,t)=>{const[a,s]=t,i=bl(e.shape,[n]);return[pr($o(e,i),Nr(sr(a,"float32"),tl(s))),pr($o(e,i),Nr(tl(s),sr(a,"float32")))]}}});return a(e,t)}(i,r);return cd(l,o,s)}}),kd={flipLeftRight:Dp,grayscaleToRGB:Fp,resizeNearestNeighbor:Zp,resizeBilinear:Jp,rgbToGrayscale:Mp,rotateWithOffset:Lp,cropAndResize:Ap,nonMaxSuppression:zp,nonMaxSuppressionAsync:async function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY){const i=pi(e,"boxes","nonMaxSuppressionAsync"),r=pi(t,"scores","nonMaxSuppressionAsync"),o=Pp(i,r,n,a,s);n=o.maxOutputSize,a=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),r.data()]),p=l[0],d=l[1],{selectedIndices:u}=Up(p,d,n,a,s);return i!==e&&i.dispose(),r!==t&&r.dispose(),lp(u,"int32")},nonMaxSuppressionWithScore:Xp,nonMaxSuppressionWithScoreAsync:async function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,i=0){const r=pi(e,"boxes","nonMaxSuppressionAsync"),o=pi(t,"scores","nonMaxSuppressionAsync"),l=Pp(r,o,n,a,s,i);n=l.maxOutputSize,a=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const p=await Promise.all([r.data(),o.data()]),d=p[0],u=p[1],{selectedIndices:c,selectedScores:h}=Gp(d,u,n,a,s,i);return r!==e&&r.dispose(),o!==t&&o.dispose(),{selectedIndices:lp(c,"int32"),selectedScores:lp(h)}},nonMaxSuppressionPadded:Yp,nonMaxSuppressionPaddedAsync:async function(e,t,n,a=.5,s=Number.NEGATIVE_INFINITY,i=!1){const r=pi(e,"boxes","nonMaxSuppressionAsync"),o=pi(t,"scores","nonMaxSuppressionAsync"),l=Pp(r,o,n,a,s,null),p=l.maxOutputSize,d=l.iouThreshold,u=l.scoreThreshold,[c,h]=await Promise.all([r.data(),o.data()]),{selectedIndices:m,validOutputs:f}=Wp(c,h,p,d,u,i);return r!==e&&r.dispose(),o!==t&&o.dispose(),{selectedIndices:lp(m,"int32"),validOutputs:mr(f,"int32")}},threshold:nd,transform:ad},Id={bandPart:id,gramSchmidt:ld,qr:dd},Sd={absoluteDifference:hd,computeWeightedLoss:cd,cosineDistance:md,hingeLoss:fd,huberLoss:gd,logLoss:vd,meanSquaredError:yd,sigmoidCrossEntropy:xd,softmaxCrossEntropy:wd},Nd=class{static sgd(e){return new Dr(e)}static momentum(e,t,n=!1){return new Fr(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,s=!1){return new Or(e,t,n,a,s)}static adam(e=.001,t=.9,n=.999,a=null){return new Tr(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new wr(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,s=0){return new Ar(e,t,n,a,s)}static adagrad(e,t=.1){return new Ir(e,t)}},Td="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Cd(){return new Promise(e=>Td(()=>e()))}function Ed(e,t){const n=e[0].length;e.forEach((e,t)=>{X(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),X(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const a=e[0];e.forEach((e,s)=>{for(let i=0;i<n;i++)X(i===t||e[i]===a[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`)})}function $d(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var _d;function Rd(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${a.length}`);for(let s=1;s<n.length;++s){const i=n[s],r=a[a.length-n.length+s],o=a[r];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${i} but shape[${s+e}] = ${o}`)}else a[r]=i}return a}function Ad(e){const t={FIRST_DIM_SIZE:_d.FIRST_DIM_SIZE,VALUE_ROWIDS:_d.VALUE_ROWIDS,ROW_LENGTHS:_d.ROW_LENGTHS,ROW_SPLITS:_d.ROW_SPLITS,ROW_LIMITS:_d.ROW_LIMITS,ROW_STARTS:_d.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function Dd(e){return 0===e.length?0:e[0]===_d.FIRST_DIM_SIZE?e.length-1:e.length}function Fd(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${a})`);for(let s=0;s<Math.min(n,a-1);++s){const n=e[s],a=t[s+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${a}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(_d||(_d={}));const Od=30;function Md(e){return e<=Od?e:fe(e,Math.floor(Math.sqrt(e)))}function Ld(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Pd(e,t,n,a=!0){let s=[];if(a)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)s=s.concat([e[a+1]/t[a],t[a]]);s=s.concat(e.slice(n+1))}return s}function zd(e,t,n=!0){const a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{const n=[],s=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?s.push(a):n.push(a);a.push(...n),a.push(0),a.push(...s)}return a}function Vd(e,t,n,a=!0){const s=[];a?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Bd(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function Ud(e,t,n){const a=e.slice(0,1);for(let s=0;s<n;++s)a.push(e[s+1]-t[s][0]-t[s][1]);return a}function Wd(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===Z(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,i=s[s.length-1];let r=1;for(let e=0;e<s.length-1;++e)r*=s[e];const o=e.shape,l=s.slice();l.pop();let p=1;for(let e=i;e<n;++e)p*=o[e],l.push(o[e]);const d=[...ge(e.shape).map(e=>e/p),1].slice(0,i);return[l,r,p,d]}function Gd(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(e.length<a+(n.rank-s))throw new Error(i+` Output shape length < ${a+(n.rank-s)}`);if(n.rank!==s+e.length-a)throw new Error(i+" update.rank != "+(s+e.length-a));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+a])throw new Error(i+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Hd(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Gd(n,t,e)}function jd(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length;let r=1;for(let e=s;e<i;++e)r*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:Z(t.shape)/o,sliceSize:r,strides:[...ge(n.slice(0,s)),1],outputSize:Z(n)}}const qd=1.7580993408473768,Kd=1.0507009873554805,Xd=.3275911,Yd=.254829592,Jd=-.284496736,Zd=1.421413741,Qd=-1.453152027,eu=1.061405429;function tu(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function nu(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function au(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function su(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function iu(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ru(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function ou(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const i=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(i),a[s]=Math.sin(i)}return{real:n,imag:a}}function lu(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const pu="->",du=/->/g,uu=",",cu="...";function hu(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(du,"").length)/pu.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${pu}").`);const[a,s]=e.split(pu);X(-1===a.indexOf(cu),()=>`The ellipsis notation ("${cu}") is not supported yet.`);const i=a.split(uu),r=i.length;if(t!==r)throw new Error(`Expected ${r} input tensors, received ${t}`);if(r>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!i.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){const t=a[e];-1===o.indexOf(t)&&t!==uu&&o.push(t)}const l=new Array(i.length);for(let e=0;e<r;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<i[e].length;++t)l[e].push(o.indexOf(i[e][t]))}const p=o.length,d=[];for(let e=s.length;e<p;++e)d.push(e);return{allDims:o,summedDims:d,idDims:l}}function mu(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:a}}function fu(e,t,n){const a=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=s[n]:X(a[t[e][n]]===s[n],()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`)}}function gu(e,t){const n=e,a=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)a.push([]);const i=[];for(let e=0;e<n.length;++e){const s=bu(t,n[e]);for(const t of s)-1===i.indexOf(t)&&(a[e].push(t),i.push(t))}return{path:n,steps:a}}function vu(e){return e.every((e,t)=>e===t)}function bu(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function yu(e,t,n=0){let a=[];if("number"==typeof t)X(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),a=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);X(s<=1,()=>"There should be only one negative value in split array.");const i=t.indexOf(-1);if(-1!==i){const a=t.reduce((e,t)=>t>0?e+t:e);t[i]=e.shape[n]-a}X(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),a=t}return a}function xu(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function wu(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function ku(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Iu(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Su(e,t){return`size ${e} must be non-negative, not ${t}`}function Nu(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Tu(e,t){return`Input to reshape is a SparseTensor with ${Z(e)}\n  dense values, but the requested shape requires a multiple of ${Z(t)}. inputShape=${e} outputShape= ${t}`}function Cu(e,t){return`Input to reshape is a tensor with ${Z(e)} dense values, but the requested shape has ${Z(t)}. inputShape=${e} outputShape=${t}`}function Eu(){return"segment ids must be >= 0"}function $u(){return"segment ids are not increasing"}function _u(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Ru(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Au(e,t){let n,a=!1;for(e<=Od?(n=e,a=!0):n=fe(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=fe(e,n+1);return n}function Du(e,t,n){const a=[],s=e.length;for(let i=0;i<s;i++)i!==t?a.push(e[i]):a.push(n);return a}function Fu(e,t,n,a){const s=t.shape.length,i=e.shape.length;if(0!==a&&(a<-s||a>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${a}`);if(a<0&&(a+=s),a>i)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${i}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const r=e.shape[n],o=[];let l=1,p=1,d=1;for(let t=0;t<a;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),p*=e.shape[t];for(let e=a;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:l,sliceSize:d,outerSize:p,dimSize:r,outputShape:o}}function Ou(e){try{return e.map(e=>ys(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Mu(e){return e.map(e=>bs(e))}function Lu(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=ar(e,"int32"),s=ar([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=a.indexToLoc(n[t]),r=t*e.length;s.values.set(i,r)}return s.toTensor()}!function(){for(const e of Mr)yr(e)}();const Pu={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(e,Ip(sr(n,"float32"),-1))}}},zu={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ur(sr(n,"float32")),a=dr(Nr(mr(1),t));return Al(lr(e,a))}}}},Vu={kernelName:Me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=dr(Nr(ur(sr(n,"float32")),1));return lr(e,t)}}}},Bu={kernelName:Le,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=_r(n.shape,a.shape);return{a:()=>{let t=e;const a=$r(n.shape,s);return a.length>0&&(t=hl(t,a)),$o(t,n.shape)},b:()=>{let t=e;const n=$r(a.shape,s);return n.length>0&&(t=hl(t,n)),$o(t,a.shape)}}}},Uu={kernelName:Pe,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,a)=>{n[a]=()=>e.clone()}),n}},Wu={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cr(n)}}},Gu={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cr(n)}}},Hu={kernelName:We,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lr(e,dr(Nr(mr(1),ur(sr(n,"float32")))))}}},ju={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=dr(rr(mr(1),ur(sr(n,"float32"))));return lr(e,t)}}}},qu={kernelName:qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=_r(n.shape,a.shape);return{a:()=>{const t=rr(ur(n),ur(a));let i=pr(e,lr(a,t));const r=$r(n.shape,s);return r.length>0&&(i=hl(i,r)),$o(i,n.shape)},b:()=>{const t=rr(ur(n),ur(a));let i=Al(pr(e,lr(n,t)));const r=$r(a.shape,s);return r.length>0&&(i=hl(i,r)),$o(i,a.shape)}}}},Ku={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lr(e,rr(ur(sr(n,"float32")),1))}}},Xu={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lr(e,Nr(mr(1),ur(sr(n,"float32"))))}}},Yu=ui({avgPool3dGrad_:function(e,t,n,a,s,i){const r=pi(e,"dy","avgPool3dGrad"),o=pi(t,"input","avgPool3dGrad");let l=r,p=o,d=!1;4===o.rank&&(d=!0,l=$o(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]),p=$o(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),X(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),X(5===p.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),Eo("avgPool3dGrad",s,i);const u={dy:l,input:p},c={filterSize:n,strides:a,pad:s,dimRoundingMode:i},h=ti.runKernel(Je,u,c);return d?$o(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ju={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:s,strides:i,pad:r,dimRoundingMode:o}=n;return{x:()=>Yu(e,a,s,i,r,o)}}},Zu=ui({avgPoolGrad_:function(e,t,n,a,s){const i=pi(e,"dy","avgPoolGrad"),r=pi(t,"input","avgPoolGrad");X(r.rank===i.rank,()=>`Rank of input (${r.rank}) does not match rank of dy (${i.rank})`);let o=r,l=i,p=!1;3===r.rank&&(p=!0,o=$o(r,[1,r.shape[0],r.shape[1],r.shape[2]]),l=$o(i,[1,i.shape[0],i.shape[1],i.shape[2]])),X(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),X(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const d={dy:l,input:o},u={filterSize:n,strides:a,pad:s},c=ti.runKernel(Xe,d,u);return p?$o(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Qu={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:s,strides:i,pad:r}=n;return{x:()=>Zu(e,a,s,i,r)}}},ec={kernelName:Ze,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,s]=t,{transposeA:i,transposeB:r}=n;return i||r?!i&&r?{a:()=>Nl(e,s,!1,!1),b:()=>Nl(e,a,!0,!1)}:i&&!r?{a:()=>Nl(s,e,!1,!0),b:()=>Nl(a,e,!1,!1)}:{a:()=>Nl(s,e,!0,!0),b:()=>Nl(e,a,!0,!0)}:{a:()=>Nl(e,s,!1,!0),b:()=>Nl(a,e,!0,!1)}}},tc=ui({spaceToBatchND_:function(e,t,n){const a=pi(e,"x","spaceToBatchND");X(a.rank>=1+t.length,()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`),X(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),X(a.shape.reduce((e,a,s)=>s>0&&s<=t.length?e&&(a+n[s-1][0]+n[s-1][1])%t[s-1]===0:e,!0),()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const s={x:a},i={blockShape:t,paddings:n};return ti.runKernel(ha,s,i)}}),nc={kernelName:Qe,gradFunc:(e,t,n)=>{const{blockShape:a,crops:s}=n;return{x:()=>tc(e,a,s)}}},ac={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,s=a.inputShape,i=a.shape,r=Array.from(i);for(let e=s.length-1;e>=0;e--)if(s[e]===i[e])r[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let e=0;e<r.length;e++)r[e]>1&&o.push(e);return{x:()=>hl(e,o,!0)}}},sc={kernelName:at,gradFunc:e=>({x:()=>e.clone()})},ic={kernelName:st,gradFunc:e=>({x:()=>cr(e)})},rc={kernelName:it,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>cp(Sl(ll(a,s),ed(a,i)),e,cr(e))}}},oc={kernelName:ot,inputsToSave:["x"],gradFunc:Pu.gradFunc},lc={kernelName:lt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map(e=>e.shape),{axis:s}=n,i=ie(s,t[0].shape)[0],r=a.map(e=>e[i]);return sp(e,r,i).map(e=>()=>e)}},pc={kernelName:pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,s]=t,{dilations:i,strides:r,pad:o,dataFormat:l}=n;return X(So(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>Ho(a.shape,e,s,r,o,l),filter:()=>wp(a,e,s.shape,r,o,l)}}},dc={kernelName:ut,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,s]=t,{strides:i,pad:r,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Wo(e,s,i,r,o,1,l),filter:()=>wp(e,a,s.shape,i,r,o,l)}}},uc=ui({conv3DBackpropFilter_:function(e,t,n,a,s){let i=e;4===e.rank&&(i=$o(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let r=t;4===r.rank&&(r=$o(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),X(5===i.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),X(5===r.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${r.shape}.`),X(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),X(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),X(r.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${r.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:i,dy:r},l={strides:a,pad:s,filterShape:n};return ti.runKernel(ht,o,l)}}),cc={kernelName:ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:s,pad:i}=n;X(So(a),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const[r,o]=t;return{x:()=>Ko(r.shape,e,o,s,i),filter:()=>uc(r,e,o.shape,s,i)}}},hc=ui({sin_:function(e){const t={x:pi(e,"x","sin","float32")};return ti.runKernel(ra,t)}}),mc={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(Al(hc(sr(n,"float32"))),e)}}},fc=ui({sinh_:function(e){const t={x:pi(e,"x","sinh")};return ti.runKernel(oa,t)}}),gc={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(fc(sr(n,"float32")),e)}}},vc=ui({cumsum_:function(e,t=0,n=!1,a=!1){const s={x:pi(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:a};return ti.runKernel(bt,s,i)}}),bc={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:s,exclusive:i,reverse:r}=n;return{x:()=>{const t=xl([s],a.rank);let n=vc(e,s,i,!r);return null!=t&&(n=fp(n,t)),n}}}},yc={kernelName:kt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:s,pad:i,dimRoundingMode:r}=n,o=null==a?[1,1]:a;X(So(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,p]=t;return X(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),X(4===p.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${p.rank}.`),X(l.shape[3]===p.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),X(No(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),Eo("depthwiseConv2d",i,r),{x:()=>_p(l.shape,e,p,s,i,o,r),filter:()=>$p(l,e,p.shape,s,i,o,r)}}},xc={kernelName:Tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,s]=t,i={x:a,filter:s,dy:e},r={x:a,filter:s,dy:e};return{x:()=>ti.runKernel(Ct,i,n),filter:()=>ti.runKernel(Et,r,n)}}},wc={kernelName:Rt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>ti.runKernel(At,a)}}},kc={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=pr(tl(Al(ur(n))),2/Math.sqrt(Math.PI));return{x:()=>pr(e,a)}}},Ic={kernelName:Ot,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(e,n)}}},Sc={kernelName:Mt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>$o(e,n.shape)}}},Nc={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(e,tl(n))}}},Tc={kernelName:Bt,gradFunc:e=>({x:()=>cr(e)})},Cc={kernelName:Ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=_r(n.shape,a.shape);return{a:()=>{const t=lr(e,sr(a,"float32")),i=$r(n.shape,s);return i.length>0?$o(hl(t,i),n.shape):t},b:()=>{let t=pr(e,sr(n,"float32"));const i=$r(a.shape,s);i.length>0&&(t=$o(hl(t,i),a.shape));const r=ur(a);return Al(lr(t,sr(r,"float32")))}}}},Ec=ui({rsqrt_:function(e){const t={x:pi(e,"x","rsqrt","float32")};return ti.runKernel(Qn,t)}}),$c={kernelName:Wt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[s,i,r,o]=t,l=null==o?mr(1):o,p=$r(i.shape,s.shape),d=[];if(1===i.rank){for(let e=0;e<s.shape.length-1;++e)d.push(s.shape[e]);d.push(1)}const u=Nr(s,i),c=pr(e,l),h=Ec(rr(r,mr(a))),m=pr(pr(pr(h,h),h),mr(-.5));return{x:()=>1===i.rank?$o(pr(pr(e,al($o(h,[1,1,1,i.shape[0]]),d)),l),s.shape):$o(pr(pr(e,h),l),s.shape),mean:()=>{let e=pr(pr(h,mr(-1)),c);return 1===i.rank&&(e=hl(e,p)),$o(e,i.shape)},variance:()=>{let e=pr(pr(m,u),c);return 1===i.rank&&(e=hl(e,p)),$o(e,i.shape)},scale:()=>{const t=pr(u,h);let n=pr(e,t);return 1===i.rank&&(n=hl(n,p)),$o(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=hl(t,p)),$o(t,i.shape)}}}},_c=ui({unsortedSegmentSum_:function(e,t,n){const a=pi(e,"x","unsortedSegmentSum"),s=pi(t,"segmentIds","unsortedSegmentSum","int32");X(ee(n),()=>"numSegments must be of dtype int");const i={x:a,segmentIds:s},r={numSegments:n};return ti.runKernel(La,i,r)}}),Rc={kernelName:Gt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,s]=t,{axis:i,batchDims:r}=n,o=ie(i,a.shape)[0],l=(e,t,n)=>()=>{const a=e.shape,s=t.size,r=a.slice(0,o),l=r.length,p=a.slice(i,a.length).slice(1),d=p.length,u=Ac(0,l),c=Ac(l+1,l+1+d),h=Dc([r,[s],p]),m=$o(n,h),f=$o(t,[s]),g=Dc([[l],u,c]),v=fp(m,g);let b=_c(v,f,e.shape[o]);const y=wl(g);return b=fp(b,y),b};if(1===r){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=rp(n.map((t,n)=>l(t,s.slice(n,1),e.slice(n,1))()));return t.reshape(a.shape)},indices:()=>s}}return{x:l(a,s,e),indices:()=>s}}};function Ac(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function Dc(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const Fc={kernelName:qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>cr(n),b:()=>cr(a)}}},Oc={kernelName:Kt,gradFunc:e=>({x:()=>sr(e,"float32")})},Mc={kernelName:Jt,gradFunc:e=>({x:()=>cr(e)})},Lc={kernelName:Zt,gradFunc:e=>({x:()=>cr(e)})},Pc={kernelName:Qt,gradFunc:e=>({x:()=>cr(e)})},zc={kernelName:en,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:s}=n,i=ol(a,0);return{x:()=>cp(i,e,pr(e,s))}}},Vc={kernelName:rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lr(e,rr(n,1))}}},Bc={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lr(e,sr(n,"float32"))}}},Uc={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:s}=n;return{logits:()=>{const t=tl(a);return Nr(e,pr(hl(e,s,!0),t))}}}},Wc=ui({localResponseNormalizationBackprop_:function(e,t,n,a=5,s=1,i=1,r=.5){const o={x:e,y:t,dy:n},l={depthRadius:a,bias:s,alpha:i,beta:r};return ti.runKernel(un,o,l)}}),Gc={kernelName:dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,s]=t,{depthRadius:i,bias:r,alpha:o,beta:l}=n;return{x:()=>Wc(a,s,e,i,r,o,l)}}};function Hc(e,t,n,a){return t.rank<n.rank&&(t=$o(t,bl(t.shape,a))),e.rank<n.rank&&(e=$o(e,bl(e.shape,a))),{x:()=>pr(e,sr(Qo(n,t),e.dtype))}}const jc={kernelName:cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:s}=a,i=t[0],r=Hc(e,t[1],i,ie(s,i.shape));return{x:()=>r.x()}}},qc={kernelName:hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>pr(e,sr(ll(n,a),"float32")),b:()=>pr(e,sr(sd(n,a),"float32"))}}},Kc=ui({maxPool3dGrad_:function(e,t,n,a,s,i,r){const o=pi(e,"dy","maxPool3dGrad"),l=pi(t,"input","maxPool3dGrad"),p=pi(n,"output","maxPool3dGrad");let d=o,u=l,c=p,h=!1;4===l.rank&&(h=!0,d=$o(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=$o(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),c=$o(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),X(5===d.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),X(5===u.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),X(5===c.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Eo("maxPool3dGrad",i,r);const m={dy:d,input:u,output:c},f={filterSize:a,strides:s,pad:i,dimRoundingMode:r},g=ti.runKernel(vn,m,f);return h?$o(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Xc={kernelName:gn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,s]=t,{filterSize:i,strides:r,pad:o,dimRoundingMode:l}=n;return{x:()=>Kc(e,a,s,i,r,o,l)}}},Yc=ui({maxPoolGrad_:function(e,t,n,a,s,i,r){const o=pi(e,"dy","maxPoolGrad"),l=pi(t,"input","maxPoolGrad"),p=pi(n,"output","maxPoolGrad");X(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),X(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),X(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Eo("maxPoolGrad",i,r);const d={dy:o,input:l,output:p},u={filterSize:a,strides:s,pad:i,dimRoundingMode:r};return ti.runKernel(fn,d,u)}}),Jc={kernelName:mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,s]=t,{filterSize:i,strides:r,pad:o}=n;return{x:()=>Yc(e,a,s,i,r,o)}}},Zc={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:s}=n,i=ie(s,a.shape),r=Z(vl(a.shape,i)[1]);return{x:()=>{const t=a.shape.slice();i.forEach(e=>{t[e]=1});const n=$o(e,t);return lr(pr(n,Ml(a.shape,"float32")),r)}}}},Qc={kernelName:xn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:s}=a,[i,r]=t,o=Hc(e,r,i,ie(s,i.shape));return{x:()=>o.x()}}},eh={kernelName:wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>pr(e,sr(ed(n,a),"float32")),b:()=>pr(e,sr(ol(n,a),"float32"))}}},th={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:s}=n,i=s.map(e=>e[0]);return{x:()=>Jl(e,i,a.shape)}}},nh={kernelName:In,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=_r(n.shape,a.shape);return{a:()=>{const t=$r(n.shape,s);return t.length>0?$o(hl(e,t),n.shape):e},b:()=>{const t=pr(e,Al(il(lr(n,a)))),i=$r(a.shape,s);return i.length>0?$o(hl(t,i),a.shape):t}}}},ah={kernelName:Nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=_r(n.shape,a.shape);return{a:()=>{const t=pr(e,sr(a,"float32")),i=$r(n.shape,s);return i.length>0?$o(hl(t,i),n.shape):t},b:()=>{const t=pr(e,sr(n,"float32")),i=$r(a.shape,s);return i.length>0?$o(hl(t,i),a.shape):t}}}},sh={kernelName:Tn,gradFunc:e=>({x:()=>Al(e)})},ih={kernelName:An,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Ol(n.shape,"float32")}}},rh={kernelName:Rn,gradFunc:e=>({x:()=>cr(e)})},oh={kernelName:Dn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return up(e,a).map(e=>()=>e)}},lh={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:s}=n,i=s.map(e=>e[0]);return{x:()=>Jl(e,i,a.shape)}}},ph={kernelName:On,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,s]=t,i=n,r=a,o=_r(i.shape,r.shape);return{a:()=>{const t=sr(r,"float32");let n=pr(e,pr(t,Sr(i,Nr(t,mr(1)))));const a=$r(i.shape,o);return a.length>0&&(n=hl(n,a)),$o(n,i.shape)},b:()=>{const t=ol(i,0),n=cp(t,dl(i),cr(i));let a=pr(e,pr(s,n));const l=$r(r.shape,o);return l.length>0&&(a=hl(a,l)),$o(a,r.shape)}}}},dh={kernelName:Mn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,s=ol(n,0);return{x:()=>cp(s,e,pr(e,a)),alpha:()=>{let t=cp(s,cr(e),pr(e,n));const i=$r(a.shape,e.shape);return i.length>0&&(t=hl(t,i)),$o(t,a.shape)}}}},uh=ui({cumprod_:function(e,t=0,n=!1,a=!1){const s={x:pi(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:a};return ti.runKernel(vt,s,i)}});const ch={kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:s}=n;let i=[];return i=null==s?a.shape.map((e,t)=>t):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const a=e.shape.length,s=a-n.length,i=xl(n,a);let r=e;null!=i&&(r=fp(e,i));const o=r.shape.slice(),l=o.splice(a-n.length,n.length).reduce((e,t)=>e*t,1);o.push(l);let p=function(e,t,n){const a=e.shape.slice();a[n]=1;const s=$o(t,a),i=uh(e,n,!0,!1),r=uh(e,n,!0,!0),o=pr(i,r);return pr(s,o)}(r.reshape(o),t,s);if(p=p.reshape(r.shape),null!=i){const e=wl(i);p=fp(p,e)}return p}(a,e,i)}}},hh={kernelName:$t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=_r(n.shape,a.shape);return{a:()=>{const t=lr(e,sr(a,"float32")),i=$r(n.shape,s);return i.length>0?$o(hl(t,i),n.shape):t},b:()=>{let t=pr(e,sr(n,"float32"));const i=$r(a.shape,s);i.length>0&&(t=$o(hl(t,i),a.shape));const r=ur(a);return Al(lr(t,sr(r,"float32")))}}}},mh={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lr(e,Al(ur(n)))}}},fh={kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=pr(ed(n,6),Ip(n));return{x:()=>pr(e,sr(a,"float32"))}}},gh={kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(e,sr(Ip(n),"float32"))}}},vh={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,n.shape)}}},bh={kernelName:Kn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,s={dy:e,images:a};return{images:()=>ti.runKernel(Xn,s,n)}}},yh={kernelName:jn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,s={dy:e,images:a};return{images:()=>ti.runKernel(qn,s,n)}}},xh={kernelName:Jn,gradFunc:(e,t,n)=>{const{dims:a}=n,s=ie(a,e.shape);return{x:()=>jl(e,s)}}},wh={kernelName:Zn,gradFunc:e=>({x:()=>cr(e)})},kh={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Al(lr(e,pr(Sr(n,1.5),2)))}}},Ih=ui({logicalNot_:function(e){const t={x:pi(e,"x","logicalNot","bool")};return ti.runKernel(ln,t)}}),Sh={kernelName:aa,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>sr(cr(n),"float32"),t:()=>pr(e,sr(n,e.dtype)),e:()=>pr(e,sr(Ih(n),e.dtype))}}},Nh={kernelName:sa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ol(n,mr(0)),a=mr(qd),s=mr(Kd),i=pr(e,s),r=pr(pr(e,a),tl(sr(n,"float32")));return cp(t,i,r)}}}},Th={kernelName:pa,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(e,pr(n,Nr(mr(1),n)))}}},Ch={kernelName:la,gradFunc:e=>({x:()=>cr(e)})},Eh=ui({cos_:function(e){const t={x:pi(e,"x","cos","float32")};return ti.runKernel(ft,t)}}),$h={kernelName:ra,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(Eh(sr(n,"float32")),e)}}},_h=ui({cosh_:function(e){const t={x:pi(e,"x","cosh","float32")};return ti.runKernel(gt,t)}}),Rh={kernelName:oa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(_h(sr(n,"float32")),e)}}},Ah={kernelName:ia,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:s,size:i}=n,r=a.shape,[o,l]=oo(a,s,i),p=[];for(let t=0;t<e.rank;t++)p.push([o[t],r[t]-o[t]-l[t]]);return{x:()=>Pl(e,p)}}},Dh={kernelName:fa,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:s}=n,i=pr(e,a);return{logits:()=>Nr(i,pr(hl(i,[s],!0),a))}}},Fh={kernelName:da,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(e,Xl(n))}}},Oh=ui({batchToSpaceND_:function(e,t,n){const a=pi(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);X(a.rank>=1+t.length,()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`),X(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),X(a.shape[0]%s===0,()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);const i={x:a},r={blockShape:t,crops:n};return ti.runKernel(Qe,i,r)}}),Mh={kernelName:ha,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:s}=n;return{x:()=>Oh(e,a,s)}}},Lh={kernelName:ma,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>Po(e,a)}}},Ph=[Pu,zu,Vu,Bu,Uu,Wu,Gu,Hu,ju,qu,Ku,Xu,Ju,Qu,ec,nc,ac,sc,ic,rc,oc,lc,dc,pc,cc,mc,gc,bc,yc,xc,hh,wc,kc,Ic,Sc,Nc,Cc,Tc,$c,Rc,Fc,Oc,Mc,Lc,Pc,zc,Vc,Bc,Uc,Gc,jc,jc,qc,Xc,Jc,Zc,Qc,eh,th,nh,ah,sh,ih,rh,oh,lh,lh,ph,dh,ch,mh,fh,gh,vh,bh,yh,xh,wh,kh,Sh,Nh,Th,Ch,$h,Rh,Ah,Dh,Fh,Mh,Mh,Lh,Lh,{kernelName:ua,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lr(e,pr(dr(sr(n,"float32")),2))}}},{kernelName:wa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=mr(2);return{a:()=>pr(e,pr(s,Nr(n,a))),b:()=>pr(e,pr(s,Nr(a,n)))}}},{kernelName:ka,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(e,pr(sr(n,"float32"),2))}}},{kernelName:za,gradFunc:e=>({x:()=>cr(e)})},{kernelName:Ea,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,s=_r(n.shape,a.shape);return{a:()=>{let t=e;const a=$r(n.shape,s);return a.length>0&&(t=hl(t,a)),$o(t,n.shape)},b:()=>{let t=e;const n=$r(a.shape,s);return n.length>0&&(t=hl(t,n)),$o(Al(t),a.shape)}}}},{kernelName:ca,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,s=a.shape.slice(),{axis:i}=n;ie(i,a.shape).forEach(e=>{s[e]=1});const r=$o(e,s),o=pr(r,Ml(a.shape,"float32"));return{x:()=>o}}},{kernelName:$a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lr(e,ur(Eh(n)))}}},{kernelName:_a,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pr(Nr(mr(1),ur(n)),e)}}},{kernelName:Ra,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:s}=n;return{x:()=>{let t=cr(a);if(1===a.rank)for(let n=0;n<s[0];++n)t=rr(t,Jl(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)t=rr(t,Jl(e,[n*a.shape[0],i*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let r=0;r<s[2];++r)t=rr(t,Jl(e,[n*a.shape[0],i*a.shape[1],r*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let r=0;r<s[2];++r)for(let o=0;o<s[3];++o)t=rr(t,Jl(e,[n*a.shape[0],i*a.shape[1],r*a.shape[2],o*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Fa,gradFunc:(e,t,n)=>{const a=n,{perm:s}=a,i=wl(s);return{x:()=>fp(e,i)}}},{kernelName:Ma,gradFunc:(e,t,n)=>{const a=n,{axis:s}=a;return{value:()=>rp(e,s)}}},{kernelName:La,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Rr(t,cr(t)),a=rl(e,n);let s=ll(t,mr(0,"int32"));const i=a.rank-s.rank;for(let e=0;e<i;++e)s=nl(s,e+1);s=Sl(s,Ml(a.shape,"bool"));const r=cr(a);return cp(s,a,r)}(e,n)}}},{kernelName:Pa,gradFunc:e=>({x:()=>cr(e)})}];for(const e of Ph)Za(e);Os().prototype.abs=function(){return this.throwIfDisposed(),Cr(this)};const zh=ui({acos_:function(e){const t={x:pi(e,"x","acos")};return ti.runKernel(Oe,t)}});Os().prototype.acos=function(){return this.throwIfDisposed(),zh(this)};const Vh=ui({acosh_:function(e){const t={x:pi(e,"x","acosh")};return ti.runKernel(Me,t)}});Os().prototype.acosh=function(){return this.throwIfDisposed(),Vh(this)},Os().prototype.add=function(e){return this.throwIfDisposed(),rr(this,e)},Os().prototype.all=function(e,t){return this.throwIfDisposed(),uo(this,e,t)},Os().prototype.any=function(e,t){return this.throwIfDisposed(),co(this,e,t)},Os().prototype.argMax=function(e){return this.throwIfDisposed(),ho(this,e)};const Bh=ui({argMin_:function(e,t=0){const n={x:pi(e,"x","argMin")},a={axis:t};return ti.runKernel(Ue,n,a)}});Os().prototype.argMin=function(e){return this.throwIfDisposed(),Bh(this,e)},Os().prototype.asScalar=function(){return this.throwIfDisposed(),X(1===this.size,()=>"The array must have only 1 element."),$o(this,[])},Os().prototype.asType=function(e){return this.throwIfDisposed(),sr(this,e)},Os().prototype.as1D=function(){return this.throwIfDisposed(),$o(this,[this.size])},Os().prototype.as2D=function(e,t){return this.throwIfDisposed(),$o(this,[e,t])},Os().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),$o(this,[e,t,n])},Os().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),$o(this,[e,t,n,a])},Os().prototype.as5D=function(e,t,n,a,s){return this.throwIfDisposed(),$o(this,[e,t,n,a,s])};const Uh=ui({asin_:function(e){const t={x:pi(e,"x","asin")};return ti.runKernel(We,t)}});Os().prototype.asin=function(){return this.throwIfDisposed(),Uh(this)};const Wh=ui({asinh_:function(e){const t={x:pi(e,"x","asinh")};return ti.runKernel(Ge,t)}});Os().prototype.asinh=function(){return this.throwIfDisposed(),Wh(this)};const Gh=ui({atan_:function(e){const t={x:pi(e,"x","atan")};return ti.runKernel(He,t)}});Os().prototype.atan=function(){return this.throwIfDisposed(),Gh(this)};const Hh=ui({atan2_:function(e,t){let n=pi(e,"a","atan2"),a=pi(t,"b","atan2");[n,a]=qs(n,a);const s={a:n,b:a};return ti.runKernel(qe,s)}});Os().prototype.atan2=function(e){return this.throwIfDisposed(),Hh(this,e)};const jh=ui({atanh_:function(e){const t={x:pi(e,"x","atanh")};return ti.runKernel(je,t)}});Os().prototype.atanh=function(){return this.throwIfDisposed(),jh(this)},Os().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),_o(this,e,t,n,a)},Os().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Oh(this,e,t)},Os().prototype.batchNorm=function(e,t,n,a,s){return this.throwIfDisposed(),Ao(this,e,t,n,a,s)},Os().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Mo(this,e)},Os().prototype.cast=function(e){return this.throwIfDisposed(),sr(this,e)};const qh=ui({ceil_:function(e){const t={x:pi(e,"x","ceil","float32")};return ti.runKernel(st,t)}});Os().prototype.ceil=function(){return this.throwIfDisposed(),qh(this)},Os().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Lo(this,e,t)},Os().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Fs&&(e=[e]),Po([this,...e],t)},Os().prototype.conv1d=function(e,t,n,a,s,i){return this.throwIfDisposed(),Go(this,e,t,n,a,s,i)},Os().prototype.conv2dTranspose=function(e,t,n,a,s){return this.throwIfDisposed(),jo(this,e,t,n,a,s)},Os().prototype.conv2d=function(e,t,n,a,s,i){return this.throwIfDisposed(),Wo(this,e,t,n,a,s,i)},Os().prototype.cos=function(){return this.throwIfDisposed(),Eh(this)},Os().prototype.cosh=function(){return this.throwIfDisposed(),_h(this)},Os().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),uh(this,e,t,n)},Os().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),vc(this,e,t,n)};const Kh=ui({depthToSpace_:function(e,t,n="NHWC"){const a=pi(e,"x","depthToSpace","float32"),s="NHWC"===n?a.shape[1]:a.shape[2],i="NHWC"===n?a.shape[2]:a.shape[3],r="NHWC"===n?a.shape[3]:a.shape[1];X(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),X(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${a.shape}`),X(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${a.shape}`),X(r%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${r} for depthToSpace with input shape ${a.shape}`);const o={x:a},l={blockSize:t,dataFormat:n};return ti.runKernel(wt,o,l)}});Os().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Kh(this,e,t)},Os().prototype.depthwiseConv2d=function(e,t,n,a,s,i){return this.throwIfDisposed(),Jo(this,e,t,n,a,s,i)};const Xh=ui({dilation2d_:function(e,t,n,a,s=[1,1],i="NHWC"){const r=pi(e,"x","dilation2d"),o=pi(t,"filter","dilation2d");X(3===r.rank||4===r.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${r.rank}.`),X(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),X("NHWC"===i,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=r,p=!1;3===r.rank&&(l=$o(r,[1,r.shape[0],r.shape[1],r.shape[2]]),p=!0),X(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const d={x:l,filter:o},u={strides:n,pad:a,dilations:s},c=ti.runKernel(Tt,d,u);return p?$o(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Os().prototype.dilation2d=function(e,t,n,a,s){return this.throwIfDisposed(),Xh(this,e,t,n,a,s)};const Yh=ui({divNoNan_:function(e,t){let n=pi(e,"a","div"),a=pi(t,"b","div");[n,a]=qs(n,a);const s=lr(n,a),i=cr(s),r=Qo(a,i);return cp(r,i,s)}});Os().prototype.divNoNan=function(e){return this.throwIfDisposed(),Yh(this,e)},Os().prototype.div=function(e){return this.throwIfDisposed(),lr(this,e)};const Jh=ui({dot_:function(e,t){const n=pi(e,"t1","dot"),a=pi(t,"t2","dot");X(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`);const s=1===n.rank?n.size:n.shape[1],i=1===a.rank?a.size:a.shape[0];if(X(s===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`),1===n.rank&&1===a.rank){const e=$o(n,[1,-1]),t=$o(a,[-1,1]),s=Nl(e,t);return $o(s,[])}if(1===n.rank&&2===a.rank){const e=$o(n,[1,-1]),t=$o(a,[a.shape[0],a.shape[1]]),s=Nl(e,t);return $o(s,[s.size])}if(2===n.rank&&1===a.rank){const e=$o(a,[-1,1]),t=Nl(n,e);return $o(t,[t.size])}{const e=$o(a,[a.shape[0],a.shape[1]]);return Nl(n,e)}}});Os().prototype.dot=function(e){return this.throwIfDisposed(),Jh(this,e)},Os().prototype.elu=function(){return this.throwIfDisposed(),Zo(this)},Os().prototype.equal=function(e){return this.throwIfDisposed(),Qo(this,e)},Os().prototype.erf=function(){return this.throwIfDisposed(),el(this)};const Zh=ui({euclideanNorm_:function(e,t=null,n=!1){return od(e,"euclidean",t,n)}});Os().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Zh(this,e,t)},Os().prototype.exp=function(){return this.throwIfDisposed(),tl(this)},Os().prototype.expandDims=function(e){return this.throwIfDisposed(),nl(this,e)};const Qh=ui({expm1_:function(e){const t={x:pi(e,"x","expm1")};return ti.runKernel(Lt,t)}});Os().prototype.expm1=function(){return this.throwIfDisposed(),Qh(this)},Os().prototype.fft=function(){return this.throwIfDisposed(),vp(this)},Os().prototype.flatten=function(){return this.throwIfDisposed(),$o(this,[this.size])},Os().prototype.floor=function(){return this.throwIfDisposed(),il(this)},Os().prototype.floorDiv=function(e){return this.throwIfDisposed(),or(this,e)},Os().prototype.gather=function(e,t,n){return this.throwIfDisposed(),rl(this,e,t,n)},Os().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ll(this,e)},Os().prototype.greater=function(e){return this.throwIfDisposed(),ol(this,e)},Os().prototype.ifft=function(){return this.throwIfDisposed(),yp(this)},Os().prototype.irfft=function(){return this.throwIfDisposed(),xp(this)};const em=ui({isFinite_:function(e){const t={x:pi(e,"x","isFinite")};return ti.runKernel(Jt,t)}});Os().prototype.isFinite=function(){return this.throwIfDisposed(),em(this)};const tm=ui({isInf_:function(e){const t={x:pi(e,"x","isInf")};return ti.runKernel(Zt,t)}});Os().prototype.isInf=function(){return this.throwIfDisposed(),tm(this)};const nm=ui({isNaN_:function(e){const t={x:pi(e,"x","isNaN")};return ti.runKernel(Qt,t)}});Os().prototype.isNaN=function(){return this.throwIfDisposed(),nm(this)},Os().prototype.leakyRelu=function(e){return this.throwIfDisposed(),pl(this,e)},Os().prototype.lessEqual=function(e){return this.throwIfDisposed(),ed(this,e)},Os().prototype.less=function(e){return this.throwIfDisposed(),sd(this,e)};const am=ui({localResponseNormalization_:function(e,t=5,n=1,a=1,s=.5){const i=pi(e,"x","localResponseNormalization");X(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`),X(ee(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let r=i,o=!1;3===i.rank&&(o=!0,r=$o(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:r},p={depthRadius:t,bias:n,alpha:a,beta:s},d=ti.runKernel(dn,l,p);return o?$o(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Os().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),am(this,e,t,n,a)};const sm=ui({logSigmoid_:function(e){const t=pi(e,"x","logSigmoid");return hr(e=>({value:Al(ap(Al(e))),gradFunc:t=>pr(t,Xl(Al(e)))}))(t)}});Os().prototype.logSigmoid=function(){return this.throwIfDisposed(),sm(this)},Os().prototype.logSoftmax=function(e){return this.throwIfDisposed(),ml(this,e)},Os().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Il(this,e,t)},Os().prototype.log=function(){return this.throwIfDisposed(),dl(this)},Os().prototype.log1p=function(){return this.throwIfDisposed(),ul(this)},Os().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Sl(this,e)},Os().prototype.logicalNot=function(){return this.throwIfDisposed(),Ih(this)};const im=ui({logicalOr_:function(e,t){const n=pi(e,"a","logicalOr","bool"),a=pi(t,"b","logicalOr","bool");_r(n.shape,a.shape);const s={a:n,b:a};return ti.runKernel(pn,s)}});Os().prototype.logicalOr=function(e){return this.throwIfDisposed(),im(this,e)};const rm=ui({logicalXor_:function(e,t){const n=pi(e,"a","logicalXor","bool"),a=pi(t,"b","logicalXor","bool");return _r(n.shape,a.shape),Sl(im(e,t),Ih(Sl(e,t)))}});Os().prototype.logicalXor=function(e){return this.throwIfDisposed(),rm(this,e)},Os().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Nl(this,e,t,n)},Os().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),Tl(this,e,t,n,a)},Os().prototype.max=function(e,t){return this.throwIfDisposed(),cl(this,e,t)},Os().prototype.maximum=function(e){return this.throwIfDisposed(),Rr(this,e)},Os().prototype.mean=function(e,t){return this.throwIfDisposed(),El(this,e,t)},Os().prototype.min=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},Os().prototype.minimum=function(e){return this.throwIfDisposed(),_l(this,e)};const om=ui({mirrorPad_:function(e,t,n){X("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const a=pi(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");X(t.length===a.rank,()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let e=0;e<a.rank;e++)X(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),X(t[e][0]>=0&&t[e][0]<=a.shape[e]-s&&t[e][1]>=0&&t[e][1]<=a.shape[e]-s,()=>`Padding in dimension ${e} cannot be greater than or equal to ${a.shape[e]-s} or less than 0 for input of shape ${a.shape}`);const i={paddings:t,mode:n},r={x:a};return ti.runKernel(kn,r,i)}});Os().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),om(this,e,t)};const lm=ui({mod_:function(e,t){let n=pi(e,"a","mod"),a=pi(t,"b","mod");[n,a]=qs(n,a);const s={a:n,b:a};return ti.runKernel(In,s)}});Os().prototype.mod=function(e){return this.throwIfDisposed(),lm(this,e)},Os().prototype.mul=function(e){return this.throwIfDisposed(),pr(this,e)},Os().prototype.neg=function(){return this.throwIfDisposed(),Al(this)},Os().prototype.norm=function(e,t,n){return this.throwIfDisposed(),od(this,e,t,n)},Os().prototype.notEqual=function(e){return this.throwIfDisposed(),Dl(this,e)},Os().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Fl(this,e,t,n)},Os().prototype.onesLike=function(){return this.throwIfDisposed(),Ll(this)},Os().prototype.pad=function(e,t){return this.throwIfDisposed(),Pl(this,e,t)};const pm=ui({pool_:function(e,t,n,a,s,i,r){null==s&&(s=[1,1]),null==i&&(i=1),0===a&&(a="valid");const o=pi(e,"x","maxPool");let l=o,p=!1;3===o.rank&&(p=!0,l=$o(o,[1,o.shape[0],o.shape[1],o.shape[2]])),X(No(i,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`);const d=fo(l.shape,t,i,s,a),u=[d.dilationHeight,d.dilationWidth];let c;c="same"===a?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),a=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-a[t]);return n.map((e,t)=>[a[t],s[t]])}([d.filterHeight,d.filterWidth],u):[[0,0],[0,0]];const h=1===u[0]&&1===u[1],[m,f]=function(e,t,n){const a=n.map(e=>e[0]),s=n.map(e=>e[1]),i=e.concat(a,s),r=t.map((e,t)=>(e-i[t]%e)%e),o=s.map((e,t)=>e+r[t]);return[t.map((e,t)=>[a[t],o[t]]),t.map((e,t)=>[0,r[t]])]}([d.inHeight,d.inWidth],u,c),g=h?a:"valid",v=h?l:tc(l,u,m),b=("avg"===n?()=>_o(v,t,i,g,r):()=>Tl(v,t,i,g,r))(),y=h?b:Oh(b,u,f);return p?$o(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});Os().prototype.pool=function(e,t,n,a,s,i){return this.throwIfDisposed(),pm(this,e,t,n,a,s,i)},Os().prototype.pow=function(e){return this.throwIfDisposed(),Sr(this,e)},Os().prototype.prelu=function(e){return this.throwIfDisposed(),zl(this,e)};const dm=ui({prod_:function(e,t=null,n=!1){let a=pi(e,"x","prod");"bool"===a.dtype&&(a=sr(a,"int32"));const s={x:a},i={axis:t,keepDims:n};return ti.runKernel(Ln,s,i)}});Os().prototype.prod=function(e,t){return this.throwIfDisposed(),dm(this,e,t)};const um=ui({reciprocal_:function(e){const t={x:pi(e,"x","reciprocal")};return ti.runKernel(Wn,t)}});Os().prototype.reciprocal=function(){return this.throwIfDisposed(),um(this)},Os().prototype.relu=function(){return this.throwIfDisposed(),Hl(this)},Os().prototype.relu6=function(){return this.throwIfDisposed(),kp(this)},Os().prototype.reshapeAs=function(e){return this.throwIfDisposed(),$o(this,e.shape)},Os().prototype.reshape=function(e){return this.throwIfDisposed(),$o(this,e)},Os().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Jp(this,e,t,n)},Os().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Zp(this,e,t,n)},Os().prototype.reverse=function(e){return this.throwIfDisposed(),jl(this,e)},Os().prototype.rfft=function(){return this.throwIfDisposed(),bp(this)},Os().prototype.round=function(){return this.throwIfDisposed(),td(this)},Os().prototype.rsqrt=function(){return this.throwIfDisposed(),Ec(this)},Os().prototype.selu=function(){return this.throwIfDisposed(),ql(this)},Os().prototype.separableConv2d=function(e,t,n,a,s,i){return this.throwIfDisposed(),Kl(this,e,t,n,a,s,i)},Os().prototype.sigmoid=function(){return this.throwIfDisposed(),Xl(this)},Os().prototype.sign=function(){return this.throwIfDisposed(),Yl(this)},Os().prototype.sin=function(){return this.throwIfDisposed(),hc(this)},Os().prototype.sinh=function(){return this.throwIfDisposed(),fc(this)},Os().prototype.slice=function(e,t){return this.throwIfDisposed(),Jl(this,e,t)},Os().prototype.softmax=function(e){return this.throwIfDisposed(),np(this,e)},Os().prototype.softplus=function(){return this.throwIfDisposed(),ap(this)},Os().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),tc(this,e,t)},Os().prototype.split=function(e,t){return this.throwIfDisposed(),sp(this,e,t)},Os().prototype.sqrt=function(){return this.throwIfDisposed(),dr(this)},Os().prototype.square=function(){return this.throwIfDisposed(),ur(this)},Os().prototype.squaredDifference=function(e){return this.throwIfDisposed(),bd(this,e)},Os().prototype.squeeze=function(e){return this.throwIfDisposed(),ip(this,e)},Os().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Fs?[this,e]:[this,...e];return rp(n,t)},Os().prototype.step=function(e){return this.throwIfDisposed(),Ip(this,e)};const cm=ui({stridedSlice_:function(e,t,n,a,s=0,i=0,r=0,o=0,l=0){const p={x:pi(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:a,beginMask:s,endMask:i,ellipsisMask:r,newAxisMask:o,shrinkAxisMask:l};return ti.runKernel(Sa,p,d)}});Os().prototype.stridedSlice=function(e,t,n,a,s,i,r,o){return this.throwIfDisposed(),cm(this,e,t,n,a,s,i,r,o)},Os().prototype.sub=function(e){return this.throwIfDisposed(),Nr(this,e)},Os().prototype.sum=function(e,t){return this.throwIfDisposed(),hl(this,e,t)};const hm=ui({tan_:function(e){const t={x:pi(e,"x","tan","float32")};return ti.runKernel($a,t)}});Os().prototype.tan=function(){return this.throwIfDisposed(),hm(this)},Os().prototype.tanh=function(){return this.throwIfDisposed(),op(this)},Os().prototype.tile=function(e){return this.throwIfDisposed(),al(this,e)},Os().prototype.toBool=function(){return this.throwIfDisposed(),sr(this,"bool")},Os().prototype.toFloat=function(){return this.throwIfDisposed(),sr(this,"float32")},Os().prototype.toInt=function(){return this.throwIfDisposed(),sr(this,"int32")};const mm=ui({topk_:function(e,t=1,n=!0){const a=pi(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const i={x:a},r={k:t,sorted:n},[o,l]=ti.runKernel(Aa,i,r);return{values:o,indices:l}}});Os().prototype.topk=function(e,t){return this.throwIfDisposed(),mm(this,e,t)},Os().prototype.transpose=function(e){return this.throwIfDisposed(),fp(this,e)};const fm=ui({unique_:function(e,t=0){const n=pi(e,"x","unique","string_or_numeric");X(n.rank>0,()=>"The input tensor must be at least 1D");const a={x:n},s={axis:t},[i,r]=ti.runKernel(Oa,a,s);return{values:i,indices:r}}});Os().prototype.unique=function(e){return this.throwIfDisposed(),fm(this,e)},Os().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),_c(this,e,t)},Os().prototype.unstack=function(e){return this.throwIfDisposed(),up(this,e)},Os().prototype.where=function(e,t){return this.throwIfDisposed(),cp(e,this,t)},Os().prototype.zerosLike=function(){return this.throwIfDisposed(),cr(this)};class gm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gm.prototype)}}class vm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vm.prototype)}}class bm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bm.prototype)}}class ym extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ym.prototype)}}class xm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xm.prototype)}}Error;class wm{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function km(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Im(e,t){if(!e)throw new xm(t)}function Sm(e,t){let n=0;for(const a of e)a===t&&n++;return n}function Nm(e){return 1===e.length?e[0]:e}function Tm(e){return Array.isArray(e)?e:[e]}function Cm(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Em(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let $m={};function _m(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Rm(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>Rm(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Rm(t):e[n]=t.value)}}}function Am(e,t={},n={},a="object",s=!1){if("string"==typeof e){const s=e;let i;if(s in n)i=n[s];else if(s in $m)i=$m[s];else if(i=t[s],null==i)throw new bm(`Unknown ${a}: ${e}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new bm(`${a}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const r=i.className;let o,l;if(r in n?[o,l]=n[r]:r in $m?[o,l]=$m.className:r in t&&([o,l]=t[r]),null==o)throw new bm(`Unknown ${a}: ${r}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys($m))e[t]=$m[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=Object.assign({},$m);for(const e of Object.keys(n))$m[e]=n[e];Rm(i.config);const a=l(o,i.config,n,s);return $m=Object.assign({},t),a}{const e=Object.assign({},$m);for(const e of Object.keys(n))$m[e]=n[e];const t=new o(i.config);return $m=Object.assign({},e),t}}}function Dm(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Fm(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Om(e){if(null==e)throw new bm(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Mm(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new bm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Lm(e,t,n=0,a=1/0){return Im(n>=0),Im(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every(e=>typeof e===t)}function Pm(e,t){Array.isArray(e)?(X(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>Pm(e,`element ${n+1} of ${t}`))):X(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${zm(e)}.`)}function zm(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>zm(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Vm(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Bm=0;function Um(){return Bm++}const Wm={};function Gm(e=""){return e in Wm||(Wm[e]=0),Wm[e]+=1,e+Wm[e].toString()}const Hm=["channelsFirst","channelsLast"],jm=["nearest","bilinear"],qm=["valid","same","causal"],Km=["max","avg"],Xm=["sum","mul","concat","ave"],Ym=new Map;function Jm(e){Mm(Hm,"DataFormat",e)}function Zm(e){Mm(qm,"PaddingMode",e)}function Qm(e){Mm(Km,"PoolMode",e)}const ef=[];function tf(e,t){ef.push(e);try{const e=t();return ef.pop(),e}catch(e){throw ef.pop(),e}}function nf(e){if(!rf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===ef.length?"":ef.join("/")+"/")+e}function af(e){if(!rf(e))throw new Error("Not a valid tensor name: '"+e+"'");Ym.has(e)||Ym.set(e,0);const t=Ym.get(e);if(Ym.set(e,Ym.get(e)+1),t>0){const n=`${e}_${t}`;return Ym.set(n,1),n}return e}const sf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function rf(e){return!!e.match(sf)}function of(e){return e===parseInt(e.toString(),10)}function lf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let s=t;s<n;++s)a*=e[s];return a}function pf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function df(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function uf(e,t){if(t<e)throw new bm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let a=e;a<t;++a)n.push(a);return n}let cf;function hf(){return null==cf&&(cf=ti.backend.epsilon()),cf}function mf(e,t){return sr(e,t)}function ff(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),$o(e,n)}function gf(e,t,n){return yi(()=>{switch(e.rank){case 1:return Zl(e,t,n);case 2:return Ql(e,[t,0],[n,e.shape[1]]);case 3:return ep(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return tp(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Jl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Jl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new bm(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function vf(e,t,n){return yi(()=>{switch(e.rank){case 1:return Zl(e,t,n);case 2:return Ql(e,[0,t],[e.shape[0],n]);case 3:return ep(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return tp(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new bm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function bf(e,t,n,a){return yi(()=>{switch(e.rank){case 1:return Zl(e,t,n);case 2:switch(a){case 1:return gf(e,t,n);case 2:return vf(e,t,n);default:throw new bm(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return gf(e,t,n);case 2:return ep(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return vf(e,t,n);default:throw new bm(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return gf(e,t,n);case 2:return tp(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return tp(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return vf(e,t,n);default:throw new bm(`The axis is not within the rank of the tensor ${a}`)}default:throw new bm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function yf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Po(e,t)}function xf(e,t){switch(e.rank){case 1:return zo([e,t]);case 2:return Vo([e,t],0);case 3:return Bo([e,t],0);case 4:return Uo([e,t],0);default:throw new bm(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function wf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new bm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return al(e,t)}function kf(e,t=0,n=1,a,s){return Ul(e,t,n,a,s)}function If(e,t,n,a){if(e.rank<2||t.rank<2)throw new ym(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ym(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Rp({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Tf(e.rank,a,"channelsLast"):null,activation:n});{const s=e.shape.slice(),i=s.pop();e=$o(e,[-1,i]);const r=t.shape.slice(),o=r.pop(),l=r.pop(),p=[...r,o],d=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=$o(fp(t,d),[l,-1]);const u=[...s,...p];return $o(Rp({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Tf(e.rank,a,"channelsLast"):null,activation:n}),u)}}function Sf(e,t,n){return yi(()=>(t=Array.isArray(t)?lp(t,"int32"):sr(t,"int32"),rl(e,t,n)))}function Nf(e){return pr(e,e)}function Tf(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new bm(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===a.length?$o(t,[1,a[0],1,1,1]):$o(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?$o(t,[1,1,1,1,a[0]]):$o(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?$o(t,[1,a[0],1,1]):$o(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?$o(t,[1,1,1,a[0]]):$o(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?$o(t,[1,a[0],1]):$o(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?$o(t,[1,1,a[0]]):$o(t,[1].concat(a))}else if(e<3)return t;throw new bm(`Unsupported input rank by biasAdd: ${t.rank}`)}function Cf(e,t,n){return yi(()=>(null==n&&(n="channelsLast"),Jm(n),rr(e,Tf(e.rank,t,n))))}function Ef(e,t,n,a){return yi(()=>gp(e,t,n,a))}function $f(e,t,n=!1){return n?e():t()}const _f=["fanIn","fanOut","fanAvg"],Rf=["normal","uniform","truncatedNormal"];class Af extends vr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Df extends Af{apply(e,t){return Ol(e,t)}}Df.className="Zeros",yr(Df);class Ff extends Af{apply(e,t){return Ml(e,t)}}Ff.className="Ones",yr(Ff);class Of extends Af{constructor(e){if(super(),"object"!=typeof e)throw new bm(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new bm(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return yi(()=>pr(mr(this.value),Ml(e,t)))}getConfig(){return{value:this.value}}}Of.className="Constant",yr(Of);class Mf extends Af{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Wl(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Mf.className="RandomUniform",yr(Mf);class Lf extends Af{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ym(`randomNormal does not support dType ${t}.`);return kf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Lf.className="RandomNormal",yr(Lf);class Pf extends Af{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ym(`truncatedNormal does not support dType ${t}.`);return dp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Pf.className="TruncatedNormal",yr(Pf);class zf extends Af{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return yi(()=>{if(2!==e.length||e[0]!==e[1])throw new bm("Identity matrix initializer can only be used for 2D square matrices.");return pr(this.gain,sl(e[0]))})}getConfig(){return{gain:this.gain}}}zf.className="Identity",yr(zf);class Vf extends Af{constructor(e){if(super(),e.scale<0)throw new bm(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Mm(_f,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Mm(Rf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,a;if(Jm(t),2===e.length)n=e[0],a=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=lf(e,2);n=e[1]*t,a=e[0]*t}else if("channelsLast"===t){const t=lf(e,0,e.length-2);n=e[e.length-2]*t,a=e[e.length-1]*t}}else{const t=lf(e);n=Math.sqrt(t),a=Math.sqrt(t)}return[n,a]}(e),a=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,a):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(a+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ym(`${this.getClassName()} does not support dType ${t}.`);return dp(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return Wl(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Vf.className="VarianceScaling",yr(Vf);class Bf extends Vf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Vf.className}}Bf.className="GlorotUniform",yr(Bf);class Uf extends Vf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Vf.className}}Uf.className="GlorotNormal",yr(Uf);class Wf extends Vf{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Vf.className}}Wf.className="HeNormal",yr(Wf);class Gf extends Vf{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Vf.className}}Gf.className="HeUniform",yr(Gf);class Hf extends Vf{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Vf.className}}Hf.className="LeCunNormal",yr(Hf);class jf extends Vf{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Vf.className}}jf.className="LeCunUniform",yr(jf);class qf extends Af{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return yi(()=>{if(e.length<2)throw new ym("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=Z(e.slice(0,-1)),a=e[e.length-1],s=n*a;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const i=kf([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),r=Id.qr(i,!1);let o=r[0];const l=r[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return o=pr(o,l.sign()),n<a&&(o=o.transpose()),pr(mr(this.gain),o.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}qf.className="Orthogonal",yr(qf);const Kf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Xf(e,t={}){return Am(e,br.getMap().classNameMap,t,"initializer")}function Yf(e){return _m(e)}function Jf(e){if("string"==typeof e){const t=e in Kf?Kf[e]:e;if("GlorotNormal"===t)return new Uf;if("GlorotUniform"===t)return new Bf;if("HeNormal"===t)return new Wf;if("HeUniform"===t)return new Gf;if("LeCunNormal"===t)return new Hf;if("LeCunUniform"===t)return new jf;{const e={};return e.className=t,e.config={},Xf(e)}}return e instanceof Af?e:Xf(e)}function Zf(e){return Array.isArray(e)&&Array.isArray(e[0])}function Qf(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function eg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new bm(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function tg(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new bm(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ng(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}const ag="Variable";class sg{constructor(e,t="float32",n=ag,a=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Um(),n=null==n?ag:n,this.originalName=nf(n),this.name=af(this.originalName),this.trainable_=a,this.constraint=s,this.val=function(e,t=!0,n,a){return ti.makeVariable(e,t,n,a)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ig(e){return e.map(e=>e.read())}function rg(e){e.forEach(e=>{e[0].write(e[1])})}class og{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class lg{constructor(e,t,n,a,s,i,r){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=s,this.outputTensorIndex=r,this.id=Um(),null!=i&&(this.originalName=nf(i),this.name=af(this.originalName)),this.rank=t.length}}let pg=0;class dg{constructor(e,t){this.callArgs=t,this.id=pg++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ug=0;class cg extends vr{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ug++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Cm(e)+"_"+Gm(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new vm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new bm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Nm(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Nm(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new gm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new gm(`Layer ${this.name} is not connected, no input to return.`);return Nm(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new gm(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new gm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Nm(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Tm(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Tm(this.inputSpec);if(t.length!==n.length)throw new bm(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const a=t[e],s=n[e];if(null==s)continue;const i=a.rank;if(null!=s.ndim&&i!==s.ndim)throw new bm(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new bm(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new bm(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&a.dtype!==s.dtype)throw new bm(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${a.dtype}.`);if(s.axes){const t=a.shape;for(const n in s.axes){const a=Number(n),i=s.axes[n],r=a>=0?t[a]:t[t.length+a];if(null!=i&&-1===[i,null].indexOf(r))throw new bm(`Input ${e} is incompatible with layer ${this.name}: expected axis ${a} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],i=a.shape[t];if(null!=n&&null!=i&&n!==i)throw new bm(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Tm(e),a=function(e){let t=!0;for(const n of Tm(e))if(!(n instanceof lg)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of Tm(e))if(n instanceof lg){t=!1;break}return t}(e);if(a===s)throw new bm("Arguments to apply() must be all SymbolicTensors or all Tensors");return tf(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Tm(e))t.push(n.shape);this.build(Nm(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const s=Tm(a),i=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(a=Nm(i),null!=this.activityRegularizer)throw new ym("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=Tm(e);const t=[];for(const n of e)t.push(n.shape);return Nm(t)}(e),a=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((n,a)=>new lg(i,n,this,Tm(e),t,this.name,a)):new lg(i,a,this,Tm(e),t,this.name),this.addInboundNode(e,s,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new ym("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new gm(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new gm(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new vm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ng(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ig(e?this.trainableWeights:this.weights)}setWeights(e){yi(()=>{const t=this.weights;if(t.length!==e.length)throw new bm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],a=ig(t);for(let s=0;s<a.length;++s){const i=a[s],r=t[s],o=e[s];if(!Q(i.shape,o.shape))throw new bm(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([r,o])}rg(n)})}addWeight(e,t,n,a,s,i,r,o){if(-1!==this._addedWeightNames.indexOf(e))throw new bm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=o?o():Jf("zeros"));const l=a.apply(t,n),p=new sg(l,n,e,i,r);return l.dispose(),null!=s&&this.addLoss(()=>s.apply(p.read())),null==i&&(i=!0),i?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Tm(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),s=Tm(t),i=Tm(a);if(s.length!==i.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=i[e]}addInboundNode(e,t,n,a,s,i,r=null){const o=Tm(e);t=Tm(t),n=Tm(n),a=Tm(a),s=Qf(s),i=Qf(i);const l=[],p=[],d=[];for(const e of o)l.push(e.sourceLayer),p.push(e.nodeIndex),d.push(e.tensorIndex);new dg({outboundLayer:this,inboundLayers:l,nodeIndices:p,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:s,outputShapes:i},r);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function hg(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=hg(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class mg extends cg{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Gm("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new bm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new bm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new bm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new lg(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new dg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new bm(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function fg(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new bm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new mg({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}mg.className="InputLayer",yr(mg);class gg{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof gg)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new bm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return sr(t,e.dtype)}catch(n){throw new bm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof lg){if(null==this.id2Value[e.id])throw new bm(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new bm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof lg){if(null==this.id2Value[e.id])throw new bm(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new bm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&xi(this.id2Mask)}}const vg=new wm,bg=new wm;function yg(e,t,n,a){const s=null!=n&&n.training,i=Array.isArray(e),r=i?e:[e],o=r.map(e=>e.name),l=[],p=t.names();for(const e of o)-1!==p.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const d=o.join(",")+"|"+t.names().sort().join(",");let u,c=vg.get(d);if(null==c){const e=function(e,t){X(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],a={};if(1===e.length){const s=wg(e[0],t);n=s.sorted,a=s.recipientMap}else{const s=new Set;for(const i of e){const{sorted:e,recipientMap:r}=wg(i,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in r)null==a[e]&&(a[e]=new Set),r[e].forEach(t=>a[e].add(t))}}return{sorted:n,recipientCounts:xg(a)}}(r,t);c=e.sorted,u=e.recipientCounts,vg.put(d,c),bg.put(d,u)}u={},s||Object.assign(u,bg.get(d));const h=new gg(t);for(let e=0;e<c.length;++e){if(null!=a){const e=bi().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const i=c[e],r=i.sourceLayer;if(r instanceof mg)continue;const p=[],d=[],m=[];let f=!1;for(const e of i.inputs){const n=h.getValue(e),a=h.getMask(e);p.push(n),d.push(a),null!=a&&(f=!0),s||(u[e.name]--,0!==u[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}f&&((n=n||{}).mask=d[0]);const g=Tm(r.apply(p,n));let v=null;r.supportsMasking&&(v=r.computeMask(p,d));const b=kg(i),y=Array.isArray(b)?b:[b];for(let e=0;e<y.length;++e){h.hasKey(y[e])||h.add(y[e],g[e],Array.isArray(v)?v[0]:v);const t=o.indexOf(y[e].name);-1!==t&&(l[t]=g[e])}s||xi(m)}return h.disposeMasks(),i?l:l[0]}function xg(e){const t={};for(const n in e)t[n]=e[n].size;return t}function wg(e,t){const n=new Set,a=[],s={};for(const e of t.names())n.add(e);const i=[],r=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=r[r.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),a.push(e),n.add(e.name),t&&r.pop();else{r.push(i.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:a,recipientMap:s}}function kg(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Ig(e,t){return yi(()=>dr(hl(pr(e,e),t,!0)))}$e().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=vg&&vg.setMaxEntries(e),null!=bg&&bg.setMaxEntries(e)});class Sg extends vr{getConfig(){return{}}}class Ng extends Sg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return yi(()=>{const t=Ig(e,this.axis),n=Lo(t,0,this.maxValue);return pr(e,lr(n,rr(hf(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ng.className="MaxNorm",yr(Ng);class Tg extends Sg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return yi(()=>lr(e,rr(hf(),Ig(e,this.axis))))}getConfig(){return{axis:this.axis}}}Tg.className="UnitNorm",yr(Tg);class Cg extends Sg{apply(e){return Hl(e)}}Cg.className="NonNeg",yr(Cg);class Eg extends Sg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return yi(()=>{const t=Ig(e,this.axis),n=rr(pr(this.rate,Lo(t,this.minValue,this.maxValue)),pr(1-this.rate,t));return pr(e,lr(n,rr(hf(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Eg.className="MinMaxNorm",yr(Eg);const $g={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function _g(e){return _m(e)}function Rg(e,t={}){return Am(e,br.getMap().classNameMap,t,"constraint")}function Ag(e){return null==e?null:"string"==typeof e?Rg({className:e in $g?$g[e]:e,config:{}}):e instanceof Sg?e:Rg(e)}function Dg(){return new Df}function Fg(e){return new Of(e)}function Og(e){return new Mf(e)}async function Mg(e){if(null==e)return;const t=[],n=[],a=[];for(const s in e){const i=e[s];if("number"!=typeof i){const e=i;t.push(e.data()),n.push(s),a.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];xi(a)}}function Lg(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Pg;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Pg||(Pg={}));class zg{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Vg{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Bg extends zg{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const a=t[e];if("number"==typeof a)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+a*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=yi(()=>rr(this.totals[e],pr(a,n)));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:yi(()=>{const n=pr(lr(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),wi(t[e])}))}}class Ug extends zg{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const s=this.history[a];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const r=s[i];e.push(r.data()),t.push(a),n.push(i)}}const a=await Promise.all(e);for(let e=0;e<a.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=a[e][0]}}class Wg extends zg{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Cd,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ce(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,s=null!=n?n():vs();return(...i)=>{const r=null!=n?n():vs();return r-s<t||(s=r,a=e(...i)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await Mg(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Mg(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Mg(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Mg(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Mg(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):ce(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Mg(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Mg(e),await this.trainEnd(e))}}function Gg(e,t){return null==e&&(e={}),e instanceof zg?[e]:Array.isArray(e)&&e[0]instanceof zg?e:Tm(e).map(e=>new Wg(e,t))}class Hg{constructor(){}static registerCallbackConstructor(e,t){X(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Hg.checkForDuplicate(t),null==Hg.constructors[e]&&(Hg.constructors[e]=[]),Hg.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Hg.constructors)Hg.constructors[+t].forEach(t=>{if(t===e)throw new bm("Duplicate callback constructor.")})}static clear(){Hg.constructors={}}static createCallbacks(e){const t=[];for(const n in Hg.constructors){const a=+n;e>=a&&t.push(...Hg.constructors[a])}return t.map(e=>new e)}}function jg(e,t,n,a,s,i,r,o,l){const p=new Ug,d=[new Bg,...Hg.createCallbacks(t)];null!=e&&d.push(...e),d.push(p);const u=new Vg(d);return u.setParams({epochs:n,initialEpoch:a,samples:s,steps:i,batchSize:r,verbose:t,doValidation:o,metrics:l}),{callbackList:u,history:p}}function qg(e,t={},n=!1){return Am(e,br.getMap().classNameMap,t,"layer",n)}function Kg(e,t){return yi(()=>{"float32"!==e.dtype&&(e=sr(e,"float32"));const n=hl(Nf(e),t,!0),a=kr(n.shape,hf()),s=dr(Rr(n,a));return lr(e,s)})}function Xg(e,t){return yi(()=>El(Nf(Nr(t,e)),-1))}function Yg(e,t){return yi(()=>El(Cr(Nr(t,e)),-1))}function Jg(e,t){return yi(()=>{const n=Nr(e,t),a=Lo(Cr(e),hf(),Number.MAX_VALUE),s=Cr(lr(n,a));return pr(100,El(s,-1))})}function Zg(e,t,n=!1){return yi(()=>{if(n)t=np(t);else{const e=hl(t,t.shape.length-1,!0);t=lr(t,e)}return t=Lo(t,hf(),1-hf()),Al(hl(pr(sr(e,"float32"),dl(t)),t.shape.length-1))})}function Qg(e,t,n=!1){return yi(()=>{const a=sr(il(function(e){const t=[lf(e.shape)];return $o(e,t)}(e)),"int32"),s=(t=Lo(t,hf(),1-hf())).shape;return Zg($o(Fl(a,s[s.length-1]),s),t,n)})}function ev(e,t){return yi(()=>{let n;return n=Lo(t,hf(),1-hf()),n=dl(lr(n,Nr(1,n))),El(function(e,t){if(!Q(e.shape,t.shape))throw new bm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return yi(()=>{const n=Hl(t),a=Al(Cr(t));return rr(Nr(n,pr(t,e)),ul(tl(a)))})}(e,n),-1)})}function tv(e,t){return yi(()=>{const n=Kg(e,-1),a=Kg(t,-1),s=pr(n,a);return Al(hl(s,-1))})}Hg.constructors={};const nv={meanSquaredError:Xg,meanAbsoluteError:Yg,meanAbsolutePercentageError:Jg,meanSquaredLogarithmicError:function(e,t){return yi(()=>{const n=Lo(t,hf(),Number.MAX_VALUE),a=dl(rr(1,n)),s=Lo(e,hf(),Number.MAX_VALUE),i=dl(rr(1,s));return El(Nf(Nr(a,i)),-1)})},squaredHinge:function(e,t){return yi(()=>{const n=Rr(0,Nr(1,pr(e,t)));return El(Nf(n),-1)})},hinge:function(e,t){return yi(()=>{const n=Rr(0,Nr(1,pr(e,t)));return El(n,-1)})},categoricalHinge:function(e,t){return yi(()=>{const n=hl(pr(e,t),-1),a=cl(pr(Nr(1,e),t),-1);return Rr(0,rr(1,Nr(a,n)))})},logcosh:function(e,t){return yi(()=>{const n=Math.log(2),a=Nr(t,e),s=Nr(rr(a,ap(pr(-2,a))),n);return El(s,-1)})},categoricalCrossentropy:Zg,sparseCategoricalCrossentropy:Qg,binaryCrossentropy:ev,kullbackLeiblerDivergence:function(e,t){return yi(()=>{const n=Lo(e,hf(),1),a=Lo(t,hf(),1);return hl(pr(e,dl(lr(n,a))),-1)})},poisson:function(e,t){return yi(()=>{const n=dl(rr(hf(),t));return El(Nr(t,pr(e,n)),-1)})},cosineProximity:tv};function av(e){if("string"==typeof e){if(e in nv)return nv[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new bm(t)}return e}function sv(e,t){return yi(()=>{const n=pr(.5,Ll(t)),a=mf(ol(t,n),e.dtype);return El(Qo(e,a),-1)})}function iv(e,t){return yi(()=>mf(Qo(ho(e,-1),ho(t,-1)),"float32"))}function rv(e,t){return ev(e,t)}function ov(e,t){return e.rank===t.rank&&(e=ip(e,[e.rank-1])),(t=ho(t,-1)).dtype!==e.dtype&&(t=sr(t,e.dtype)),sr(Qo(e,t),"float32")}const lv=Zg,pv=Qg,dv={binaryAccuracy:sv,categoricalAccuracy:iv,precision:function(e,t){return yi(()=>{const n=function(e,t){return yi(()=>sr(hl(Sl(Qo(e,1),Qo(t,1))),"float32"))}(e,t),a=function(e,t){return yi(()=>sr(hl(Sl(Qo(e,0),Qo(t,1))),"float32"))}(e,t),s=rr(n,a);return sr(cp(ol(s,0),lr(n,s),0),"float32")})},categoricalCrossentropy:lv,sparseCategoricalCrossentropy:pv,mse:Xg,MSE:Xg,mae:Yg,MAE:Yg,mape:Jg,MAPE:Jg,cosine:tv};function uv(e){if("string"==typeof e&&e in dv)return dv[e];if("string"!=typeof e&&null!=e)return e;throw new bm(`Unknown metric ${e}`)}function cv(e){if(Im(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(nv))if(nv[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(dv))if(dv[n]===e){t=n;break}return void 0!==t?t:e.name}}function hv(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!mv(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function mv(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!mv(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!mv(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function fv(e,t,n=console.log){let a="";for(let n=0;n<e.length;++n)n>0&&(a=a.slice(0,a.length-1)+" "),a+=e[n],a=a.slice(0,t[n]),a+=" ".repeat(t[n]-a.length);n(a)}function gv(e,t,n){let a,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}fv([`${e.name} (${e.getClassName()})`,s,a,e.countParams().toString()],t,n)}function vv(e,t,n,a){let s,i;try{i=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){i="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const r=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,a=t.nodeIndices[e],s=t.tensorIndices[e];r.push(`${n}[${a}][${s}]`)}const o=e.name,l=e.getClassName(),p=0===r.length?"":r[0];fv([`${o} (${l})`,i,s,e.countParams().toString(),p],t,a);for(let e=1;e<r.length;++e)fv(["","","","",r[e]],t,a)}function bv(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function yv(e,t){if(null===e)return null;if("string"==typeof e)return Em(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let s=0;s<a;++s){const a=e[s];bv(t,s,a)?n.push(a):n.push(yv(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"==typeof a)t[n]=a;else{const e=Em(n);t[e]=yv(a,e)}}return t}}function xv(e,t){if(null==e)return null;if("string"==typeof e)return Cm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let s=0;s<a;++s){const a=e[s];bv(t,s,a)?n.push(a):n.push(xv(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];t[Cm(n)]="name"!==n&&"className"!==n||"string"!=typeof a?xv(a,n):a}return t}}const wv="4.22.0";class kv extends cg{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Gm(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Fm(this.inputs).length!==this.inputs.length)throw new bm(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);Fm(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(a)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;Im(0===n,"input layer has >1 nodes"),Im(0===a,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(a)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof mg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},a={},s={},i={},r=[],o=(e,t,n,a,s,l)=>{null!=a&&null!=s&&null!=l||(a=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const p=a.inboundNodes[s];if(-1!==n.indexOf(p))throw new vm(`The tensor ${e.name} at layer "${a.name}" is part of a cycle.`);if(-1!==t.indexOf(p))return;this.containerNodes.add(kv.nodeKey(a,s)),a.id in i||(i[a.id]=Object.keys(i).length),-1===n.indexOf(p)&&n.push(p);const d=p.inboundLayers.length;for(let e=0;e<d;e++){const a=p.inputTensors[e],s=p.inboundLayers[e],i=p.nodeIndices[e],r=p.tensorIndices[e];o(a,t,n,s,i,r)}for(t.push(p);n.indexOf(p)>=0;)n.splice(n.indexOf(p),1);r.push(p)},l=[],p=[];for(const e of this.outputs)o(e,l,p);const d=r.slice().reverse();for(const e of d){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];const r=null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id];i=Math.max(i,r),a[e.outboundLayer.id]=i,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let a=0;a<e.inboundLayers.length;a++){const s=e.inboundLayers[a],r=e.nodeIndices[a],o=s.inboundNodes[r],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,l),n[o.id]=o}}const u={};for(const e in t){const a=t[e];a in u||(u[a]=[]),u[a].push(n[e])}const c={};for(const e in a){const t=a[e];t in c||(c[t]=[]),c[t].push(s[e])}let h=Object.keys(c).map(e=>parseInt(e,10)).sort(Dm);this.layers=[];for(const e of h){const t=c[e];t.sort((e,t)=>{const n=i[e.id],a=i[t.id];return n<a?-1:n>a?1:0});for(const e of t)e instanceof kv&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=c,h=Object.keys(u).map(e=>parseInt(e,10)).sort(Dm);const m=this.inputs.slice(),f=[];for(const e of h)for(const t of u[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===m.indexOf(n))throw new vm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${f}`);for(const e of t.outputTensors)m.push(e);f.push(e.name)}}this.nodesByDepth=u;const g=this.layers.map(e=>e.name);for(const e of g){const t=g.filter(t=>t===e).length;if(1!==t)throw new vm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new dg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new bm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let a=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,i]of e.weights.entries()){const e=s?`${i.name.split("/").slice(0,-1).join("/")+"/"}${t}`:i.originalName;if(null!=n[e])throw new bm(`Duplicate weight name: ${e}`);n[e]=i,a++}const i=[];for(const a in e){let s=a;if(null==n[a]){const e=a.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])i.push([n[s],e[a]]);else if(t)throw new bm(`Provided weight data has no target variable: ${a}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new bm(`${e.length} of ${a} weights are not set: ${e}`)}rg(i)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],s=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!a.includes(e)).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${wv}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=xv(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return yi(()=>{e=Tm(e);const n=new gg;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return yg(this.outputs,n,t)})}computeMask(e,t){return yi(()=>{let n;return e=Tm(e),n=null==t?km(null,e.length):Tm(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=Qf(e);if(t.length!==this.inputLayers.length)throw new bm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const a=this.inputLayers[e],s=t[e];n[a.name+"_0_0"]=s}const a=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Dm);if(a.length>1)for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(t.id))continue;const a=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],i=e.nodeIndices[t],r=e.tensorIndices[t],o=n[`${s.name}_${i}_${r}`];a.push(o)}const s=Qf(t.computeOutputShape(Nm(a))),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${i}_${e}`]=s[e]}}const s=[],i=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],a=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${a}`;i.push(s)}for(let e=0;e<i.length;e++){const t=i[e];Im(t in n),s.push(n[t])}return Nm(s)}runInternalGraph(e,t){null==t&&(t=km(null,e.length));const n={};for(let a=0;a<this.inputs.length;++a){const s=this.inputs[a],i=e[a],r=t[a];n[s.id]=[i,r]}const a=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Dm);for(const e of a){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,s=e.outputTensors,i=new Array;for(const e of a)e.id in n&&i.push(n[e.id]);if(i.length===a.length){let a,r,o,l,p={};if(null!=e.callArgs&&(p=e.callArgs),1===i.length){const[e,n]=i[0];null==p.mask&&(p.mask=n),o=Tm(t.call(e,p)),l=Tm(t.computeMask(e,n)),a=[e],r=[n]}else a=i.map(e=>e[0]),r=i.map(e=>e[1]),null==p.mask&&(p.mask=r),o=Tm(t.call(a,p)),l=Tm(t.computeMask(a,r));if(t.activityRegularizer)throw new ym("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],a=o[e],i=l[e];n[t.id]=[a,i]}}}}const s=[],i=[],r=[];for(const e of this.outputs){Im(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,a]=n[e.id];r.push(t.shape),s.push(t),i.push(a)}return[s,i,r]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof kv?1:0;for(let a=0;a<e.inboundNodes.length;a++){const s=kv.nodeKey(e,a);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new bm("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new bm(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new bm(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return yi(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=kv.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const a=e.getClassName(),s=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){const a=e.inboundNodes[n],s=kv.nodeKey(e,n);let r={};if(this.containerNodes.has(s)){if(a.callArgs)try{JSON.stringify(a.callArgs),r=a.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${a.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),r={}}if(a.inboundLayers.length>0){const e=[];for(let n=0;n<a.inboundLayers.length;n++){const s=a.inboundLayers[n],i=a.nodeIndices[n],o=a.tensorIndices[n];let l=t[kv.nodeKey(s,i)];null==l&&(l=0),e.push([s.name,l,o,r])}i.push(e)}}}const r={};r.name=e.name,r.className=a,r.config=s,r.inboundNodes=i,n.push(r)}e.layers=n;const a=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],i=kv.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let r=t[i];null==r&&(r=0);const o=this.inputLayersTensorIndices[e];a.push([n.name,r,o])}e.inputLayers=a;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],a=this.outputLayersNodeIndices[e],i=kv.nodeKey(n,a);if(!this.containerNodes.has(i))continue;let r=t[i];null==r&&(r=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,r,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},a=!1){const s={},i={};function r(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let a;for(const i of t){const o=i[0],l=i[1],p=i[2];if(a=null==i[3]?{}:i[3],!(o in s))return void r(e,t);const d=s[o];if(d.inboundNodes.length<=l)return void r(e,t);const u=d.inboundNodes[l];n.push(u.outputTensors[p])}n.length>0&&e.apply(Nm(n),a)}function l(e){const n=e.name,i=qg(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(a),s[n]=i,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new bm(`Corrupted configuration, expected array for nodeData: ${e}`);r(i,e)})}const p=t.name,d=t.layers;for(const e of d)l(e);for(;!Om(i);)for(const e of d){const t=s[e.name];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const u=[],c=[],h=t.inputLayers;for(const e of h){const t=e[0],n=e[1],a=e[2];Im(t in s);const i=s[t].inboundNodes[n].outputTensors;u.push(i[a])}const m=t.outputLayers;for(const e of m){const t=e[0],n=e[1],a=e[2];Im(t in s);const i=s[t].inboundNodes[n].outputTensors;c.push(i[a])}return new e({inputs:u,outputs:c,name:p})}get stateful(){if(this._stateful)throw new bm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){yi(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function Iv(e,t){return function(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===a)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Sv(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=yi(()=>{if(1===e.shape.length)return ir(e);if(2===e.shape.length){if(e.shape[1]>1)return ho(e,1);if(1===e.shape[1])return $o(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await t.data());xi(t);const s=[];return a.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])}),lp(s,"float32")}return null}function Nv(e,t){return pr(e,t)}function Tv(e,t){let n,a;const s=t;n=s.xs,a=s.ys,X(null!=n&&null!=a,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const i=Cv("input",e.inputNames,n),r=Cv("output",e.outputNames,a),o=i[0].shape[0];X(i.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),X(r.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${r.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<i.length;t++)X(i[t].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let t=0;t<r.length;t++)X(r[t].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${r[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:i,ys:r}}function Cv(e,t,n){if(n instanceof Fs)return[n];if(Array.isArray(n))return X(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const a=[];for(const s of t){if(null==n[s])throw new bm(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);a.push(n[s])}return a}}function Ev(e){return"function"==typeof e.iterator}function $v(e){X(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function _v(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>gf(e,t,n-t)):gf(e,t,n-t)}function Rv(e,t){return yi(()=>null==e?null:Array.isArray(e)?e.map(e=>Rv(e,t)):Sf(e,"int32"===t.dtype?t:sr(t,"int32")))}function Av(e,t){const n=[];let a=0,s=null;for(;a<e;)s=a+t,s>=e&&(s=e),n.push([a,s]),a=s;return n}function Dv(e){const t=[];e instanceof Fs&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(ff(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function Fv(e,t){if(null==e)return;const n=[];if(t instanceof Fs)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const e in t){const a=t[e];n.push(a.id)}const a=[];if(e instanceof Fs)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&a.push(e)});else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&a.push(s)}a.forEach(e=>{e.isDisposed||e.dispose()})}function Ov(e){return Array.isArray(e)}function Mv(e){return!function(e){return e instanceof Fs}(e)&&!Ov(e)}function Lv(e,t,n,a=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Ov(e)&&e.length>0)t=!0;else if(Mv(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new bm(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let i;if(Mv(e)){i=[];for(const n of t){if(null==e[n])throw new bm(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(Ov(e)){if(e.length!==t.length)throw new bm(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new bm(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=Dv(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const r=i[e];if(r.shape.length!==n[e].length)throw new bm(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${r.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;const i=r.shape[t],o=n[e][t];if(null!=o&&o>=0&&i!==o)throw new bm(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${r.shape[0]} examples, each with shape [${r.shape.slice(1,r.shape.length)}] (tensor shape [${r.shape}])`)}}return i}function Pv(e,t,n,a=!0,s=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new bm(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new bm(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const r=i[e];if(r.shape.length!==n[e].length)throw new bm(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(r.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!a)continue;const o=r.shape[i],l=n[e][i];if(null!=l&&l!==o)throw new bm(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(r.shape)}.`)}}}class zv extends kv{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new bm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,a=console.log){const s=function(e){let t=!0;const n=[],a=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}a.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==a.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let r;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){i.push("Receives inputs"),r=[];for(const t in e.nodesByDepth)r.push(...e.nodesByDepth[t])}a("_".repeat(t)),fv(i,n,a),a("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?gv(o[e],n,a):vv(o[e],n,r,a),a((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?ng(e.collectedTrainableWeights):ng(e.trainableWeights),t}(e),p=ng(e.nonTrainableWeights);a(`Total params: ${l+p}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${p}`),a("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Nd.adagrad(.01),Adadelta:()=>Nd.adadelta(1,.95,hf()),Adam:()=>Nd.adam(.001,.9,.999,hf()),Adamax:()=>Nd.adamax(.002,.9,.999,hf(),0),RMSProp:()=>Nd.rmsprop(.001,.9,0,hf()),SGD:()=>Nd.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new bm(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof xr))throw new bm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new bm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map(e=>av(e))}else{const n=av(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new bm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(av(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],tf("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};tf("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,a,i;for(const r of t){if("string"==typeof r&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(r)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===ev?-1!==["accuracy","acc"].indexOf(r)?a=sv:-1!==["crossentropy","ce"].indexOf(r)&&(a=rv):this.lossFunctions[e]===Qg?-1!==["accuracy","acc"].indexOf(r)?a=ov:-1!==["crossentropy","ce"].indexOf(r)&&(a=pv):-1!==["accuracy","acc"].indexOf(r)?a=iv:-1!==["crossentropy","ce"].indexOf(r)&&(a=lv),-1!==["accuracy","acc"].indexOf(r)?s="acc":-1!==["crossentropy","ce"].indexOf(r)&&(s="ce"),i=a,n=""+s}else{const e=uv(r);i=e,n=""+cv(r)}let t;tf(n,()=>{t=i}),s(e,n,t)}})(a[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const a=null==n.batchSize?32:n.batchSize;$v(a);const s=this.standardizeUserDataXY(e,t,!0,a);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return Nm(this.testLoop(t,e,a,n.verbose,n.steps))}finally{Fv(s[0],e),Fv(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new ym("Verbose mode is not implemented yet.");X(!a||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const r="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!a||l<n.batches;){const t=await r.next();if(i=yi(()=>{if(t.value){const{xs:n,ys:a}=Tv(e,t.value),r=n.concat(a),p=yi(()=>s(r));if(xi(r),0===l)for(let e=0;e<p.length;++e)i.push(mr(0));const d=r[0].shape[0];for(let e=0;e<p.length;++e){const t=p[e],n=i[e];i[e]=yi(()=>rr(i[e],pr(d,t))),l>0&&xi(n)}xi(p),o+=d,++l}return i}),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=lr(i[e],o),xi(t)}return Nm(i)}(this,e,t)}checkNumSamples(e,t,n,a="steps"){let s;if(null!=n){if(s=null,null!=t)throw new bm(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new bm(`Either the input data should have a defined shape, or ${a} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new bm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],s=this.retrieveSymbolicTensors(a),i=new gg;if(e instanceof Fs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new bm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new bm(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const r=yg(s,i);return n?r:r[0]}retrieveSymbolicTensors(e){const t=km(null,e.length);let n=e.length;for(const a of this.layers){const s=Array.isArray(a.output)?a.output:[a.output],i=s.map(e=>e.name);for(let a=0;a<e.length;++a){const r=i.indexOf(e[a]);if(-1!==r&&(t[a]=s[r],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,a)=>{null==t&&n.push(e[a])}),new bm(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return yi(()=>{const a=this.checkNumSamples(e);if(n)throw new ym("Verbose predictLoop() is not implemented yet.");const s=Av(a,t),i=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t)yi(()=>{const n=s[t][0],a=s[t][1],i=_v(e,n,a),r=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)r.push({key:this.inputs[e],value:i[e]});else r.push({key:this.inputs[0],value:i});const o=new gg(r);return yg(this.outputs,o)}).forEach((e,t)=>i[t].push(e));return Nm(i.map(e=>Po(e,0)))})}predict(e,t={}){const n=Dv(e);Pv(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return $v(e),this.predictLoop(n,e)}finally{Fv(n,e)}}predictOnBatch(e){Pv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(null==this.optimizer_)throw new vm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Qg?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t){const n=Fm(e.map(e=>e.shape[0]));n.sort();const a=Fm(t.map(e=>e.shape[0]));if(a.sort(),n.length>1)throw new bm(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(a.length>1)throw new bm(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(n.length>0&&a.length>0&&!Q(n,a))throw new bm(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Lv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Lv(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const a=[Xg,ev,Zg];for(let s=0;s<e.length;++s){const i=e[s],r=t[s],o=n[s];if(null!=r){if(r===Zg&&1===i.shape[i.shape.length-1])throw new bm(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==a.indexOf(r)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const a=e[n],s=t[n];if(null!=s&&a!==s)throw new bm(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!==0)throw new bm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,s=!0,i){const[r,o]=this.standardizeUserDataXY(e,t,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=a){const e=Iv(a,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Sv(o[t],null,e[t]))}return[r,o,l]}testLoop(e,t,n,a=0,s){return yi(()=>{const i=this.checkNumSamples(t,n,s,"steps"),r=[];if(a>0)throw new ym("Verbose mode is not implemented yet.");if(null!=s)throw new ym("steps mode in testLoop() is not implemented yet");{const a=Av(i,n),s=lp(uf(0,i));for(let n=0;n<a.length;++n){const i=a[n][0],o=a[n][1],l=gf(s,i,o-i),p=Rv(t,l),d=e(p);if(0===n)for(let e=0;e<d.length;++e)r.push(mr(0));for(let e=0;e<d.length;++e){const t=d[e];r[e]=rr(r[e],pr(o-i,t))}}for(let e=0;e<r.length;++e)r[e]=lr(r[e],i)}return r})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let s=a;Sm(e,a)>1&&(s+=`_${Sm(e.slice(0,n),a)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],r=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const r=new gg(e),o=yg(this.outputs,r,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(a[e],o[e]);null!=s[e]&&(n=Nv(n,s[e]));const i=El(n);t.push(i),l=0===e?n:rr(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=El(t(a[s],o[s]))}wi(n),i.push(n)}return l=El(l),this.calculateLosses().forEach(e=>{l=rr(l,e)}),l},!0,r)].concat(i)}}makeTestFunction(){this.testFunction=e=>yi(()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:a[e]});const r=new gg(i),o=yg(this.outputs,r);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],i=El(a(s[e],o[e]));n=0===e?i:rr(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],i=El(n(s[a],o[a]));t.push(i)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,r,o,l,p,d,u;this.isTraining=!0;try{const c=null==n.batchSize?32:n.batchSize;$v(c);const h=!1,m=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,h,c);a=m[0],s=m[1],u=m[2];let f,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new ym("validationData including sample weights is not supported yet."):new bm(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,c);p=t[0],d=t[1],f=p.concat(d)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-n.validationSplit)),t=a[0].shape[0];p=_v(a,e,t),i=a,a=_v(a,0,e),d=_v(s,e,t),r=s,s=_v(s,0,e),f=p.concat(d)}else null!=n.validationSteps&&(g=!0);const v=a.concat(s).concat(u);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=y.slice().concat(y.map(e=>"val_"+e))):(x=null,f=[],w=y.slice());const k=Gg(n.callbacks,n.yieldEvery);return await this.fitLoop(b,v,y,c,n.epochs,n.verbose,k,x,f,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,Fv(a,e),Fv(s,t),Fv(i,e),Fv(r,t),Fv(p,o),Fv(d,l),null!=u&&xi(u)}}async fitLoop(e,t,n,a,s,i,r,o,l,p,d,u,c,h){null==a&&(a=32),null==s&&(s=1),null==p&&(p=!0),null==u&&(u=0);let m=!1;if(null!=o&&null!=l&&(m=!0),null!=h&&(m=!0,null==c))throw new bm("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const f=this.checkNumSamples(t,a,c,"steps_per_epoch");let g;null!=f&&(g=uf(0,f)),null==i&&(i=1);const{callbackList:v,history:b}=jg(r,i,s,u,f,c,a,m,d);v.setModel(this),this.history=b,await v.onTrainBegin(),this.stopTraining_=!1;for(let i=u;i<s;++i){await v.onEpochBegin(i);const s={};if(null!=c)throw new ym("stepsPerEpoch mode is not implemented yet.");{if("batch"===p)throw new ym("batch shuffling is not implemneted yet");p&&H(g);const i=lp(g),r=Av(f,a);for(let p=0;p<r.length;++p){const d={};if(await v.onBatchBegin(p,d),yi(()=>{const u=r[p][0],c=r[p][1],h=gf(i,u,c-u);d.batch=p,d.size=c-u;const f=Rv(t,h),g=e(f);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];d[t]=a,wi(a)}if(p===r.length-1&&m){const e=this.testLoop(o,l,a);for(let t=0;t<n.length;++t){const a=n[t],i=e[t];wi(i),s["val_"+a]=i}}}),await v.onBatchEnd(p,d),Lg(d),this.stopTraining_)break}i.dispose()}if(await v.onEpochEnd(i,s),this.stopTraining_)break}return await v.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const a=null!=n.batchesPerEpoch;if(X(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),X(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),X(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),X(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),X(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,r;if(s)if(Ev(n.validationData))X(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const e=function(e){if(3===e.length)throw new ym("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,r=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let p;p=s?l.slice().concat(l.map(e=>"val_"+e)):l.slice();const d=Gg(n.callbacks,n.yieldEvery),u=null==n.verbose?1:n.verbose,{callbackList:c,history:h}=jg(d,u,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,p);c.setModel(e),e.history=h,await c.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){const p={};await c.onEpochBegin(m);let d=0,u=0;for(a||(f=await t.iterator());!a||d<n.batchesPerEpoch;){const t=await f.next();if(a&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:s}=Tv(e,t.value),i={};i.batch=u,i.size=a[0].shape[0],await c.onBatchBegin(u,i);const r=[];if(null!=n.classWeight){const t=Iv(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)r.push(await Sv(s[e],null,t[e]))}const p=a.concat(s).concat(r),h=o(p);xi(p);for(let e=0;e<l.length;++e){const t=l[e],n=h[e];i[t]=n,wi(n)}await c.onBatchEnd(u,i),Lg(i),u++,d++}if(a?d>=n.batchesPerEpoch:t.done){if(s){let t;t=Ev(n.validationData)?Tm(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Tm(e.evaluate(i,r,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)p[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await c.onEpochEnd(m,p),m++,e.stopTraining_)break}return await c.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],s=n[1],i=this.makeTrainFunction()(a.concat(s)),r=[];for(const e of i){const t=await e.data();r.push(t[0])}return xi(i),Fv(n[0],e),Fv(n[1],t),Nm(r)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<a.length;++e)n&&!a[e].trainable||t.push({name:a[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=bi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-bi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Cm(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>Cm(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!=typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Cm(n[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Cm(cv(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Cm(cv(e)));{const e={};for(const t in this.metrics)e[t]=Cm(cv(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=qg(yv(e.optimizer_config));let n,a;if("string"==typeof e.loss)n=Em(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>Em(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Em(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map(e=>Em(e));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Em(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Ai.getSaveHandlers(n));if(0===t.length)throw new bm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new bm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new bm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=await Ii(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${wv}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Ii(await this.optimizer.getWeights(),e);a.specs.push(...n),a.data=(i=[a.data,t],gi.join(i))}var i;if(null!=this.userDefinedMetadata){const e=!0;hv(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=a.data,s.weightSpecs=a.specs,e.save(s)}setUserDefinedMetadata(e){hv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}zv.className="Model",yr(zv);class Vv extends zv{}async function Bv(e,t){if(null==t&&(t={}),"string"==typeof e){const s=(n=e,a=t,Ai.getLoadHandlers(n,a));if(0===s.length)s.push(function(e,t){return Gr(e,t)}(e,t));else if(s.length>1)throw new bm(`Found more than one (${s.length}) load handlers for URL '${e}'`);e=s[0]}var n,a;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new bm("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const a=await e.load();let s=a.modelTopology;null!=s.model_config&&(s=s.model_config);const i=null==n.strict||n.strict,r=null!=a.weightData&&null!=a.weightSpecs&&i,o=qg(yv(s),void 0,r),l=a.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=a.userDefinedMetadata&&o.setUserDefinedMetadata(a.userDefinedMetadata),null!=a.weightData){if(null==a.weightSpecs)throw new bm("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n=new gi(e),a={};let s=0;for(const e of t){const t=Si(e,(e,t)=>n.slice(s+e,s+t));a[e.name]=Ni(e,n.slice(s,s+t)),s+=t}return a}(e,t),a={},s=[];return t.forEach(e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):a[e.name]=n[e.name]}),{modelWeights:a,optimizerWeights:s}}(a.weightData,a.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),xi(e),xi(t.map(e=>e.tensor))}return o}(e,0,t)}Vv.className="Functional",yr(Vv);class Uv extends zv{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Gm("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new bm(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Uv||e instanceof zv;let n;if(t){if(n=e,1!==n.outputs.length)throw new bm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new bm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new bm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=fg({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new bm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new bm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=hg(this.outputs[0])}this.inboundNodes=[],new dg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:km(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(tg(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zv({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new vm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new vm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new vm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new vm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let s,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new bm("Legacy serialization format not supported yet.");s=t}else X(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,i=t;const r=new e(i);if(!(r instanceof Uv))throw new ym(`Sequential.fromConfig called on non-Sequential input: ${r}`);for(const e of s){const t=qg(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),r.add(t)}return r}set stopTraining(e){if(null==this.model)throw new bm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new bm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Wv(e){return new zv(e)}Uv.className="Sequential",yr(Uv);class Gv extends vr{getConfig(){return{}}}class Hv extends Gv{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ym(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Zo(e)}(e,t)}}Hv.className="elu",yr(Hv);class jv extends Gv{apply(e){return ql(e)}}jv.className="selu",yr(jv);class qv extends Gv{apply(e){return Hl(e)}}qv.className="relu",yr(qv);class Kv extends Gv{apply(e){return yi(()=>_l(6,Hl(e)))}}Kv.className="relu6",yr(Kv);class Xv extends Gv{apply(e){return e}}Xv.className="linear",yr(Xv);class Yv extends Gv{apply(e){return Xl(e)}}Yv.className="sigmoid",yr(Yv);class Jv extends Gv{apply(e){return function(e){return yi(()=>{const t=rr(.5,pr(.2,e));return Lo(t,0,1)})}(e)}}Jv.className="hardSigmoid",yr(Jv);class Zv extends Gv{apply(e){return ap(e)}}Zv.className="softplus",yr(Zv);class Qv extends Gv{apply(e){return function(e){return yi(()=>lr(e,rr(Cr(e),1)))}(e)}}Qv.className="softsign",yr(Qv);class eb extends Gv{apply(e){return op(e)}}eb.className="tanh",yr(eb);class tb extends Gv{apply(e,t=-1){return np(e,t)}}tb.className="softmax",yr(tb);class nb extends Gv{apply(e,t=-1){return ml(e,t)}}nb.className="logSoftmax",yr(nb);class ab extends Gv{apply(e){return yi(()=>yi(()=>{const t=Math.sqrt(2),n=pr(.5,rr(1,el(lr(e,t))));return pr(e,n)}))}}ab.className="gelu",yr(ab);class sb extends Gv{apply(e){return yi(()=>pr(.5,pr(e,rr(1,op(pr(dr(lr(2,Math.PI)),rr(e,pr(.044715,Sr(e,3)))))))))}}sb.className="gelu_new",yr(sb);class ib extends Gv{apply(e){return yi(()=>pr(e,op(ap(e))))}}ib.className="mish",yr(ib);class rb extends Gv{apply(e,t=1){return yi(()=>pr(Xl(pr(e,t)),e))}}function ob(e){return e.getClassName()}function lb(e,t={}){return Am(e,br.getMap().classNameMap,t,"activation")}function pb(e){if(null==e){return lb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},lb(t)}return e instanceof Gv?e:lb(e)}rb.className="swish",yr(rb);class db extends vr{}class ub extends db{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return yi(()=>{let t=Ol([1]);return this.hasL1&&(t=rr(t,hl(pr(this.l1,Cr(e))))),this.hasL2&&(t=rr(t,hl(pr(this.l2,Nf(e))))),$o(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}ub.className="L1L2",yr(ub);const cb={l1l2:"L1L2"};function hb(e){return _m(e)}function mb(e,t={}){return Am(e,br.getMap().classNameMap,t,"regularizer")}function fb(e){return null==e?null:"string"==typeof e?mb({className:e in cb?cb[e]:e,config:{}}):e instanceof db?e:mb(e)}class gb extends cg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=eg(e);let n=Hl(e);return null!=this.maxValue&&(n=Lo(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}gb.className="ReLU",yr(gb);class vb extends cg{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=eg(e);return pl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}vb.className="LeakyReLU",yr(vb);class bb extends cg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Jf(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=fb(e.alphaRegularizer),this.alphaConstraint=Ag(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new bm(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=tg(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new og({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=eg(e),zl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Yf(this.alphaInitializer),alphaRegularizer:hb(this.alphaRegularizer),alphaConstraint:_g(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}bb.className="PReLU",yr(bb);class yb extends cg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ym(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=eg(e);return Zo(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}yb.className="ELU",yr(yb);class xb extends cg{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=eg(e);return pr(n,sr(ol(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}xb.className="ThresholdedReLU",yr(xb);class wb extends cg{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new tb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return yi(()=>{let n=eg(e);const a=t.mask;if(null!=a){const e=pr(Nr(Ml(n.shape),sr(a,n.dtype)),mr(-1e9));n=rr(n,e)}return this.axis instanceof Array?this.axis.length>1?tl(Nr(n,Il(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function kb(e,t,n){if("number"==typeof e)return km(e,t);if(e.length!==t)throw new bm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if(!of(s))throw new bm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function Ib(e,t,n,a,s=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((i+a-1)/a)}function Sb(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+df([n-t,0]);else{if("same"!==a)throw new bm(`Unsupport padding mode: ${a}.`);e*=t}return e}function Nb(e,t){return yi(()=>(Jm(t),"channelsFirst"===t?fp(e,[0,2,3,1]):e))}function Tb(e,t){return yi(()=>(Jm(t),"channelsFirst"===t?fp(e,[0,2,3,4,1]):e))}function Cb(e,t,n,a=[1,1],s="valid",i,r,o=null){return yi(()=>{if(null==i&&(i="channelsLast"),Jm(i),3!==e.rank&&4!==e.rank)throw new bm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new bm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Nb(e,i);if("causal"===s)throw new ym("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ep({x:l,filter:t,strides:a,pad:"same"===s?"same":"valid",dilations:r,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=fp(l,[0,3,1,2])),l})}wb.className="Softmax",yr(wb);class Eb extends cg{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Eb.verifyArgs(t),this.rank=e,Pm(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ym(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=kb(t.kernelSize,e,"kernelSize"),this.strides=kb(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Zm(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Jm(this.dataFormat),this.activation=pb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Jf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ag(t.biasConstraint),this.biasRegularizer=fb(t.biasRegularizer),this.activityRegularizer=fb(t.activityRegularizer),this.dilationRate=kb(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new bm(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new bm(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new bm(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Im("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Lm(e.kernelSize,"number",1,3))throw new bm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ob(this.activation),useBias:this.useBias,biasInitializer:Yf(this.biasInitializer),biasRegularizer:hb(this.biasRegularizer),activityRegularizer:hb(this.activityRegularizer),biasConstraint:_g(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class $b extends Eb{constructor(e,t){super(e,t),this.kernel=null,$b.verifyArgs(t),this.filters=t.filters,Pm(this.filters,"filters"),this.kernelInitializer=Jf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ag(t.kernelConstraint),this.kernelRegularizer=fb(t.kernelRegularizer)}build(e){e=tg(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new bm(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return yi(()=>{let t;e=eg(e);const n=null==this.bias?null:this.bias.read(),a=Vm(this.activation.getClassName());if(null!=a&&2===this.rank)t=Cb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=function(e,t,n,a=1,s="valid",i,r=1){return yi(()=>{if(null==i&&(i="channelsLast"),Jm(i),3!==e.shape.length)throw new bm(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new bm(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new bm(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===i&&(e=fp(e,[0,2,1])),"causal"===s)throw new ym("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Go(e,t,a,"same"===s?"same":"valid","NWC",r);return null!=n&&(o=Cf(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Cb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ym("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,a=[1,1,1],s="valid",i,r){return yi(()=>{if(null==i&&(i="channelsLast"),Jm(i),4!==e.rank&&5!==e.rank)throw new bm(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new bm(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Tb(e,i);if("causal"===s)throw new ym("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=qo(o,t,a,"same"===s?"same":"valid","NDHWC",r),null!=n&&(o=Cf(o,n)),"channelsFirst"===i&&(o=fp(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=tg(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const a=Ib(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(a)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Yf(this.kernelInitializer),kernelRegularizer:hb(this.kernelRegularizer),kernelConstraint:_g(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new bm(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class _b extends $b{constructor(e){super(2,e),_b.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Lm(e.kernelSize,"number",1,2))throw new bm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}_b.className="Conv2D",yr(_b);class Rb extends $b{constructor(e){super(3,e),Rb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new bm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Rb.className="Conv3D",yr(Rb);class Ab extends _b{constructor(e){if(super(e),this.inputSpec=[new og({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new bm(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=tg(e)).length)throw new bm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new bm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new og({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return yi(()=>{let t=eg(e);if(4!==t.shape.length)throw new bm(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const r=n[s],o=n[i],l=this.kernelSize[0],p=this.kernelSize[1],d=this.strides[0],u=this.strides[1],c=[a,Sb(r,d,l,this.padding),Sb(o,u,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=fp(t,[0,2,3,1]));let h=jo(t,this.kernel.read(),c,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(h=fp(h,[0,3,1,2])),null!=this.bias&&(h=Cf(h,this.bias.read(),this.dataFormat)),null!=this.activation&&(h=this.activation.apply(h)),h})}computeOutputShape(e){const t=(e=tg(e)).slice();let n,a,s;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3):(n=3,a=1,s=2);const i=this.kernelSize[0],r=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[a]=Sb(t[a],o,i,this.padding),t[s]=Sb(t[s],l,r,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ab.className="Conv2DTranspose",yr(Ab);class Db extends Rb{constructor(e){if(super(e),this.inputSpec=[new og({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new bm(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=tg(e)).length)throw new bm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new bm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new og({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return yi(()=>{let t=eg(e);if(5!==t.shape.length)throw new bm(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let s,i,r;"channelsFirst"===this.dataFormat?(r=2,s=3,i=4):(r=1,s=2,i=3);const o=n[r],l=n[s],p=n[i],d=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],h=this.strides[0],m=this.strides[1],f=this.strides[2],g=[a,Sb(o,h,d,this.padding),Sb(l,m,u,this.padding),Sb(p,f,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=fp(t,[0,2,3,4,1]));let v=Xo(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=fp(v,[0,4,1,2,3])),null!==this.bias&&(v=Cf(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v})}computeOutputShape(e){const t=(e=tg(e)).slice();let n,a,s,i;"channelsFirst"===this.dataFormat?(n=1,a=2,s=3,i=4):(n=4,a=1,s=2,i=3);const r=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],p=this.strides[0],d=this.strides[1],u=this.strides[2];return t[n]=this.filters,t[a]=Sb(t[a],p,r,this.padding),t[s]=Sb(t[s],d,o,this.padding),t[i]=Sb(t[i],u,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Db.className="Conv3DTranspose",yr(Db);class Fb extends $b{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new bm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new bm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new bm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Jf(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=fb(t.depthwiseRegularizer),this.depthwiseConstraint=Ag(t.depthwiseConstraint),this.pointwiseInitializer=Jf(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=fb(t.pointwiseRegularizer),this.pointwiseConstraint=Ag(t.pointwiseConstraint)}build(e){if((e=tg(e)).length<this.rank+2)throw new bm(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new bm(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new og({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return yi(()=>{let t;if(e=eg(e),1===this.rank)throw new ym("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=fp(e,[0,2,3,1])),t=Kl(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Cf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=fp(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Yf(this.depthwiseInitializer),e.pointwiseInitializer=Yf(this.pointwiseInitializer),e.depthwiseRegularizer=hb(this.depthwiseRegularizer),e.pointwiseRegularizer=hb(this.pointwiseRegularizer),e.depthwiseConstraint=_g(this.depthwiseConstraint),e.pointwiseConstraint=_g(this.pointwiseConstraint),e}}Fb.className="SeparableConv";class Ob extends Fb{constructor(e){super(2,e)}}Ob.className="SeparableConv2D",yr(Ob);class Mb extends $b{constructor(e){super(1,e),Mb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Lm(e.kernelSize,"number",1,1))throw new bm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Mb.className="Conv1D",yr(Mb);class Lb extends cg{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return yi(()=>{if(e=eg(e),"channelsLast"===this.dataFormat){const t=bf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return bf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=bf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return bf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Lb.className="Cropping2D",yr(Lb);class Pb extends cg{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jm(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Mm(jm,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return yi(()=>{let t=eg(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=fp(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],s="nearest"===this.interpolation?kd.resizeNearestNeighbor(t,[e,a]):kd.resizeBilinear(t,[e,a]);return fp(s,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?kd.resizeNearestNeighbor(t,[e,a]):kd.resizeBilinear(t,[e,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Pb.className="UpSampling2D",yr(Pb);class zb extends Eb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Jf(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ag(e.depthwiseConstraint),this.depthwiseRegularizer=fb(e.depthwiseRegularizer)}build(e){if((e=tg(e)).length<4)throw new bm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new bm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return yi(()=>{let t=function(e,t,n=[1,1],a="valid",s,i){return yi(()=>{null==s&&(s="channelsLast"),Jm(s);let r=Nb(e,s);if(4!==e.rank)throw new bm(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new bm(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return r=Jo(r,t,n,"same"===a?"same":"valid","NHWC",i),"channelsFirst"===s&&(r=fp(r,[0,3,1,2])),r})}(e=eg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Cf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=tg(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Ib(t,this.kernelSize[0],this.padding,this.strides[0]),i=Ib(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,s,i]:[e[0],s,i,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Yf(this.depthwiseInitializer),e.depthwiseRegularizer=hb(this.depthwiseRegularizer),e.depthwiseConstraint=_g(this.depthwiseRegularizer),e}}function Vb(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new bm("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Bb(e,t,n,a=!1,s,i,r=!1,o=!1){return yi(()=>{const l=t.shape.length;if(l<3)throw new bm(`Input should be at least 3D, but is ${l}D.`);const p=[1,0].concat(uf(2,l));if(t=fp(t,p),null!=i)throw new ym("The rnn() functoin of the deeplearn.js backend does not support constants yet.");r&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=sr(sr(s,"bool"),"float32")).rank===l-1&&(s=nl(s,-1)),s=fp(s,p)),a&&(t=jl(t,0),null!=s&&(s=jl(s,0)));const d=[];let u,c=n;const h=t.shape[0],m=up(t);let f,g;null!=s&&(f=up(s));for(let t=0;t<h;++t){const n=m[t],a=yi(()=>e(n,c));if(null==s)u=a[0],c=a[1];else{const e=yi(()=>{const e=f[t],n=Nr(Ll(e),e);return{output:rr(pr(a[0],e),pr(c[0],n)),newStates:c.map((t,s)=>rr(pr(a[1][s],e),pr(t,n)))}});u=e.output,c=e.newStates}o&&d.push(u)}return o&&(g=rp(d,1)),[u,g,c]})}zb.className="DepthwiseConv2D",yr(zb);class Ub extends cg{constructor(e){let t;if(super(e),null==e.cell)throw new bm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Yb({cells:e.cell}):e.cell,null==t.stateSize)throw new bm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new og({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?uf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Zf(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return yi(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ym("Constants support is not implemented in RNN yet.");Zf(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new og({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let s;if(this.cell.build(a),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Q(this.stateSpec.map(e=>e.shape[e.shape.length-1]),s))throw new bm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(e=>new og({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){yi(()=>{if(!this.stateful)throw new gm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new bm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Ol([n,e])):this.states_=[Ol([n,this.cell.stateSize])];else if(null==e)xi(this.states_),null!=this.keptStates&&(xi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Ol([n,e])):this.states_[0]=Ol([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new bm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):xi(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!Q(a.shape,i))throw new bm(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map(e=>wi(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const s=Vb(e,n,a,this.numConstants);e=s.inputs,n=s.initialState,a=s.constants;let i=[],r=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new og({shape:e.shape}));r=r.concat(this.stateSpec)}if(null!=a&&(t.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof lg){const n=[e].concat(i),a=this.inputSpec.concat(r),s=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return yi(()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let s=null==t?null:t.initialState;e=eg(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new bm(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const r={training:a},o=Bb((e,t)=>{const n=this.cell.call([e].concat(t),r);return[n[0],n.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],p=o[1],d=o[2];this.stateful&&this.resetStates(d,a);const u=this.returnSequences?p:l;return this.returnState?[u].concat(d):u})}getInitialState(e){return yi(()=>{let t=Ol(e.shape);return t=hl(t,[1,2]),t=ff(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?wf(t,[1,e]):t):this.cell.stateSize>1?[wf(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ub.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const a=qg(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Ub.className="RNN",yr(Ub);class Wb extends cg{}class Gb extends Wb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Pm(this.units,"units"),this.activation=pb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Jf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fb(e.kernelRegularizer),this.recurrentRegularizer=fb(e.recurrentRegularizer),this.biasRegularizer=fb(e.biasRegularizer),this.kernelConstraint=Ag(e.kernelConstraint),this.recurrentConstraint=Ag(e.recurrentConstraint),this.biasConstraint=Ag(e.biasConstraint),this.dropout=pf([1,df([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=pf([1,df([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tg(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return yi(()=>{if(2!==e.length)throw new bm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const a=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jb({ones:()=>Ll(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jb({ones:()=>Ll(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,r=this.recurrentDropoutMask;s=If(null!=i?pr(e,i):e,this.kernel.read()),null!=this.bias&&(s=Cf(s,this.bias.read())),null!=r&&(n=pr(n,r));let o=rr(s,If(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ob(this.activation),useBias:this.useBias,kernelInitializer:Yf(this.kernelInitializer),recurrentInitializer:Yf(this.recurrentInitializer),biasInitializer:Yf(this.biasInitializer),kernelRegularizer:hb(this.kernelRegularizer),recurrentRegularizer:hb(this.recurrentRegularizer),biasRegularizer:hb(this.biasRegularizer),activityRegularizer:hb(this.activityRegularizer),kernelConstraint:_g(this.kernelConstraint),recurrentConstraint:_g(this.recurrentConstraint),biasConstraint:_g(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Gb.className="SimpleRNNCell",yr(Gb);class Hb extends Ub{constructor(e){e.cell=new Gb(e),super(e)}call(e,t){return yi(()=>{null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})})}static fromConfig(e,t){return new e(t)}}Hb.className="SimpleRNN",yr(Hb);class jb extends Wb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new bm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Pm(this.units,"units"),this.activation=pb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=pb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Jf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fb(e.kernelRegularizer),this.recurrentRegularizer=fb(e.recurrentRegularizer),this.biasRegularizer=fb(e.biasRegularizer),this.kernelConstraint=Ag(e.kernelConstraint),this.recurrentConstraint=Ag(e.recurrentConstraint),this.biasConstraint=Ag(e.biasConstraint),this.dropout=pf([1,df([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=pf([1,df([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=tg(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return yi(()=>{if(2!==e.length)throw new bm(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jb({ones:()=>Ll(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jb({ones:()=>Ll(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let r,o,l;0<this.dropout&&this.dropout<1&&(e=pr(e,s[0]));let p=If(e,this.kernel.read());this.useBias&&(p=Cf(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=pr(a,i[0]));const d=this.recurrentKernel.read(),[u,c]=sp(d,[2*this.units,this.units],d.rank-1),h=If(a,u),[m,f,g]=sp(p,3,p.rank-1),[v,b]=sp(h,2,h.rank-1);r=this.recurrentActivation.apply(rr(m,v)),o=this.recurrentActivation.apply(rr(f,b));const y=If(pr(o,a),c);l=this.activation.apply(rr(g,y));const x=rr(pr(r,a),pr(rr(1,Al(r)),l));return[x,x]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ob(this.activation),recurrentActivation:ob(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Yf(this.kernelInitializer),recurrentInitializer:Yf(this.recurrentInitializer),biasInitializer:Yf(this.biasInitializer),kernelRegularizer:hb(this.kernelRegularizer),recurrentRegularizer:hb(this.recurrentRegularizer),biasRegularizer:hb(this.biasRegularizer),activityRegularizer:hb(this.activityRegularizer),kernelConstraint:_g(this.kernelConstraint),recurrentConstraint:_g(this.recurrentConstraint),biasConstraint:_g(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}jb.className="GRUCell",yr(jb);class qb extends Ub{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new jb(e),super(e)}call(e,t){return yi(()=>{null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}qb.className="GRU",yr(qb);class Kb extends Wb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Pm(this.units,"units"),this.activation=pb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=pb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Jf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=fb(e.kernelRegularizer),this.recurrentRegularizer=fb(e.recurrentRegularizer),this.biasRegularizer=fb(e.biasRegularizer),this.kernelConstraint=Ag(e.kernelConstraint),this.recurrentConstraint=Ag(e.recurrentConstraint),this.biasConstraint=Ag(e.biasConstraint),this.dropout=pf([1,df([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=pf([1,df([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=tg(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends Af{apply(t,a){const s=e.apply([n]),i=(new Ff).apply([n]),r=e.apply([2*n]);return xf(xf(s,i),r)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return yi(()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new bm(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jb({ones:()=>Ll(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jb({ones:()=>Ll(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,r=this.recurrentDropoutMask;let o,l,p,d;0<this.dropout&&this.dropout<1&&(e=pr(e,i[0]));let u=If(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=pr(a,r[0])),u=rr(u,If(a,this.recurrentKernel.read())),this.useBias&&(u=Cf(u,this.bias.read()));const[c,h,m,f]=sp(u,4,u.rank-1);o=this.recurrentActivation.apply(c),l=this.recurrentActivation.apply(h),p=rr(pr(l,s),pr(o,this.activation.apply(m))),d=this.recurrentActivation.apply(f);const g=pr(d,this.activation.apply(p));return[g,g,p]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ob(this.activation),recurrentActivation:ob(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Yf(this.kernelInitializer),recurrentInitializer:Yf(this.recurrentInitializer),biasInitializer:Yf(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:hb(this.kernelRegularizer),recurrentRegularizer:hb(this.recurrentRegularizer),biasRegularizer:hb(this.biasRegularizer),activityRegularizer:hb(this.activityRegularizer),kernelConstraint:_g(this.kernelConstraint),recurrentConstraint:_g(this.recurrentConstraint),biasConstraint:_g(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Kb.className="LSTMCell",yr(Kb);class Xb extends Ub{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kb(e),super(e)}call(e,t){return yi(()=>{null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Xb.className="LSTM",yr(Xb);class Yb extends Wb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return yi(()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const s=[];let i;for(let r=0;r<this.cells.length;++r){const o=this.cells[r];n=a[r],i=0===r?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),s.push(i.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[i[0]].concat(n)})}build(e){let t;Zf(e)&&(e=e[0]),this.cells.forEach((n,a)=>{tf(`RNNCell_${a}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const a=[];for(const e of t.cells)a.push(qg(e,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return ig(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,s=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}rg(t)}}function Jb(e){const{ones:t,rate:n,training:a=!1,count:s=1,dropoutFunc:i}=e,r=()=>null!=i?i(t(),n):Ef(t(),n),o=()=>$f(r,t,a);return!s||s<=1?wi(o().clone()):Array(s).fill(void 0).map(o).map(e=>wi(e.clone()))}Yb.className="StackedRNNCells",yr(Yb);class Zb extends Ub{constructor(e){if(e.unroll)throw new ym("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ym("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new og({ndim:5})]}call(e,t){return yi(()=>{if(null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new bm("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return yi(()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),s=Ol([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){yi(()=>{if(!this.stateful)throw new gm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),s=[a[0],...a.slice(2)];if(null==n[0])throw new bm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ol(s)):this.states_=[Ol(s)];else if(null==e)xi(this.states_),null!=this.keptStates&&(xi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ol(s)):this.states_[0]=Ol(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new bm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):xi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=s;if(!Q(n.shape,a))throw new bm(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>wi(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:s,strides:i,dilationRate:r}=this.cell,o="channelsFirst"===t,l=e[o?3:2],p=e[o?4:3],d=Ib(l,a[0],s,i[0],r[0]),u=Ib(p,a[1],s,i[1],r[1]);return[...e.slice(0,2),...o?[n,d,u]:[d,u,n]]}}Zb.className="ConvRNN2D";class Qb extends Kb{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:s,dataFormat:i,dilationRate:r}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Pm(this.filters,"filters"),this.kernelSize=kb(n,2,"kernelSize"),this.kernelSize.forEach(e=>Pm(e,"kernelSize")),this.strides=kb(a||1,2,"strides"),this.strides.forEach(e=>Pm(e,"strides")),this.padding=s||"valid",Zm(this.padding),this.dataFormat=i||"channelsLast",Jm(this.dataFormat),this.dilationRate=kb(r||1,2,"dilationRate"),this.dilationRate.forEach(e=>Pm(e,"dilationRate"))}build(e){var t;e=tg(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new bm(`The channel dimension of the input should be defined. Found ${e[n]}`);const a=e[n],s=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends Af{apply(e,t){return yf([n.apply([a]),Ml([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return yi(()=>{if(3!==e.length)throw new bm(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,a=e[0],s=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jb({ones:()=>Ll(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=(e,t,n)=>t&&t[n]?pr(t[n],e):e;let l=o(a,r,0),p=o(a,r,1),d=o(a,r,2),u=o(a,r,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jb({ones:()=>Ll(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const c=this.recurrentDropoutMask;let h=o(s,c,0),m=o(s,c,1),f=o(s,c,2),g=o(s,c,3);const[v,b,y,x]=sp(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?sp(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,v,w,this.padding),p=this.inputConv(p,b,k,this.padding),d=this.inputConv(d,y,I,this.padding),u=this.inputConv(u,x,S,this.padding);const[N,T,C,E]=sp(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,N),m=this.recurrentConv(m,T),f=this.recurrentConv(f,C),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply(rr(l,h)),_=this.recurrentActivation.apply(rr(p,m)),R=rr(pr(_,i),pr($,this.activation.apply(rr(d,f)))),A=pr(this.recurrentActivation.apply(rr(u,g)),this.activation.apply(R));return[A,A,R]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(e);s<a.length;s++)t.indexOf(a[s])<0&&Object.prototype.propertyIsEnumerable.call(e,a[s])&&(n[a[s]]=e[a[s]])}return n}(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const s=Wo(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Cf(s,n,this.dataFormat):s}recurrentConv(e,t){return Wo(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Qb.className="ConvLSTM2DCell",yr(Qb);class ey extends Zb{constructor(e){const t=new Qb(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}ey.className="ConvLSTM2D",yr(ey);class ty extends cg{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return yi(()=>{this.invokeCallHook(e,t);const n=eg(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return $f(()=>Ef(n,this.rate,a,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ty.className="Dropout",yr(ty);class ny extends ty{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}ny.className="SpatialDropout1D",yr(ny);class ay extends cg{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Pm(this.units,"units"),this.activation=pb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ag(e.kernelConstraint),this.biasConstraint=Ag(e.biasConstraint),this.kernelRegularizer=fb(e.kernelRegularizer),this.biasRegularizer=fb(e.biasRegularizer),this.activityRegularizer=fb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=tg(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=tg(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return yi(()=>{this.invokeCallHook(e,t);const n=eg(e),a=Vm(this.activation.getClassName());let s;return null!=a?s=If(n,this.kernel.read(),a,this.bias?this.bias.read():null):(s=If(n,this.kernel.read()),null!=this.bias&&(s=Cf(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const e={units:this.units,activation:ob(this.activation),useBias:this.useBias,kernelInitializer:Yf(this.kernelInitializer),biasInitializer:Yf(this.biasInitializer),kernelRegularizer:hb(this.kernelRegularizer),biasRegularizer:hb(this.biasRegularizer),activityRegularizer:hb(this.activityRegularizer),kernelConstraint:_g(this.kernelConstraint),biasConstraint:_g(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ay.className="Dense",yr(ay);class sy extends cg{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tg(e);for(const t of e.slice(1))if(null==t)throw new bm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],lf(e,1)]}call(e,t){return yi(()=>{this.invokeCallHook(e,t);let n=eg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=fp(n,e)}return function(e){if(e.rank<=1)throw new bm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],lf(e.shape,1)];return $o(e,t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}sy.className="Flatten",yr(sy);class iy extends cg{constructor(e){super(e),this.supportsMasking=!0,this.activation=pb(e.activation)}call(e,t){return yi(()=>{this.invokeCallHook(e,t);const n=eg(e);return this.activation.apply(n)})}getConfig(){const e={activation:ob(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}iy.className="Activation",yr(iy);class ry extends cg{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return yi(()=>{return e=eg(e),t=e,n=this.n,yi(()=>{if(2!==t.shape.length)throw new bm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return wf(ff(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ry.className="RepeatVector",yr(ry);class oy extends cg{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let s=1,i=null;for(let e=0;e<a.length;++e){const t=a[e];if(this.isUnknown(t)){if(null!==i)throw new bm("Can only specifiy one unknown dimension.");i=e}else s*=t}const r=lf(e);if(null!==i){if(0===s||r%s!==0)throw new bm(n);a[i]=r/s}else if(r!==s)throw new bm(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return yi(()=>{this.invokeCallHook(e,t);const n=eg(e),a=n.shape,s=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return $o(n,s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}oy.className="Reshape",yr(oy);class ly extends cg{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=uf(1,e.dims.length+1);if(!Q(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new og({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=tg(e)).slice();return this.dims.forEach((n,a)=>{t[a+1]=e[n]}),t}call(e,t){return fp(eg(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ly.className="Permute",yr(ly);class py extends cg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=eg(e);return co(Dl(n,this.maskValue),-1)}call(e,t){return yi(()=>{this.invokeCallHook(e,t);const n=eg(e),a=co(Dl(n,this.maskValue),-1,!0);return pr(n,sr(a,n.dtype))})}}py.className="Masking",yr(py);class dy extends cg{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Tm(e.inputLength))}this.inputDim=e.inputDim,Pm(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Pm(this.outputDim,"outputDim"),this.embeddingsInitializer=Jf(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=fb(e.embeddingsRegularizer),this.activityRegularizer=fb(e.activityRegularizer),this.embeddingsConstraint=Ag(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return yi(()=>this.maskZero?(e=eg(e),Dl(e,cr(e))):null)}computeOutputShape(e){if(e=tg(e),null==this.inputLength)return[...e,this.outputDim];const t=Tm(this.inputLength);if(t.length!==e.length-1)throw new bm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){const s=t[a],i=e[a+1];if(null!=s&&null!=i&&s!==i)throw new bm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return yi(()=>{this.invokeCallHook(e,t);let n=eg(e);"int32"!==n.dtype&&(n=mf(n,"int32"));const a=Sf(this.embeddings.read(),$o(n,[n.size]));return $o(a,tg(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Yf(this.embeddingsInitializer),embeddingsRegularizer:hb(this.embeddingsRegularizer),activityRegularizer:hb(this.activityRegularizer),embeddingsConstraint:_g(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}dy.className="Embedding",yr(dy);class uy extends cg{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ym}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const s=e[e.length-t.length+a],i=t[a];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new bm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tg(e)]),e.length<2)throw new bm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Fm(t),t.length>1)throw new bm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const a=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}const a=e.map(e=>e.length);-1===e.indexOf(null)&&1===Fm(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return yi(()=>{if(this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const a=df(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=ff(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,s=e[0],i=e.slice(1).concat([s]);let r=$o(a,[s].concat(lf(e.slice(1))));r=fp(r,[1,0]),r=$o(r,i),t.push(r),n=!0}else if(e>1){const s=uf(1,e).concat([0]);t.push(fp(a,s)),n=!0}else t.push(a)}let a=this.mergeFunction(t);const s=a.rank;if(n)if(null==s){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=$o(fp($o(a,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(uf(0,s-1));a=fp(a,e)}return a}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const a=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Fm(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return yi(()=>{if(null==t)return null;if(!Array.isArray(t))throw new bm("`mask` should be an Array");if(!Array.isArray(e))throw new bm("`inputs` should be an Array");if(t.length!==e.length)throw new bm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:nl(e,0)))[0];for(let e=1;e<t.length-1;++e)n=Sl(n,t[e]);return n})}}class cy extends uy{constructor(e){super(e)}mergeFunction(e){return yi(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=rr(t,e[n]);return t})}}cy.className="Add",yr(cy);class hy extends uy{constructor(e){super(e)}mergeFunction(e){return yi(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=pr(t,e[n]);return t})}}hy.className="Multiply",yr(hy);class my extends uy{constructor(e){super(e)}mergeFunction(e){return yi(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=rr(t,e[n]);return pr(1/e.length,t)})}}my.className="Average",yr(my);class fy extends uy{constructor(e){super(e)}mergeFunction(e){return yi(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Rr(t,e[n]);return t})}}fy.className="Maximum",yr(fy);class gy extends uy{constructor(e){super(e)}mergeFunction(e){return yi(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=_l(t,e[n]);return t})}}gy.className="Minimum",yr(gy);class vy extends uy{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new bm("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const a=e[t].slice();a.splice(this.axis,1);let s=!1;for(const e of n)if(Q(e,a)){s=!0;break}s||n.push(a)}if(n.length>1)throw new bm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return yi(()=>yf(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new bm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[a]||null==e[a]){n[a]=null;break}n[a]+=e[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new bm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new bm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new bm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return yi(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const a=[];for(let n=0;n<e.length;++n)null==t[n]?a.push(sr(Ll(e[n]),"bool")):t[n].rank<e[n].rank?a.push(nl(t[n],-1)):a.push(t[n]);const s=Po(a,this.axis);return uo(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function by(e,t){for(;e<0;)e+=t;return e}vy.className="Concatenate",yr(vy);class yy extends uy{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){X(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ym("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new bm(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new bm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>by(t,e[n].shape.length)):[by(this.axes,n.shape.length),by(this.axes,a.shape.length)],this.normalize&&(n=Kg(n,t[0]),a=Kg(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ym("batchDot is not implemented for tensors of 4D or higher rank yet");if(X(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),X(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ym("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,s=t.shape.length;null==n&&(n=[a-1,s-2]);const i=n;return yi(()=>{let n,r;if(a>s){n=a-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=$o(t,t.shape.concat(e))}else if(s>a){n=s-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=$o(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)r=i[0]===i[1]?hl(pr(e,t),i[0]):hl(pr(fp(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,a=i[1]===t.shape.length-1;r=Nl(e,t,n,a)}if(n>0){let e;e=a>s?a+s-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);r=ip(r,t)}return 1===r.shape.length&&(r=nl(r,1)),r})}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[by(this.axes,e.length),by(this.axes,t.length)],n}computeOutputShape(e){X(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ym("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}yy.className="Dot",yr(yy);class xy extends cg{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return yi(()=>{this.invokeCallHook(e,t);const n=eg(e);return $f(()=>rr(kf(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}xy.className="GaussianNoise",yr(xy);class wy extends cg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return yi(()=>{this.invokeCallHook(e,t);const n=eg(e);return this.rate>0&&this.rate<1?$f(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return pr(n,kf(n.shape,1,e))},()=>n,t.training||!1):n})}}wy.className="GaussianDropout",yr(wy);class ky extends cg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||eg(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return yi(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return $f(()=>{const t=eg(e),a=-1.7580993408473766;let s=ll(Wl(n),this.rate);s=mf(s,"float32");const i=((1-this.rate)*(1+this.rate*a**2))**-.5,r=-i*a*this.rate,o=rr(pr(t,s),pr(rr(s,-1),a));return rr(pr(o,i),r)},()=>eg(e),t.training||!1)}return e})}}function Iy(e,t,n,a,s,i=.001){let r;if(2===e.rank)r=Do(e,t,n,a,s,i);else if(3===e.rank)r=Fo(e,t,n,a,s,i);else{if(4!==e.rank)throw new ym(`batchNormalization is not implemented for array of rank ${e.rank} yet`);r=Oo(e,t,n,a,s,i)}return r}ky.className="AlphaDropout",yr(ky);class Sy extends cg{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Jf(e.betaInitializer||"zeros"),this.gammaInitializer=Jf(e.gammaInitializer||"ones"),this.movingMeanInitializer=Jf(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Jf(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ag(e.betaConstraint),this.gammaConstraint=Ag(e.gammaConstraint),this.betaRegularizer=fb(e.betaRegularizer),this.gammaRegularizer=fb(e.gammaRegularizer)}build(e){e=tg(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new bm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new og({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return yi(()=>{const n=null!=t.training&&t.training,a=eg(e),s=a.shape,i=s.length,r=uf(0,i),o=this.axis>=0?this.axis:this.axis+i;r.splice(o,1);const l=km(1,i);l[o]=s[o];const p=r.slice();p.sort();const d=!Q(p,uf(0,i).slice(0,i-1));if(!n)return(()=>{if(d){const e=$o(this.movingMean.read(),l),t=$o(this.movingVariance.read(),l),n=this.center?$o(this.beta.read(),l):null,s=this.scale?$o(this.gamma.read(),l):null;return Iy(a,e,t,n,s,this.epsilon)}return Iy(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[u,c,h]=function(e,t,n,a,s=.001){return Q(a.slice().sort(),uf(0,e.rank-1))?function(e,t,n,a,s=.001){return yi(()=>{const i=Rl(e,a),r=i.mean,o=i.variance;return[Iy(e,r,o,n,t,s),r,o]})}(e,t,n,a,s):function(e,t,n,a,s=.001){return yi(()=>{const i=Rl(e,a),r=i.mean,o=i.variance,l=[];for(const t of uf(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);const p=$o(r,l),d=$o(o,l),u=null==t?null:$o(t,l),c=null==n?null:$o(n,l);return[Iy(e,p,d,c,u,s),r,o]})}(e,t,n,a,s)}(a,this.gamma.read(),this.beta.read(),r,this.epsilon),m=(e,t,n)=>{yi(()=>{const a=1-n,s=e.read(),i=pr(Nr(s,t),a);e.write(Nr(s,i))})};return(()=>{m(this.movingMean,c,this.momentum),m(this.movingVariance,h,this.momentum)})(),u})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Yf(this.betaInitializer),gammaInitializer:Yf(this.gammaInitializer),movingMeanInitializer:Yf(this.movingMeanInitializer),movingVarianceInitializer:Yf(this.movingVarianceInitializer),betaRegularizer:hb(this.betaRegularizer),gammaRegularizer:hb(this.gammaRegularizer),betaConstraint:_g(this.betaConstraint),gammaConstraint:_g(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Sy.className="BatchNormalization",yr(Sy);class Ny extends cg{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Jf(e.betaInitializer||"zeros"),this.gammaInitializer=Jf(e.gammaInitializer||"ones"),this.betaRegularizer=fb(e.betaRegularizer),this.gammaRegularizer=fb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=tg(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Fm(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(t=>e[t]),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=eg(e),a=n.shape,s=a.length;return yi(()=>{let{mean:e,variance:t}=Rl(n,this.axis,!0);const i=km(1,s);for(const e of this.axis)i[e]=a[e];const r=e=>null!=e&&e.shape.length!==s?$o(e,i):e;let o=this.scale?r(this.gamma.read()):null,l=this.center?r(this.beta.read()):null;const p=[],d=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(p.push(a[e]),d.push(1)):(p.push(1),d.push(a[e]));return e=al(e,p),t=al(t,p),null!=o&&(o=al(o,d)),null!=l&&(l=al(l,d)),Iy(n,e,t,l,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Yf(this.betaInitializer),gammaInitializer:Yf(this.gammaInitializer),betaRegularizer:hb(this.betaRegularizer),gammaRegularizer:hb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ny.className="LayerNormalization",yr(Ny);class Ty extends cg{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new bm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new bm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new bm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new og({ndim:4})]}computeOutputShape(e){let t,n;return e=tg(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return yi(()=>{return t=eg(e),n=this.padding,a=this.dataFormat,yi(()=>{if(4!==t.rank)throw new bm(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new bm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new bm(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Pl(t,e)});var t,n,a})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Cy(e,t,n,a,s,i){return yi(()=>{let r;Jm(s),Qm(i),Zm(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Nb(e,s);const o="same"===a?"same":"valid";return r="max"===i?Tl(e,t,n,o):_o(e,t,n,o),"channelsFirst"===s&&(r=fp(r,[0,3,1,2])),r})}function Ey(e,t,n,a,s,i){return yi(()=>{let r;Jm(s),Qm(i),Zm(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Tb(e,s);const o="same"===a?"same":"valid";return r="max"===i?Cl(e,t,n,o):Ro(e,t,n,o),"channelsFirst"===s&&(r=fp(r,[0,4,1,2,3])),r})}Ty.className="ZeroPadding2D",yr(Ty);class $y extends cg{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new bm(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Pm(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new bm(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Pm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Zm(this.padding),this.inputSpec=[new og({ndim:3})]}computeOutputShape(e){const t=Ib((e=tg(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return yi(()=>{this.invokeCallHook(e,t),e=ff(eg(e),2);const n=this.poolingFunction(eg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ip(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class _y extends $y{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return Jm(s),Zm(a),Cy(e,t,n,a,s,"max")}}_y.className="MaxPooling1D",yr(_y);class Ry extends $y{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return Jm(s),Zm(a),Cy(e,t,n,a,s,"avg")}}Ry.className="AveragePooling1D",yr(Ry);class Ay extends cg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new bm(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Pm(this.poolSize,"poolSize"),Pm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jm(this.dataFormat),Zm(this.padding),this.inputSpec=[new og({ndim:4})]}computeOutputShape(e){e=tg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Ib(t,this.poolSize[0],this.padding,this.strides[0]),n=Ib(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return yi(()=>(this.invokeCallHook(e,t),this.poolingFunction(eg(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Dy extends Ay{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return Jm(s),Zm(a),Cy(e,t,n,a,s,"max")}}Dy.className="MaxPooling2D",yr(Dy);class Fy extends Ay{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return Jm(s),Zm(a),Cy(e,t,n,a,s,"avg")}}Fy.className="AveragePooling2D",yr(Fy);class Oy extends cg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new bm(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Pm(this.poolSize,"poolSize"),Pm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jm(this.dataFormat),Zm(this.padding),this.inputSpec=[new og({ndim:5})]}computeOutputShape(e){e=tg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Ib(t,this.poolSize[0],this.padding,this.strides[0]),n=Ib(n,this.poolSize[1],this.padding,this.strides[1]),a=Ib(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return yi(()=>(this.invokeCallHook(e,t),this.poolingFunction(eg(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class My extends Oy{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return Jm(s),Zm(a),Ey(e,t,n,a,s,"max")}}My.className="MaxPooling3D",yr(My);class Ly extends Oy{constructor(e){super(e)}poolingFunction(e,t,n,a,s){return Jm(s),Zm(a),Ey(e,t,n,a,s,"avg")}}Ly.className="AveragePooling3D",yr(Ly);class Py extends cg{constructor(e){super(e),this.inputSpec=[new og({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ym}}class zy extends Py{constructor(e){super(e||{})}call(e,t){return yi(()=>{const t=eg(e);return El(t,1)})}}zy.className="GlobalAveragePooling1D",yr(zy);class Vy extends Py{constructor(e){super(e||{})}call(e,t){return yi(()=>{const t=eg(e);return cl(t,1)})}}Vy.className="GlobalMaxPooling1D",yr(Vy);class By extends cg{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jm(this.dataFormat),this.inputSpec=[new og({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ym}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Uy extends By{call(e,t){return yi(()=>{const t=eg(e);return"channelsLast"===this.dataFormat?El(t,[1,2]):El(t,[2,3])})}}Uy.className="GlobalAveragePooling2D",yr(Uy);class Wy extends By{call(e,t){return yi(()=>{const t=eg(e);return"channelsLast"===this.dataFormat?cl(t,[1,2]):cl(t,[2,3])})}}Wy.className="GlobalMaxPooling2D",yr(Wy);class Gy extends cg{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const a=qg(t.layer,n);delete t.layer;const s={layer:a};return Object.assign(s,t),new e(s)}}class Hy extends Gy{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=tg(e)).length<3)throw new bm(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=tg(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return yi(()=>Bb((e,n)=>[eg(this.layer.call(e,t)),[]],e=eg(e),[],!1,null,null,!1,!0)[1])}}Hy.className="TimeDistributed",yr(Hy);class jy extends Gy{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=qg(n),t.goBackwards=!0!==t.goBackwards;const a={};var s;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=qg(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Mm(Xm,"BidirectionalMergeMode",s),e.weights)throw new ym("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(a=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):Nm(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const s=Vb(e,n,a,this.numConstants);if(e=s.inputs,n=s.initialState,a=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const i=[],r=[];if(null!=n){const e=n.length;if(e%2>0)throw new bm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const a=n.map(e=>new og({shape:e.shape}));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),r.push(...a)}if(null!=a)throw new ym("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof lg;for(const e of i)if(e instanceof lg!==o)throw new bm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),a=this.inputSpec.concat(r),s=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return yi(()=>{const n=t.initialState;let a,s,i,r;if(null==n)a=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),r=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:r}))}return this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(s.slice(1))),a=a[0],s=s[0]),this.returnSequences&&(s=jl(s,1)),"concat"===this.mergeMode?r=yf([a,s]):"sum"===this.mergeMode?r=rr(a,s):"ave"===this.mergeMode?r=pr(.5,rr(a,s)):"mul"===this.mergeMode?r=pr(a,s):null==this.mergeMode&&(r=[a,s]),this.returnState?null==this.mergeMode?r.concat(i):[r].concat(i):r})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){tf(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),tf(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=qg(t.layer);if(delete t.layer,null!=t.numConstants)throw new ym("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}jy.className="Bidirectional",yr(jy);class qy extends cg{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return yi(()=>("float32"!==(e=eg(e)).dtype&&(e=mf(e,"float32")),rr(pr(e,this.scale),this.offset)))}}qy.className="Rescaling",yr(qy);const{resizeBilinear:Ky,cropAndResize:Xy}=kd;class Yy extends cg{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,s,i,r,o){return yi(()=>{let l,p=!1;const d=[t/i,n/r,(a+t)/i,(s+n)/r],u=[];3===e.rank?(p=!0,l=rp([e])):l=e;for(let e=0;e<l.shape[0];e++)u.push(d);const c=mi(u,[u.length,4]),h=Gl(0,u.length,1,"int32"),m=Xy(l,c,h,[a,s],"nearest");return mf(p?eg(up(m)):m,o)})}upsize(e,t,n,a){return yi(()=>mf(Ky(e,[t,n]),a))}call(e,t){return yi(()=>{const t=eg(e),n=t.dtype,a=t.shape,s=a[a.length-3],i=a[a.length-2];let r=0;s!==this.height&&(r=Math.floor((s-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),r>=0&&o>=0?this.centerCrop(t,r,o,this.height,this.width,s,i,n):this.upsize(e,this.height,this.width,n)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=tg(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Yy.className="CenterCrop",yr(Yy);class Jy extends cg{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=tg(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return yi(()=>{let n;if("int32"!==(e=eg(e)).dtype&&(e=mf(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new bm(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=eg(t.countWeights)}const a=cl(e),s=$l(e),i=ol(this.numTokens,a).bufferSync().get(0),r=ll(s,0).bufferSync().get(0);if(!i||!r)throw new bm(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,a){let s=eg(e);if("int32"!==s.dtype&&(s=mf(s,"int32")),"int"===t)return s;const i=s.shape;if(0===s.rank&&(s=nl(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=nl(s,-1)),s.rank>2)throw new bm(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);const r=["multiHot","oneHot"].includes(t);let o;if(o=Yo(s,void 0!==a&&"count"===t?a:[],n,r),"tfIdf"!==t)return o;if(a)return pr(o,a);throw new bm("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}}Jy.className="CategoryEncoding",yr(Jy);const Zy=new Set(["bilinear","nearest"]);class Qy extends cg{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Zy.has(e.interpolation))throw new bm(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=tg(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return yi(()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return kd.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return kd.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Zy]} are supported`)})}}Qy.className="Resizing",yr(Qy);class ex{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}ex.className="RandomSeed";class tx extends cg{constructor(e){super(e),this.randomGenerator=new ex(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}tx.className="BaseRandomLayer";const nx=new Set(["bilinear","nearest"]);class ax extends tx{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new bm(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new bm(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new bm(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!nx.has(n))throw new bm(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=tg(e))[2];return[this.imgHeight,-1,t]}call(e,t){return yi(()=>{const t=eg(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Wl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return kd.resizeBilinear(e,s);case"nearest":return kd.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...nx]} are supported`)}})}}function sx(e){return new _b(e)}function ix(e){return new ay(e)}var rx,ox,lx,px;function dx(e,t,n=new Map,a=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(mx(e)){const s=Array.isArray(e)?[]:{};a.add(e);for(const i in e){const r=dx(e[i],t,n,a);s[i]=r}return a.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function ux(e,t=hx){return cx(e,t)}function cx(e,t,n=new Set){const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(mx(a)){const s=Array.isArray(a)?[]:{};n.add(a);for(const i in a){const a=cx(e.map(e=>e[i]),t,n);s[i]=a}return n.delete(a),s}throw new Error(`Can't recurse into non-iterable type: ${a}`)}return s.value}function hx(e){return null===e?null:mx(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function mx(e){let t=!1;if($e().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=__webpack_require__(3193);t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Fs)&&!(e instanceof Promise)&&!t)}function fx(e){return dx(e,gx)}function gx(e){return e instanceof Fs?{value:e.clone(),recurse:!1}:mx(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}ax.className="RandomWidth",yr(ax),$e().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(rx||(rx={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(ox||(ox={})),Error,new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);class vx{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class bx extends vx{constructor(){super(bx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}bx.INITIAL_CAPACITY=32;class yx{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Ex(this,e)}filter(e){return new Tx(this,e)}map(e){return new Cx(this,e)}mapAsync(e){return new $x(this,e)}serialMapAsync(e){return new $x(this,e).serial()}flatmap(e){return new Rx(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new Nx(this,e,t)}columnMajorBatch(e,t=!0,n=hx){return this.rowMajorBatch(e,t).map(e=>ux(e,n))}concatenate(e,t){return new Ax(new xx([this,e]),t)}take(e){return e<0||null==e?this:new Sx(this,e)}skip(e){return e<0||null==e?this:new Ix(this,e)}prefetch(e){return new Dx(this,e)}shuffle(e,t){return new Fx(this,e,t)}serial(){return new kx(this)}}class xx extends yx{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:fx(e),done:!1}}}class wx extends yx{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class kx extends yx{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class Ix extends yx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;xi(e.value)}return this.upstream.next()}}class Sx extends yx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Nx extends yx{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Tx extends yx{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;xi(e.value)}}}class Cx extends yx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Xs(e.value),n=this.transform(e.value),a=Xs(n);for(const e of t)Ks(e,a)||e.dispose();return{value:n,done:!1}}}class Ex extends yx{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class $x extends yx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Xs(e.value),n=await this.transform(e.value),a=Xs(n);for(const e of t)Ks(e,a)||e.dispose();return{value:n,done:!1}}}class _x extends yx{constructor(){super(),this.outputQueue=new bx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Rx extends _x{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Xs(e.value),n=this.transform(e.value),a=Xs(n);this.outputQueue.pushAll(n);for(const e of t)Ks(e,a)||e.dispose();return!0}}class Ax extends yx{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(px=lx||(lx={}))[px.FAIL=0]="FAIL",px[px.SHORTEST=1]="SHORTEST",px[px.LONGEST=2]="LONGEST";class Dx extends yx{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new vx(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Fx extends Dx{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=h.alea(n||vs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Ox{constructor(){this.size=null}batch(e,t=!0){const n=this;let a;return X(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Mx(async()=>(await n.iterator()).columnMajorBatch(e,t,Lx),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Mx(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Mx(async()=>(await t.iterator()).filter(t=>yi(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Mx(async()=>(await t.iterator()).map(t=>yi(()=>e(t))),this.size)}mapAsync(e){const t=this;return Mx(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Mx(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Mx(async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new wx(s)).take(e),new Ax(n,a);var n,a,s},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Mx(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,s=h.alea(t||vs().toString());return Mx(async()=>{let t=s.int32();return n&&(t+=s.int32()),(await a.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Mx(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Mx(e,t=null){return new class extends Ox{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Lx(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Fs||xs(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Fs?rp(e):mi(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Px(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&X("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}Ox.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const zx=Lu;class Vx extends W{nextDataId(){return Vx.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new U(this,vi())}write(e,t,n){this.firstUse&&(this.firstUse=!1,$e().get("IS_NODE")&&Ga("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&ue(n[0])){const s=n.map(e=>bs(e));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,a,s){this.data.set(e,{values:t,dtype:a,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?tu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>ys(e));return ar(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ar(e.shape,e.dtype,t)}makeOutput(e,t,n){return vi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=vs();return e(),{kernelMs:vs()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Px([e],"where");const t=this.readSync(e.dataId);return zx(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Bx(e){return(t,n,a)=>{const s=le(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],a);return s}}function Ux(e,t,n){return Wx(e,Bx(t),n)}function Wx(e,t,n){return({inputs:a,attrs:s,backend:i})=>{const{x:r}=a;Px(r,e);const o=i,l=o.data.get(r.dataId).values;let p;if("string"===r.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");p=Ou(l)}else p=l;const d=n||r.dtype,u=t(p,d,s);return o.makeTensorInfo(r.shape,d,u)}}Vx.nextDataId=0,ki("cpu",()=>new Vx,1);const Gx=Ux(Rt,e=>e>=0?e:Math.exp(e)-1),Hx={kernelName:Rt,backendName:"cpu",kernelFunc:Gx};function jx(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const qx={kernelName:Kt,backendName:"cpu",kernelFunc:jx};function Kx(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:i}=a;Px([s],"leakyRelu");const r=Z(s.shape),o=n.data.get(s.dataId).values,l=oe("float32",r);for(let e=0;e<o.length;e++)l[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const Xx={kernelName:en,backendName:"cpu",kernelFunc:Kx};function Yx(e){return(t,n,a,s,i)=>{const r=_r(t,n),o=r.length,l=ge(r),p=oe(i,Z(r)),d=t.length,u=n.length,c=ge(t),h=ge(n),m=Er(t,r),f=Er(n,r);if(m.length+f.length===0)for(let t=0;t<p.length;++t)p[t]=e(a[t%a.length],s[t%s.length]);else for(let t=0;t<p.length;++t){const n=Se(t,o,l),i=n.slice(-d);m.forEach(e=>i[e]=0);const r=Ie(i,d,c),g=n.slice(-u);f.forEach(e=>g[e]=0);const v=Ie(g,u,h);p[t]=e(a[r],s[v])}return[p,r]}}const Jx=Yx((e,t)=>e<0?t*e:e);function Zx(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t;Px([a,s],"prelu");const i=n.data.get(a.dataId).values,r=n.data.get(s.dataId).values,[o,l]=Jx(a.shape,s.shape,i,r,"float32");return n.makeTensorInfo(l,"float32",o)}const Qx={kernelName:Mn,backendName:"cpu",kernelFunc:Zx},ew=Ux(Gn,e=>Math.max(0,e)),tw={kernelName:Gn,backendName:"cpu",kernelFunc:ew},nw=Ux(Yn,e=>Math.min(Math.max(0,e),6)),aw={kernelName:Yn,backendName:"cpu",kernelFunc:nw},sw=Bx(e=>1/(1+Math.exp(-e))),iw=Ux(pa,e=>1/(1+Math.exp(-e))),rw={kernelName:pa,backendName:"cpu",kernelFunc:iw};function ow(e,t,n,a,s){if("linear"===n)return jx({inputs:{x:t},backend:e});if("relu"===n)return ew({inputs:{x:t},backend:e});if("elu"===n)return Gx({inputs:{x:t},backend:e});if("relu6"===n)return nw({inputs:{x:t},backend:e});if("prelu"===n)return Zx({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Kx({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return iw({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function lw(e){const{inputs:t,backend:n}=e,{real:a,imag:s}=t,i=n.data.get(a.dataId).values,r=n.data.get(s.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",r)},o}const pw={kernelName:rt,backendName:"cpu",kernelFunc:lw};function dw(e,t,n="float32"){if("complex64"===n)return lw({inputs:{real:dw(e,t,"float32"),imag:dw(e,t,"float32")},backend:e});const a=xe(Z(t),n);return e.makeTensorInfo(t,n,a)}function uw(e){const{inputs:t,backend:n}=e,{input:a}=t,s=n.data.get(a.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const cw={kernelName:Un,backendName:"cpu",kernelFunc:uw};function hw(e,t,n,a){if("int32"===a)return[t,"int32",Int32Array.from(e)];if("bool"===a){const a=gs([0],n),[s,i]=Yx((e,t)=>e!==t?1:0)(t,[],e,a,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function mw(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return jx({inputs:{x:s},backend:n});const e=dw(n,s.shape,s.dtype),t=mw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=lw({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===s.dtype){const e=uw({inputs:{input:s},backend:n}),t=mw({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!pe(s.dtype,i)){const e=jx({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const r=n.data.get(s.dataId).values,[o,l,p]=hw(r,s.shape,s.dtype,i);return n.makeTensorInfo(o,l,p)}const fw={kernelName:at,backendName:"cpu",kernelFunc:mw};function gw(e,t,n,a){return null==n?({inputs:n,backend:s})=>{const{a:i,b:r}=n,o=s;Px([i,r],e);const l=o.data.get(i.dataId).values,p=o.data.get(r.dataId).values,d="string"===i.dtype?Ou(l):l,u="string"===i.dtype?Ou(p):p,c=a||i.dtype,[h,m]=t(i.shape,r.shape,d,u,c);return o.makeTensorInfo(m,c,h)}:({inputs:e,backend:s})=>{const{a:i,b:r}=e,o=s;if("complex64"===i.dtype||"complex64"===r.dtype){const e=mw({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(a.dataId).values,p=o.data.get(s.dataId).values,d=mw({inputs:{x:r},backend:o,attrs:{dtype:"complex64"}}),u=o.data.get(d.dataId),c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag,m=o.data.get(c.dataId).values,f=o.data.get(h.dataId).values,[g,v,b]=n(i.shape,r.shape,l,p,m,f),y=o.makeTensorInfo(b,"float32",g),x=o.makeTensorInfo(b,"float32",v),w=lw({inputs:{real:y,imag:x},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(x),w}{const e=o.data.get(i.dataId).values,n=o.data.get(r.dataId).values,s=a||i.dtype,[l,p]=t(i.shape,r.shape,e,n,s);return o.makeTensorInfo(p,s,l)}}}function vw(e){return(t,n,a,s,i,r)=>{const o=_r(t,n),l=Z(o),p=o.length,d=ge(o),u=oe("float32",l),c=oe("float32",l),h=Er(t,o),m=Er(n,o),f=tu(a,s),g=tu(i,r),v=t.length,b=ge(t),y=n.length,x=ge(n);if(h.length+m.length===0)for(let t=0;t<u.length;t++){const n=t%f.length,a=t%g.length,s=e(f[2*n],f[2*n+1],g[2*a],g[2*a+1]);u[t]=s.real,c[t]=s.imag}else for(let t=0;t<u.length;t++){const n=Se(t,p,d),a=n.slice(-v);h.forEach(e=>a[e]=0);const s=Ie(a,v,b),i=n.slice(-y);m.forEach(e=>i[e]=0);const r=Ie(i,y,x),o=e(f[2*s],f[2*s+1],g[2*r],g[2*r+1]);u[t]=o.real,c[t]=o.imag}return[u,c,o]}}const bw=Yx((e,t)=>e+t),yw=vw((e,t,n,a)=>({real:e+n,imag:t+a})),xw=gw(Le,bw,yw),ww={kernelName:Le,backendName:"cpu",kernelFunc:xw};function kw(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:i}=a,r=Z(s.shape),o=se(i,r),l=Z(o);X(r===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${r} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const p=n.data.get(s.dataId);if(null!=p.complexTensorInfos){const e=p.complexTensorInfos.real,t=p.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Iw={kernelName:Hn,backendName:"cpu",kernelFunc:kw};function Sw(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:i}=t,{transposeA:r,transposeB:o}=a;Px([s,i],"matMul");const l=s.shape.length,p=i.shape.length,d=r?s.shape[l-2]:s.shape[l-1],u=o?i.shape[p-1]:i.shape[p-2],c=r?s.shape[l-1]:s.shape[l-2],h=o?i.shape[p-2]:i.shape[p-1],m=s.shape.slice(0,-2),f=i.shape.slice(0,-2),g=Z(m),v=Z(f),b=_r(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([c,h]);X(d===u,()=>`Error in matMul: inner shapes (${d}) and (${u}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${r} and transposeB=${o} must match.`);const y=o?[v,h,u]:[v,u,h],x=kw({inputs:{x:s},backend:n,attrs:{shape:r?[g,d,c]:[g,c,d]}}),w=kw({inputs:{x:i},backend:n,attrs:{shape:y}}),k=r?x.shape[1]:x.shape[2],I=r?x.shape[2]:x.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,v),T=n.data.get(x.dataId).values,C=n.data.get(w.dataId).values,E=ge(x.shape),$=ge(w.shape),[_,R,A]=r?[E[0],1,E[1]]:[E[0],E[1],1],[D,F,O]=o?[1,$[1],$[0]]:[$[1],1,$[0]],M=I*S,L=ar([N,I,S],x.dtype),P=L.values,z=n.blockSize;for(let e=0;e<N;e++){const t=e%g,n=e%v;for(let a=0;a<I;a+=z){const s=Math.min(a+z,I);for(let i=0;i<S;i+=z){const r=Math.min(i+z,S);for(let o=0;o<k;o+=z){const l=Math.min(o+z,k);for(let p=a;p<s;p++)for(let a=i;a<r;a++){let s=0;for(let e=o;e<l;e++)s+=T[t*_+p*R+e*A]*C[e*D+a*F+n*O];P[e*M+(p*S+a)]+=s}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const Nw={kernelName:Ze,backendName:"cpu",kernelFunc:Sw},Tw={kernelName:Ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:i,bias:r,preluActivationWeights:o}=t,{transposeA:l,transposeB:p,activation:d,leakyreluAlpha:u}=a;let c,h,m;const f=[];c=Sw({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:p},backend:n}),r&&(h=xw({inputs:{a:c,b:r},backend:n}),f.push(c),c=h),d&&(m=ow(n,c,d,o,u),f.push(c),c=m);for(const e of f)n.disposeIntermediateTensorInfo(e);return c}};function Cw(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Ew={kernelName:Fe,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Px(t,"abs");let a=new Float32Array(Z(t.shape));return a=Cw(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},$w=Ux(Oe,e=>Math.acos(e)),_w={kernelName:Oe,backendName:"cpu",kernelFunc:$w},Rw=Ux(Me,e=>Math.acosh(e)),Aw={kernelName:Me,backendName:"cpu",kernelFunc:Rw},Dw={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;Px(t,"addN");const s=a.map(e=>n.data.get(e.dataId).values),i=ar(a[0].shape,a[0].dtype),r=i.values;for(let e=0;e<a.length;e++){const t=s[e];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function Fw(e,t,n,a,s){const i=t.length,r=Z(t),o=ge(t),l=ge(s),p=oe(n,Z(s));for(let t=0;t<r;++t){const n=Se(t,i,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[a[e]];p[Ie(s,i,l)]=e[t]}return p}function Ow(e){const{inputs:t,attrs:n,backend:a}=e,{x:s}=t,{perm:i}=n;Px(s,"transpose");const r=s.shape.length,o=new Array(r);for(let e=0;e<o.length;e++)o[e]=s.shape[i[e]];const l=Fw(a.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:a.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const Mw={kernelName:Fa,backendName:"cpu",kernelFunc:Ow},Lw={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a;Px(s,"all");const o=ie(i,s.shape);let l=o;const p=xl(l,s.shape.length);let d=s;null!=p&&(d=Ow({inputs:{x:s},backend:n,attrs:{perm:p}}),l=kl(l.length,s.shape.length)),yl("all",l,d.shape.length);const[u,c]=vl(d.shape,l),h=Z(c),m=xe(Z(u),d.dtype),f=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*h;let n=f[t];for(let e=0;e<h;++e){const a=f[t+e];n=n&&a}m[e]=n}null!=p&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(u,d.dtype,m);if(r){const e=kw({inputs:{x:g},backend:n,attrs:{shape:bl(u,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Pw={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a;Px(s,"any");const o=ie(i,s.shape);let l=o;const p=xl(l,s.shape.length);let d=s;null!=p&&(d=Ow({inputs:{x:s},backend:n,attrs:{perm:p}}),l=kl(l.length,s.shape.length)),yl("any",l,d.shape.length);const[u,c]=vl(d.shape,l),h=Z(c),m=xe(Z(u),d.dtype),f=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*h;let n=f[t];for(let e=0;e<h;++e){const a=f[t+e];n=n||a}m[e]=n}null!=p&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(u,d.dtype,m);if(r){const e=kw({inputs:{x:g},backend:n,attrs:{shape:bl(u,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},zw={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;Px(s,"argMax");let r=ie(i,s.shape);const o=xl(r,s.shape.length);let l=s;const p=[];null!=o&&(l=Ow({inputs:{x:s},backend:n,attrs:{perm:o}}),p.push(l),r=kl(r.length,l.shape.length)),r=[r[0]],yl("argMax",r,l.shape.length);const[d,u]=vl(l.shape,r),c=xe(Z(d),"int32"),h=Z(u),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){const t=e*h;let n=m[t],a=0;for(let e=0;e<h;++e){const s=m[t+e];s>n&&(n=s,a=e)}c[e]=a}return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",c)}},Vw={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;Px(s,"argMin");let r=ie(i,s.shape);const o=xl(r,s.shape.length);let l=s;const p=[];null!=o&&(l=Ow({inputs:{x:s},backend:n,attrs:{perm:o}}),p.push(l),r=kl(r.length,l.shape.length)),r=[r[0]],yl("argMin",r,l.shape.length);const[d,u]=vl(l.shape,r),c=xe(Z(d),"int32"),h=Z(u),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){const t=e*h;let n=m[t],a=0;for(let e=0;e<h;++e){const s=m[t+e];s<n&&(n=s,a=e)}c[e]=a}return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",c)}},Bw=Ux(We,e=>Math.asin(e)),Uw={kernelName:We,backendName:"cpu",kernelFunc:Bw},Ww=Ux(Ge,e=>Math.asinh(e)),Gw={kernelName:Ge,backendName:"cpu",kernelFunc:Ww},Hw=Ux(He,e=>Math.atan(e)),jw={kernelName:He,backendName:"cpu",kernelFunc:Hw},qw=Yx((e,t)=>Math.atan2(e,t)),Kw=gw(qe,qw),Xw={kernelName:qe,backendName:"cpu",kernelFunc:Kw},Yw=Ux(je,e=>Math.atanh(e)),Jw={kernelName:je,backendName:"cpu",kernelFunc:Yw};function Zw(e,t,n,a,s,i){const r=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,p=s.dilationWidth,d=s.effectiveFilterHeight,u=s.effectiveFilterWidth,c=s.padInfo.top,h=s.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=ar(s.outShape,n),g=f.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],y=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*v,f=t*a[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outHeight;++v){const x=v*r-c,w=Math.max(0,x),k=Math.min(s.inHeight,d+x),I=n+v*b;for(let n=0;n<s.outWidth;++n){const r=n*o-h,d=Math.max(0,r),c=Math.min(s.inWidth,u+r);let v=m,b=0,x=0;for(let n=w;n<k;n+=l){const s=f+n*a[1];for(let n=d;n<c;n+=p){const r=e[s+n*a[2]+t];"max"===i&&r>v?v=r:"avg"===i&&(b+=r,x++)}if(isNaN(v))break}g[I+n*y+t]="avg"===i?b/x:v}}}return f}function Qw(e,t,n,a,s=!1,i=!1){const r=ar(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,p=a.dilationHeight,d=a.dilationWidth,u=a.effectiveFilterHeight,c=a.effectiveFilterWidth,h=a.padInfo.top,m=a.padInfo.left,f=ar(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const g=n*o-h;let v=g;for(;v<0;)v+=p;const b=Math.min(a.inHeight,u+g);for(let o=0;o<a.outWidth;++o){const u=o*l-m;let h=u;for(;h<0;)h+=d;const y=Math.min(a.inWidth,c+u);let x=Number.NEGATIVE_INFINITY,w=-1;for(let n=v;n<b;n+=p){const r=n-g;for(let o=h;o<y;o+=d){const l=o-u,p=f.get(e,n,o,t);p>x&&(x=p,w=s?i?((e*a.inHeight+n)*a.inWidth+o)*a.inChannels+t:(n*a.inWidth+o)*a.inChannels+t:r*c+l)}}r.set(w,e,n,o,t)}}return r}function ek(e,t,n,a,s,i){const r=s.strideDepth,o=s.strideHeight,l=s.strideWidth,p=s.dilationDepth,d=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterDepth,h=s.effectiveFilterHeight,m=s.effectiveFilterWidth,f=s.padInfo.front,g=s.padInfo.top,v=s.padInfo.left,b="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ar(s.outShape,n),x=y.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,y=t*a[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const N=w*r-f;let T=N;for(;T<0;)T+=p;const C=Math.min(s.inDepth,c+N),E=n+w*k;for(let n=0;n<s.outHeight;++n){const r=n*o-g;let c=r;for(;c<0;)c+=d;const f=Math.min(s.inHeight,h+r),w=E+n*I;for(let n=0;n<s.outWidth;++n){const r=n*l-v;let o=r;for(;o<0;)o+=u;const h=Math.min(s.inWidth,m+r),g=w+n*S;let k=b,I=0,N=0;for(let n=T;n<C;n+=p){const s=y+n*a[1];for(let n=c;n<f;n+=d){const r=s+n*a[2];for(let n=o;n<h;n+=u){const s=e[r+n*a[3]+t];if("max"===i&&s>k?k=s:"avg"===i&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+t]="avg"===i?I/Math.max(N,1):k}}}}return y}const tk={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;Px(s,"avgPool");const{filterSize:i,strides:r,pad:o,dimRoundingMode:l}=a;X(No(r,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`);const p=fo(s.shape,i,r,1,o,l);let d;if(1===p.filterWidth&&1===p.filterHeight&&Q(p.inShape,p.outShape))d=jx({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=ge(s.shape),a=Zw(e,s.shape,s.dtype,t,p,"avg");d=n.makeTensorInfo(p.outShape,s.dtype,a.values)}return d}},nk={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:r,pad:o,dimRoundingMode:l,dataFormat:p}=a;Px(s,"avgPool3d");const d=go(s.shape,i,r,1,o,l,p),u=ek(n.data.get(s.dataId).values,s.shape,s.dtype,ge(s.shape),d,"avg");return n.makeTensorInfo(u.shape,"float32",u.values)}},ak={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,{filterSize:r,strides:o,pad:l,dimRoundingMode:p}=a;Px([s,i],"avgPool3DGrad");const d=go(i.shape,r,o,1,l,p),u=d.strideDepth,c=d.strideHeight,h=d.strideWidth,m=d.filterDepth,f=d.filterHeight,g=d.filterWidth,v=d.dilationDepth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterDepth,w=d.effectiveFilterHeight,k=d.effectiveFilterWidth,I=x-1-d.padInfo.front,S=k-1-d.padInfo.left,N=w-1-d.padInfo.top,T=ar(i.shape,"float32"),C=1/(m*f*g),E=n.bufferSync(s);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let a=0;a<d.inHeight;++a)for(let s=0;s<d.inWidth;++s){const i=n-I,r=a-N,o=s-S;let l=0;for(let n=0;n<x;n+=v){const a=(i+n)/u;if(!(a<0||a>=d.outDepth||Math.floor(a)!==a))for(let n=0;n<w;n+=b){const s=(r+n)/c;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=y){const i=(o+n)/h;i<0||i>=d.outWidth||Math.floor(i)!==i||(l+=E.get(e,a,s,i,t))}}}T.set(l*C,e,n,a,s,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},sk={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,r=i;Px([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:p}=a,d=fo(r.shape,o,l,1,p),u=d.strideHeight,c=d.strideWidth,h=d.filterHeight,m=d.filterWidth,f=d.dilationHeight,g=d.dilationWidth,v=d.effectiveFilterHeight,b=d.effectiveFilterWidth,y=b-1-d.padInfo.left,x=v-1-d.padInfo.top,w=ar(r.shape,"float32"),k=1/(h*m),I=n.data.get(s.dataId).values,S=ar(s.shape,"float32",I);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const s=n-x,i=a-y;let r=0;for(let n=0;n<v;n+=f){const a=(s+n)/u;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<b;n+=g){const s=(i+n)/c;s<0||s>=d.outWidth||Math.floor(s)!==s||(r+=S.get(e,a,s,t))}}w.set(r*k,e,n,a,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},ik={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,scale:i,offset:r,mean:o,variance:l}=t;X(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),X(null==r||o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),X(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Px([s,o,l,i,r],"batchNorm");let{varianceEpsilon:p}=a;null==p&&(p=.001);const d=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,c=n.data.get(l.dataId).values,h=i?n.data.get(i.dataId).values:new Float32Array([1]),m=r?n.data.get(r.dataId).values:new Float32Array([0]),f=new Float32Array(d.length),g=m.length,v=h.length,b=c.length,y=u.length;let x=0,w=0,k=0,I=0;for(let e=0;e<d.length;++e)f[e]=m[x++]+(d[e]-u[w++])*h[k++]/Math.sqrt(c[I++]+p),x>=g&&(x=0),w>=y&&(w=0),k>=v&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,f)}};function rk(e,t,n,a,s){const i=io(a,t,n),r=Z(n),o=ge(a);if(i){const n=ro(t,o);return"string"===s?e.slice(n,n+r):e.subarray(n,n+r)}const l=ar(a,s,"string"===s?Ou(e):e),p=ar(n,s);for(let e=0;e<p.size;++e){const n=p.indexToLoc(e),a=n.map((e,n)=>e+t[n]);p.set(l.get(...a),...n)}return"string"===s?Mu(p.values):p.values}function ok(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,size:r}=a;Px(s,"slice");const[o,l]=oo(s,i,r);qr(s,o,l);const p=rk(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,p)}const lk={kernelName:ia,backendName:"cpu",kernelFunc:ok},pk={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,crops:r}=a;Px([s],"batchToSpaceND");const o=i.reduce((e,t)=>e*t),l=Pd(s.shape,i,o),p=zd(l.length,i.length),d=Vd(s.shape,i,o),u=Bd(r,i.length),c=Ud(d,r,i.length),h=kw({inputs:{x:s},backend:n,attrs:{shape:l}}),m=Ow({inputs:{x:h},backend:n,attrs:{perm:p}}),f=kw({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ok({inputs:{x:f},backend:n,attrs:{begin:u,size:c}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}};function dk(e,t,n,a,s){const i=Z(a),r=xe(s,n);for(let n=0;n<e.length;n++){const a=e[n];if(a<0)throw new Error("Input x must be non-negative!");a>=s||(r[a]+=i>0?t[n]:1)}return r}function uk(e,t,n,a=!1){const s=e.shape[0],i=e.shape[1],r=ar([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=e.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(a?r.set(1,o,i):t.size>0?r.set(r.get(o,i)+t.get(o,s),o,i):r.set(r.get(o,i)+1,o,i))}return r}const ck={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:i}=t,{size:r}=a,o=dk(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,r);return n.makeTensorInfo([r],i.dtype,o)}},hk=Yx((e,t)=>e&t),mk={kernelName:tt,backendName:"cpu",kernelFunc:gw(tt,hk)},fk={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,i=n.data.get(a.dataId).values,r=n.data.get(s.dataId).values,o=_r(Array.from(i),Array.from(r));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},gk=Bx(e=>Math.ceil(e)),vk=Wx(st,gk),bk={kernelName:st,backendName:"cpu",kernelFunc:vk},yk=Ux(it,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),xk={kernelName:it,backendName:"cpu",kernelFunc:yk},wk={kernelName:ot,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(Z(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,r=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(r.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};function kk(e,t,n,a){const s=le(n,Z(t));if(a&&"string"!==n){let t=0;e.forEach(e=>{const n=Z(e.shape);s.set(e.vals,t),t+=n})}else{let a=0;e.forEach(e=>{const i="string"===n?Ou(e.vals):e.vals;let r=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[o+t]=i[r++]}a+=e.shape[1]})}return s}function Ik(e){const{inputs:t,backend:n}=e,{input:a}=t,s=n.data.get(a.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Sk={kernelName:Yt,backendName:"cpu",kernelFunc:Ik};function Nk(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,i=ie(s,t[0].shape)[0];Ed(t.map(e=>e.shape),i);let r=$d(t.map(e=>e.shape),i);if(0===Z(r))return n.makeTensorInfo(r,t[0].dtype,[]);const o=t.filter(e=>Z(e.shape)>0);if(1===o.length)return jx({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map(e=>uw({inputs:{input:e},backend:n})),t=o.map(e=>Ik({inputs:{input:e},backend:n})),a=Nk({inputs:e,backend:n,attrs:{axis:i}}),s=Nk({inputs:t,backend:n,attrs:{axis:i}}),r=lw({inputs:{real:a,imag:s},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),r}const l=o.map(e=>{const t=Z(e.shape.slice(i));return kw({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),p=l.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));r=$d(l.map(e=>e.shape),1);const d=1===l[0].shape[0],u=kk(p,r,t[0].dtype,d),c=$d(o.map(e=>e.shape),i),h=n.makeTensorInfo(c,t[0].dtype,u);return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}const Tk={kernelName:lt,backendName:"cpu",kernelFunc:Nk};function Ck(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:r,pad:o,dataFormat:l,dilations:p,dimRoundingMode:d}=a;Px([s,i],"conv2d");const u=Co(l),c=vo(s.shape,i.shape,r,p,o,d,!1,u),h=c.filterHeight,m=c.filterWidth,f=c.dilationHeight,g=c.dilationWidth,v=c.padInfo.left,b=c.padInfo.top,y="channelsLast"===c.dataFormat,x=new _s(c.outShape,s.dtype),w=ge(s.shape),k=ge(i.shape),I=w[0],S=y?w[1]:w[2],N=y?w[2]:1,T=y?1:w[1],C=x.strides[0],E=y?x.strides[1]:x.strides[2],$=y?x.strides[2]:1,_=y?1:x.strides[1],R=n.data.get(s.dataId).values,A=n.data.get(i.dataId).values,D=x.values;for(let e=0;e<c.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<c.outHeight;++e){const a=n+e*E,s=e*c.strideHeight-b;for(let e=0;e<h;++e){const n=s+e*f;if(n<0||n>=c.inHeight)continue;const i=e*k[0],r=t+n*S;for(let e=0;e<c.outWidth;++e){const t=a+e*$,n=e*c.strideWidth-v;for(let e=0;e<m;++e){const a=n+e*g;if(a<0||a>=c.inWidth)continue;const s=r+a*N;let o=i+e*k[1];for(let e=0;e<c.inChannels;++e){const n=R[s+e*T];for(let e=0;e<c.outChannels;++e)D[t+e*_]+=n*A[o+e];o+=c.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,D)}const Ek={kernelName:pt,backendName:"cpu",kernelFunc:Ck},$k={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:r,pad:o,dataFormat:l,dimRoundingMode:p,filterShape:d}=a;Px([s,i],"conv2dBackpropFilter");const u=Co(l),c=vo(s.shape,d,r,1,o,p,!1,u),{strideHeight:h,strideWidth:m,filterHeight:f,filterWidth:g}=c,v="channelsLast"===c.dataFormat,b=new _s(c.filterShape,"float32"),y=c.padInfo.left,x=c.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new _s(s.shape,s.dtype,w),S=new _s(i.shape,i.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((x-e)/h)),n=Math.min(c.outHeight,(c.inHeight+x-e)/h);for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((y-a)/m)),i=Math.min(c.outWidth,(c.inWidth+y-a)/m);for(let r=0;r<c.inChannels;++r)for(let o=0;o<c.outChannels;++o){let l=0;for(let p=0;p<c.batchSize;++p)for(let d=t;d<n;++d){const t=e+d*h-x;for(let e=s;e<i;++e){const n=a+e*m-y;l+=v?I.get(p,t,n,r)*S.get(p,d,e,o):I.get(p,r,t,n)*S.get(p,o,d,e)}}b.set(l,e,a,r,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},_k={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{inputShape:r,strides:o,pad:l,dataFormat:p,dimRoundingMode:d}=a;Px([s,i],"conv2dBackpropInput");const u=ge(i.shape),c=ge(s.shape);let h=Co(p);const m=vo(r,i.shape,o,1,l,d,!1,h),f=new _s(m.inShape,"float32"),g=f.values,v=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,[y,x,w]=u,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:E,outHeight:$,outWidth:_,strideHeight:R,strideWidth:A}=m;h=m.dataFormat;const D=I-1-m.padInfo.top,F=S-1-m.padInfo.left,O="channelsLast"===h,M=f.strides[0],L=O?f.strides[1]:f.strides[2],P=O?f.strides[2]:1,z=O?1:f.strides[1],V=c[0],B=O?c[1]:c[2],U=O?c[2]:1,W=O?1:c[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const a=n-D,s=Math.max(0,Math.ceil(a/R)),i=Math.min($,(I+a)/R);for(let r=0;r<C;++r){const o=r-F,l=Math.max(0,Math.ceil(o/A)),p=Math.min(_,(S+o)/A);let d=0;for(let n=s;n<i;++n){const s=n*R-a;for(let a=l;a<p;++a){const i=V*e+B*n+U*a,r=y*(I-1-s)+x*(S-1-(a*A-o))+w*t;for(let e=0;e<E;++e)d+=v[i+W*e]*b[r+e]}}g[M*e+L*n+P*r+z*t]=d}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Rk={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:r,pad:o,dilations:l}=a;Px([s,i],"conv3d");const p=bo(s.shape,i.shape,r,l,o),{filterDepth:d,filterHeight:u,filterWidth:c,dilationDepth:h,dilationHeight:m,dilationWidth:f,padInfo:g}=p,v=g.front,b=g.left,y=g.top,x=new _s(p.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=x.values,S=ge(s.shape),N=ge(i.shape);for(let e=0;e<p.batchSize;++e){const t=e*S[0],n=e*x.strides[0];for(let e=0;e<p.outDepth;++e){const a=n+e*x.strides[1],s=e*p.strideDepth-v;for(let e=0;e<d;++e){const n=s+e*h;if(n<0||n>=p.inDepth)continue;const i=e*N[0],r=t+n*S[1];for(let e=0;e<p.outHeight;++e){const t=a+e*x.strides[2],n=e*p.strideHeight-y;for(let e=0;e<u;++e){const a=n+e*m;if(a<0||a>=p.inHeight)continue;const s=i+e*N[1],o=r+a*S[2];for(let e=0;e<p.outWidth;++e){const n=t+e*p.outChannels,a=e*p.strideWidth-b;for(let e=0;e<c;++e){const t=a+e*f;if(t<0||t>=p.inWidth)continue;const i=s+e*N[2],r=o+t*p.inChannels;let l=i;for(let e=0;e<p.inChannels;++e){const t=w[r+e];for(let e=0;e<p.outChannels;++e)I[n+e]+=t*k[l+e];l+=p.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Ak={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:r,pad:o,filterShape:l}=a;Px([s,i],"conv3dBackpropFilterV2");const p=ge(s.shape),d=ge(i.shape),u=bo(s.shape,l,r,1,o),c=u.strideDepth,h=u.strideHeight,m=u.strideWidth,f=u.filterDepth,g=u.filterHeight,v=u.filterWidth,b=new _s(u.filterShape,"float32"),y=b.values,[x,w,k,I]=b.strides,S=n.data.get(i.dataId).values,[N,T,C,E]=d,$=n.data.get(s.dataId).values,[_,R,A,D]=p,F=u.padInfo.front,O=u.padInfo.left,M=u.padInfo.top;for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((F-e)/c)),n=Math.min(u.outDepth,(u.inDepth+F-e)/c),a=e*x;for(let s=0;s<g;++s){const i=Math.max(0,Math.ceil((M-s)/h)),r=Math.min(u.outHeight,(u.inHeight+M-s)/h),o=s*w+a;for(let a=0;a<v;++a){const l=Math.max(0,Math.ceil((O-a)/m)),p=Math.min(u.outWidth,(u.inWidth+O-a)/m),d=a*k+o;for(let o=0;o<u.inChannels;++o){const f=o*I+d;for(let d=0;d<u.outChannels;++d){let g=0;for(let f=0;f<u.batchSize;++f){const u=f*_,v=f*N;for(let f=t;f<n;++f){const t=(e+f*c-F)*R+u,n=f*T+v;for(let e=i;e<r;++e){const i=(s+e*h-M)*A+t,r=e*C+n;for(let e=l;e<p;++e){const t=e*E+r;g+=$[(a+e*m-O)*D+i+o]*S[t+d]}}}}y[f+d]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Dk={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{pad:r,strides:o,inputShape:l}=a;Px([s],"conv3dBackpropInputV2");const p=ge(s.shape),d=ge(i.shape),u=bo(l,i.shape,o,1,r),c=new _s(u.inShape,"float32"),h=c.values,[m,f,g,v]=c.strides,b=n.data.get(s.dataId).values,[y,x,w,k]=p,I=n.data.get(i.dataId).values,[S,N,T,C]=d,{batchSize:E,filterDepth:$,filterHeight:_,filterWidth:R,inChannels:A,inDepth:D,inHeight:F,inWidth:O,outChannels:M,outDepth:L,outHeight:P,outWidth:z,strideDepth:V,strideHeight:B,strideWidth:U}=u,W=$-1-u.padInfo.front,G=_-1-u.padInfo.top,H=R-1-u.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<A;++t)for(let n=0;n<D;++n){const a=n-W,s=Math.max(0,Math.ceil(a/V)),i=Math.min(L,($+a)/V);for(let r=0;r<F;++r){const o=r-G,l=Math.max(0,Math.ceil(o/B)),p=Math.min(P,(_+o)/B);for(let d=0;d<O;++d){const u=d-H,c=Math.max(0,Math.ceil(u/U)),E=Math.min(z,(R+u)/U);let A=0;for(let n=s;n<i;++n){const s=n*V-a;for(let a=l;a<p;++a){const i=a*B-o;for(let r=c;r<E;++r){const o=y*e+x*n+w*a+k*r,l=S*($-1-s)+N*(_-1-i)+T*(R-1-(r*U-u))+C*t;for(let e=0;e<M;++e)A+=b[o+e]*I[l+e]}}}h[m*e+f*n+g*r+v*d+t]=A}}}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},Fk=Ux(ft,e=>Math.cos(e)),Ok={kernelName:ft,backendName:"cpu",kernelFunc:Fk},Mk=Ux(gt,e=>Math.cosh(e)),Lk={kernelName:gt,backendName:"cpu",kernelFunc:Mk},Pk={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:i,boxInd:r}=t,{cropSize:o,method:l,extrapolationValue:p}=a,[d,u,c,h]=s.shape,m=i.shape[0],[f,g]=o,v=ar([m,f,g,h],"float32"),b=n.data.get(i.dataId).values,y=n.data.get(r.dataId).values,x=n.data.get(s.dataId).values,w=ge(s.shape),k=ge(v.shape);for(let e=0;e<m;e++){const t=4*e,n=b[t],a=b[t+1],s=b[t+2],i=b[t+3],r=y[e];if(r>=d)continue;const o=f>1?(s-n)*(u-1)/(f-1):0,m=g>1?(i-a)*(c-1)/(g-1):0;for(let t=0;t<f;t++){const d=f>1?n*(u-1)+t*o:.5*(n+s)*(u-1);if(d<0||d>u-1)for(let n=0;n<g;n++)for(let a=0;a<h;a++){const s=a+n*k[2]+t*k[1]+e*k[0];v.values[s]=p}else if("bilinear"===l){const n=Math.floor(d),s=Math.ceil(d),o=d-n;for(let l=0;l<g;l++){const d=g>1?a*(c-1)+l*m:.5*(a+i)*(c-1);if(d<0||d>c-1){for(let n=0;n<h;n++){const a=n+l*k[2]+t*k[1]+e*k[0];v.values[a]=p}continue}const u=Math.floor(d),f=Math.ceil(d),b=d-u;for(let a=0;a<h;a++){let i=a+u*w[2]+n*w[1]+r*w[0];const p=x[i];i=a+f*w[2]+n*w[1]+r*w[0];const d=x[i];i=a+u*w[2]+s*w[1]+r*w[0];const c=x[i];i=a+f*w[2]+s*w[1]+r*w[0];const h=p+(d-p)*b,m=c+(x[i]-c)*b;i=a+l*k[2]+t*k[1]+e*k[0],v.values[i]=h+(m-h)*o}}}else for(let n=0;n<g;++n){const s=g>1?a*(c-1)+n*m:.5*(a+i)*(c-1);if(s<0||s>c-1){for(let a=0;a<h;a++){const s=a+n*k[2]+t*k[1]+e*k[0];v.values[s]=p}continue}const o=Math.round(s),l=Math.round(d);for(let a=0;a<h;a++){const s=a+o*w[2]+l*w[1]+r*w[0],i=a+n*k[2]+t*k[1]+e*k[0];v.values[i]=x[s]}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},zk={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,exclusive:r,reverse:o}=a;Px(s,"cumprod");const l=xl([i],s.shape.length);let p=s;null!=l&&(p=Ow({inputs:{x:s},backend:n,attrs:{perm:l}}));const d=kl(1,s.shape.length)[0];if(d!==p.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${d}`);const u=Ws(p.dtype,"int32"),c=ye(Z(p.shape),u),h=n.data.get(p.dataId).values,m=p.shape[p.shape.length-1],f=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=m)for(let t=0;t<m;t++){const n=f(e,t);if(0===t)c[n]=r?1:h[n];else{const a=f(e,t-1);c[n]=r?h[a]*c[a]:h[n]*c[a]}}const g=n.makeTensorInfo(p.shape,u,c);if(null!=l){const e=Ow({inputs:{x:g},backend:n,attrs:{perm:wl(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(p),e}return g}},Vk={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,exclusive:r,reverse:o}=a;Px(s,"cumsum");const l=xl([i],s.shape.length);let p=s;null!=l&&(p=Ow({inputs:{x:s},backend:n,attrs:{perm:l}}));const d=kl(1,s.shape.length)[0];if(d!==p.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${d}`);const u=Ws(p.dtype,"int32"),c=xe(Z(p.shape),u),h=n.data.get(p.dataId).values,m=p.shape[p.shape.length-1],f=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=m)for(let t=0;t<m;t++){const n=f(e,t);if(0===t)c[n]=r?0:h[n];else{const a=f(e,t-1);c[n]=r?h[a]+c[a]:h[n]+c[a]}}const g=n.makeTensorInfo(p.shape,u,c);if(null!=l){const e=Ow({inputs:{x:g},backend:n,attrs:{perm:wl(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(p),e}return g}},Bk={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:i}=t,{size:r,binaryOutput:o}=a;if(1===s.shape.length){const e=dk(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,r);return n.makeTensorInfo([r],i.dtype,e)}if(2===s.shape.length){const e=uk(n.bufferSync(s),n.bufferSync(i),r,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Uk={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:i,dataFormat:r}=a;X("NHWC"===r,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${r}`);const o=s.shape[0],l=s.shape[1],p=s.shape[2],d=s.shape[3],u=l*i,c=p*i,h=d/(i*i),m=n.data.get(s.dataId).values,f=new Float32Array(o*u*c*h);let g=0;for(let e=0;e<o;++e)for(let t=0;t<u;++t){const n=Math.floor(t/i),a=t%i;for(let t=0;t<c;++t){const s=Math.floor(t/i),r=(a*i+t%i)*h;for(let t=0;t<h;++t){const a=t+r+d*(s+p*(n+l*e));f[g++]=m[a]}}}return n.makeTensorInfo([o,u,c,h],s.dtype,f)}};function Wk(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:r,pad:o,dilations:l,dimRoundingMode:p}=a;Px([s,i],"depthwiseConv2DNative");const d=ge(s.shape),u=ge(i.shape);let c=l;null==c&&(c=[1,1]),X(No(r,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const h=vo(s.shape,i.shape,r,c,o,p,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:v,padInfo:b}=h,y=b.left,x=b.top,w=h.outChannels/h.inChannels,k=new _s(h.outShape,s.dtype),I=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,N=k.values;for(let e=0;e<h.batchSize;++e){const t=e*d[0],n=e*k.strides[0];for(let e=0;e<h.outHeight;++e){const a=n+e*k.strides[1],s=e*h.strideHeight-x;for(let e=0;e<m;++e){const n=s+e*g;if(n<0||n>=h.inHeight)continue;const i=e*u[0],r=t+n*d[1];for(let e=0;e<h.outWidth;++e){const t=a+e*k.strides[2],n=e*h.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*v;if(a<0||a>=h.inWidth)continue;const s=i+e*u[1],o=r+a*h.inChannels;let l=t,p=s;for(let e=0;e<h.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*S[p+e];l+=w,p+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Gk={kernelName:kt,backendName:"cpu",kernelFunc:Wk},Hk={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:r,dilations:o,pad:l,dimRoundingMode:p,filterShape:d}=a;Px([s,i],"depthwiseConv2dNativeBackpropFilter");const u=vo(s.shape,d,r,o,l,p,!0),{strideHeight:c,strideWidth:h,filterHeight:m,filterWidth:f}=u,g=new _s(u.filterShape,"float32"),v=u.padInfo.left,b=u.padInfo.top,y=u.outChannels/u.inChannels,x=n.data.get(s.dataId).values,w=new _s(s.shape,s.dtype,x),k=n.data.get(i.dataId).values,I=new _s(i.shape,i.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((b-e)/c)),n=Math.min(u.outHeight,(u.inHeight+b-e)/c);for(let a=0;a<f;++a){const s=Math.max(0,Math.ceil((v-a)/h)),i=Math.min(u.outWidth,(u.inWidth+v-a)/h);for(let r=0;r<u.outChannels;++r){const o=Math.trunc(r/y),l=r%y;let p=0;for(let l=0;l<u.batchSize;++l)for(let d=t;d<n;++d){const t=e+d*c-b;for(let e=s;e<i;++e){const n=a+e*h-v;p+=w.get(l,t,n,o)*I.get(l,d,e,r)}}g.set(p,e,a,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},jk={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{strides:r,dilations:o,pad:l,dimRoundingMode:p,inputShape:d}=a;Px([s,i],"depthwiseConv2DNativeBackpropInput");const u=ge(s.shape),c=ge(i.shape),h=vo(d,i.shape,r,o,l,p,!0),m=new _s(h.inShape,"float32"),f=m.values,[g,v,b]=m.strides,y=n.data.get(s.dataId).values,[x,w,k]=u,I=n.data.get(i.dataId).values,[S,N,T]=c,{batchSize:C,filterHeight:E,filterWidth:$,inChannels:_,inHeight:R,inWidth:A,outChannels:D,outHeight:F,outWidth:O,strideHeight:M,strideWidth:L}=h,P=E-1-h.padInfo.top,z=$-1-h.padInfo.left,V=D/_;for(let e=0;e<C;++e)for(let t=0;t<_;++t)for(let n=0;n<R;++n){const a=n-P,s=Math.max(0,Math.ceil(a/M)),i=Math.min(F,(E+a)/M);for(let r=0;r<A;++r){const o=r-z,l=Math.max(0,Math.ceil(o/L)),p=Math.min(O,($+o)/L);let d=0;for(let n=s;n<i;++n){const s=n*M-a;for(let a=l;a<p;++a){const i=x*e+w*n+k*a,r=S*(E-1-s)+N*($-1-(a*L-o))+T*t;for(let e=0;e<V;++e)d+=y[i+(t*V+e)]*I[r+e]}}f[g*e+v*n+b*r+t]=d}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},qk={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=Z(a.shape),i=n.data.get(a.dataId).values,r=ar([s,s],a.dtype),o=r.values;for(let e=0;e<i.length;e++)o[e*s+e]=i[e];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,r.dtype,r.values)}},Kk={kernelName:Tt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:i,pad:r,dilations:o}=n,l=t,p=l.data.get(a.dataId).values,d=a.shape.length,u=l.data.get(s.dataId).values,c=s.shape.length,{batchSize:h,inHeight:m,inWidth:f,inChannels:g,outHeight:v,outWidth:b,padInfo:y,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=mo(a.shape,s.shape,i,r,"NHWC",o),C=Z(T),E=T.length,$=le(a.dtype,C);for(let e=0;e<h;++e)for(let t=0;t<v;++t){const n=t*x-y.top;for(let i=0;i<b;++i){const r=i*w-y.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const i=n+t*S;if(i>=0&&i<m)for(let n=0;n<I;++n){const h=r+n*N;if(h>=0&&h<f){const r=Ie([e,i,h,o],d,ge(a.shape)),m=Ie([t,n,o],c,ge(s.shape)),f=p[r]+u[m];f>l&&(l=f)}}}$[Ie([e,t,i,o],E,ge(T))]=l}}}return{dataId:l.write(gs($,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},Xk={kernelName:Et,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:i}=e,{strides:r,pad:o,dilations:l}=n,p=t,d=be(a.shape,p.data.get(a.dataId).values),u=be(s.shape,p.data.get(s.dataId).values),{batchSize:c,inHeight:h,inWidth:m,inChannels:f,outHeight:g,outWidth:v,padInfo:b,strideHeight:y,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=mo(a.shape,s.shape,r,o,"NHWC",l);X(i.rank===N.length,()=>`Error in ${Et}, dy must have the same rank as output ${N.length}, but got ${i.rank}`);const T=be(N,p.data.get(i.dataId).values),C=we(s.shape,s.dtype);for(let e=0;e<c;++e)for(let t=0;t<g;++t){const n=t*y-b.top;for(let a=0;a<v;++a){const s=a*x-b.left;for(let i=0;i<f;++i){let r=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const a=n+t*I;if(a>=0&&a<h)for(let n=0;n<k;++n){const p=s+n*S;if(p>=0&&p<m){const s=d[e][a][p][i]+u[t][n][i];s>r&&(r=s,o=t,l=n)}}}C[o][l][i]+=T[e][t][a][i]}}}return{dataId:p.write(gs(C,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Yk={kernelName:Ct,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:i}=e,{strides:r,pad:o,dilations:l}=n,p=t,d=be(a.shape,p.data.get(a.dataId).values),u=be(s.shape,p.data.get(s.dataId).values),{batchSize:c,inHeight:h,inWidth:m,inChannels:f,outHeight:g,outWidth:v,padInfo:b,strideHeight:y,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=mo(a.shape,s.shape,r,o,"NHWC",l);X(i.rank===N.length,()=>`Error in ${Ct}, dy must have the same rank as output ${N.length}, but got ${i.rank}`);const T=be(N,p.data.get(i.dataId).values),C=we(a.shape,a.dtype);for(let e=0;e<c;++e)for(let t=0;t<g;++t){const n=t*y-b.top;for(let a=0;a<v;++a){const s=a*x-b.left;for(let i=0;i<f;++i){let r=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<w;++t){const a=n+t*I;if(a>=0&&a<h)for(let n=0;n<k;++n){const p=s+n*S;if(p>=0&&p<m){const s=d[e][a][p][i]+u[t][n][i];s>r&&(r=s,o=a,l=p)}}}C[e][o][l][i]+=T[e][t][a][i]}}}return{dataId:p.write(gs(C,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Jk={kernelName:"Draw",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s}=t,{canvas:i,options:r}=a,{contextOptions:o,imageOptions:l}=r||{},p=(null==l?void 0:l.alpha)||1,d=(null==o?void 0:o.contextType)||"2d";if("2d"!==d)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const u=i.getContext(d,(null==o?void 0:o.contextAttributes)||{});if(null==u)throw new Error(`Could not get the context with ${d} type.`);const[c,h]=s.shape.slice(0,2),m=2===s.shape.length?1:s.shape[2],f=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,v=new Uint8ClampedArray(h*c*4);for(let e=0;e<c*h;++e){const t=[0,0,0,255*p];for(let n=0;n<m;n++){const a=f[e*m+n];if("float32"===s.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===s.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===m?(t[0]=a*g,t[1]=a*g,t[2]=a*g):t[n]=a*g}const n=4*e;v[n+0]=Math.round(t[0]),v[n+1]=Math.round(t[1]),v[n+2]=Math.round(t[2]),v[n+3]=Math.round(t[3])}i.width=h,i.height=c;const b=new ImageData(v,h,c);return u.putImageData(b,0,0),s}},Zk=Yx((e,t)=>e*t),Qk=vw((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n})),eI=gw(Nn,Zk,Qk),tI={kernelName:Nn,backendName:"cpu",kernelFunc:eI};function nI(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a;let o;Px(s,"sum"),o="bool"===s.dtype?mw({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):jx({inputs:{x:s},backend:n});const l=o.shape.length,p=ie(i,o.shape),d=xl(p,l);let u=p,c=o;null!=d&&(c=Ow({inputs:{x:o},backend:n,attrs:{perm:d}}),u=kl(u.length,l)),yl("sum",u,c.shape.length);const[h,m]=vl(c.shape,u);let f=dw(n,h,Ws(c.dtype,"int32"));const g=Z(m),v=n.data.get(f.dataId).values,b=n.data.get(c.dataId).values;for(let e=0;e<v.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];v[e]=n}if(r){const e=f;f=kw({inputs:{x:f},backend:n,attrs:{shape:bl(f.shape,p)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=d&&n.disposeIntermediateTensorInfo(c),f}const aI={kernelName:ca,backendName:"cpu",kernelFunc:nI},sI={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,i=t,{allDims:r,summedDims:o,idDims:l}=hu(s,i.length);fu(r.length,l,i);const{path:p,steps:d}=gu(o,l),u=d.length;let c=null,h=r.length;const m=[];for(let e=0;e<u;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=mu(h,l[t]);let s;vu(e)?s=i[t]:(s=Ow({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(s));const r=s.shape.slice();for(let e=0;e<a.length;++e)r.splice(a[e],0,1);Q(s.shape,r)||(s=kw({inputs:{x:s},backend:n,attrs:{shape:r}}),m.push(s)),null===c?c=s:(c=eI({inputs:{a:s,b:c},backend:n}),m.push(c))}e<u-1&&(p[e]>=0&&(c=nI({inputs:{x:c},backend:n,attrs:{axis:p[e]-(r.length-h),keepDims:!1}}),m.push(c)),h--)}for(const e of m)e!==c&&n.disposeIntermediateTensorInfo(e);return c}},iI={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:s}=t;Px([a,s],"eluGrad");const i=new Float32Array(Z(s.shape)),r=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<r.length;++e){const t=r[e];i[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",i)}},rI=Yx((e,t)=>e===t?1:0),oI=gw(Ft,rI,null,"bool"),lI={kernelName:Ft,backendName:"cpu",kernelFunc:oI},pI=Xd,dI=Yd,uI=Jd,cI=Zd,hI=Qd,mI=eu,fI=Ux(Dt,e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+pI*n);return t*(1-((((mI*a+hI)*a+cI)*a+uI)*a+dI)*a*Math.exp(-n*n))}),gI={kernelName:Dt,backendName:"cpu",kernelFunc:fI},vI=Bx(e=>Math.exp(e)),bI=Wx(Ot,vI,"float32"),yI={kernelName:Ot,backendName:"cpu",kernelFunc:bI};function xI(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:i}=a,r=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(X(-(r+1)<=i,()=>`Axis must be in the interval [${-(r+1)}, ${r}]`),l=r+i+1),o.splice(l,0,1),kw({inputs:{x:s},backend:n,attrs:{shape:o}})}const wI={kernelName:Mt,backendName:"cpu",kernelFunc:xI},kI=Bx(e=>Math.expm1(e)),II=Wx(Lt,kI),SI={kernelName:Lt,backendName:"cpu",kernelFunc:II},NI=Yx((e,t)=>e/t),TI=gw($t,NI),CI={kernelName:$t,backendName:"cpu",kernelFunc:TI},EI=Yx((e,t)=>e-t),$I=vw((e,t,n,a)=>({real:e-n,imag:t-a})),_I=gw(Ea,EI,$I),RI={kernelName:Ea,backendName:"cpu",kernelFunc:_I};function AI(e,t,n){const a=e.shape,s=a[0],i=a[1],r=n.data.get(e.dataId),o=r.complexTensorInfos.real,l=r.complexTensorInfos.imag,p=[s,i],d=Z(p),u=oe("float32",d),c=oe("float32",d);for(let e=0;e<s;e++){const a=ok({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=ok({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,i]}}),r=lw({inputs:{real:a,imag:s},backend:n}),{real:p,imag:d}=DI(r,t,n),h=tu(p,d);for(let t=0;t<i;t++){const n=iu(h,t);u[e*i+t]=n.real,c[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r)}const h=n.makeTensorInfo(p,"float32",u),m=n.makeTensorInfo(p,"float32",c),f=lw({inputs:{real:h,imag:m},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),f}function DI(e,t,n){const a=Z(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,r=n.data.get(s.complexTensorInfos.imag.dataId).values;if((o=a)&o-1){const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,r=0;for(let a=0;a<t;a++){const o=lu(s*a,t,n),l=iu(e,a);i+=l.real*o.real-l.imag*o.imag,r+=l.real*o.imag+l.imag*o.real}n&&(i/=t,r/=t),ru(a,i,r,s)}return a}(tu(i,r),a,t);return nu(e)}{const s=FI(i,r,a,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",fs(a,"float32")),r=jx({inputs:{x:i},backend:n}),l=CI.kernelFunc({inputs:{a:e,b:i},backend:n}),p=CI.kernelFunc({inputs:{a:t,b:r},backend:n}),d=n.data.get(l.dataId).values,u=n.data.get(p.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),{real:d,imag:u}}return s}var o}function FI(e,t,n,a,s){if(1===n)return{real:e,imag:t};const i=tu(e,t),r=n/2,o=au(i),l=o.real,p=o.imag,d=[l.length],u=s.makeTensorInfo(d,"float32",l),c=s.makeTensorInfo(d,"float32",p),h=lw({inputs:{real:u,imag:c},backend:s}),m=su(i),f=m.real,g=m.imag,v=[f.length],b=s.makeTensorInfo(v,"float32",f),y=s.makeTensorInfo(v,"float32",g),x=lw({inputs:{real:b,imag:y},backend:s}),w=FI(l,p,r,a,s),k=w.real,I=w.imag,S=[k.length],N=s.makeTensorInfo(S,"float32",k),T=s.makeTensorInfo(S,"float32",I),C=lw({inputs:{real:N,imag:T},backend:s}),E=FI(f,g,r,a,s),$=E.real,_=E.imag,R=[$.length],A=s.makeTensorInfo(R,"float32",$),D=s.makeTensorInfo(R,"float32",_),F=lw({inputs:{real:A,imag:D},backend:s}),O=ou(n,a),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),P=s.makeTensorInfo(M,"float32",O.imag),z=lw({inputs:{real:L,imag:P},backend:s}),V=eI({inputs:{a:z,b:F},backend:s}),B=xw({inputs:{a:C,b:V},backend:s}),U=_I({inputs:{a:C,b:V},backend:s}),W=uw({inputs:{input:B},backend:s}),G=uw({inputs:{input:U},backend:s}),H=Ik({inputs:{input:B},backend:s}),j=Ik({inputs:{input:U},backend:s}),q=Nk({inputs:[W,G],backend:s,attrs:{axis:0}}),K=Nk({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(u),s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const OI={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=Z(a.shape),i=a.shape[a.shape.length-1],r=kw({inputs:{x:a},backend:n,attrs:{shape:[s/i,i]}}),o=AI(r,!1,n),l=kw({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),l}};function MI(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:i}=n,r=i||he(s),o=le(r,Z(a));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(a,r,o)}const LI={kernelName:zt,backendName:"cpu",kernelFunc:MI},PI={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,s=n,i=oe(a.dtype,Z(a.shape)),[r,o,l,p]=a.shape,d=s.data.get(a.dataId).values;for(let e=0;e<r;e++){const t=e*l*o*p;for(let e=0;e<o;e++){const n=e*(l*p);for(let e=0;e<l;e++){const a=e*p;for(let s=0;s<p;s++){const r=Math.round(l-e-1),o=t+n+a+s;let u=d[o];r>=0&&r<l&&(u=d[t+n+r*p+s]),i[o]=u}}}}return{dataId:s.write(i,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},zI=Bx(e=>Math.floor(e)),VI=Wx(Bt,zI),BI={kernelName:Bt,backendName:"cpu",kernelFunc:VI},UI=Yx((e,t)=>Math.floor(e/t)),WI=gw(Ut,UI,null,"int32"),GI={kernelName:Ut,backendName:"cpu",kernelFunc:WI},HI={kernelName:Ua,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:r,preluActivationWeights:o}=t,{strides:l,pad:p,dataFormat:d,dilations:u,dimRoundingMode:c,activation:h,leakyreluAlpha:m}=a;let f=Ck({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:p,dataFormat:d,dilations:u,dimRoundingMode:c}});if(r){const e=f;if("NCHW"===d&&1===r.shape.length&&1!==r.shape[0]){const e=kw({inputs:{x:r},backend:n,attrs:{shape:[r.shape[0],1,1]}});f=xw({inputs:{a:f,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else f=xw({inputs:{a:f,b:r},backend:n});n.disposeIntermediateTensorInfo(e)}if(h){const e=f;if("NCHW"===d&&"prelu"===h&&1===o.shape.length&&1!==o.shape[0]){const e=kw({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=ow(n,f,h,e,m),n.disposeIntermediateTensorInfo(e)}else f=ow(n,f,h,o,m);n.disposeIntermediateTensorInfo(e)}return f}},jI={kernelName:Wa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:r,preluActivationWeights:o}=t,{strides:l,pad:p,dataFormat:d,dilations:u,dimRoundingMode:c,activation:h,leakyreluAlpha:m}=a;let f=Wk({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:p,dataFormat:d,dilations:u,dimRoundingMode:c}});if(r){const e=f;f=xw({inputs:{a:f,b:r},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=f;f=ow(n,f,h,o,m),n.disposeIntermediateTensorInfo(e)}return f}};function qI(e,t,n,a,s,i,r,o,l){const p=ar([a,i],n);for(let n=0;n<a;n++){const a=[];let d=0;for(let t=0;t<s;t++){const i=e[n*s+t];d+=i*r[t],a.push(i)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<i;e++)p.values[n*i+e]=t.get(...t.indexToLoc(d*i+e))}return p}const KI={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,i=Z(a.shape),r=s.shape,o=r[r.length-1],[l,p,d,u]=Wd(a,s);if(0===p)return n.makeTensorInfo(l,a.dtype,[]);const c=qI(n.data.get(s.dataId).values,n.bufferSync(a),a.dtype,p,o,d,u,a.shape,i);return n.makeTensorInfo(l,a.dtype,c.values)}};function XI(e,t,n){const a=ar(n,e.dtype);for(let n=0;n<a.size;++n){const s=a.indexToLoc(n).slice(),i=s[0],r=s[2],o=t.locToIndex([i,r]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(a.values[n]=e.values[l])}return a}const YI={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:i}=t,{axis:r,batchDims:o}=a;Px([s,i],"gatherV2");const l=ie(r,s.shape)[0],p=n.data.get(i.dataId).values,d=s.shape[l];for(let e=0;e<p.length;++e){const t=p[e];X(t<=d-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`)}let u=o;null==o&&(u=0);const c=Z(i.shape),h=Fu(s,i,l,u),m=kw({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),f=kw({inputs:{x:i},backend:n,attrs:{shape:[h.batchSize,c/h.batchSize]}}),g=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],v=n.bufferSync(f),b=XI(n.bufferSync(m),v,g);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(h.outputShape,b.dtype,b.values)}},JI=Yx((e,t)=>e>t?1:0),ZI=gw(jt,JI,null,"bool"),QI={kernelName:jt,backendName:"cpu",kernelFunc:ZI},eS=Yx((e,t)=>e>=t?1:0),tS=gw(qt,eS,null,"bool"),nS={kernelName:qt,backendName:"cpu",kernelFunc:tS},aS={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=Z(a.shape),i=a.shape[a.shape.length-1],r=kw({inputs:{x:a},backend:n,attrs:{shape:[s/i,i]}}),o=AI(r,!0,n),l=kw({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),l}},sS=Ux(Jt,e=>Number.isFinite(e)?1:0,"bool"),iS={kernelName:Jt,backendName:"cpu",kernelFunc:sS},rS=Ux(Zt,e=>Math.abs(e)===1/0?1:0,"bool"),oS={kernelName:Zt,backendName:"cpu",kernelFunc:rS},lS=Ux(Qt,e=>Number.isNaN(e)?1:0,"bool"),pS={kernelName:Qt,backendName:"cpu",kernelFunc:lS},dS=Yx((e,t)=>e<t?1:0),uS=gw(tn,dS,null,"bool"),cS={kernelName:tn,backendName:"cpu",kernelFunc:uS},hS=Yx((e,t)=>e<=t?1:0),mS=gw(nn,hS,null,"bool"),fS={kernelName:nn,backendName:"cpu",kernelFunc:mS};function gS(e,t,n){const a=(t-e)/(n-1),s=xe(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+a;return s}const vS={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:s,num:i}=n,r=gS(a,s,i);return t.makeTensorInfo([r.length],"float32",r)}},bS=Bx(e=>Math.log(e)),yS=Wx(sn,bS),xS={kernelName:sn,backendName:"cpu",kernelFunc:yS},wS=Ux(rn,e=>Math.log1p(e)),kS={kernelName:rn,backendName:"cpu",kernelFunc:wS},IS=Yx((e,t)=>e&&t),SS=gw(on,IS,null,"bool"),NS={kernelName:on,backendName:"cpu",kernelFunc:SS},TS=Ux(ln,e=>e?0:1,"bool"),CS={kernelName:ln,backendName:"cpu",kernelFunc:TS},ES=Yx((e,t)=>e||t),$S=gw(pn,ES,null,"bool"),_S={kernelName:pn,backendName:"cpu",kernelFunc:$S},RS={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:i,bias:r,alpha:o,beta:l}=a;Px(s,"LRN");const p=s.shape[3],d=p-1,u=n.data.get(s.dataId).values,c=Z(s.shape),h=new Float32Array(c);function m(e){const t=e%p;let n=e-t+Math.max(0,t-i);const a=e-t+Math.min(t+i,d);let s=0;for(;n<=a;n++){const e=u[n];s+=e*e}return s}for(let e=0;e<c;e++){const t=m(e),n=u[e]*Math.pow(r+o*t,-l);h[e]=n}return n.makeTensorInfo(s.shape,s.dtype,h)}},AS={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,y:i,dy:r}=t,{depthRadius:o,bias:l,alpha:p,beta:d}=a;Px(r,"LRNGrad");const u=Z(r.shape),c=r.shape[3],h=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,f=n.data.get(i.dataId).values,g=new Float32Array(u),v=u;for(let e=0;e<v;e++){const t=e%c,n=e-t+Math.max(0,t-o),a=e-t+Math.min(c,t+o+1);let s=0;for(let e=n;e<a;e++)s+=Math.pow(m[e],2);s=p*s+l;for(let t=n;t<a;t++){let n=-2*p*d*m[t]*f[e]/s;e===t&&(n+=Math.pow(s,-d)),n*=h[e],g[t]+=n}}return n.makeTensorInfo(r.shape,s.dtype,g)}};function DS(e,t,n,a){const s=oe(a,Z(n));for(let n=0;n<s.length;++n){const a=n*t;let i=e[a];for(let n=0;n<t;++n){const t=e[a+n];(Number.isNaN(t)||t>i)&&(i=t)}s[n]=i}return s}function FS(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:i,keepDims:r}=a,o=n;let l=s.shape;const p=l.length,d=ie(i,l);let u=d;const c=xl(u,p);let h=o.data.get(s.dataId).values;if(null!=c){const e=new Array(p);for(let t=0;t<e.length;t++)e[t]=l[c[t]];h=Fw(h,l,s.dtype,c,e),u=kl(u.length,p),l=e}Px(s,"max"),yl("max",u,p);const[m,f]=vl(l,u),g=DS(h,Z(f),m,s.dtype),v=o.write(g,m,s.dtype);let b=m;return r&&(b=bl(m,d)),{dataId:v,shape:b,dtype:s.dtype}}const OS={kernelName:cn,backendName:"cpu",kernelFunc:FS},MS=Yx((e,t)=>Math.max(e,t)),LS=gw(hn,MS),PS={kernelName:hn,backendName:"cpu",kernelFunc:LS},zS={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;Px(s,"maxPool");const{filterSize:i,strides:r,pad:o,dimRoundingMode:l}=a;X(No(r,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`);const p=fo(s.shape,i,r,1,o,l);let d;if(1===p.filterWidth&&1===p.filterHeight&&Q(p.inShape,p.outShape))d=jx({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=ge(s.shape),a=Zw(e,s.shape,s.dtype,t,p,"max");d=n.makeTensorInfo(p.outShape,s.dtype,a.values)}return d}},VS={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:r,pad:o,dimRoundingMode:l,dataFormat:p}=a;Px(s,"maxPool3d");const d=go(s.shape,i,r,1,o,l,p),u=ek(n.data.get(s.dataId).values,s.shape,s.dtype,ge(s.shape),d,"max");return n.makeTensorInfo(u.shape,"float32",u.values)}},BS={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,{filterSize:r,strides:o,pad:l,dimRoundingMode:p}=a;Px([s,i],"maxPool3DGrad");const d=go(i.shape,r,o,1,l,p),u=function(e,t){const n=ar(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,r=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=t.padInfo.front,h=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let v=0;v<t.outDepth;++v){const b=v*a-c;let y=b;for(;y<0;)y+=r;const x=Math.min(t.inDepth,p+b);for(let a=0;a<t.outHeight;++a){const p=a*s-h;let c=p;for(;c<0;)c+=o;const w=Math.min(t.inHeight,d+p);for(let s=0;s<t.outWidth;++s){const h=s*i-m;let k=h;for(;k<0;)k+=l;const I=Math.min(t.inWidth,u+h);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=y;t<x;t+=r){const n=t-b;for(let a=c;a<w;a+=o){const s=a-p;for(let i=k;i<I;i+=l){const r=i-h,o=e.get(f,t,a,i,g);o>=S&&(S=o,N=n*d*u+s*d+r)}}}n.set(N,f,v,a,s,g)}}}return n}(n.bufferSync(i),d),c=d.strideDepth,h=d.strideHeight,m=d.strideWidth,f=d.dilationDepth,g=d.dilationHeight,v=d.dilationWidth,b=d.effectiveFilterDepth,y=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=b-1-d.padInfo.front,k=x-1-d.padInfo.left,I=y-1-d.padInfo.top,S=ar(i.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let a=0;a<d.inHeight;++a)for(let s=0;s<d.inWidth;++s){const i=n-w,r=a-I,o=s-k;let l=0;for(let n=0;n<b;n+=f){const a=(i+n)/c;if(!(a<0||a>=d.outDepth||Math.floor(a)!==a))for(let s=0;s<y;s+=g){const i=(r+s)/h;if(!(i<0||i>=d.outHeight||Math.floor(i)!==i))for(let r=0;r<x;r+=v){const p=(o+r)/m;if(p<0||p>=d.outWidth||Math.floor(p)!==p)continue;const c=b*y*x-1-u.get(e,a,i,p,t)===n*y*x+s*x+r?1:0;0!==c&&(l+=N.get(e,a,i,p,t)*c)}}}S.set(l,e,n,a,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},US={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i,output:r}=t,o=i;Px([i,r],"maxPoolGrad");const{filterSize:l,strides:p,pad:d,dimRoundingMode:u}=a,c=fo(o.shape,l,p,1,d,u),h=n.data.get(o.dataId).values,m=ar(c.outShape,o.dtype,Qw(h,o.shape,o.dtype,c).values),f=c.strideHeight,g=c.strideWidth,v=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=x-1-c.padInfo.left,k=y-1-c.padInfo.top,I=ar(o.shape,"float32"),S=n.data.get(s.dataId).values,N=ar(s.shape,"float32",S);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){const s=n-k,i=a-w;let r=0;for(let n=0;n<y;n+=v){const a=(s+n)/f;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let s=0;s<x;s+=b){const o=(i+s)/g;if(o<0||o>=c.outWidth||Math.floor(o)!==o)continue;const l=y*x-1-m.get(e,a,o,t)===n*x+s?1:0;0!==l&&(r+=N.get(e,a,o,t)*l)}}I.set(r,e,n,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},WS={kernelName:bn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:i,pad:r,includeBatchInIndex:o}=t,l=n;Px(a,"MaxPoolWithArgmax");const p=l.data.get(a.dataId).values,d=fo(a.shape,s,i,[1,1],r),[u,c]=function(e,t,n,a,s){const i=Zw(e,0,n,ge(t),s,"max"),r=Qw(e,t,n,s,!0,a);return[i.values,r.values]}(p,a.shape,a.dtype,o,d),h=l.write(u,d.outShape,a.dtype),m=l.write(c,d.outShape,a.dtype);return[{dataId:h,shape:d.outShape,dtype:a.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}},GS={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a,o=ie(i,s.shape),l=Z(vl(s.shape,o)[1]),p=[],d=n.makeTensorInfo([],"float32",new Float32Array([l]));p.push(d);const u=mw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});p.push(u);const c=TI({inputs:{a:u,b:d},backend:n});p.push(c);const h=nI({inputs:{x:c},backend:n,attrs:{axis:i,keepDims:r}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},HS={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a;Px(s,"min");const o=ie(i,s.shape);let l=o;const p=xl(l,s.shape.length);let d=s;null!=p&&(d=Ow({inputs:{x:s},backend:n,attrs:{perm:p}}),l=kl(l.length,s.shape.length)),yl("min",l,d.shape.length);const[u,c]=vl(d.shape,l),h=Z(c),m=xe(Z(u),d.dtype),f=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*h;let n=f[t];for(let e=0;e<h;++e){const a=f[t+e];(Number.isNaN(a)||a<n)&&(n=a)}m[e]=n}null!=p&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(u,d.dtype,m);if(r){const e=kw({inputs:{x:g},backend:n,attrs:{shape:bl(u,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},jS=Yx((e,t)=>Math.min(e,t)),qS=gw(wn,jS),KS={kernelName:wn,backendName:"cpu",kernelFunc:qS},XS={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:i,mode:r}=a;Px(s,"mirrorPad");const o=i.map((e,t)=>e[0]+s.shape[t]+e[1]),l=i.map(e=>e[0]),p=i.map((e,t)=>e[0]+s.shape[t]),d="reflect"===r?0:1,u=n.data.get(s.dataId).values,c=s.shape.length,h=ge(s.shape),m=Z(o),f=o.length,g=ge(o),v=oe(s.dtype,m);for(let e=0;e<m;e++){let t=Se(e,f,g);for(let e=0;e<f;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-d:t[e]>=p[e]&&(t[e]=2*(p[e]-1)-t[e]+d);t=t.map((e,t)=>e-l[t]);const n=Ie(t,c,h);v[e]=u[n]}return{dataId:n.write(v,o,s.dtype),shape:o,dtype:s.dtype}}},YS=Yx((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),JS=gw(In,YS),ZS={kernelName:In,backendName:"cpu",kernelFunc:JS};function QS(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:i}=a,r=s.shape.length;let o=i;if(-1===o&&(o=r-1),o!==r-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${r} and dim was ${o}`);const l=ie([o],s.shape),p=FS({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=bl(p.shape,l),u=kw({inputs:{x:p},backend:n,attrs:{shape:d}}),c=_I({inputs:{a:s,b:u},backend:n}),h=bI({inputs:{x:c},backend:n}),m=nI({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),f=kw({inputs:{x:m},backend:n,attrs:{shape:d}}),g=TI({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}const eN={kernelName:fa,backendName:"cpu",kernelFunc:QS},tN={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{numSamples:i,seed:r,normalized:o}=a;Px(s,"multinomial");const l=o?s:QS({inputs:{logits:s},backend:n,attrs:{dim:-1}}),p=l.shape[0],d=l.shape[1],u=n.data.get(l.dataId).values,c=[p,i],m=xe(Z(c),"int32");for(let e=0;e<p;++e){const t=e*d,n=new Float32Array(d-1);n[0]=u[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+u[t+e];const a=h.alea(r.toString()),s=e*i;for(let e=0;e<i;++e){const t=a();m[s+e]=n.length;for(let a=0;a<n.length;a++)if(t<n[a]){m[s+e]=a;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(c,"int32",m)}};function nN(e,t,n){const a=fs(-1,n);return Zk([],t,a,e,n)}const aN={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;Px(a,"neg");const s=n.data.get(a.dataId).values,[i,r]=nN(s,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,i)}},sN=Up,iN={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:r,iouThreshold:o,scoreThreshold:l}=a;Px(s,"NonMaxSuppression");const p=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,{selectedIndices:u}=sN(p,d,r,o,l);return n.makeTensorInfo([u.length],"int32",new Int32Array(u))}},rN=Wp,oN={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:r,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:p}=a;Px(s,"NonMaxSuppressionPadded");const d=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,{selectedIndices:c,validOutputs:h}=rN(d,u,r,o,l,p);return[n.makeTensorInfo([c.length],"int32",new Int32Array(c)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},lN=Gp,pN={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:r,iouThreshold:o,scoreThreshold:l,softNmsSigma:p}=a;Px(s,"NonMaxSuppressionWithScore");const d=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=r,h=o,m=l,f=p,{selectedIndices:g,selectedScores:v}=lN(d,u,c,h,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}},dN=Yx((e,t)=>e!==t?1:0),uN=gw(Cn,dN,null,"bool"),cN={kernelName:Cn,backendName:"cpu",kernelFunc:uN},hN={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{dtype:i,depth:r,onValue:o,offValue:l}=a;Px(s,"oneHot");const p=Z(s.shape),d=new Float32Array(p*r);d.fill(l);const u=n.data.get(s.dataId).values;for(let e=0;e<p;++e)u[e]>=0&&u[e]<r&&(d[e*r+u[e]]=o);return n.makeTensorInfo([...s.shape,r],i,d)}};function mN(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=uw({inputs:{input:a},backend:n}),t=mN({inputs:{x:e},backend:n}),s=Ik({inputs:{input:a},backend:n}),i=mN({inputs:{x:s},backend:n}),r=lw({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),r}return MI({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const fN={kernelName:Pa,backendName:"cpu",kernelFunc:mN},gN={kernelName:Rn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=uw({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a}),i=Ik({inputs:{input:s},backend:a}),r=mN({inputs:{x:i},backend:a}),o=lw({inputs:{real:n,imag:r},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(r),o}return MI({backend:a,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function vN(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return xI({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,r=t[0].dtype;t.forEach(e=>{Y(i,e.shape,"All tensors passed to stack must have matching shapes"),X(r===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=Nk({inputs:t.map(e=>{const t=xI({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}const bN={kernelName:Dn,backendName:"cpu",kernelFunc:vN},yN={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:i,constantValue:r}=a;Px(s,"pad");const o=i.map((e,t)=>e[0]+s.shape[t]+e[1]),l=i.map(e=>e[0]),p=n.data.get(s.dataId).values,d=Z(s.shape),u=s.shape.length,c=ge(s.shape),h=Z(o),m=o.length,f=ge(o),g=oe(s.dtype,h);0!==r&&g.fill(r);for(let e=0;e<d;e++)g[Ie(Se(e,u,c).map((e,t)=>e+l[t]),m,f)]=p[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},xN=Yx((e,t)=>Math.pow(e,t)),wN=gw(On,xN),kN={kernelName:On,backendName:"cpu",kernelFunc:wN};function IN(e,t,n,a){const[s,i]=vl(e,a),r=Ws(t,"int32"),o=xe(Z(s),r),l=Z(i);for(let e=0;e<o.length;++e){const t=e*l;let a=1;for(let e=0;e<l;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:s,outDtype:r}}const SN={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a;Px(s,"prod");const o=s.shape.length,l=ie(i,s.shape),p=xl(l,o);let d=l,u=s;const c=[];null!=p&&(u=Ow({inputs:{x:s},backend:n,attrs:{perm:p}}),c.push(u),d=kl(d.length,o));const h=n.data.get(u.dataId).values,{outVals:m,outShape:f,outDtype:g}=IN(u.shape,u.dtype,h,d);let v=f;return r&&(v=bl(f,l)),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(v,g,m)}};function NN(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function TN(e,t,n,a,s,i,r,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach((e,a)=>{if(e<0||e>=n){const s=Se(a,t.length,ge(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}})}(i,r,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const l=a[0],{outSplits:p,valueSlices:d,numValues:u}=function(e,t,n,a){const s=[];let i=0;const r=t.length-1+n.length,o=new Array(r).fill(null).map(()=>[0]);!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],s=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let a=0;a<e.length;++a){let r=e[a],l=e[a]+1;for(let e=0;e<n.length;++e){const a=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-a[r];for(let e=r;e<l;++e)o[s].push(a[e+1]+t)}r=a[r],l=a[l]}l!==r&&(s.push([r,l]),i+=l-r)}return{outSplits:o,valueSlices:s,numValues:i}}(i,r,e,l),c=function(e){const t=[];for(let n=0;n<e.length;++n){const a=le("int32",e[n].length);t.push(a),e[n].forEach((e,t)=>a[t]=e)}return t}(p),h=function(e,t,n,a,s){const i=t.slice();i[0]=s;const r=le(n,Z(i)),o=e.length;return function(e,t,n,a,s,i){const r=NN(t,2)[1],o=NN(i,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<a;++t)s[l*o+t]=e[n*r+t];++l}}(e,t,a,0===o?0:o/t[0],r,i),[r,i]}(n,a,s,d,u);return[c,h[0],h[1]]}const CN={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:r}=t,{outputRaggedRank:o}=a,l=s.map(e=>n.data.get(e.dataId).values),p=s.map(e=>e.shape),d=n.data.get(i.dataId).values,u=n.data.get(r.dataId).values,[c,h,m]=TN(l,p,d,i.shape,i.dtype,u,r.shape),f=c.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(m,i.dtype,h);return f.concat([g])}},EN=2147483647;function $N(e,t,n,a,s,i,r){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(r.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,p=0===r.length,d=[];o||d.push(t[0]),l||d.push(s[0]),p||d.push(r[0]);for(let e=1;e<d.length;++e)if(d[e]!==d[e-1])throw new Error("starts, limits, and deltas must have the same shape");const u=0===d.length?1:d[0],c=le("int32",u+1);c[0]=0;for(let t=0;t<u;++t){const n=o?e[0]:e[t],s=l?a[0]:a[t],r=p?i[0]:i[t];if(0===r)throw new Error("Requires delta != 0");let d;if(r>0&&s<n||r<0&&s>n)d=0;else if(d=Math.ceil(Math.abs((s-n)/r)),d>EN)throw new Error(`Requires ((limit - start) / delta) <= ${EN}`);c[t+1]=c[t]+d}const h=le(n,c[u]);let m=0;for(let t=0;t<u;++t){const n=c[t+1]-c[t];let a=o?e[0]:e[t];const s=p?i[0]:i[t];for(let e=0;e<n;++e)h[m++]=a,a+=s}return[c,h]}const _N={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:s,deltas:i}=t,r=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[p,d]=$N(r,a.shape,a.dtype,o,s.shape,l,i.shape);return[n.makeTensorInfo([p.length],"int32",p),n.makeTensorInfo([d.length],a.dtype,d)]}};var RN=_d;class AN{constructor(e,t,n,a,s,i,r,o,l,p){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=r,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Ad(p),this.raggedRank=Dd(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===RN.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===RN.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case RN.VALUE_ROWIDS:return AN.getMaxWidthValueRowID(t);case RN.ROW_SPLITS:return AN.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${RN[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],s=0;for(let i=1;i<t;++i){const t=e[i];t!==a&&(a=t,s=Math.max(i-n,s),n=i)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return FN(e,n)}calculateOutputSize(e){const t=this.valuesShape;Fd(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Rd(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),s=[];let i=0;for(let e=0;e<a;++e,i+=t)s.push(i);for(let t=a;t<e;++t)s.push(-1);return X(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,n,a){const s=e.length,i=[];for(let r=0;r<s-1;++r){const s=e[r+1]-e[r];let o=Math.min(a,s),l=t[r];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<s-o;++e)i.push(-1)}if(s>0&&i.length!==e[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,a){const s=e.length,i=[];if(0===s)return[];let r=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let p=1;p<s;++p){const s=e[p];if(s===o)l>=0&&(++r,r<a?l+=n:l=-1);else{if(r=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,a){const s=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case RN.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,a);case RN.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,a);default:throw new Error(`Unsupported partition type: ${RN[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case RN.FIRST_DIM_SIZE:return e[0];case RN.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case RN.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${RN[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const a=FN(t,!1),s=le(this.valuesDType,Z(a));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)i=this.calculateOutputIndex(e-1,i,n[e],t[e]);this.setOutput(this.raggedRank,i,s,a)}return[a,s]}setOutput(e,t,n,a){if(0===n.length)return;const s=this.values,i=n;let r=a.slice();r=r.slice(e+1);const o=Z(r),l=t.length;let p=this.defaultValue;if(p.length!==o&&1!==p.length){const e=this.defaultValueShape;yi(()=>{const t=$o(p,e),n=Mo(t,r);p=n.dataSync()})}let d=0,u=0,c=0;for(let e=0;e<=l;++e){let a=e<l?t[e]:-1;if(a!==c){if(u<c){const e=s.subarray(d*o);DN(i.subarray(u*o),e,(c-u)*o)}if(e>=l){const e=n.length;a=Math.floor(e/o)}if(a>c)if(1===this.defaultValue.length)i.subarray(c*o,a*o).fill(this.defaultValue[0]),c=a;else for(;a>c;)DN(i.slice(c*o),p,o),++c;a<0?(d=e+1,u=c):(d=e,u=c,c=u+1)}else++c}}}function DN(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function FN(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error(`Dimension ${a} must be >= 0`);if(a<-1)throw new Error(`Dimension ${a} must be >= -1`);a=-1}n.push(a)}return n}function ON(e,t,n,a,s,i,r,o,l,p){return new AN(e,t,n,a,s,i,r,o,l,p).compute()}const MN={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:s,values:i,defaultValue:r,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,p=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,u=n.data.get(r.dataId).values,c=o.map(e=>n.data.get(e.dataId).values),h=o.map(e=>e.shape),[m,f]=ON(p,s.shape,d,i.shape,i.dtype,u,r.shape,c,h,l);return n.makeTensorInfo(m,i.dtype,f)}};function LN(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return xe(0,a);const s=xe(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const PN={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:s,dtype:i,step:r}=n,o=LN(a,s,r,i);return t.makeTensorInfo([o.length],i,o)}},zN=Ux(Wn,e=>1/e),VN={kernelName:Wn,backendName:"cpu",kernelFunc:zN},BN={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:r,size:o}=a;Px(s,"resizeBilinear");const l=ge(s.shape),[p,d]=o,[u,c,h,m]=s.shape,f=n.data.get(s.dataId).values,g=new Float32Array(Z([u,p,d,m])),v=[i&&p>1?c-1:c,i&&d>1?h-1:h],b=[i&&p>1?p-1:p,i&&d>1?d-1:d];let y=0;const x=v[0]/b[0],w=v[1]/b[1];for(let e=0;e<u;e++)for(let t=0;t<p;t++){let n;n=r?x*(t+.5)-.5:x*t;const a=Math.max(0,Math.floor(n)),s=n-a,i=Math.min(c-1,Math.ceil(n)),o=e*l[0]+a*l[1],p=e*l[0]+i*l[1];for(let e=0;e<d;e++){let t;t=r?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),a=t-n,i=Math.min(h-1,Math.ceil(t)),d=o+n*l[2],u=p+n*l[2],c=o+i*l[2],v=p+i*l[2];for(let e=0;e<m;e++){const t=f[d+e],n=f[u+e],i=t+(f[c+e]-t)*a,r=i+(n+(f[v+e]-n)*a-i)*s;g[y++]=r}}}return n.makeTensorInfo([u,p,d,m],"float32",g)}},UN={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:i}=t,{alignCorners:r}=a;Px([i,s],"resizeBilinearGrad");const o=ge(s.shape),[l,p,d,u]=s.shape,[,c,h]=i.shape,m=new Float32Array(l*p*d*u),f=[r&&c>1?p-1:p,r&&h>1?d-1:d],g=[r&&c>1?c-1:c,r&&h>1?h-1:h],v=f[0]/g[0],b=f[1]/g[1],y=n.data.get(i.dataId).values;let x=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=e*v,a=Math.floor(n),s=Math.min(Math.ceil(n),p-1),i=t+a*o[1],r=t+s*o[1],l=n-a,c=1-l;for(let e=0;e<h;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),d-1),s=t-n,p=1-s,h=i+n*o[2],f=i+a*o[2],g=r+n*o[2],v=r+a*o[2],w=c*p,k=c*s,I=l*p,S=l*s;for(let e=0;e<u;e++){const t=y[x++];m[h+e]+=t*w,m[f+e]+=t*k,m[g+e]+=t*I,m[v+e]+=t*S}}}}return n.makeTensorInfo([l,d,p,u],"float32",m)}},WN={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:r,size:o}=a;Px(s,"resizeNearestNeighbor");const l=ge(s.shape),[p,d]=o,[u,c,h,m]=s.shape,f=n.data.get(s.dataId).values,g=new Float32Array(u*p*d*m),v=[i&&p>1?c-1:c,i&&d>1?h-1:h],b=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=v[0]/b[0],x=v[1]/b[1];let w=0;for(let e=0;e<u;e++){const t=e*l[0];for(let e=0;e<p;e++){const n=r?y*(e+.5):y*e;let a=Math.min(c-1,i?Math.round(n):Math.floor(n));r&&(a=Math.max(0,a));const s=t+a*l[1];for(let e=0;e<d;e++){const t=r?x*(e+.5):x*e;let n=Math.min(h-1,i?Math.round(t):Math.floor(t));r&&(n=Math.max(0,n));const a=s+n*l[2];for(let e=0;e<m;e++){const t=f[a+e];g[w++]=t}}}}return n.makeTensorInfo([u,p,d,m],s.dtype,g)}},GN={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:i}=t,{alignCorners:r}=a;Px([i,s],"resizeNearestNeighborGrad");const o=ge(s.shape),l=ge(i.shape),[p,d,u,c]=s.shape,[,h,m]=i.shape,f=new Float32Array(p*d*u*c),g=n.data.get(i.dataId).values,v=[r&&h>1?d-1:d,r&&m>1?u-1:u],b=[r&&h>1?h-1:h,r&&m>1?m-1:m],y=v[0]/b[0],x=v[1]/b[1],w=1/y,k=1/x,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<p;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=t+e*o[1],a=Math.floor(e*w),s=Math.floor(a-I/2);for(let a=0;a<u;a++){const i=n+a*o[2],p=Math.floor(a*k),v=Math.floor(p-S/2);for(let n=0;n<c;n++){let o=0;for(let i=0;i<I;i++){const p=i+s;if(p<0||p>=h)continue;const c=t+p*l[1],f=p*y;if(e===Math.min(d-1,r?Math.round(f):Math.floor(f)))for(let e=0;e<S;e++){const t=e+v;if(t<0||t>=m)continue;const s=c+t*l[2],i=t*x;a===Math.min(u-1,r?Math.round(i):Math.floor(i))&&(o+=g[s+n])}}f[i+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,f)}},HN={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:i}=a;Px(s,"reverse");const r=s.shape.length,o=ie(i,s.shape);if(0===r)return jx({inputs:{x:s},backend:n});const l=new _s(s.shape,s.dtype),p=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=s.shape[e]-1-n[e]),l.set(p.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},jN={kernelName:Va,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:i,center:r}=t,o=n,l=oe(a.dtype,Z(a.shape)),[p,d,u,c]=a.shape,[h,m]=Ld(r,d,u),f=Math.sin(s),g=Math.cos(s),v=o.data.get(a.dataId).values;for(let e=0;e<p;e++){const t=e*u*d*c;for(let e=0;e<d;e++){const n=e*(u*c);for(let a=0;a<u;a++){const s=a*c;for(let r=0;r<c;r++){const o=[p,e,a,r],b=o[2],y=o[1];let x=(b-h)*g-(y-m)*f,w=(b-h)*f+(y-m)*g;x=Math.round(x+h),w=Math.round(w+m);let k=i;"number"!=typeof i&&(k=3===r?255:i[r]),x>=0&&x<u&&w>=0&&w<d&&(k=v[t+w*(u*c)+x*c+r]),l[t+n+s+r]=k}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},qN=Ux(Zn,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),KN={kernelName:Zn,backendName:"cpu",kernelFunc:qN},XN=Bx(e=>1/Math.sqrt(e)),YN=Wx(Qn,XN),JN={kernelName:Qn,backendName:"cpu",kernelFunc:YN};function ZN(e,t,n,a,s,i,r,o,l,p){const d=[a/s,s],u=e.values,c=t.values;if(0===a)return ar(n,t.dtype);const h=l instanceof _s?l:ar(d,t.dtype);"string"==typeof l||"number"==typeof l?h.values.fill(l):"boolean"==typeof l&&h.values.fill(+l);for(let e=0;e<i;e++){const i=[];let l=0;for(let t=0;t<r;t++){const n=u[e*r+t];i.push(n),l+=n*o[t]}if(l<0||l>=a/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)p?h.values[l*s+n]+=c[e*s+n]:h.values[l*s+n]=0===t.rank?c[0]:c[e*s+n]}return h}const QN={kernelName:ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:i}=t,{shape:r}=a,{sliceRank:o,numUpdates:l,sliceSize:p,strides:d,outputSize:u}=jd(0,s,r),c=ZN(n.bufferSync(s),n.bufferSync(i),r,u,p,l,o,d,0,!0);return n.makeTensorInfo(r,c.dtype,c.values)}};function eT(e,t){let n=0,a=e.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),e[s]<t?n=s+1:a=s;return a}function tT(e,t){let n=0,a=e.length,s=0;for(;n<a;)s=Math.floor((n+a)/2),e[s]<=t?n=s+1:a=s;return a}const nT={kernelName:na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:s,values:i}=t,{side:r}=a,o=function(e,t,n,a,s,i){const r=le("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*a,(o+1)*a),l=o*s;for(let e=0;e<s;++e)r[l+e]="left"===i?eT(n,t[e+l]):tT(n,t[e+l])}return r}(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],r);return n.makeTensorInfo(i.shape,"int32",o)}},aT={kernelName:aa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:i}=t;Px([a,s,i],"select");const r=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,d=Ws(s.dtype,i.dtype),u=xe(Z(s.shape),d);let c=0;const h=0===r||r>1||1===s.shape.length?1:Z(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<h;t++)1===o[e]?u[c++]=l[e]:u[c++]=p[e];return n.makeTensorInfo(s.shape,d,u)}},sT=qd,iT=Kd,rT=Ux(sa,e=>e>=0?iT*e:sT*(Math.exp(e)-1)),oT={kernelName:sa,backendName:"cpu",kernelFunc:rT},lT=Ux(la,e=>e<0?-1:e>0?1:0),pT={kernelName:la,backendName:"cpu",kernelFunc:lT},dT=Ux(ra,e=>Math.sin(e)),uT={kernelName:ra,backendName:"cpu",kernelFunc:dT},cT=Ux(oa,e=>Math.sinh(e)),hT={kernelName:oa,backendName:"cpu",kernelFunc:cT},mT=Math.log(1.1920928955078125e-7)+2,fT=Ux(da,e=>{const t=e>-mT,n=e<mT,a=Math.exp(e);let s;return s=n?a:t?e:Math.log(1+a),s}),gT={kernelName:da,backendName:"cpu",kernelFunc:fT},vT={kernelName:ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,paddings:r}=a;Px([s],"spaceToBatchND");const o=Z(i),l=[[0,0]];l.push(...r);for(let e=1+i.length;e<s.shape.length;++e)l.push([0,0]);const p=yN.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),d=Pd(p.shape,i,o,!1),u=zd(d.length,i.length,!1),c=Vd(p.shape,i,o,!1),h=kw({inputs:{x:p},backend:n,attrs:{shape:d}}),m=Ow({inputs:{x:h},backend:n,attrs:{perm:u}}),f=kw({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),f}};function bT(e,t,n,a,s,i,r){const o=t[0],l=i[0],p=new Array(l),d=new Array(o),u=t[1];if(0===l){if(0!==o)throw new Error(xu(o));return[le(n,0),[0,u],le(s,0),p,d]}let c=!0,h=0;const m=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*u];if(n<0)throw new Error(wu(t,n));if(n>=l)throw new Error(ku(t,n,l));++m[n],c=c&&n>=h,h=n}let f=!0;for(let e=0;e<l;++e){const t=0===m[e];p[e]=t,f=f&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(f&&c){const t=e,n=a;for(let e=0;e<o;++e)d[e]=e;return[t,[o,u],n,p,d]}{const t=m[l-1],i=le(n,t*u),c=le(s,t),h=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*u],s=h[n],r=(0===n?0:m[n-1])+s;h[n]++;for(let n=0;n<u;++n)i[r*u+n]=e[t*u+n];c[r]=a[t],d[t]=r}for(let e=0;e<l;++e)if(0===h[e]){const t=0===e?0:m[e-1];i[t*u+0]=e;for(let e=1;e<u;++e)i[t*u+e]=0;c[t]=r}return[i,[t,u],c,p,d]}}const yT={kernelName:ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:s,denseShape:i,defaultValue:r}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==r.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${r.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,d=n.data.get(r.dataId).values[0],[u,c,h,m,f]=bT(o,a.shape,a.dtype,l,s.dtype,p,d);return[n.makeTensorInfo(c,a.dtype,u),n.makeTensorInfo([c[0]],s.dtype,h),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(e=>Number(e)))),n.makeTensorInfo([f.length],a.dtype,new Int32Array(f))]}};function xT(e,t,n,a,s){const i=Z(a),r=t[0],o=s.length,l=[];let p=1,d=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==d)throw new Error(Iu(d,e));d=e,l.push(1)}else{if(t<0)throw new Error(Su(e,t));p*=t,l.push(t)}}if(-1!==d){if(p<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/p);if(p*e!==i)throw new Error(Tu(a,l));l[d]=e}if(Z(l)!==i)throw new Error(Cu(a,l));const u=a.length,c=[];if(u>0){c[u-1]=1;for(let e=u-2;e>=0;--e)c[e]=c[e+1]*a[e+1]}const h=[];if(o>0){h[o-1]=1;for(let e=o-2;e>=0;--e)h[e]=h[e+1]*l[e+1]}const m=le(n,r*o);for(let t=0;t<r;++t){let n=0;for(let a=0;a<u;++a)n+=e[t*u+a]*c[a];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/h[e]),n%=h[e]}return[m,[r,o],l]}const wT={kernelName:va,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:s,newShape:i}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const r=Array.from(n.data.get(s.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(i.dataId).values),[p,d,u]=xT(o,a.shape,a.dtype,r,l);return[n.makeTensorInfo(d,a.dtype,p),n.makeTensorInfo([u.length],i.dtype,new Int32Array(u))]}};function kT(e,t,n,a,s,i=!1,r=0){const o=a.length,l=[t[0],e.length/t[0]],p=l[1],d=o>0?s[o-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");const u=t.slice();u[0]=d;const c=le(n,u.reduce((e,t)=>e*t,1));if(0===o)return d>0&&c.fill(r),[c,u];if(d<=0)throw new Error("segment ids must be >= 0");let h=0,m=1,f=0,g=s[h];for(;;){let t=0;if(m<o){if(t=s[m],g===t){++m;continue}if(g>=t)throw new Error($u())}if(g<0||g>=d)throw new Error(_u(g,d));g>f&&c.fill(r,f*p,g*p);for(let t=h;t<m;++t){const n=a[t];if(n<0||n>=l[0])throw new Error(Ru(t,a[t],l[0]));for(let t=0;t<p;t++)c[g*p+t]+=e[n*p+t]}if(i)for(let e=0;e<p;e++)c[g*p+e]/=m-h;if(h=m,++m,f=g+1,g=t,m>o)break}return f<d&&c.fill(r,f*p,d*p),[c,u]}const IT={kernelName:ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const r=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[p,d]=kT(r,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(d,a.dtype,p)}},ST={kernelName:ya,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const r=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[p,d]=kT(r,a.shape,a.dtype,o,l);return n.makeTensorInfo(d,a.dtype,p)}},NT={kernelName:xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:r}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:p,sliceSize:d,strides:u,outputSize:c}=jd(0,s,o),h=!1,m=n.bufferSync(s);let f;switch(i.dtype){case"bool":f=ZN(m,n.bufferSync(i),o,c,d,p,l,u,Boolean(n.data.get(r.dataId).values[0]),h);break;case"float32":case"int32":f=ZN(m,n.bufferSync(i),o,c,d,p,l,u,n.data.get(r.dataId).values[0],h);break;case"string":f=ZN(m,n.bufferSync(i),o,c,d,p,l,u,ys(n.data.get(r.dataId).values[0]),h);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,f.dtype,f.values)}},TT={kernelName:ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:r}=a,o=ie(r,s.shape)[0],l=yu(s,i,o),p=new Array(s.shape.length).fill(0),d=s.shape.slice();return l.map(e=>{const t=[...d];t[o]=e;const a=ok({inputs:{x:s},backend:n,attrs:{begin:p,size:t}});return p[o]+=e,a})}},CT=Bx(e=>Math.sqrt(e)),ET=Ux(ua,e=>Math.sqrt(e)),$T={kernelName:ua,backendName:"cpu",kernelFunc:ET},_T={kernelName:ka,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,a=t;Px(n,"square");const s=a.data.get(n.dataId).values,i=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];i[e]=t*t}return{dataId:a.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},RT=Yx((e,t)=>{const n=e-t;return n*n}),AT=gw(wa,RT),DT={kernelName:wa,backendName:"cpu",kernelFunc:AT},FT=Bx((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:s}=t;return e.replace(new RegExp(n,a?"g":""),s)}),OT={kernelName:Ia,backendName:"cpu",kernelFunc:Wx(Ia,FT)},MT=Ux(za,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),LT={kernelName:za,backendName:"cpu",kernelFunc:MT};function PT(e,t,n,a){const s=ar(e,t.dtype);for(let e=0;e<s.size;e++){const i=s.indexToLoc(e),r=new Array(i.length);for(let e=0;e<r.length;e++)r[e]=i[e]*n[e]+a[e];s.set(t.get(...r),...i)}return s}const zT={kernelName:Sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,end:r,strides:o,beginMask:l,endMask:p,ellipsisMask:d,newAxisMask:u,shrinkAxisMask:c}=a;Px(s,"stridedSlice");const{finalShapeSparse:h,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:v,begin:b,end:y,strides:x}=lo(s.shape,i,r,o,l,p,d,u,c);let w;if(f)w=kw({inputs:{x:s},backend:n,attrs:{shape:m}});else if(g||v){X(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const e=Xr(b,y,x),t=ok({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=kw({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=PT(h,n.bufferSync(s),x,b);w=n.makeTensorInfo(m,e.dtype,e.values)}return w}};class VT{constructor(e,t,n,a,s,i){this.separator=bs(e),this.nGramWidths=t,this.leftPad=bs(n),this.rightPad=bs(a),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,s,i){for(let r=0;r<s;++r){const o=this.getPadWidth(i),l=Math.max(0,o-r),p=Math.max(0,o-(s-(r+1))),d=i-(l+p),u=t+(l>0?0:r-o);let c=0;c+=l*this.leftPad.length;for(let t=0;t<d;++t)c+=e[u+t].length;c+=p*this.rightPad.length,c+=(l+p+d-1)*this.separator.length,n[a+r]=new Uint8Array(c);const h=n[a+r];let m=0;const f=e=>e.forEach(e=>h[m++]=e);for(let e=0;e<l;++e)f(this.leftPad),f(this.separator);for(let t=0;t<d-1;++t)f(e[u+t]),f(this.separator);if(d>0){f(e[u+d-1]);for(let e=0;e<p;++e)f(this.separator),f(this.rightPad)}else{for(let e=0;e<p-1;++e)f(this.rightPad),f(this.separator);f(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<a;++s){let a=t[s]>=e;if(a=a&&t[s]<=n,!a)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,i=le("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=s;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let a=0;this.nGramWidths.forEach(e=>{a+=this.getNumNGrams(n,e)}),this.preserveShort&&n>0&&0===a&&(a=1),i[e]=i[e-1]+a}const r=new Array(i[s]);for(let n=0;n<s;++n){const a=t[n];let s=i[n];if(this.nGramWidths.forEach(i=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,i);this.createNGrams(e,a,r,s,l,i),s+=l}),this.preserveShort&&s===i[n]){const i=t[n+1]-t[n];if(0===i)continue;const o=i+2*this.padWidth,l=1;this.createNGrams(e,a,r,s,l,o)}}return[r,i]}}function BT(e,t,n,a,s,i,r,o){return new VT(n,a,s,i,r,o).compute(e,t)}const UT={kernelName:Na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:s,nGramWidths:i,leftPad:r,rightPad:o,padWidth:l,preserveShortSequences:p}=a,{data:d,dataSplits:u}=t,c=n.data.get(d.dataId).values,h=n.data.get(u.dataId).values,[m,f]=BT(c,h,s,i,r,o,l,p);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(u.shape,"int32",f)]}};function WT(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let i=e.indexOf(s);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||a.push(t),i=(e=e.subarray(i+1)).indexOf(s)}return void(n&&0===e.length||a.push(e))}let s=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(s,i);n&&0===t.length||a.push(t),s=i+1}}function GT(e,t,n){const a=e.length,s=[];let i=0,r=0;const o=new Array(a);for(let l=0;l<a;++l){const a=s.length;WT(e[l],t,n,s);const p=s.length-a;o[l]=p,i+=p,r=Math.max(r,p)}const l=le("int32",2*i),p=new Array(i),d=[a,r];let u=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)l[2*u]=e,l[2*u+1]=t,p[u]=s[u],++u;return[l,p,d]}const HT={kernelName:Ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:s}=a,{input:i,delimiter:r}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==r.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${r.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(r.dataId).values[0],[p,d,u]=GT(o,l,s),c=d.length;return[n.makeTensorInfo([c,2],"int32",p),n.makeTensorInfo([c],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(u))]}};function jT(e,t){const n=le("int32",e.length);for(let a=0;a<e.length;++a)n[a]=ms(e[a]).modulo(t).getLowBitsUnsigned();return n}const qT={kernelName:Ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:s}=a,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const r=jT(n.data.get(i.dataId).values,s);return n.makeTensorInfo(i.shape,"int32",r)}},KT=Ux($a,e=>Math.tan(e)),XT={kernelName:$a,backendName:"cpu",kernelFunc:KT},YT=Ux(_a,e=>Math.tanh(e)),JT={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:s,updates:i}=t,{sliceRank:r,numUpdates:o,sliceSize:l,strides:p,outputSize:d}=jd(0,s,a.shape),u=n.bufferSync(s),c=n.bufferSync(i),h=n.bufferSync(a),m=ZN(u,c,a.shape,d,l,o,r,p,h,!1);return n.makeTensorInfo(a.shape,m.dtype,m.values)}};function ZT(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const a=ar(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const i=e.locToIndex(s);a.values[t]=e.values[i]}return a}const QT={kernelName:Ra,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:i}=a;Px(s,"tile");const r=ZT(n.bufferSync(s),i);return n.makeTensorInfo(r.shape,r.dtype,r.values)}},eC=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function tC(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){const s=a-n+1,i=t-n+1,r=Math.log(s),o=.5*Math.exp(2*r/3),l=.5*Math.sqrt(r*o*(s-o)/s)*Math.sign(i-s/2);tC(e,t,Math.max(n,Math.floor(t-i*o/s+l)),Math.min(a,Math.floor(t+(s-i)*o/s+l)))}const s=e[t];let i=n,r=a;for(K(e,n,t),eC(e[a],s)>0&&K(e,n,a);i<r;){for(K(e,i,r),i++,r--;eC(e[i],s)<0;)i+=1;for(;eC(e[r],s)>0;)r-=1}0===eC(e[n],s)?K(e,n,r):(r+=1,K(e,r,a)),r<=t&&(n=r+1),t<=r&&(a=r-1)}}function nC(e,t,n,a,s){const i=t[t.length-1],[r,o]=[e.length/i,i],l=oe(n,r*a),p=oe("int32",r*a);for(let t=0;t<r;t++){const n=t*o,i=e.subarray(n,n+o);let r=new Array(i.length);i.forEach((e,t)=>r[t]={value:e,index:t}),a<r.length&&(tC(r,a),r=r.slice(0,a)),s&&r.sort(eC);const d=t*a,u=l.subarray(d,d+a),c=p.subarray(d,d+a);for(let e=0;e<a;e++)u[e]=r[e].value,c[e]=r[e].index}const d=t.slice();return d[d.length-1]=a,[ar(d,n,l),ar(d,"int32",p)]}const aC={kernelName:Aa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:i,sorted:r}=a;Px(s,"topk");const o=n.data.get(s.dataId).values,[l,p]=nC(o,s.shape,s.dtype,i,r);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(p.shape,p.dtype,p.values)]}},sC={kernelName:Da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:i}=t,{interpolation:r,fillMode:o,fillValue:l,outputShape:p}=n,[d,u,c,h]=s.shape,[m,f]=null!=p?p:[u,c],g=[d,m,f,h],v=ge(s.shape),b=v[0],y=v[1],x=v[2],w=ge(g),k=w[0],I=w[1],S=w[2],N=oe(s.dtype,Z(g));N.fill(l);const T=a.data.get(s.dataId).values,C=a.data.get(i.dataId).values;for(let e=0;e<d;++e){const t=1===i.shape[0]?C:C.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let a=0;a<f;++a)for(let s=0;s<h;++s){let i;const p=t[6]*a+t[7]*n+1;if(0===p)continue;const d=(t[0]*a+t[1]*n+t[2])/p,h=(t[3]*a+t[4]*n+t[5])/p,m=iC(d,c,o),f=iC(h,u,o);switch(r){case"nearest":i=oC(T,u,c,b,y,x,e,f,m,s,l);break;case"bilinear":i=lC(T,u,c,b,y,x,e,f,m,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${r}`)}N[e*k+n*I+a*S+s]=i}return a.makeTensorInfo(g,s.dtype,N)}return{dataId:a.write(N,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function iC(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return j(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return j(0,n,t-1)}(e,t);case"nearest":return function(e,t){return j(0,e,t-1)}(e,t);default:return e}}function rC(e,t,n,a,s,i,r,o,l,p,d){return 0<=o&&o<t&&0<=l&&l<n?e[r*a+o*s+l*i+p]:d}function oC(e,t,n,a,s,i,r,o,l,p,d){return rC(e,t,n,a,s,i,r,Math.round(o),Math.round(l),p,d)}function lC(e,t,n,a,s,i,r,o,l,p,d){const u=Math.floor(o),c=Math.floor(l),h=u+1,m=c+1;return(h-o)*((m-l)*rC(e,t,n,a,s,i,r,u,c,p,d)+(l-c)*rC(e,t,n,a,s,i,r,u,m,p,d))+(o-u)*((m-l)*rC(e,t,n,a,s,i,r,h,c,p,d)+(l-c)*rC(e,t,n,a,s,i,r,h,m,p,d))}function pC(e,t,n,a){const s=ie(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const r=new Map,o=new Int32Array(n[s]),l=new _s(i,a,e),p=[],d=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let a=0;a<i[2];a++)e.push(l.get(n,t,a));n=e.join(",")}const a=r.get(n);if(null!=a)o[t]=a;else{const e=r.size;r.set(n,e),o[t]=e,p.push(t)}}const u=i.slice();u[1]=r.size;const c=new _s(u,a);p.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let a=0;a<i[2];a++)c.set(l.get(n,e,a),n,t,a)});const h=n.slice();return h[s]=u[1],{outputValues:c.values,outputShape:h,indices:o}}const dC={kernelName:Oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:s}=n,{x:i}=t;Px(i,"unique");const r=a.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:p}=pC(r,s,i.shape,i.dtype);return[a.makeTensorInfo(l,i.dtype,o),a.makeTensorInfo([p.length],"int32",p)]}},uC={kernelName:Ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:s}=t;let{axis:i}=a;i<0&&(i+=s.shape.length);const r=s.shape.length,o=s.shape[i],l=new Array(r-1);let p=0;for(let e=0;e<r;e++)e!==i&&(l[p++]=s.shape[e]);const d=new Array(r).fill(0),u=s.shape.slice();u[i]=1;const c=new Array(o);for(let e=0;e<c.length;e++){d[i]=e;const t=ok({inputs:{x:s},backend:n,attrs:{begin:d,size:u}});c[e]=kw({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return c}},cC={kernelName:La,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:i}=t,{numSegments:r}=a;Px(s,"unsortedSegmentSum");const o=[],l=[],p=s.shape.length-i.shape.length;let d=i;for(let e=0;e<p;++e){const t=xI({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,l.push(t)}for(let e=0;e<r;++e){const t=fs(e,"int32"),a=n.makeTensorInfo([],"int32",t),i=oI({inputs:{a,b:d},backend:n}),r=mw({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),p=eI({inputs:{a:r,b:s},backend:n}),u=nI({inputs:{x:p},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(a),l.push(i),l.push(r),l.push(p),l.push(u)}const u=vN({inputs:o,backend:n,attrs:{axis:0}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}},hC=[Tw,Ew,_w,Aw,ww,Dw,Lw,Pw,zw,Vw,Uw,Gw,jw,Xw,Jw,tk,nk,ak,sk,Nw,ik,pk,ck,mk,fk,fw,bk,xk,pw,wk,Tk,Ek,$k,_k,Rk,Ak,Dk,Ok,Lk,Pk,zk,Vk,Bk,Uk,Gk,Hk,jk,qk,Kk,Xk,Yk,Jk,sI,Hx,iI,lI,gI,yI,wI,SI,OI,LI,PI,BI,GI,HI,jI,KI,YI,QI,nS,qx,aS,Sk,iS,oS,pS,Xx,cS,fS,vS,xS,kS,NS,CS,_S,RS,AS,OS,PS,zS,VS,BS,US,WS,GS,HS,KS,XS,ZS,tN,tI,aN,iN,oN,pN,cN,hN,gN,bN,yN,kN,Qx,SN,CN,_N,MN,PN,cw,CI,VN,tw,aw,Iw,BN,UN,WN,GN,HN,jN,KN,JN,QN,nT,aT,oT,rw,pT,uT,hT,lk,eN,gT,vT,yT,wT,IT,ST,NT,TT,$T,_T,DT,OT,LT,zT,UT,HT,qT,RI,aI,XT,{kernelName:_a,backendName:"cpu",kernelFunc:YT},JT,QT,aC,sC,Mw,dC,uC,cC,fN];for(const e of hC)Ja(e);const mC={},fC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function gC(e,t){if(!(e in mC)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if($e().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete mC[e]},!1),$e().getBool("SOFTWARE_WEBGL_ENABLED")&&(fC.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",fC)||n.getContext("experimental-webgl",fC):n.getContext("webgl2",fC)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;mC[e]=n}const n=mC[e];return null==n||n.isContextLost()?(delete mC[e],gC(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),mC[e])}var vC,bC,yC;function xC(e,t){return[t,e]}function wC(e){const t=Z(e);return te(Math.ceil(t/4))}function kC(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function IC(e,t){const n=e;let a,s,i,r,o,l,p,d,u,c;return 2===$e().getNumber("WEBGL_VERSION")?(a=n.R32F,s=n.R16F,i=n.RGBA16F,r=n.RGBA32F,o=n.RED,p=4,d=1,u=n.HALF_FLOAT,c=n.FLOAT,l=n.RGBA8):(a=e.RGBA,s=e.RGBA,i=e.RGBA,r=n.RGBA,o=e.RGBA,p=4,d=4,u=null!=t?t.HALF_FLOAT_OES:null,c=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:r,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:p,defaultNumChannels:d,textureTypeHalfFloat:u,textureTypeFloat:c}}function SC(e,t){const n=t();return $e().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function NC(e){return!!($e().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function TC(e,t){return OC(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(vC||(vC={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(bC||(bC={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(yC||(yC={}));const CC=/ERROR: [0-9]+:([0-9]+):/g;function EC(e,t){const n=CC.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],s=e.split("\n"),i=s.length.toString().length+2,r=s.map((e,t)=>ne((t+1).toString(),i)+e);let o=0;for(let e=0;e<r.length;e++)o=Math.max(r[e].length,o);const l=r.slice(0,a-1),p=r.slice(a-1,a),d=r.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ne(p[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function $C(e,t){if(SC(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function _C(e,t,n,a,s,i,r){const o=e.getAttribLocation(t,n);return-1!==o&&(SC(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),SC(e,()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,i,r)),SC(e,()=>e.enableVertexAttribArray(o)),!0)}function RC(e,t,n,a){SC(e,()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),SC(e,()=>e.activeTexture(e.TEXTURE0+n)),SC(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,a)),SC(e,()=>e.uniform1i(n,a))}function AC(e,t,n){SC(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),SC(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function DC(e,t){SC(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),SC(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function FC(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function OC(e,t,n){const a=SC(e,()=>t());if(null==a)throw new Error(n);return a}function MC(e,t=2){return Z(e.slice(0,e.length-t))}function LC(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function PC(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[MC(e),...LC(e)]),t}function zC(e){return e%2==0}function VC(e,t){if(Q(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(zC(n)&&zC(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&zC(e[0])&&zC(t[0])}let BC,UC;function WC(e,t){return null!=e.getExtension(t)}function GC(e){try{if(null!=gC(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function HC(e){const t=IC(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),s}function jC(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&X("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const qC=$e();function KC(){let e,t,n,a,s,i,r,o,l,p;return 2===$e().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",s="texture",i="outputColor",r="out vec4 outputColor;",o=$e().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",p="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",s="texture2D",i="gl_FragColor",r="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",p="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:s,output:i,defineOutput:r,defineSpecialNaN:o,defineSpecialInf:l,defineRound:p}}function XC(e,t,n="index"){const a=ge(t);return a.map((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`).join("")}function YC(e,t,n="index"){const a=ge(t);return a.map((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`).join("")}function JC(e){const t=ge(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}qC.registerFlag("HAS_WEBGL",()=>qC.getNumber("WEBGL_VERSION")>0),qC.registerFlag("WEBGL_VERSION",()=>GC(2)?2:GC(1)?1:0),qC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),qC.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===qC.get("WEBGL_VERSION")),qC.registerFlag("WEBGL_CPU_FORWARD",()=>!0),qC.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),qC.registerFlag("WEBGL_PACK",()=>qC.getBool("HAS_WEBGL")),qC.registerFlag("WEBGL_PACK_NORMALIZATION",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_PACK_CLIP",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_PACK_REDUCE",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_LAZILY_UNPACK",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_CONV_IM2COL",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>qC.getBool("WEBGL_PACK")),qC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==BC){const t=gC(e);BC=t.getParameter(t.MAX_TEXTURE_SIZE)}return BC}(qC.getNumber("WEBGL_VERSION"))),qC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==UC){const t=gC(e);UC=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,UC)}(qC.getNumber("WEBGL_VERSION"))),qC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=qC.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=gC(e);return t=WC(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:WC(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),qC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>qC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ai()),qC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=gC(e);if(1===e){if(!WC(t,"OES_texture_float"))return!1}else if(!WC(t,"EXT_color_buffer_float"))return!1;return HC(t)}(qC.getNumber("WEBGL_VERSION"))),qC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!qC.getBool("WEBGL_FORCE_F16_TEXTURES")&&qC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),qC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=gC(e);if(1!==e){if(WC(t,"EXT_color_buffer_float"))return HC(t);const e="EXT_color_buffer_half_float";if(WC(t,e)){const n=t.getExtension(e);return function(e,t){const n=IC(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),i}(t,n)}return!1}return!!WC(t,"OES_texture_float")&&!!WC(t,"WEBGL_color_buffer_float")&&HC(t)}(qC.getNumber("WEBGL_VERSION"))),qC.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=qC.getNumber("WEBGL_VERSION"))&&null!=gC(e).fenceSync;var e}),qC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>qC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),qC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),qC.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ai()?1:-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),qC.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),qC.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),qC.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),qC.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),qC.registerFlag("WEBGL_EXP_CONV",()=>!1),qC.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>qC.getBool("IS_TEST")),qC.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),qC.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),qC.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),qC.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const ZC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:QC}=n;function eE(e,t,n){const a=[];if(e.forEach(e=>{const t=Z(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=dE(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const s=a.join("\n"),i=e.map(e=>function(e,t,n=!1,a){let s="";s+=n?nE(e,a):tE(e,a);const i=e.shapeInfo.logicalShape,r=t.logicalShape;return i.length<=r.length&&(s+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,r=t.logicalShape.length,o=QC(e.shapeInfo.logicalShape,t.logicalShape),l=pE(r),p=r-i;let d;const u=["x","y","z","w","u","v"];d=0===i?"":r<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${u[e+p]} = 0;`).join("\n");let c="";c=r<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${u[t+p]}`).join(", ");let h="return outputValue;";const m=1===Z(e.shapeInfo.logicalShape),f=1===Z(t.logicalShape);if(1!==i||m||f){if(m&&!f)h=1===r?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?h="return vec4(outputValue.x);":o.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${a}(${c});\n      ${h}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",i=t.texShape,r=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&Q(r,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const p=pE(l),d=QC(e.shapeInfo.logicalShape,t.logicalShape),u=l-o;let c;const h=["x","y","z","w","u","v"];c=0===o?"":l<2&&d.length>=1?"coords = 0;":d.map(e=>`coords.${h[e+u]} = 0;`).join("\n");let m="";return m=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${h[t+u]}`).join(", "),`\n    float ${s}() {\n      ${p} coords = getOutputCoords();\n      ${c}\n      return get${a}(${m});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),r=t.texShape,o=KC(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let p,d,u=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${aE}\n    ${sE}\n    ${iE}\n  `}(o);return t.isPacked?(p=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Q(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),i=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),i=s*Math.ceil(e[e.length-2]/2);let r=i,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)r*=e[e.length-t-1],o=`\n      int b${t} = index / ${r};\n      index -= b${t} * ${r};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,r,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(p=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return Q(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${YC(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const a=XC(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${YC(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const a=XC(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=XC(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=XC(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,r,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(u+=rE),[u,l,d,s,p,i,n.userCode].join("\n")}function tE(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[s,i]=e.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const r=oE(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${r});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${r});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${lE(e)}\n      }\n    `;const s=e.shapeInfo.texShape,i=s[0],r=s[1];if(1===r&&1===i)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=oE(n);return 1===r?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${r}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${r}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape;if(null!=i&&Q(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:r,keptDims:o}=re(n),l=r;if(l.length<n.length){const n=["row","col"];return`\n      ${tE(uE(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${cE(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${lE(e)}\n      }\n    `;const p=i[0],d=i[1],u=oE(a);return 1===d?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${u}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${u}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===p?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${u}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${u}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${u};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${u};\n    vec2 uv = uvFromFlat(${p}, ${d}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[1]*n[2],r=n[2],{newShape:o,keptDims:l}=re(n),p=o;if(p.length<n.length){const n=["row","col","depth"];return`\n        ${tE(uE(e,p),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${cE(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${r}, 1)));\n        ${lE(e)}\n      }\n    `;const d=e.shapeInfo.texShape,u=d[0],c=d[1],h=e.shapeInfo.flatOffset;if(c===i&&null==h)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${r}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${c}.0, ${u}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(c===r&&null==h)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${u}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const m=oE(a);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${m};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${r} + depth + ${m};\n        vec2 uv = uvFromFlat(${u}, ${c}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[3],r=n[2]*i,o=n[1]*r,{newShape:l,keptDims:p}=re(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${tE(uE(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${cE(n,p)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${r}, ${i}, 1)));\n        ${lE(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,u=e.shapeInfo.texShape,c=u[0],h=u[1],m=`int stride2 = ${a}Shape[3];`,f=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(h===o&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${f}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${r}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${c}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(h===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${c}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const v=oE(a);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${f}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${v});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${r} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${c}, ${h}, index + ${v});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,r=t[2]*i,o=t[1]*r,{newShape:l,keptDims:p}=re(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${tE(uE(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${cE(t,p)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${r}, ${i}, ${s})) +\n          depth3;\n        ${lE(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,u=e.shapeInfo.texShape,c=u[0],h=u[1];if(h===o&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${r}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===s&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${r} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${oE(n)};\n      vec2 uv = uvFromFlat(${c}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=re(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${tE(uE(e,s))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${cE(t,i)});\n      }\n    `}const r=t[5],o=t[4]*r,l=t[3]*o,p=t[2]*l,d=t[1]*p;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${p}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${r}, 1)));\n        ${lE(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],m=c[1];if(m===d&&null==u)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${p}, ${l}, ${o}, ${r})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===r&&null==u)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${p} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${r} + depth4 + ${oE(n)};\n      vec2 uv = uvFromFlat(${h}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function nE(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${KC().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=KC();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,r=i[0],o=i[1],l=KC();if(null!=i&&Q(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${r}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;const p=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${p[0]}, ${p[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,r=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const a=[1,2],i=["b","row","col"];return`\n        ${nE(uE(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${cE(i,a)});\n        }\n      `}const o=KC();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;const l=r[0],p=r[1],d=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${p}, ${d*Math.ceil(n[1]/2)}, ${d}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=KC();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,r=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],p=l[0],d=l[1],u=Math.ceil(i[r-1]/2);let c=u*Math.ceil(i[r-2]/2),h="int b, int row, int col",m=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<r-1;e++)h=`int b${e}, `+h,c*=i[r-e-1],m=`b${e} * ${c} + `+m;return`\n    vec4 ${a}(${h}) {\n      int index = ${m};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${p});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const aE="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",sE="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iE="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rE="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function oE(e){return`offset${e}`}function lE(e){const t=e.name,n=Z(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function pE(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function dE(e,t,n){const{newShape:a,keptDims:s}=re(t),i=t.length,r=e&&3===i&&1===t[0],o=r?t.slice(1):a,l=!e&&i>1&&!Q(t,n)&&a.length<i||r;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function uE(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function cE(e,t){return t.map(t=>e[t]).join(", ")}function hE(e,t,n){const a=[],s=[];let i,r,o,l=null,p=null;p=e.getUniformLocation(n,"NAN",!1),1===$e().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const s of t.variableNames){const i={name:s,uniform:e.getUniformLocation(n,s,d),offset:e.getUniformLocation(n,`offset${s}`,d)};t.enableShapeUniforms&&(i.shape=e.getUniformLocation(n,`${s}Shape`,d),i.texShape=e.getUniformLocation(n,`${s}TexShape`,d)),a.push(i)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",d),o=e.getUniformLocation(n,"outShapeStrides",d),r=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const a of t.customUniforms)s.push(e.getUniformLocation(n,a.name,d));return{variablesLocations:a,customUniformLocations:s,infLoc:l,nanLoc:p,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:r}}function mE(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const a=e.logicalShape,s=t[n],i=s.shape;if(!Q(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const r=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!Q(r,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${r} and ${o} must match`)})}function fE(e){return $e().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class gE{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=vC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=KC();this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?YC(["r","c","d"],e):XC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class vE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=vC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=KC();this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?YC(["r","c","d"],e):XC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class bE{constructor(e){this.variableNames=["A"],this.outTexUsage=bC.DOWNLOAD;const t=KC();this.outputShape=e,this.userCode=`\n      ${ZC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class yE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=bC.DOWNLOAD;const t=KC();this.outputShape=e,this.userCode=`\n      ${ZC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const xE={R:0,G:1,B:2,A:3};class wE{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=KC();this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let i="";for(let e=0;e<n.length;e++){const t=n[e];i+=`\n          if(offset == ${e}) {\n            result = values[${xE[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":JC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${a.texture2D}(A, uv);\n          ${i}\n        }\n        ${a.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class kE{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=KC();this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);let a="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const i=2*t+s;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":JC(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${s};\n        }\n    `}}function IE(e,t,n,a,s,i){!function(e,t){const n=$e().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const r=function(e){return OC(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return SC(e,()=>e.bindTexture(o,r)),SC(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),SC(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),SC(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),SC(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===$e().getNumber("WEBGL_VERSION")?SC(e,()=>e.texImage2D(o,0,a,t,n,0,s,i,null)):SC(e,()=>e.texStorage2D(o,1,a,t,n)),SC(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:r,texShape:[n,t]}}function SE(e){return e.internalFormatFloat}function NE(e){return e.internalFormatHalfFloat}function TE(e){return e.downloadTextureFormat}function CE(e){return e.internalFormatPackedFloat}function EE(e){return e.internalFormatPackedHalfFloat}class $E{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=$e().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){mC[e]=t}(t,e)):this.gl=gC(t),e=this.gl,2===$e().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>SC(t,()=>t.createVertexArray()),this.bindVertexArray=e=>SC(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>SC(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>SC(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>SC(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>SC(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>SC(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>SC(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===$e().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=TC(this.gl,e),WC(this.gl,t))this.textureHalfFloatExtension=TC(this.gl,t);else if($e().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),WC(this.gl,a))this.colorBufferHalfFloatExtension=TC(this.gl,a);else if($e().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",WC(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!WC(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=function(e){return function(e,t){const n=OC(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return SC(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),SC(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=OC(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return SC(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),SC(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return OC(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=IC(this.gl,this.textureHalfFloatExtension)}get debug(){return $e().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;SC(e,()=>e.finish()),SC(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),SC(e,()=>e.deleteFramebuffer(this.framebuffer)),SC(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),SC(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),SC(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,i]=xC(t,n);return IE(e,s,i,SE(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,i]=xC(t,n);return IE(e,s,i,NE(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,i]=xC(t,n);return IE(e,s,i,TE(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){SC(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===$e().getNumber("WEBGL_VERSION")?SC(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):SC(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===$e().getNumber("WEBGL_VERSION")?SC(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):SC(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),SC(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,s,i){let r,o,l;SC(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(r=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(r=new Float32Array(n*a*4),o=e.FLOAT,l=i.internalFormatPackedFloat),r.set(s),2===$e().getNumber("WEBGL_VERSION")?SC(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,r)):SC(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,r)),SC(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,i]=kC(t,n);return IE(e,s,i,EE(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[s,i]=kC(t,n);return IE(e,s,i,CE(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(DC(this.gl,this.framebuffer),this.outputTexture=null),SC(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,a){const[s,i]=xC(t,n),r=new Uint8Array(t*n*4);return SC(e,()=>e.readPixels(0,0,s,i,a.downloadTextureFormat,e.UNSIGNED_BYTE,r)),new Float32Array(r.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,a,s,i){return function(e,t,n,a,s,i,r){const o=e,l=new Float32Array(function(e,t){const[n,a]=kC(e,t);return n*a*4}(i,r));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,l),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,s=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,s),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();SC(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const s=16*t*n;return SC(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),SC(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),SC(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if($e().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,s=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(s,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=s}else $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const a=new Float32Array(t*n*4);return SC(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a)),a}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=KC();return function(e,t){const n=OC(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(SC(e,()=>e.shaderSource(n,t)),SC(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return OC(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);SC(t,()=>t.attachShader(n,this.vertexShader)),SC(t,()=>t.attachShader(n,e)),function(e,t){if(SC(e,()=>e.linkProgram(t)),!$e().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&$C(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;SC(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function(e,t,n){SC(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),_C(e,t,"clipSpacePos",n,3,20,0)&&_C(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(SC(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&$C(this.gl,this.program),SC(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return OC(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),SC(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),RC(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,s]=kC(t,n);this.setOutputMatrixTextureDriver(e,a,s)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&$C(this.gl,this.program),FC(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}SC(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),SC(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=TC(this.gl,2===$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ae(()=>this.disposed||this.isQueryAvailable(e,$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in $e().platform&&(n=$e().platform.setTimeoutCustom.bind($e().platform)),ae(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),AC(this.gl,e,this.framebuffer),this.debug&&FC(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AC(this.gl,this.outputTexture,this.framebuffer),this.debug&&FC(this.gl)):DC(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;AC(a,e,this.framebuffer),this.debug&&FC(a),this.outputTexture=e,SC(a,()=>a.viewport(0,0,t,n)),SC(a,()=>a.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),SC(this.gl,()=>this.gl.scissor(e,t,n,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:_E,XI:RE,Nk:AE,f6:DE,ct:FE,YG:OE,hH:ME,z3:LE,sG:PE,uM:zE,vS:VE,qB:BE,GG:UE,rq:WE,lg:GE,WR:HE,cu:jE,GE:qE,px:KE,jC:XE,He:YE,hE:JE,BF:ZE,Dk:QE,cl:e$,_B:t$,ub:n$,_f:a$,Ku:s$,qy:i$,Zy:r$,bu:o$,zv:l$,dH:p$,HS:d$,yH:u$,l3:c$,z9:h$,x6:m$,_m:f$,eW:g$,GK:v$,SP:b$,yr:y$,dl:x$,Dw:w$,xT:k$,_X:I$,wz:S$}=a;function N$(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function T$(e,t){return 1===t?[e]:N$(e,t)}class C${constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=fE(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=T$("rc",this.rank),t=pE(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let s=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class E${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var a,s;this.userCode=`\n      ${a=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const a=function(e,t){const n=e.length,a=e.map(e=>`${t}[${e}]`),s=new Array(n-1);s[n-2]=a[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${a[e+1]})`;return s}(e.map((e,t)=>t),t);return a.map((t,s)=>`int ${e[s]} = ${n} / ${a[s]}; ${s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a[s]}`:`index -= ${e[s]} * ${a[s]}`};`).join("")}(["r","c","d"],"inputShape"):XC(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":JC(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class $${constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=R$(t,n),s=A$(e,a,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=_$(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let r;return a===yC.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===yC.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===yC.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===yC.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===yC.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(r),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),r}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const s=R$(n,a),i=A$(t,s,a);i in this.freeTextures||(this.freeTextures[i]=[]);const r=_$(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=$e().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=r):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=r),this.numUsedTextures--;const l=this.usedTextures[i],p=l&&l.indexOf(e);if(null==p||p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[p]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function _$(e,t,n,a,s){const i=function(e,t){switch(e){case yC.PACKED_2X2_FLOAT32:return CE(t);case yC.PACKED_2X2_FLOAT16:return EE(t);case yC.UNPACKED_FLOAT32:return SE(t);case yC.UNPACKED_FLOAT16:return NE(t);case yC.PACKED_4X1_UNSIGNED_BYTE:return TE(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);let r;if(s){const[t,n]=kC(e[0],e[1]);r=t*n}else{const[t,n]=xC(e[0],e[1]);r=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return r*o}function R$(e,t){if(e===bC.UPLOAD)return yC.PACKED_2X2_FLOAT32;if(e===bC.RENDER||null==e)return function(e){return $e().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?yC.PACKED_2X2_FLOAT32:yC.UNPACKED_FLOAT32:e?yC.PACKED_2X2_FLOAT16:yC.UNPACKED_FLOAT16}(t);if(e===bC.DOWNLOAD||e===bC.PIXELS)return yC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function A$(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class D${constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const F$="if (isnan(x)) return x;",O$="return abs(x);",M$=F$+"\n  return (x < 0.0) ? 0.0 : x;\n",L$=F$+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",P$="return x;";class z${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class V${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);const t=e.length,n=T$("rc",t),a=pE(t),s=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),r=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${r}));\n      }\n    `}}const B$=Lu,U$={},W$=$e().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class G$ extends W{nextDataId(){return G$.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!$e().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof $E)t=e;else{const n=gC($e().getNumber("WEBGL_VERSION"),e);t=new $E(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=gC($e().getNumber("WEBGL_VERSION"));t=new $E(e),this.binaryCache=((n=$e().getNumber("WEBGL_VERSION"))in U$||(U$[n]={}),U$[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new $$(this.gpgpu),this.numMBBeforeWarning=null==$e().global.screen?1024:$e().global.screen.height*$e().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new U(this,vi())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,s,i){const r=this.makeTensorInfo(t,n),o=this.texData.get(r.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[a,s]},o.texShape=[a,s];const l=PC(t),p=new wE(l,!1,i),d=this.runWebGLProgram(p,[r],n,[[a,s]]);return d.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(r),d.dataId}write(e,t,n){if(($e().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||$e().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:bC.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,s){if($e().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:bC.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:s,slice:i,shape:r,isPacked:o}=t;if(null!=i){let t;t=o?new z$(r,P$):new D$(r,P$);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let p,d;return l&&(p=vs()),d="complex64"===a?tu(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=vs()-p),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:a,slice:s,dtype:i,complexTensorInfos:r,isPacked:o}=t;if(null!=s){let t;t=o?new z$(a,P$):new D$(a,P$);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if($e().getBool("DEBUG")&&!$e().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===$e().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,p,d=null;if("complex64"!==i&&$e().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...wC(a))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(r.real.dataId),this.read(r.imag.dataId)]);p=tu(e[0],e[1])}else if(null==d)p=this.getValuesFromTexture(e);else{const e=Z(a);p=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;SC(e,()=>e.deleteBuffer(d))}const u=this.convertAndCacheOnCPU(e,p),c=this.pendingRead.get(e);return this.pendingRead.delete(e),c.forEach(e=>e(u)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&vi().removeDataId(e,this),this.pendingDeletes--),u}readToGPU(e,t={}){const n=this.texData.get(e),{values:a,shape:s,slice:i,dtype:r,isPacked:o,texture:l}=n;if("complex64"===r)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new z$(s,P$):new D$(s,P$);const a=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:r}],r),i=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),i}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const p=this.decode(e,t.customTexShape),d=vi().makeTensorFromTensorInfo(p),u=this.texData.get(p.dataId);return Object.assign({tensorRef:d},u.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>ys(e));return ar(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ar(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!NC(n)){if($e().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),s=Z(t);if($e().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...wC(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=$e().getBool("WEBGL_PACK")&&!0===a,r=i?PC(t):t,o=i?new yE(r):new bE(r),l=this.runWebGLProgram(o,[{shape:r,dtype:n,dataId:e}],"float32"),p=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ws(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=ws(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);const r={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if($e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);r.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),r.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else r.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,r})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:vs(),endMs:null}}endTimer(e){return $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=vs(),e)}async getQueryTime(e){if($e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:s,isPacked:i,slice:r}=this.texData.get(e),o=r&&r.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,s,i)));const p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=W$){return $e().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&Z(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Ga("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return B$(e.shape,t)}packedUnaryOp(e,t,n){const a=new z$(e.shape,t),s=this.compileAndRun(a,[e],n);return vi().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=p$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if($e().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,O$,e.dtype);const t=new D$(e.shape,O$),n=this.compileAndRun(t,[e]);return vi().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&ue(n[0])){const s=n.map(e=>bs(e));a=this.write(s,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return vi().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new V$(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new C$(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[MC(e.shape),...LC(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},s=[MC(t),...LC(t)],i=new E$(s,n),r=[n],o=this.runWebGLProgram(i,[a],e.dtype,r,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:s,dtype:i}=n;null!=t&&X(Z(s)<=t[0]*t[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const r=PC(s);let o;o=a?new vE(r):new gE(r);const l=[null!=t?t:wC(r)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(o,[{shape:r,dtype:i,dataId:e}],i,l,!0,t).dataId}}runWebGLProgram(e,t,n,a,s=!1,i){const r=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(r.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===vC.DENSE){const t=null!=i?i:wC(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Z(r.shape))return o.values=oe(r.dtype,0),r;const l=[],p=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Z(t.shape)<=$e().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!VC(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(r.dataId);const d={shape:r.shape,texData:o,isUniform:!1},u=function(e,t,n){let a="";t.concat(n).forEach(t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:r,uniformShape:o,keptDims:l}=dE(e.packedInputs,t.shape,i);let p="",d="",u="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];p=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ge(o);u=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;const c=t.shape.length,h=2===o.length&&Q(t.shape,i),m=1===Z(t.shape),f=Er(t.shape,n.shape),g=!e.packedInputs&&c===n.shape.length&&Q(i,n.texData.texShape),v=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;a+=`${c}_${g}_${r?l:""}_${o.length}_${m}_${f}_${h}_${p}_${d}_${u}_${v}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${s}`}});const s=e.userCode;let i=e.constructor.name;return i+="_"+a+"_"+s+`${$e().getNumber("WEBGL_VERSION")}`,i}(e,p,d),c=this.getAndSaveBinary(u,()=>function(e,t,n,a){const s=n.map((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}}),i=s.map(e=>e.shapeInfo),r={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=eE(s,r,t),l=function(e,t){const n=OC(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(SC(e,()=>e.shaderSource(n,t)),SC(e,()=>e.compileShader(n)),$e().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw EC(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),p=e.createProgram(l);return $e().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:p,inShapeInfos:i,outShapeInfo:r,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(p),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:p,inShapeInfos:i,outShapeInfo:r},hE(e,t,p)))}(this.gpgpu,e,p,d)),h=null!=this.activeTimers;let m;h&&(m=this.startTimer()),$e().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,s){t.program.enableShapeUniforms||(mE(t.inShapeInfos,n),mE([t.outShapeInfo],[a]));const i=a.texData.texture,r=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,r[0],r[1]):e.setOutputMatrixTexture(i.texture,r[0],r[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===$e().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let a=0;a<n.length;++a){const s=n[a],{uniform:i,offset:r,shape:o,texShape:l}=t.variablesLocations[a];if(o){const{uniformShape:n}=dE(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=i)if(s.isUniform)if(Z(s.shape)<2)e.gl.uniform1f(i,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=s.texData.slice&&null!=r&&e.gl.uniform1i(r,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,i,a)}const o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=ge(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const a=t.program.customUniforms[n],i=t.customUniformLocations[n],r=s[n];if("float"===a.type)e.gl.uniform1fv(i,r);else if("vec2"===a.type)e.gl.uniform2fv(i,r);else if("vec3"===a.type)e.gl.uniform3fv(i,r);else if("vec4"===a.type)e.gl.uniform4fv(i,r);else if("int"===a.type)e.gl.uniform1iv(i,r);else if("ivec2"===a.type)e.gl.uniform2iv(i,r);else if("ivec3"===a.type)e.gl.uniform3iv(i,r);else{if("ivec4"!==a.type)throw Error(`uniform type ${a.type} is not supported yet.`);e.gl.uniform4iv(i,r)}}e.executeProgram()}(this.gpgpu,c,p,d,a),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),h&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const f=$e().getNumber("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=vs();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!$e().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(r);return this.disposeIntermediateTensorInfo(r),e}return r}compileAndRun(e,t,n,a,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||($e().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=yi(()=>{if(!$e().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=$e().getBool("DEBUG");$e().set("DEBUG",!1);const t=this.abs(mr(1e-8)).dataSync()[0];if($e().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:s,texture:i,usage:r,isPacked:o}=t;if(null!=i)return;const l=null!=this.activeTimers;let p;l&&(p=vs());let d=t.texShape;if(null==d&&(d=function(e,t=!1){let n=$e().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=$e().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&$e().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map((t,n)=>n>=e.length-2?q(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=re(e);e=t.newShape}let s=Z(e),i=null;e.length<=1&&s<=n?i=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const r=null!=i&&Math.max(...i)>a&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||r)if(t){const t=MC(e);let n=2,a=2;e.length&&([n,a]=LC(e)),s=t*(n/2)*(a/2),i=te(s).map(e=>2*e)}else i=te(s);return i}(n,o),t.texShape=d),null!=s){const e=PC(n);let i,r=d[1],u=d[0];const c=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&c||([r,u]=kC(d[0],d[1])),i=o?new kE(e,c):new wE(e,c);const h=c?[u,r]:d,m=this.makeTensorInfo(h,a),f=this.texData.get(m.dataId);f.usage=c?bC.PIXELS:bC.UPLOAD,f.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),r,u,s);const g=[[u,r]],v=!0,b=this.runWebGLProgram(i,[m],a,g,v),y=this.texData.get(b.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,$e().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(m),l&&(this.uploadWaitMs+=vs()-p)}else{const e=this.acquireTexture(d,r,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*de(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Cd(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw EC(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:s,outShapeLocation:i,outShapeStridesLocation:r,outTexShapeLocation:o}=hE(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=s,e.outShapeLocation=i,e.outShapeStridesLocation=r,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:s,width:i,channels:r}=e,o=vi().backend;if(!o.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(a,t,n,s,i,r);return vi().makeTensorFromDataId(l,t,n,o)}}G$.nextDataId=0,si()&&ki("webgl",()=>new G$,2);const H$="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class j${constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=_r(t,n),this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const q$="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class K${constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=_r(t,n);const s=this.outputShape.length;this.enableShapeUniforms=fE(s);let i="";if(a)if(0===s||1===Z(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${pE(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=T$("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function X$(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Y$={kernelName:Kt,backendName:"webgl",kernelFunc:X$};function J$(e){const{inputs:t,backend:n}=e,{real:a,imag:s}=t,i=n.makeTensorInfo(a.shape,"complex64"),r=n.texData.get(i.dataId),o=X$({inputs:{x:a},backend:n}),l=X$({inputs:{x:s},backend:n});return r.complexTensorInfos={real:o,imag:l},i}const Z$={kernelName:rt,backendName:"webgl",kernelFunc:J$},Q$="return (a < 0.) ? b * a : a;",e_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",t_={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:i}=a,r=n.makeTensorInfo([],"float32",fs(i,"float32")),o=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new K$(e_,s.shape,r.shape):new j$(Q$,s.shape,r.shape),l=n.runWebGLProgram(o,[s,r],"float32");return n.disposeIntermediateTensorInfo(r),l}},n_="return (a < 0.) ? b * a : a;",a_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",s_={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:s}=t,i=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new K$(a_,a.shape,s.shape):new j$(n_,a.shape,s.shape);return n.runWebGLProgram(i,[a,s],"float32")}},i_="if (isnan(x)) return x;";function r_({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:s,backend:i})=>{const{x:r}=s,o=i,l=a||r.dtype;if(o.shouldExecuteOnCPU([r])&&null!=n){const e=o.texData.get(r.dataId),t=n(e.values,l);return o.makeTensorInfo(r.shape,l,t)}let p;return p=$e().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new z$(r.shape,t):new D$(r.shape,e),o.runWebGLProgram(p,[r],l)}}function o_({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:i}){return({inputs:r,backend:o})=>{const{a:l,b:p}=r,d=o;if(a&&"complex64"===l.dtype){const t=d.texData.get(l.dataId),n=d.texData.get(p.dataId),[a,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,a]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:a.dataId,dtype:a.dtype,shape:p.shape},r=new j$(e,l.shape,p.shape);return d.runWebGLProgram(r,[s,i],Ws(n.dtype,a.dtype))}),i=J$({inputs:{real:a,imag:s},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(s),i}const u=i||Ws(l.dtype,p.dtype);if(("string"===l.dtype||"string"===p.dtype||d.shouldExecuteOnCPU([l,p]))&&null!=s){const e=d.texData.get(l.dataId).values,t=d.texData.get(p.dataId).values,n="string"===l.dtype?Ou(e):e,a="string"===l.dtype?Ou(t):t,[i,r]=s(l.shape,p.shape,n,a,u),o=d.makeTensorInfo(r,u);return d.texData.get(o.dataId).values=i,o}let c;return c=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new K$(t,l.shape,p.shape,n):new j$(e,l.shape,p.shape),d.runWebGLProgram(c,[l,p],u)}}function l_(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":M$;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":L$;if("prelu"===e)return t?a_:n_;if("leakyrelu"===e)return t?e_:Q$;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class p_{constructor(e,t,n,a=!1,s=!1,i=!1,r=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=fE(this.outputShape.length);const p=a?e[1]:e[2],d=Math.ceil(p/2),u=a?"i * 2, rc.y":"rc.y, i * 2",c=s?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",g="";r&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${r}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${r}\n        }`:`vec4 activation(vec4 x) {\n          ${r}\n        }`,g="result = activation(result);");const v=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",y="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(y=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${f}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${y};\n        for (int i = 0; i < ${d}; i++) {\n          vec4 a = getMatrixA(batchA, ${u});\n          vec4 b = getMatrixB(batchB, ${c});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${m[0]});\n          result += (${h[1]} * ${m[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${v}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class d_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=_r(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const u_="return a * b;";function c_(e){const{inputs:t,backend:n}=e,{a,b:s}=t,i=Ws(a.dtype,s.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),i=new d_("return areal * breal - aimag * bimag;",a.shape,s.shape),r=new d_("return areal * bimag + aimag * breal;",a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(i,o,"float32"),p=n.runWebGLProgram(r,o,"float32"),d=J$({inputs:{real:l,imag:p},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),d}if(n.shouldExecuteOnCPU([a,s])){const e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),[r,o]=ZE(a.shape,s.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=r,l}let r;return r=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new K$(u_,a.shape,s.shape):new j$(u_,a.shape,s.shape),n.runWebGLProgram(r,[a,s],i)}const h_={kernelName:Nn,backendName:"webgl",kernelFunc:c_};function m_(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:i}=a,r=n,o=Z(s.shape),l=se(i,o),p=Z(l);X(o===p,()=>`The new shape (${l}) has ${p} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const d=r.texData.get(s.dataId);return!d.isPacked||VC(s.shape,l)||null!==d.texture&&VC(d.shape,l)?(r.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const a=[MC(e.shape),...LC(e.shape)],s={dtype:e.dtype,shape:a,dataId:e.dataId},i=[MC(t),...LC(t)],r=new E$(i,a),o=[a],l=n.runWebGLProgram(r,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,r)}const f_={kernelName:Hn,backendName:"webgl",kernelFunc:m_};class g_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:i}=e;this.outputShape=[a,i];const r=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${ee(e)?e.toPrecision(2):e}, ones);`}let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${r}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${r};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class v_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:i}=e;this.outputShape=[a,i];let r="0.0",o="";"prod"===t?r="1.0":"min"===t?(r="1.0 / 1e-20",o="min"):"max"===t&&(r="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const p=4*Math.floor(n/4),d=n%4;let u=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,c="vec4";"all"===t?(r="1.0",u="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",c="bvec4"):"any"===t&&(r="0.0",u="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",c="bvec4");let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${r};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${r});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${p}; i += 4) {\n          int inIdx = inOffset + i;\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${p};\n        if (${1===d}) {\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${u}\n        } else if (${2===d}) {\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${u}\n        } else if (${3===d}) {\n          ${c} values = ${c}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${u}\n        }\n        setOutput(${l});\n      }\n    `}}function b_(e,t,n,a){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=Md(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let i=e;for(let r=0;r<s.length;r++){const{inSize:o,windowSize:l,outSize:p}=s[r];let d,u;d="mean"===n?0===r?new g_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:p},o):new g_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:p}):new v_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:p},n),u=i,i=a.runWebGLProgram(d,[i],t),u.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(u)}return i}class y_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const a=pE(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class x_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=pE(this.rank),s=N$("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=s[e];const r=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${r})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function w_(e,t,n){const a=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new x_(e.shape,t):new y_(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function k_(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a;return function(e,t,n,a){const s=t,i=e.shape.length,r=ie(s,e.shape);let o=r;const l=xl(o,i),p=null!=l;let d=e;p&&(d=w_(e,l,a),o=kl(o.length,i)),yl("sum",o,i);const[u,c]=vl(d.shape,o);let h=u;n&&(h=bl(u,r));const m=Z(c),f=m_({inputs:{x:d},attrs:{shape:[Z(e.shape)/m,m]},backend:a}),g=b_(f,Gs(e.dtype),"sum",a),v=m_({inputs:{x:g},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(g),p&&a.disposeIntermediateTensorInfo(d),v}(s,i,r,n)}const I_={kernelName:ca,backendName:"webgl",kernelFunc:k_};function S_(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{perm:i}=a,r=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[i[e]];let p;if(r.shouldExecuteOnCPU([s])){const e=r.texData.get(s.dataId).values,t=I$(e,s.shape,s.dtype,i,l);p=r.makeTensorInfo(l,s.dtype),r.texData.get(p.dataId).values=t}else p=w_(s,i,r);return p}const N_={kernelName:Fa,backendName:"webgl",kernelFunc:S_};function T_({a:e,b:t,transposeA:n,transposeB:a,backend:s,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:l=null}){const p=e.shape.length,d=t.shape.length,u=n?e.shape[p-2]:e.shape[p-1],c=a?t.shape[d-1]:t.shape[d-2],h=n?e.shape[p-1]:e.shape[p-2],m=a?t.shape[d-2]:t.shape[d-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),v=Z(f),b=Z(g),y=_r(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,m]);X(u===c,()=>`Error in matMul: inner shapes (${u}) and (${c}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`);const x=n?[v,u,h]:[v,h,u],w=a?[b,m,c]:[b,c,m],k=m_({inputs:{x:e},backend:s,attrs:{shape:x}}),I=m_({inputs:{x:t},backend:s,attrs:{shape:w}}),S=[k,I],N=Math.max(v,b),T=n?k.shape[1]:k.shape[2],C=null!=i,E=null!=r,$="leakyrelu"===l,_=null!=l?l_(l,!0):null;let R;if((1===h||1===m)&&T>1e3&&!1===(C||E||$||null!=_)){let e=k,t=I;n&&(e=S_({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(e)),a&&(t=S_({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(t));const i=1===m;let r=e;1!==m&&(r=m_({inputs:{x:e},backend:s,attrs:{shape:[N,T,1]}}),S.push(r));const o=1===m?2:1;let l=t;i&&(l=m_({inputs:{x:t},backend:s,attrs:{shape:[N,1,T]}}),S.push(l));const p=c_({inputs:{a:r,b:l},backend:s});R=k_({inputs:{x:p},backend:s,attrs:{axis:o,keepDims:!0}}),S.push(p)}else{const l=Ws(e.dtype,t.dtype),p=new p_(x,w,[N,h,m],n,a,C,_,E,$),d=[k,I];if(null!=i&&d.push(i),E&&d.push(r),$){const e=s.makeTensorInfo([],"float32",fs(o,"float32"));d.push(e),S.push(e)}R=s.runWebGLProgram(p,d,l)}const A=m_({inputs:{x:R},backend:s,attrs:{shape:y}});S.push(R);for(const e of S)s.disposeIntermediateTensorInfo(e);return A}const C_={kernelName:Ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:i,bias:r,preluActivationWeights:o}=t,{transposeA:l,transposeB:p,activation:d,leakyreluAlpha:u}=a;return T_({a:s,b:i,transposeA:l,transposeB:p,backend:n,bias:r,preluActivationWeights:o,leakyreluAlpha:u,activation:d})}},E_="return abs(x);",$_={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=p$(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let s;return s=$e().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new z$(a.shape,E_):new D$(a.shape,E_),n.runWebGLProgram(s,[a],a.dtype)}},__=r_({opSnippet:F$+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),R_={kernelName:Oe,backendName:"webgl",kernelFunc:__},A_=r_({opSnippet:F$+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),D_={kernelName:Me,backendName:"webgl",kernelFunc:A_},F_="return a + b;",O_=o_({opSnippet:F_,packedOpSnippet:F_,supportsComplex:!0,cpuKernelImpl:_E}),M_={kernelName:Le,backendName:"webgl",kernelFunc:O_};class L_{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const a=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}}class P_{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const a=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}}const z_={kernelName:Pe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,s=n;if(1===s.length)return X$({inputs:{x:s[0]},backend:a});if(s.length>$e().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:a}),i=e({inputs:s.slice(t),backend:a});return e({inputs:[n,i],backend:a})}const i=s.map(e=>e.dtype).reduce((e,t)=>Ws(e,t)),r=s.map(e=>e.shape),o=$e().getBool("WEBGL_PACK")?new P_(s[0].shape,r):new L_(s[0].shape,r);return a.runWebGLProgram(o,s,i)}},V_={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a,o=s.shape.length,l=ie(i,s.shape);let p=l;const d=xl(p,o);let u=s;null!=d&&(u=S_({inputs:{x:s},backend:n,attrs:{perm:d}}),p=kl(p.length,o)),yl("all",p,o);const[c,h]=vl(u.shape,p),m=m_({inputs:{x:u},backend:n,attrs:{shape:[-1,Z(h)]}}),f=b_(m,m.dtype,"all",n);let g;return g=m_(r?{inputs:{x:f},backend:n,attrs:{shape:bl(c,l)}}:{inputs:{x:f},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=d&&n.disposeIntermediateTensorInfo(u),g}},B_={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a,o=s.shape.length,l=ie(i,s.shape);let p=l;const d=xl(p,o);let u=s;null!=d&&(u=S_({inputs:{x:s},backend:n,attrs:{perm:d}}),p=kl(p.length,o)),yl("any",p,o);const[c,h]=vl(u.shape,p),m=m_({inputs:{x:u},backend:n,attrs:{shape:[-1,Z(h)]}}),f=b_(m,m.dtype,"any",n);let g;return g=m_(r?{inputs:{x:f},backend:n,attrs:{shape:bl(c,l)}}:{inputs:{x:f},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=d&&n.disposeIntermediateTensorInfo(u),g}};class U_{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const r="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${r} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class W_{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,X(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");const r=this.outputShape,o=r.length,l=pE(o),p=T$("coords",o);let d,u;if(1===i){u=o+1;const e=pE(u);d=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[o-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[o-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[o-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[o-2]};`}else u=o,d=`\n        ${l} sourceLocR = coords;\n        ++${p[o-1]};\n        ${l} sourceLocG = coords;\n        ++${p[o-2]};\n        ${l} sourceLocA = coords;\n        --${p[o-1]};\n        ${l} sourceLocB = coords;\n        --${p[o-2]};`;const c=["x","y","z","w","u","v"].slice(0,u),h="."+c[u-1],m=c.map(e=>"int "+e),f=T$("sourceLocR",u-1).concat("inIdx.r"),g=T$("sourceLocG",u-1).concat("inIdx.g"),v=T$("sourceLocB",u-1).concat("inIdx.b"),b=T$("sourceLocA",u-1).concat("inIdx.a"),y="max"===n?"greaterThan":"lessThan",x=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${v.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${f.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${v.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=a?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${c.join()}),\n                                          vec2(${c.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${c.join()}),\n                               vec2(${c.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${p[o-1]} < ${r[o-1]-1};\n        bool hasNextRow = ${p[o-2]} < ${r[o-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function G_(e,t,n,a=null){let s=t.shape[0],i=t.shape[1];null!=a&&(s=a.shape[0],i=a.shape[1]);const r=Md(i),o={windowSize:r,inSize:i,batchSize:s,outSize:Math.ceil(i/r)},l=new U_(o,n,null==a),p=[t];null!=a&&p.push(a);const d=e.runWebGLProgram(l,p,"int32");if(1===d.shape[1])return d;const u=G_(e,t,n,d);return e.disposeIntermediateTensorInfo(d),u}function H_(e,t,n,a=null){const s=null!=a?a.shape:t.shape,i=Md(s[s.length-1]),r=new W_(s,i,n,null==a),o=null==a?[t]:[t,a],l=e.runWebGLProgram(r,o,"int32");if(l.shape.length===t.shape.length){const a=H_(e,t,n,l);return e.disposeIntermediateTensorInfo(l),a}return l}function j_(e,t,n,a){const s=[n];if(yl("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,t.shape.length),!$e().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let r=t;null!==i&&i.isPacked&&(r=e.unpackTensor(t),n.push(r));const[o,l]=vl(r.shape,s),p=Z(l),d=m_({inputs:{x:r},backend:e,attrs:{shape:[-1,p]}});n.push(d);const u=G_(e,d,a);n.push(u);const c=m_({inputs:{x:u},backend:e,attrs:{shape:o}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),c}return H_(e,t,a)}const q_={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let r=ie(i,s.shape);const o=xl(r,s.shape.length);let l=s;const p=[];null!=o&&(l=S_({inputs:{x:s},backend:n,attrs:{perm:o}}),p.push(l),r=kl(r.length,l.shape.length)),yl("argMax",[r[0]],l.shape.length);const d=j_(n,l,r[0],"max");return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},K_={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let r=ie(i,s.shape);const o=xl(r,s.shape.length);let l=s;const p=[];null!=o&&(l=S_({inputs:{x:s},backend:n,attrs:{perm:o}}),p.push(l),r=kl(r.length,l.shape.length)),yl("argMin",[r[0]],l.shape.length);const d=j_(n,l,r[0],"min");return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},X_=r_({opSnippet:F$+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Y_={kernelName:We,backendName:"webgl",kernelFunc:X_},J_=r_({opSnippet:F$+"return log(x + sqrt(x * x + 1.0));"}),Z_={kernelName:Ge,backendName:"webgl",kernelFunc:J_},Q_=r_({opSnippet:F$+"\n  return atan(x);\n"}),eR={kernelName:He,backendName:"webgl",kernelFunc:Q_},tR=o_({opSnippet:H$+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+q$+"\n  return result;\n"}),nR={kernelName:qe,backendName:"webgl",kernelFunc:tR},aR=r_({opSnippet:F$+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),sR={kernelName:je,backendName:"webgl",kernelFunc:aR};class iR{constructor(e,t,n,a=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,r=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const m="avg"===t,f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let v="0.0";if(m||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${r}, ${o});\n        const ivec2 pads = ivec2(${c}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${u};\n                wC += ${p}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?s?f:g:`wR * ${u} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const y=4*Math.floor(i/4),x=i%4,w=`\n      if (${m}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${o});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${d};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${p};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${p}, d),\n              getValue(batch, xR, xC + 2 * ${p}, d),\n              getValue(batch, xR, xC + 3 * ${p}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${p}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${p}, d),\n              getValue(batch, xR, xC + 2 * ${p}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class rR{constructor(e,t,n,a=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,r=e.strideDepth,o=e.strideHeight,l=e.strideWidth,p=e.dilationDepth,d=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let y="0.0";if(b||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${r}, ${o}, ${l});\n        const ivec3 pads = ivec3(${f}, ${g}, ${v});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${c};\n              wD += ${p}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${d}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${m};\n                  wC += ${u}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${m} +\n                      wR * ${m} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(i/4),k=i%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${r}, ${o}, ${l});\n      const ivec3 pads = ivec3(${f}, ${g}, ${v});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${p}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${u};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${u}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${u}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${u}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${u}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${u}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${u}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${x});\n      }\n    `}}const oR={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;jC(s,"avgPool");const{filterSize:i,strides:r,pad:o,dimRoundingMode:l}=a;X(No(r,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`);const p=fo(s.shape,i,r,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&Q(p.inShape,p.outShape))return X$({inputs:{x:s},backend:n});const d=new iR(p,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}},lR={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:r,pad:o,dimRoundingMode:l,dataFormat:p}=a,d=go(s.shape,i,r,[1,1,1],o,l,p),u=new rR(d,"avg",!1);return n.runWebGLProgram(u,[s],"float32")}};class pR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,r=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,p=o-1-e.padInfo.top,d=l-1-e.padInfo.left,u=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float avgMultiplier = float(${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${r}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,s=e.strideDepth,i=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=d-1-e.padInfo.front,m=u-1-e.padInfo.top,f=c-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${m}, ${f});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${p}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const uR={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,r=i,{filterSize:o,strides:l,pad:p,dimRoundingMode:d}=a,u=go(r.shape,o,l,[1,1,1],p,d),c=new dR(u);return n.runWebGLProgram(c,[s],r.dtype)}},cR={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,r=i;jC([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:p}=a,d=fo(r.shape,o,l,1,p),u=new pR(d);return n.runWebGLProgram(u,[s],r.dtype)}},hR={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:i}=t,{transposeA:r,transposeB:o}=a;return T_({a:s,b:i,transposeA:r,transposeB:o,backend:n})}};class mR{constructor(e,t,n,a,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],_r(e,t),_r(e,n);let r="0.0";null!=a&&(_r(e,a),this.variableNames.push("offset"),r="getOffsetAtOutCoords()");let o="1.0";null!=s&&(_r(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${r};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class fR{constructor(e,t,n,a,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],_r(e,t),_r(e,n);let r="vec4(0.0)";null!=a&&(_r(e,a),this.variableNames.push("offset"),r="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(_r(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${r};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const gR={kernelName:Wt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:s,variance:i,offset:r,scale:o}=e;X(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),X(null==r||s.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),X(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);const p=[a,s,i];let d=null;null!=r&&(d=r.shape,p.push(r));let u=null;null!=o&&(u=o.shape,p.push(o));const c=$e().getBool("WEBGL_PACK_NORMALIZATION")?new fR(a.shape,s.shape,i.shape,d,u,l):new mR(a.shape,s.shape,i.shape,d,u,l);return t.runWebGLProgram(c,p,p[0].dtype)}};class vR{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=pE(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return bR.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${bR[t]} = start[${t}] + coords.${bR[t]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${a}\n        setOutput(getSource(${n}));\n      }\n    `}}const bR=["x","y","z","w","u","v"];class yR{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=pE(this.rank),n=T$("coords",this.rank),a=T$("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${s})`,r=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${i};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${r}\n        ${o}\n        setOutput(result);\n      }\n    `}}function xR(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,size:r}=a,[o,l]=oo(s,i,r);if(qr(s,o,l),0===Z(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=d$(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:p}=n.texData.get(s.dataId),d=io(s.shape,o,l);if(p||!d){const e=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yR(l):new vR(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,a){const s=a.texData.get(e.dataId),i=a.makeTensorInfo(n,e.dtype),r=a.texData.get(i.dataId);Object.assign(r,s),r.refCount=1,r.shape=n,r.dtype=e.dtype;let o=ro(t,ge(e.shape));s.slice&&(o+=s.slice.flatOffset),r.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=a.dataRefCount.get(r.slice.origDataId)||1;return a.dataRefCount.set(r.slice.origDataId,l+1),i}(s,o,l,n)}const wR={kernelName:ia,backendName:"webgl",kernelFunc:xR},kR={kernelName:Qe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,crops:r}=a;X(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((e,t)=>e*t),l=Pd(s.shape,i,o),p=zd(l.length,i.length),d=Vd(s.shape,i,o),u=Bd(r,i.length),c=Ud(d,r,i.length),h=[],m=m_({inputs:{x:s},backend:n,attrs:{shape:l}}),f=S_({inputs:{x:m},backend:n,attrs:{perm:p}}),g=m_({inputs:{x:f},backend:n,attrs:{shape:d}}),v=xR({inputs:{x:g},backend:n,attrs:{begin:u,size:c}});return h.push(m),h.push(f),h.push(g),h.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},IR={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:i}=t,{size:r}=a,o=n.readSync(s.dataId),l=n.readSync(i.dataId),p=RE(o,l,i.dtype,i.shape,r);return n.makeTensorInfo([r],i.dtype,p)}},SR={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a,b:s}=t,i=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS"),r=$e().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,s])||1===r){const e=n.texData.get(a.dataId).values,t=n.texData.get(s.dataId).values,[i,r]=DE(a.shape,s.shape,e,t,a.dtype),o=n.makeTensorInfo(r,a.dtype);return n.texData.get(o.dataId).values=i,o}let o;return o=i?new K$("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,s.shape,!1):new j$("\n  return float(int(a.r) & int(b.r));\n",a.shape,s.shape),n.runWebGLProgram(o,[a,s],a.dtype)}},NR={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,i=n.readSync(a.dataId),r=n.readSync(s.dataId),o=_r(Array.from(i),Array.from(r));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},TR=o_({opSnippet:"return float(a != b);",cpuKernelImpl:e$,dtype:"bool"}),CR={kernelName:Cn,backendName:"webgl",kernelFunc:TR};function ER(e){const{inputs:t,backend:n}=e,{input:a}=t;return X$({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const $R={kernelName:Un,backendName:"webgl",kernelFunc:ER},_R={kernelName:at,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:s}=t,{x:i}=n,{dtype:r}=s;if("complex64"===r){if("complex64"===i.dtype)return X$({inputs:{x:i},backend:a});const t=Ol(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),s=J$({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=ER({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:r}});return a.disposeIntermediateTensorInfo(t),n}if(!pe(i.dtype,r)){const e=X$({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:r}}if(a.shouldExecuteOnCPU([i])){const e=a.texData.get(i.dataId).values,[t,n,s]=FE(e,i.shape,i.dtype,r);return a.makeTensorInfo(t,n,s)}if("int32"===r)return function(e,t){const n=new D$(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(i,a);if("bool"===r){const e=a.makeTensorInfo([],"bool",oe("bool",1)),t=TR({inputs:{a:i,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}},RR="return ceil(x);",AR=r_({opSnippet:RR,packedOpSnippet:RR,cpuKernelImpl:OE}),DR={kernelName:st,backendName:"webgl",kernelFunc:AR};class FR{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class OR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const MR={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{clipValueMin:i,clipValueMax:r}=a;let o;o=$e().getBool("WEBGL_PACK_CLIP")?new OR(s.shape):new FR(s.shape);const l=[[i],[r]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class LR{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function PR(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const zR={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=n.texData.get(a.dataId),i=new LR(a.shape),r=[PR(a,s.complexTensorInfos.real),PR(a,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,r,r[0].dtype)}};class VR{constructor(e){this.outputShape=[],this.outputShape=$d(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}const a=t.length,s=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class BR{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=$d(e,t);const n=this.outputShape,a=n.length,s=pE(a),i=T$("coords",a),r=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((e,t)=>`T${t}`);const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=r[t],p=r.slice(-2),d=r.join();let u=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${p.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];u+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${UR(r,l,t)}),\n            vec2(${UR(p,l,t)}));\n        }`}const c=o.length,h=o[o.length-1];u+=`\n        return getChannel(\n          getT${c}(${UR(r,l,h)}),\n          vec2(${UR(p,l,h)}));`,this.userCode=`\n      float getValue(${r.map(e=>"int "+e)}) {\n        ${u}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[a-1]} = ${i[a-1]} + 1;\n        if (${i[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[a-2]} = ${i[a-2]} + 1;\n        if (${i[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[a-1]} = ${i[a-1]} - 1;\n        if (${i[a-2]} < ${n[a-2]} &&\n            ${i[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function UR(e,t,n){const a=e.indexOf(t);return e.map((e,t)=>t===a?`${e} - ${n}`:e).join()}function WR(e){const{inputs:t,backend:n}=e,{input:a}=t;return X$({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const GR={kernelName:Yt,backendName:"webgl",kernelFunc:WR};function HR(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map(e=>ER({inputs:{input:e},backend:n})),s=e.map(e=>WR({inputs:{input:e},backend:n})),i=HR(a,t,n),r=HR(s,t,n),o=J$({inputs:{real:i,imag:r},backend:n});return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),s.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(r),o}let s=n.shouldExecuteOnCPU(e);if("string"===a&&(s=!0),s){const s=e.map(e=>{const a=Z(e.shape.slice(t));return m_({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})}),i=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),r=$d(s.map(e=>e.shape),1),o=1===s[0].shape[0],l=ME(i,r,a,o),p=$d(e.map(e=>e.shape),t),d=n.makeTensorInfo(p,a,l);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}const i=e.filter(e=>Z(e.shape)>0),r=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=r?new D$(e[0].shape,P$):new z$(e[0].shape,P$);return n.runWebGLProgram(t,e,a)}const o=$e().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let a=0;a<i.length;a+=o){const s=i.slice(a,a+o);e.push(HR(s,t,n))}const a=HR(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(r){const e=new BR(i.map(e=>e.shape),t);return n.runWebGLProgram(e,i,a)}const{tensors2D:l,outShape:p}=function(e,t,n){const a=$d(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>m_({inputs:{x:e},attrs:{shape:[-1,Z(e.shape.slice(t))]},backend:n})),outShape:a}}(i,t,n),d=new VR(l.map(e=>e.shape)),u=n.runWebGLProgram(d,l,a);l.forEach(e=>n.disposeIntermediateTensorInfo(e));const c=m_({inputs:{x:u},attrs:{shape:p},backend:n});return n.disposeIntermediateTensorInfo(u),c}function jR(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,i=ie(s,t[0].shape)[0];Ed(t.map(e=>e.shape),i);const r=$d(t.map(e=>e.shape),i);if(0===Z(r))return n.makeTensorInfo(r,t[0].dtype,[]);const o=t.filter(e=>Z(e.shape)>0);return 1===o.length?X$({inputs:{x:o[0]},backend:n}):HR(o,i,n)}const qR={kernelName:lt,backendName:"webgl",kernelFunc:jR};class KR{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,r=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=4*Math.floor(e.inChannels/4),m=e.inChannels%4,f="channelsLast"===e.dataFormat,g=f?1:2,v=f?2:3,b=f?3:1;let y="",x="";n&&(y=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${v}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${u}; wR++) {\n          int xR = xRCorner + wR * ${p};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${c}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===m}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===m}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===m}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class XR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,d=e.filterDepth,u=e.filterHeight,c=e.filterWidth,h=4*Math.floor(e.inChannels/4),m=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${r});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${d}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${u}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${c}; wC++) {\n              int xC = xCCorner + wC * ${p};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===m}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YR{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fE(this.outputShape.length);const i=e.padInfo.left,r=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,p=e.filterWidth,d=p;let u="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<p;e++)u+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;u+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<p;e++)u+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;u+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(d+1)/2;t++){const n=2*t;if(u+=`\n           xC = xCCorner + ${n*o};\n           `,1===r){if(n<p&&(i%2==1?(u+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,u+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):u+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<p)){const e=i%2==0?q(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(u+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,u+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):u+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<p&&(i%2==1?(u+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<p&&(u+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(u+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<p&&(u+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<p&&(u+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<p&&(u+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}u+="\n     }\n   ",u+="\n     }\n   ",u+="\n     }\n   ";let c="",h="";n&&(c=a?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,h="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${c}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${u}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${h}\n         setOutput(result);\n       }\n     `}}class JR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);const{dataFormat:n}=t,a=KC(),s="channelsLast"===n,i=s?1:2,r=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${r}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${a.output} = result;\n      }\n    `}}function ZR(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function QR({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:r=0,activation:o=null}){const l=e.shape,p=a.texData.get(e.dataId),d=n.inChannels,u=l[0]*l[1]*l[2],c=n.outChannels,h="channelsLast"===n.dataFormat,m=!1;let f;const g=[];if(null!=i){const e=ZR(i.shape,h);null!=e&&(i=m_({inputs:{x:i},backend:a,attrs:{shape:e}}),g.push(i))}if(null!=s){const e=ZR(s.shape,h);null!=e&&(s=m_({inputs:{x:s},backend:a,attrs:{shape:e}}),g.push(s))}if((1!==u&&1!==c||!(d>1e3))&&p.isPacked&&h&&null!=p.texture&&l[2]%2!=0&&Q(p.shape.slice(-3),l.slice(-3))){const d=l[0]*l[1]*(l[2]+1),u={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},c=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,X(VC(p.shape,u.shape),()=>`packed reshape ${p.shape} to ${u.shape} isn't free`);const h=m_({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(h);const v=T_({a:u,b:h,backend:a,transposeA:!1,transposeB:m,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:r}),b=a.texData.get(v.dataId);X(b.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=c,b.shape=n.outShape,f=X$({inputs:{x:v},backend:a}),f.shape=n.outShape,g.push(v)}else{const l=n.outHeight*n.outWidth,p=m_({inputs:{x:e},backend:a,attrs:{shape:h?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),d=m_({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),u=T_({a:h?p:d,b:h?d:p,transposeA:!h,transposeB:m,backend:a,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:r});f=m_({inputs:{x:u},backend:a,attrs:{shape:n.outShape}}),g.push(p),g.push(d),g.push(u)}for(const e of g)a.disposeIntermediateTensorInfo(e);return f}function eA({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:r=0,activation:o=null}){const{filterWidth:l,filterHeight:p,inChannels:d,outWidth:u,outHeight:c,dataFormat:h}=n,m="channelsLast"===h,f=l*p*d,g=c*u,v=[n.batchSize,f,g],b=[];if(null!=i){const e=ZR(i.shape,m);null!=e&&(i=m_({inputs:{x:i},backend:a,attrs:{shape:e}}),b.push(i))}if(null!=s){const e=ZR(s.shape,m);null!=e&&(s=m_({inputs:{x:s},backend:a,attrs:{shape:e}}),b.push(s))}const y=m_({inputs:{x:t},backend:a,attrs:{shape:[1,f,Z(t.shape)/f]}});b.push(y);const x=new JR(v,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=a.runWebGLProgram(x,[e],"float32",w),I=m_({inputs:{x:k},backend:a,attrs:{shape:v}});b.push(k),b.push(I);const S=null!=s,N=null!=i,T="leakyrelu"===o,C=o?l_(o,!0):null,E=new p_(m?I.shape:y.shape,m?y.shape:I.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,C,N,T),$=m?[I,y]:[y,I];if(s&&$.push(s),N&&$.push(i),T){const e=a.makeTensorInfo([],"float32",fs(r,"float32"));$.push(e),b.push(e)}const _=a.runWebGLProgram(E,$,"float32"),R=m_({inputs:{x:_},backend:a,attrs:{shape:n.outShape}});b.push(_);for(const e of b)a.disposeIntermediateTensorInfo(e);return R}const tA={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:r,pad:o,dataFormat:l,dilations:p,dimRoundingMode:d}=a,u=Co(l),c=vo(s.shape,i.shape,r,p,o,d,!1,u);let h;if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===u&&$e().getBool("WEBGL_EXP_CONV")){const e=new YR(c),t=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];h=n.runWebGLProgram(e,[s,i],"float32",t)}else if($e().getBool("WEBGL_CONV_IM2COL"))h=eA({x:s,filter:i,convInfo:c,backend:n});else{const e=new KR(c);h=n.runWebGLProgram(e,[s,i],"float32")}else h=QR({x:s,filter:i,convInfo:c,backend:n});const m=m_({inputs:{x:h},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(h),m}};class nA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,s=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,s=e.strideWidth,i="channelsLast"===e.dataFormat,r=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,p=i?2:3,d=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${d}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${p}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,r=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${r};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,s=e.strideDepth,i=e.strideHeight,r=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,p=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const rA={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:r,pad:o,dataFormat:l,dimRoundingMode:p,filterShape:d}=a,u=Co(l),c=vo(s.shape,d,r,1,o,p,!1,u),h=new nA(c);return n.runWebGLProgram(h,[s,i],"float32")}};class oA{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=fE(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const lA={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{inputShape:r,strides:o,pad:l,dataFormat:p,dimRoundingMode:d}=a,u=Co(p),c=vo(r,i.shape,o,1,l,d,!1,u);if($e().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===u){const e=[[c.strideHeight,c.strideWidth]],t=new oA(c);return n.runWebGLProgram(t,[s,i],"float32",e)}{const e=new aA(c);return n.runWebGLProgram(e,[s,i],"float32")}}},pA={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:r,pad:o,dilations:l}=a,p=bo(s.shape,i.shape,r,l,o),d=new XR(p);return n.runWebGLProgram(d,[s,i],"float32")}},dA={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:r,pad:o,filterShape:l}=a,p=bo(s.shape,l,r,1,o),d=new sA(p);return n.runWebGLProgram(d,[s,i],"float32")}},uA={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{pad:r,strides:o,inputShape:l}=a,p=bo(l,i.shape,o,1,r),d=new iA(p);return n.runWebGLProgram(d,[s,i],"float32")}},cA=r_({opSnippet:i_+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${q$}\n  return result;\n`}),hA={kernelName:ft,backendName:"webgl",kernelFunc:cA},mA=r_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),fA={kernelName:gt,backendName:"webgl",kernelFunc:mA};class gA{constructor(e,t,n,a,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,r,o,l]=e,[p]=t,[d,u]=n;this.outputShape=[p,d,u,l];const c="bilinear"===a?1:0,[h,m]=[r-1+".0",o-1+".0"],[f,g,v]=d>1?[""+(r-1)/(d-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,y,x]=u>1?[""+(o-1)/(u-1),"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`\n      const float height_ratio = float(${f});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${y};\n\n        float in_y = ${v};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${m} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${c} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const vA={kernelName:yt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:i,boxInd:r}=t,{cropSize:o,method:l,extrapolationValue:p}=a,d=new gA(s.shape,i.shape,o,l,p);return n.runWebGLProgram(d,[s,i,r],"float32")}};var bA;!function(e){e.Prod="*",e.Sum="+"}(bA||(bA={}));class yA{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,i=this.op===bA.Prod?"1.0":"0.0",r=n?i:`getX(${xA(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",p="";n?(l=a?"end != "+(o-1):"end != 0",p=a?"end + 1":"end - 1"):(l=a?`end + pow2 < ${o}`:"end >= pow2",p=a?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${pE(s)} coords = getOutputCoords();\n        int end = ${wA(s,"coords",this.op)};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${p};\n          ${wA(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${xA(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function xA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function wA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kA(e,t,n,a,s,i){const r=t.shape.length,o=xl([a],r);let l=t;null!=o&&(l=S_({inputs:{x:t},backend:n,attrs:{perm:o}}));const p=kl(1,r)[0];if(p!==r-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);const d=l.shape[p];let u=X$({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){const a=new yA(e,l.shape,!1,i),s=[[t]],r=u;u=n.runWebGLProgram(a,[u],u.dtype,s),n.disposeIntermediateTensorInfo(r)}if(s){const t=new yA(e,l.shape,s,i),a=u;u=n.runWebGLProgram(t,[u],u.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=o){const e=S_({inputs:{x:u},backend:n,attrs:{perm:wl(o)}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),e}return u}const IA={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,exclusive:r,reverse:o}=a;return kA(bA.Prod,s,n,i,r,o)}},SA={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,exclusive:r,reverse:o}=a;return kA(bA.Sum,s,n,i,r,o)}},NA={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,weights:i}=t,{size:r,binaryOutput:o}=a;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(i.dataId),a=RE(e,t,i.dtype,i.shape,r);return n.makeTensorInfo([r],i.dtype,a)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(i),a=AE(e,t,r,o);return n.makeTensorInfo(a.shape,i.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class TA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const CA={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:i,dataFormat:r}=a,o=s.shape[0],l=("NHWC"===r?s.shape[1]:s.shape[2])*i,p=("NHWC"===r?s.shape[2]:s.shape[3])*i,d=("NHWC"===r?s.shape[3]:s.shape[1])/(i*i),u=new TA("NHWC"===r?[o,l,p,d]:[o,d,l,p],i,r);return n.runWebGLProgram(u,[s],s.dtype)}};class EA{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fE(this.outputShape.length);const i=e.filterHeight,r=e.filterWidth,o=e.outChannels/e.inChannels;let l="",p="";n&&(l=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,p="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${d}\n        ${p}\n        setOutput(result);\n      }\n    `}}class $A{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fE(this.outputShape.length);const i=e.outChannels/e.inChannels,r=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,u=d;let c="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)c+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;c+=`\n    for (int r = 0; r < ${p}; r++) {\n      `;for(let e=0;e<d;e++)c+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;c+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(u+1)/2;e++){const t=2*e;if(c+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<d&&(r%2==1?(c+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,c+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):c+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){const e=r%2==0?q(l):l;l%2==0&&r%2==1||l%2!=0&&r%2!=1?(c+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,c+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):c+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(r%2==1?(c+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(c+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(c+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(c+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(c+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(c+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}c+="\n    }\n  ",c+="\n      }\n    ";let h="",m="";n&&(h=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${c}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${f}\n        ${m}\n        setOutput(result);\n      }\n    `}}const _A={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:r,pad:o,dilations:l,dimRoundingMode:p}=a;let d=l;null==d&&(d=[1,1]),X(No(r,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${d}'`);const u=vo(s.shape,i.shape,r,d,o,p,!0);let c;c=$e().getBool("WEBGL_PACK_DEPTHWISECONV")&&u.strideWidth<=2&&u.outChannels/u.inChannels===1?new $A(u):new EA(u);const h=[[u.padInfo.top,u.padInfo.left],[u.strideHeight,u.strideWidth],[u.dilationHeight,u.dilationWidth],[u.inHeight,u.inWidth]];return n.runWebGLProgram(c,[s,i],"float32",h)}};class RA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,r=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const DA={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:r,dilations:o,pad:l,dimRoundingMode:p,filterShape:d}=a,u=vo(s.shape,d,r,o,l,p,!0),c=new RA(u);return n.runWebGLProgram(c,[s,i],"float32")}},FA={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{strides:r,dilations:o,pad:l,dimRoundingMode:p,inputShape:d}=a,u=vo(d,i.shape,r,o,l,p,!0),c=new AA(u);return n.runWebGLProgram(c,[s,i],"float32")}};class OA{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const MA={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=[...a.shape,...a.shape],i=Z(a.shape),r=m_({inputs:{x:a},backend:n,attrs:{shape:[i]}}),o=new OA(i),l=n.runWebGLProgram(o,[r],r.dtype),p=m_({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(l),p}};class LA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:s,strideWidth:i,filterHeight:r,filterWidth:o,dilationHeight:l,dilationWidth:p}=e,{top:d,left:u}=a;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${d}, ${u});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${r}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${p};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const PA={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:r,pad:o,dilations:l}=a,p=mo(s.shape,i.shape,r,o,"NHWC",l);let d;const u=new LA(p);d=n.runWebGLProgram(u,[s,i],"float32");const c=m_({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),c}},zA={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,i=t,{allDims:r,summedDims:o,idDims:l}=hu(s,i.length);fu(r.length,l,i);const{path:p,steps:d}=gu(o,l),u=d.length;let c=null,h=r.length;const m=[];for(let e=0;e<u;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:a}=mu(h,l[t]);let s;vu(e)?s=i[t]:(s=S_({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(s));const r=s.shape.slice();for(let e=0;e<a.length;++e)r.splice(a[e],0,1);Q(s.shape,r)||(s=m_({inputs:{x:s},backend:n,attrs:{shape:r}}),m.push(s)),null===c?c=s:(c=c_({inputs:{a:s,b:c},backend:n}),m.push(c))}e<u-1&&(p[e]>=0&&(c=k_({inputs:{x:c},backend:n,attrs:{axis:p[e]-(r.length-h),keepDims:!1}}),m.push(c)),h--)}for(const e of m)e!==c&&n.disposeIntermediateTensorInfo(e);return c}},VA=r_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),BA={kernelName:Rt,backendName:"webgl",kernelFunc:VA},UA={kernelName:At,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:s}=t,i=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new K$("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,s.shape):new j$("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,s.shape);return n.runWebGLProgram(i,[a,s],a.dtype)}},WA=o_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:LE}),GA={kernelName:Ft,backendName:"webgl",kernelFunc:WA},HA=r_({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Xd};\n  float a1 = ${Yd};\n  float a2 = ${Jd};\n  float a3 = ${Zd};\n  float a4 = ${Qd};\n  float a5 = ${eu};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),jA={kernelName:Dt,backendName:"webgl",kernelFunc:HA},qA=r_({opSnippet:i_+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:PE,dtype:"float32"}),KA={kernelName:Ot,backendName:"webgl",kernelFunc:qA};function XA(e){const{inputs:t,attrs:n,backend:a}=e,{dim:s}=n,{input:i}=t,r=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(X(-(r+1)<=s,()=>`Axis must be in the interval [${-(r+1)}, ${r}]`),l=r+s+1),o.splice(l,0,1),m_({inputs:{x:i},backend:a,attrs:{shape:o}})}const YA={kernelName:Mt,backendName:"webgl",kernelFunc:XA},JA="return exp(x) - 1.0;",ZA=r_({opSnippet:JA,packedOpSnippet:JA,cpuKernelImpl:zE}),QA={kernelName:Lt,backendName:"webgl",kernelFunc:ZA};class eD{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${a}.0`:"1.0";let r;if("real"===e)r="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);r="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${r}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function tD(e,t,n){const a=n.texData.get(e.dataId),s=Z(e.shape),i=e.shape[e.shape.length-1],r=m_({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),o=r.shape,l=new eD("real",o,t),p=new eD("imag",o,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],u=n.runWebGLProgram(l,d,"float32"),c=n.runWebGLProgram(p,d,"float32"),h=J$({inputs:{real:u,imag:c},backend:n});n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c);const m=m_({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(h),m}const nD={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return tD(a,!1,n)}};class aD{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function sD(e){const{backend:t,attrs:n}=e,{shape:a,value:s}=n;let{dtype:i}=n;if(i=i||he(s),"string"===i){const e=le(i,Z(a));return e.fill(s),t.makeTensorInfo(a,i,e)}{const e=new aD(a,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const iD={kernelName:zt,backendName:"webgl",kernelFunc:sD};class rD{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const oD={kernelName:Vt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,s=new rD(n.shape);return a.runWebGLProgram(s,[n],n.dtype)}},lD="return floor(x);",pD=r_({opSnippet:lD,packedOpSnippet:lD,cpuKernelImpl:VE}),dD={kernelName:Bt,backendName:"webgl",kernelFunc:pD},uD=o_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),cD={kernelName:Ut,backendName:"webgl",kernelFunc:uD};class hD{constructor(e){this.variableNames=["A"];const t=KC(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class mD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=KC(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const fD={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:s}=t;const{numChannels:i}=a,r="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,p]=r?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[p,l],u=[p,l,i];if(o||r){const e=$e().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=gD&&e===vD||(vD=e,gD=document.createElement("canvas").getContext("2d",{willReadFrequently:vD})),gD.canvas.width=l,gD.canvas.height=p,gD.drawImage(s,0,0,l,p),s=gD.canvas}const c=n.makeTensorInfo(d,"int32");n.texData.get(c.dataId).usage=bC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(c.dataId),s);const h=$e().getBool("WEBGL_PACK")?new mD(u):new hD(u),m=n.runWebGLProgram(h,[c],"int32");return n.disposeData(c.dataId),m}};let gD,vD=$e().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const bD={kernelName:Ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:r,preluActivationWeights:o}=t,{strides:l,pad:p,dataFormat:d,dilations:u,dimRoundingMode:c,activation:h,leakyreluAlpha:m}=a,f=Co(d),g=vo(s.shape,i.shape,l,u,p,c,!1,f);let v;const b=[],y=null!=r,x=null!=o,w="leakyrelu"===h,k=()=>{const e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=m_({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(y&&e.push(t(r,d)),x&&e.push(t(o,d)),w){const t=n.makeTensorInfo([],"float32",fs(m,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===f&&$e().getBool("WEBGL_EXP_CONV")){const e=h?l_(h,!0):null,t=new YR(g,y,e,x,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();v=n.runWebGLProgram(t,s,"float32",a)}else if($e().getBool("WEBGL_CONV_IM2COL"))v=eA({x:s,filter:i,convInfo:g,backend:n,bias:r,activation:h,preluActivationWeights:o,leakyreluAlpha:m});else{const e=h?l_(h,!1):null,t=new KR(g,y,e,x,w),a=k();v=n.runWebGLProgram(t,a,"float32")}else v=QR({x:s,filter:i,convInfo:g,backend:n,bias:r,activation:h,preluActivationWeights:o,leakyreluAlpha:m});const I=m_({inputs:{x:v},backend:n,attrs:{shape:g.outShape}});return b.push(v),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}},yD={kernelName:Wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:r,preluActivationWeights:o}=t,{strides:l,pad:p,dilations:d,dimRoundingMode:u,activation:c,leakyreluAlpha:h}=a,m=[];let f=d;null==f&&(f=[1,1]),X(No(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);const g=vo(s.shape,i.shape,l,f,p,u,!0),v=$e().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=c?l_(c,v):null,y=[s,i],x=null!=r,w=null!=o,k="leakyrelu"===c;if(x&&y.push(r),w&&y.push(o),k){const e=n.makeTensorInfo([],"float32",fs(h,"float32"));y.push(e),m.push(e)}let I;I=v?new $A(g,x,b,w,k):new EA(g,x,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,y,"float32",S);return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}};class xD{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const s=pE(n.length);let i="\n    int index;";for(let e=0;e<this.sliceDim;e++)i+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const wD={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,i=s.shape,r=i[i.length-1],o=Z(a.shape),[l,p,d,u]=Wd(a,s),c=m_({inputs:{x:s},backend:n,attrs:{shape:[p,r]}}),h=m_({inputs:{x:a},backend:n,attrs:{shape:[Z(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(a),i=BE(e,t,a.dtype,p,r,d,u,a.shape,o);return n.makeTensorInfo(l,a.dtype,i.values)}const m=new xD(r,u,[p,d],a.shape),f=n.runWebGLProgram(m,[h,c],h.dtype),g=m_({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),g}};class kD{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=pE(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push(`${t[a]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}}function ID(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:i}=t,{axis:r,batchDims:o}=a,l=ie(r,s.shape)[0];if($e().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const a=e[n];X(a<=t-1&&a>=0,()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`)}}const p=Fu(s,i,l,o),d=Z(i.shape),u=[],c=m_({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),h=m_({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}});u.push(c),u.push(h);const m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(h),t=n.bufferSync(c),a=UE(t,e,m);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(p.outputShape,a.dtype,a.values)}const f=new kD(c.shape,m),g=n.runWebGLProgram(f,[c,h],c.dtype);u.push(g);const v=m_({inputs:{x:g},backend:n,attrs:{shape:p.outputShape}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}const SD={kernelName:Gt,backendName:"webgl",kernelFunc:ID},ND=o_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:WE,dtype:"bool"}),TD={kernelName:jt,backendName:"webgl",kernelFunc:ND},CD=o_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:GE}),ED={kernelName:qt,backendName:"webgl",kernelFunc:CD},$D={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return tD(a,!0,n)}},_D=r_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),RD={kernelName:Jt,backendName:"webgl",kernelFunc:_D},AD=r_({opSnippet:"return float(isinf(x));",dtype:"bool"}),DD={kernelName:Zt,backendName:"webgl",kernelFunc:AD},FD=r_({opSnippet:"return float(isnan(x));",dtype:"bool"}),OD={kernelName:Qt,backendName:"webgl",kernelFunc:FD},MD=o_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:HE,dtype:"bool"}),LD={kernelName:tn,backendName:"webgl",kernelFunc:MD},PD=o_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:jE,dtype:"bool"}),zD={kernelName:nn,backendName:"webgl",kernelFunc:PD},VD={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:s,num:i}=n,r=qE(a,s,i);return t.makeTensorInfo([r.length],"float32",r)}},BD=r_({opSnippet:i_+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:KE}),UD={kernelName:sn,backendName:"webgl",kernelFunc:BD},WD=r_({opSnippet:i_+"\n  return log(1.0 + x);\n"}),GD={kernelName:rn,backendName:"webgl",kernelFunc:WD},HD=o_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),jD={kernelName:on,backendName:"webgl",kernelFunc:HD},qD=r_({opSnippet:"return float(!(x >= 1.0));"}),KD={kernelName:ln,backendName:"webgl",kernelFunc:qD},XD=o_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),YD={kernelName:pn,backendName:"webgl",kernelFunc:XD};class JD{constructor(e,t,n,a,s){this.variableNames=["x"],this.outputShape=[];const i=t,r=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${r}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class ZD{constructor(e,t,n,a,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,r=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${r}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const QD={kernelName:dn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:i,bias:r,alpha:o,beta:l}=a,p=$e().getBool("WEBGL_PACK_NORMALIZATION")?new ZD(s.shape,i,r,o,l):new JD(s.shape,i,r,o,l);return n.runWebGLProgram(p,[s],s.dtype)}};class eF{constructor(e,t,n,a,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const tF={kernelName:un,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s,y:i,dy:r}=t,{depthRadius:o,bias:l,alpha:p,beta:d}=a,u=new eF(s.shape,o,l,p,d);return n.runWebGLProgram(u,[s,i,r],s.dtype)}};function nF(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:i,keepDims:r}=a,o=s.shape.length,l=ie(i,s.shape);let p=l;const d=xl(p,o),u=null!=d,c=n.shouldExecuteOnCPU([s]);let h=s;if(u){if(c){const e=n.texData.get(h.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[d[e]];const a=I$(e,s.shape,s.dtype,d,t);h=n.makeTensorInfo(t,s.dtype),n.texData.get(h.dataId).values=a}else h=w_(s,d,n);p=kl(p.length,o)}yl("max",p,o);const[m,f]=vl(h.shape,p);let g,v=m;if(r&&(v=bl(m,l)),c){const e=n.texData.get(h.dataId).values,t=XE(e,Z(f),v,s.dtype);g=n.makeTensorInfo(v,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const s=Z(t),i=m_({inputs:{x:e},attrs:{shape:[Z(e.shape)/s,s]},backend:a}),r=b_(i,e.dtype,"max",a),o=m_({inputs:{x:r},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(r),o}(h,f,v,n);return u&&n.disposeIntermediateTensorInfo(h),g}const aF={kernelName:cn,backendName:"webgl",kernelFunc:nF},sF=o_({opSnippet:H$+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+q$+"\n  return result;\n",cpuKernelImpl:YE}),iF={kernelName:hn,backendName:"webgl",kernelFunc:sF},rF={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;jC(s,"maxPool");const{filterSize:i,strides:r,pad:o,dimRoundingMode:l}=a;X(No(r,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`);const p=fo(s.shape,i,r,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&Q(p.inShape,p.outShape))return X$({inputs:{x:s},backend:n});const d=new iR(p,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}},oF={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:r,pad:o,dataFormat:l,dimRoundingMode:p}=a,d=go(s.shape,i,r,[1,1,1],o,p,l),u=new rR(d,"max",!1);return n.runWebGLProgram(u,[s],s.dtype)}};class lF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,r=s-1-e.padInfo.top,o=i-1-e.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,r=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=o-1-e.padInfo.front,u=l-1-e.padInfo.top,c=p-1-e.padInfo.left,h=o*l*p-1;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${r}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${p} +\n                  wR * ${p} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const dF={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i}=t,r=i,{filterSize:o,strides:l,pad:p,dimRoundingMode:d}=a,u=go(r.shape,o,l,[1,1,1],p,d),c=new rR(u,"max",!0),h=n.runWebGLProgram(c,[r],r.dtype),m=new pF(u),f=n.runWebGLProgram(m,[s,h],r.dtype);return n.disposeIntermediateTensorInfo(h),f}},uF={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,input:i,output:r}=t,o=i;jC([i,r],"maxPoolGrad");const{filterSize:l,strides:p,pad:d,dimRoundingMode:u}=a,c=fo(o.shape,l,p,1,d,u),h=new iR(c,"max",!0),m=n.runWebGLProgram(h,[o],o.dtype),f=new lF(c),g=n.runWebGLProgram(f,[s,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}},cF={kernelName:bn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:i,pad:r,includeBatchInIndex:o}=t,l=n;X(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);const p=[1,1];X(No(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const d=fo(a.shape,s,i,p,r),[u,c]=function(e,t,n,a){let s=new iR(n,"max",!1);const i=a.runWebGLProgram(s,[e],"float32");return s=new iR(n,"max",!0,!0,t),[i,a.runWebGLProgram(s,[e],"float32")]}(a,o,d,l);return[u,c]}},hF={kernelName:yn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:s,axis:i}=t,r=n,o=a.shape.length,l=ie(i,a.shape);let p=l;const d=xl(p,o),u=null!=d,c=r.shouldExecuteOnCPU([a]),h=[];let m=a;if(u){if(c){const e=r.texData.get(m.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];const n=I$(e,a.shape,a.dtype,d,t);m=r.makeTensorInfo(t,a.dtype),r.texData.get(m.dataId).values=n}else m=w_(a,d,r);h.push(m),p=kl(p.length,o)}yl("sum",p,o);const[f,g]=vl(m.shape,p);let v=f;s&&(v=bl(f,l));const b=function(e,t,n,a){const s=Z(t),i=m_({inputs:{x:e},attrs:{shape:[Z(e.shape)/s,s]},backend:a}),r=b_(i,"float32","mean",a),o=m_({inputs:{x:r},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(r),o}(m,g,v,r);for(const e of h)r.disposeIntermediateTensorInfo(e);return b}},mF={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a,o=s.shape.length,l=ie(i,s.shape);let p=l;const d=xl(p,o);let u=s;null!=d&&(u=S_({inputs:{x:s},backend:n,attrs:{perm:d}}),p=kl(p.length,s.shape.length)),yl("min",p,o);const[c,h]=vl(u.shape,p),m=m_({inputs:{x:u},backend:n,attrs:{shape:[-1,Z(h)]}}),f=b_(m,m.dtype,"min",n);let g;return g=m_(r?{inputs:{x:f},backend:n,attrs:{shape:bl(c,l)}}:{inputs:{x:f},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=d&&n.disposeIntermediateTensorInfo(u),g}},fF=o_({opSnippet:H$+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+q$+"\n  return result;\n",cpuKernelImpl:JE}),gF={kernelName:wn,backendName:"webgl",kernelFunc:fF};class vF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const a=e.length,s=pE(a),i=t.map(e=>e[0]).join(","),r=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;this.userCode=1!==a?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${r});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${r};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class bF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const a=e.length,s=pE(a),i=t.map(e=>e[0]).join(","),r=t.map((t,n)=>t[0]+e[n]).join(","),o=T$("rc",a),l=T$("source",a),p=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${l.slice(-2).join()})`,u="reflect"===n?0:1;let c="";if(1===a){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${u};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${u};\n        }\n        source -= start;\n      `;c=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${p}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${u}) +\n                gte * ((end - 1) * 2 - source + ${u});\n        source -= start;\n      `;c=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${p}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${d});\n          ${o[a-1]} += 1;\n          if(${p}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${r});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}}const yF={kernelName:kn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:s,mode:i}=n,r=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bF(a.shape,s,i):new vF(a.shape,s,i);return t.runWebGLProgram(r,[a],a.dtype)}},xF=o_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+q$+"\n  return result;\n"}),wF={kernelName:In,backendName:"webgl",kernelFunc:xF};class kF{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const IF=o_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),SF={kernelName:$t,backendName:"webgl",kernelFunc:IF},NF="return a - b;",TF=o_({opSnippet:NF,packedOpSnippet:NF,supportsComplex:!0,cpuKernelImpl:x$}),CF={kernelName:Ea,backendName:"webgl",kernelFunc:TF};function EF(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:i}=a,r=ie([i],s.shape),o=nF({inputs:{x:s},backend:n,attrs:{reductionIndices:r,keepDims:!1}}),l=bl(o.shape,r),p=m_({inputs:{x:o},backend:n,attrs:{shape:l}}),d=TF({inputs:{a:s,b:p},backend:n}),u=qA({inputs:{x:d},backend:n}),c=k_({inputs:{x:u},backend:n,attrs:{axis:r,keepDims:!1}}),h=m_({inputs:{x:c},backend:n,attrs:{shape:l}}),m=IF({inputs:{a:u,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),m}const $F={kernelName:fa,backendName:"webgl",kernelFunc:EF},_F={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{numSamples:i,seed:r,normalized:o}=a,l=o?s:EF({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),p=l.shape[0],d=l.shape[1],u=new kF(p,d,i),c=[[r]],h=n.runWebGLProgram(u,[l],"int32",c);return o||n.disposeIntermediateTensorInfo(l),h}},RF=F$+"\n  return -x;\n",AF={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,s]=QE(e.values,a.shape,a.dtype);return n.makeTensorInfo(s,a.dtype,t)}let s;return s=$e().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new z$(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new D$(a.shape,RF),n.runWebGLProgram(s,[a],a.dtype)}},DF=Up,FF={kernelName:En,backendName:"webgl",kernelFunc:function(e){Ga("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:r,iouThreshold:o,scoreThreshold:l}=a,p=n.readSync(s.dataId),d=n.readSync(i.dataId),{selectedIndices:u}=DF(p,d,r,o,l);return n.makeTensorInfo([u.length],"int32",new Int32Array(u))}},OF=Wp,MF={kernelName:$n,backendName:"webgl",kernelFunc:function(e){Ga("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:r,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:p}=a,d=n.readSync(s.dataId),u=n.readSync(i.dataId),{selectedIndices:c,validOutputs:h}=OF(d,u,r,o,l,p);return[n.makeTensorInfo([c.length],"int32",new Int32Array(c)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},LF=Gp,PF={kernelName:_n,backendName:"webgl",kernelFunc:function(e){Ga("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:s,scores:i}=t,{maxOutputSize:r,iouThreshold:o,scoreThreshold:l,softNmsSigma:p}=a,d=n.readSync(s.dataId),u=n.readSync(i.dataId),c=r,h=o,m=l,f=p,{selectedIndices:g,selectedScores:v}=LF(d,u,c,h,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};class zF{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const VF={kernelName:An,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{dtype:i,depth:r,onValue:o,offValue:l}=a,p=Z(s.shape),d=new zF(p,r,o,l),u=m_({inputs:{x:s},backend:n,attrs:{shape:[p]}}),c=n.runWebGLProgram(d,[u],i);n.disposeIntermediateTensorInfo(u);const h=m_({inputs:{x:c},backend:n,attrs:{shape:[...s.shape,r]}});return n.disposeIntermediateTensorInfo(c),h}};function BF(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=ER({inputs:{input:a},backend:n}),t=BF({inputs:{x:e},backend:n}),s=WR({inputs:{input:a},backend:n}),i=BF({inputs:{x:s},backend:n}),r=J$({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),r}return sD({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const UF={kernelName:Pa,backendName:"webgl",kernelFunc:BF},WF={kernelName:Rn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=ER({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a}),i=WR({inputs:{input:s},backend:a}),r=BF({inputs:{x:i},backend:a}),o=J$({inputs:{real:n,imag:r},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(r),o}return sD({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:a})}},GF={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return XA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,r=t[0].dtype;t.forEach(e=>{Y(i,e.shape,"All tensors passed to stack must have matching shapes"),X(r===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=jR({inputs:t.map(e=>{const t=XA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}};class HF{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const a=e.length,s=pE(a),i=t.map(e=>e[0]).join(","),r=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${r});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${r};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class jF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const a=e.length,s=pE(a),i=t.map(e=>e[0]).join(","),r=t.map((t,n)=>t[0]+e[n]).join(","),o=T$("rc",a),l=T$("source",a),p=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${l.slice(-2).join()})`,u=[`${s} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${p}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${p}) {`],c=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===a?2:4;e<t;e++)h+=`\n        ${u[e]}\n        if (${c}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${d});\n        }\n      `;h+=1===a?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${r});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const qF=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:i,constantValue:r}=a;if(0===Z(s.shape)){const e=i.map((e,t)=>e[0]+s.shape[t]+e[1]);return sD({backend:n,attrs:{shape:e,value:r,dtype:s.dtype}})}const o=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jF(s.shape,i,r):new HF(s.shape,i,r),l=[[r]];return n.runWebGLProgram(o,[s],s.dtype,l)},KF={kernelName:Fn,backendName:"webgl",kernelFunc:qF},XF=o_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+q$+"\n  return result;\n"}),YF={kernelName:On,backendName:"webgl",kernelFunc:XF},JF={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:r}=a,o=s.shape.length,l=[],p=ie(i,s.shape);let d=p;const u=xl(d,o);let c,h=s;if(null!=u&&(h=S_({inputs:{x:s},backend:n,attrs:{perm:u}}),d=kl(d.length,o),l.push(h)),yl("prod",d,o),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:a,outDtype:s}=t$(h.shape,h.dtype,e,d);c=n.makeTensorInfo(a,s,t)}else{const[e,t]=vl(h.shape,d),a=Z(t),i=m_({inputs:{x:h},backend:n,attrs:{shape:[-1,a]}}),r=b_(i,Gs(s.dtype),"prod",n);c=m_({inputs:{x:r},backend:n,attrs:{shape:e}}),l.push(i),l.push(r)}if(r){l.push(c);const e=bl(c.shape,p);c=m_({inputs:{x:c},backend:n,attrs:{shape:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},ZF={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:r}=t,{outputRaggedRank:o}=a,l=s.map(e=>n.readSync(e.dataId)),p=s.map(e=>e.shape),d=n.readSync(i.dataId),u=n.readSync(r.dataId),[c,h,m]=n$(l,p,d,i.shape,i.dtype,u,r.shape,o),f=c.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(m,i.dtype,h);return f.concat([g])}},QF={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:s,deltas:i}=t,r=n.readSync(a.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[p,d]=a$(r,a.shape,a.dtype,o,s.shape,l,i.shape);return[n.makeTensorInfo([p.length],"int32",p),n.makeTensorInfo([d.length],a.dtype,d)]}},eO={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:s,values:i,defaultValue:r,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,p=n.readSync(s.dataId),d=n.readSync(i.dataId),u=n.readSync(r.dataId),c=o.map(e=>n.readSync(e.dataId)),h=o.map(e=>e.shape),[m,f]=s$(p,s.shape,d,i.shape,i.dtype,u,r.shape,c,h,l);return n.makeTensorInfo(m,i.dtype,f)}},tO=e=>{const{backend:t,attrs:n}=e,{start:a,stop:s,step:i,dtype:r}=n,o=i$(a,s,i,r);return t.makeTensorInfo([o.length],r,o)},nO={kernelName:Bn,backendName:"webgl",kernelFunc:tO},aO=r_({opSnippet:"return 1.0 / x;"}),sO={kernelName:Wn,backendName:"webgl",kernelFunc:aO},iO=r_({opSnippet:F$+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),rO={kernelName:Gn,backendName:"webgl",kernelFunc:iO},oO=r_({opSnippet:F$+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),lO={kernelName:Yn,backendName:"webgl",kernelFunc:oO};class pO{constructor(e,t,n,a,s){this.variableNames=["A"],this.outputShape=[];const[i,r,o,l]=e;this.outputShape=[i,t,n,l];const p=[a&&t>1?r-1:r,a&&n>1?o-1:o],d=[a&&t>1?t-1:t,a&&n>1?n-1:n];let u;u=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/d[0]},\n          ${p[1]/d[1]});\n      const vec2 inputShapeRC = vec2(${r}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class dO{constructor(e,t,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,r,o,l]=e;this.outputShape=[i,t,n,l];const p=[a&&t>1?r-1:r,a&&n>1?o-1:o],d=[a&&t>1?t-1:t,a&&n>1?n-1:n];let u;u=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/d[0]},\n          ${p[1]/d[1]},\n          ${p[1]/d[1]});\n      const vec3 inputShapeRC = vec3(${r}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const uO={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:r,size:o}=a,[l,p]=o,d=$e().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new dO(s.shape,l,p,i,r):new pO(s.shape,l,p,i,r);return n.runWebGLProgram(d,[s],"float32")}};class cO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,s]=t,[,i,r]=e,o=[n&&i>1?a-1:a,n&&r>1?s-1:s],l=[n&&i>1?i-1:i,n&&r>1?r-1:r],p=o[0]/l[0],d=o[1]/l[1],u=1/p,c=1/d,h=2*Math.ceil(u)+2,m=2*Math.ceil(c)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${p});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${u});\n        const float invWidthScale = float(${c});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${r}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const hO={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:i}=t,{alignCorners:r}=a,o=new cO(i.shape,s.shape,r);return n.runWebGLProgram(o,[i],i.dtype)}};class mO{constructor(e,t,n,a,s){this.variableNames=["A"],this.outputShape=[];const[i,r,o,l]=e;this.outputShape=[i,t,n,l];const p=[a&&t>1?r-1:r,a&&n>1?o-1:o],d=[a&&t>1?t-1:t,a&&n>1?n-1:n],u=a?"0.5":"0.0";let c;c=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/d[0]},\n          ${p[1]/d[1]});\n      const vec2 inputShapeRC = vec2(${r}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${c};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${u})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class fO{constructor(e,t,n,a,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,r,o,l]=e;this.outputShape=[i,t,n,l];const p=[a&&t>1?r-1:r,a&&n>1?o-1:o],d=[a&&t>1?t-1:t,a&&n>1?n-1:n],u=a?"0.5":"0.0";let c;c=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/d[0]},\n          ${p[1]/d[1]},\n          ${p[1]/d[1]});\n      const vec3 inputShapeRC = vec3(${r}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${c};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${u})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const gO={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:r,size:o}=a,[l,p]=o,d=$e().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fO(s.shape,l,p,i,r):new mO(s.shape,l,p,i,r);return n.runWebGLProgram(d,[s],s.dtype)}};class vO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,s]=t,[,i,r]=e,o=[n&&i>1?a-1:a,n&&r>1?s-1:s],l=[n&&i>1?i-1:i,n&&r>1?r-1:r],p=o[0]/l[0],d=o[1]/l[1],u=1/p,c=1/d,h=2*Math.ceil(u)+2,m=2*Math.ceil(c)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${p});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${u});\n        const float invWidthScale = float(${c});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${r}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const bO={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:i}=t,{alignCorners:r}=a,o=new vO(i.shape,s.shape,r);return n.runWebGLProgram(o,[i],i.dtype)}};class yO{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const a=e.map((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a)).join(","),s=pE(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class xO{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const a=T$("rc",n),s=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,r=pE(n);function o(n){const a=e.map((a,s)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(s,n));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${r} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(a.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(a.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const wO={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:i}=a,r=s.shape.length,o=ie(i,s.shape);if(0===r)return X$({inputs:{x:s},backend:n});const l=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xO(s.shape,o):new yO(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class kO{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const IO={kernelName:Va,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:i,center:r}=t,o=n,l=new kO(a.shape,i),[p,d]=Ld(r,a.shape[1],a.shape[2]),u=[[p,d,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[a],a.dtype,u)}},SO=r_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),NO={kernelName:Zn,backendName:"webgl",kernelFunc:SO},TO=r_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:r$}),CO={kernelName:Qn,backendName:"webgl",kernelFunc:TO};class EO{constructor(e,t,n,a,s,i,r=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=pE(s.length),p=pE(i.length);let d="";1===n?d="i":2===n&&(d="i, j");const u=`getIndices(${d})`;let c="";1===a?c="i":2===a&&(c="i, coords[1]");const h=`getUpdates(${c})`;let m="";o&&(m="coords[0], coords[1]");const f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${p} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${u});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}}class $O{constructor(e,t,n,a,s,i,r=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const l=pE(s.length),p=pE(i.length);let d="";1===n?d="i":2===n&&(d="i, j");const u=`getIndices(${d})`;let c="";1===a?c="i":2===a&&(c="i, coords[1]");const h=`getUpdates(${c})`;let m="";o&&(m="coords[0], coords[1]");const f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides",v=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${p} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${u});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${v};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${h};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}}const _O={kernelName:ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:i}=t,{shape:r}=a,{sliceRank:o,numUpdates:l,sliceSize:p,strides:d,outputSize:u}=jd(0,s,r),c=[u/p,p];if(0===u)return n.makeTensorInfo(r,s.dtype);const h=m_({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=m_({inputs:{x:i},backend:n,attrs:{shape:[l,p]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=$e().getBool("WEBGL_PACK")?new $O(l,o,h.shape.length,m.shape.length,d,c):new EO(l,o,h.shape.length,m.shape.length,d,c);const v=n.runWebGLProgram(g,[m,h,f],m.dtype),b=m_({inputs:{x:v},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(f),b}};class RO{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===$e().getNumber("WEBGL_VERSION")?"while (left < right) {":s,r="left"===a?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${r} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const AO={kernelName:na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:s,values:i}=t,{side:r}=a,o=new RO(s.shape[0],s.shape[1],i.shape[1],r),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,i],"int32",l)}};class DO{constructor(e,t,n){let a,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],r=[];for(let a=0;a<t.length;a++)r.push(`${n[a]}`),a<e&&i.push(`${n[a]}`);a=i.join(),s=r.join()}const i=pE(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const FO={kernelName:aa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:i}=t,r=new DO(a.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(r,[a,s,i],Ws(s.dtype,i.dtype))}},OO=r_({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${qd};\n  float scale = ${Kd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),MO={kernelName:sa,backendName:"webgl",kernelFunc:OO},LO=r_({opSnippet:i_+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:l$}),PO={kernelName:pa,backendName:"webgl",kernelFunc:LO},zO=r_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),VO={kernelName:la,backendName:"webgl",kernelFunc:zO},BO=r_({opSnippet:i_+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${q$}\n  return result;\n`}),UO={kernelName:ra,backendName:"webgl",kernelFunc:BO},WO=r_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),GO={kernelName:oa,backendName:"webgl",kernelFunc:WO},HO=r_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),jO={kernelName:da,backendName:"webgl",kernelFunc:HO},qO={kernelName:ha,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,paddings:r}=a;X(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((e,t)=>e*t),l=[[0,0]];l.push(...r);for(let e=1+i.length;e<s.shape.length;++e)l.push([0,0]);const p=[],d=qF({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),u=Pd(d.shape,i,o,!1),c=zd(u.length,i.length,!1),h=Vd(d.shape,i,o,!1),m=m_({inputs:{x:d},backend:n,attrs:{shape:u}}),f=S_({inputs:{x:m},backend:n,attrs:{perm:c}}),g=m_({inputs:{x:f},backend:n,attrs:{shape:h}});return p.push(d),p.push(m),p.push(f),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},KO={kernelName:ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:s,denseShape:i,defaultValue:r}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==r.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${r.shape}`);const o=n.readSync(a.dataId),l=n.readSync(s.dataId),p=n.readSync(i.dataId),d=n.readSync(r.dataId)[0],[u,c,h,m,f]=u$(o,a.shape,a.dtype,l,s.dtype,p,d);return[n.makeTensorInfo(c,a.dtype,u),n.makeTensorInfo([c[0]],s.dtype,h),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(e=>Number(e)))),n.makeTensorInfo([f.length],a.dtype,new Int32Array(f))]}},XO={kernelName:va,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:s,newShape:i}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const r=Array.from(n.readSync(s.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(i.dataId)),[p,d,u]=c$(o,a.shape,a.dtype,r,l);return[n.makeTensorInfo(d,a.dtype,p),n.makeTensorInfo([u.length],i.dtype,new Int32Array(u))]}},YO={kernelName:ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const r=n.readSync(a.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[p,d]=h$(r,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(d,a.dtype,p)}},JO={kernelName:ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:s,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const r=n.readSync(a.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[p,d]=h$(r,a.shape,a.dtype,o,l);return n.makeTensorInfo(d,a.dtype,p)}},ZO={kernelName:xa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:r}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:p,sliceSize:d,strides:u,outputSize:c}=jd(0,s,o),h=!1;if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),a=ys(n.readSync(r.dataId)[0]),m=o$(e,t,o,c,d,p,l,u,a,h);return n.makeTensorInfo(o,m.dtype,m.values)}const m=new EO(p,l,s.shape.length,i.shape.length,u,[c,1],h),f=n.runWebGLProgram(m,[i,s,r],i.dtype),g=m_({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),g}},QO={kernelName:ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:r}=a,o=ie(r,s.shape)[0],l=yu(s,i,o),p=s.shape.length,d=new Array(p).fill(0),u=s.shape.slice();return l.map(e=>{const t=[...u];t[o]=e;const a=xR({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,a})}},eM="return sqrt(x);",tM=r_({opSnippet:eM,packedOpSnippet:eM,cpuKernelImpl:m$}),nM={kernelName:ua,backendName:"webgl",kernelFunc:tM},aM={kernelName:ka,backendName:"webgl",kernelFunc:r_({opSnippet:"return x * x;"})},sM="return (a - b) * (a - b);",iM=o_({opSnippet:sM,packedOpSnippet:sM}),rM={kernelName:wa,backendName:"webgl",kernelFunc:iM},oM={kernelName:Ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const i=Ou(n.readSync(s.dataId)),r=f$(i,"string",a);return n.makeTensorInfo(s.shape,"string",r)}},lM={kernelName:za,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:a}=e,s=F$+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new D$(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}};class pM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,s=pE(n.length),i=pE(n.length);let r="";if(1===a)r="coords * strides + begin";else{let e=0;r=n.map((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}const dM={kernelName:Sa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,end:r,strides:o,beginMask:l,endMask:p,ellipsisMask:d,newAxisMask:u,shrinkAxisMask:c}=a,{finalShapeSparse:h,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:v,begin:b,end:y,strides:x}=lo(s.shape,i,r,o,l,p,d,u,c);let w;if(f)w=m_({inputs:{x:s},backend:n,attrs:{shape:m}});else if(g||v){X(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const e=Xr(b,y,x),t=xR({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=m_({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=ar(s.shape,s.dtype,e),a=g$(h,t,x,b);w=n.makeTensorInfo(m,s.dtype,a.values)}else{const e=new pM(b,x,h);w=n.runWebGLProgram(e,[s],s.dtype)}const k=m_({inputs:{x:w},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(w),k}},uM={kernelName:Na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:s,nGramWidths:i,leftPad:r,rightPad:o,padWidth:l,preserveShortSequences:p}=a,{data:d,dataSplits:u}=t,c=n.readSync(d.dataId),h=n.readSync(u.dataId),[m,f]=v$(c,h,s,i,r,o,l,p);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(u.shape,"int32",f)]}},cM={kernelName:Ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:s}=a,{input:i,delimiter:r}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==r.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${r.shape}`);const o=n.readSync(i.dataId),l=n.readSync(r.dataId)[0],[p,d,u]=b$(o,l,s),c=d.length;return[n.makeTensorInfo([c,2],"int32",p),n.makeTensorInfo([c],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(u))]}},hM={kernelName:Ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:s}=a,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const r=n.readSync(i.dataId),o=y$(r,s);return n.makeTensorInfo(i.shape,"int32",o)}},mM=r_({opSnippet:"return tan(x);"}),fM={kernelName:$a,backendName:"webgl",kernelFunc:mM},gM=r_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),vM={kernelName:_a,backendName:"webgl",kernelFunc:gM},bM={kernelName:ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:s,indices:i,updates:r}=t,{}=a,{sliceRank:o,numUpdates:l,sliceSize:p,strides:d,outputSize:u}=jd(0,i,s.shape),c=[u/p,p];if(0===u)return n.makeTensorInfo(s.shape,i.dtype);const h=m_({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),m=m_({inputs:{x:r},backend:n,attrs:{shape:[l,p]}}),f=m_({inputs:{x:s},backend:n,attrs:{shape:c}}),g=new EO(l,o,h.shape.length,m.shape.length,d,c,!1,!0),v=n.runWebGLProgram(g,[m,h,f],f.dtype),b=m_({inputs:{x:v},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(v),b}};class yM{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const a=pE(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function xM(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:i}=a;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>ys(e)):e,a=ar(s.shape,s.dtype,t),r=w$(a,i);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const r=new yM(s.shape,i);return n.runWebGLProgram(r,[s],s.dtype)}const wM={kernelName:Ra,backendName:"webgl",kernelFunc:xM};class kM{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class IM{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function SM(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function NM(e){let t=1;for(;t<e;)t*=2;return t}const TM={kernelName:Aa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{k:i,sorted:r}=a,o=$e().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=$e().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),p=s.shape,d=p[p.length-1];if(n.shouldExecuteOnCPU([s])||d<o||i>l){const e=n.readSync(s.dataId),[t,a]=k$(e,p,s.dtype,i,r);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===i)return p[p.length-1]=0,[n.makeTensorInfo(p,s.dtype,[]),n.makeTensorInfo(p,"int32",[])];if(1===d)return[s,sD({attrs:{shape:p,dtype:"int32",value:0},backend:n})];const u=n.texData.get(s.dataId),c=null!==u&&u.isPacked,h=c?n.unpackTensor(s):s,m=Z(p)/d,f=m_({inputs:{x:h},attrs:{shape:[m,d]},backend:n});c&&SM(n,h);const g=NM(i),v=NM(d);let b=null;const y=()=>null===b?[f,f]:[f,b],x=(e,t,a)=>{const s=y(),i=new kM(a),r=[[d],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(i,s,"int32",r),SM(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)x(t,n,[m,v])}for(let e=v;e>g;e/=2){const t=y(),a=new IM([m,e/2]),s=[[d],[null===b?1:0],[g]],i=b;b=n.runWebGLProgram(a,t,"int32",s),SM(n,i);const r=g/2,o=2*r;for(let e=r;e>=1;e/=2)x(o,e,b.shape)}let w=b;b=xR({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,i]}}),SM(n,w);let k=ID({inputs:{x:f,indices:b},backend:n,attrs:{axis:1,batchDims:1}});SM(n,f);const I=p.slice(0,-1);I.push(i),w=b,b=m_({inputs:{x:b},attrs:{shape:I},backend:n}),SM(n,w);const S=k;return k=m_({inputs:{x:k},attrs:{shape:I},backend:n}),SM(n,S),[k,b]}};class CM{constructor(e,t,n,a,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const r="nearest"===n?1:2;let o;switch(a){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${r} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const EM={kernelName:Da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,transforms:i}=t,{interpolation:r,fillMode:o,fillValue:l,outputShape:p}=a,[d,u,c,h]=s.shape,[m,f]=null!=p?p:[u,c],g=new CM(u,c,r,o,l,[d,m,f,h]);return n.runWebGLProgram(g,[s,i],"float32")}},$M={kernelName:Oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:s}=n,{x:i}=t;jC(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const r=a.readSync(i.dataId),{outputValues:o,outputShape:l,indices:p}=S$(r,s,i.shape,i.dtype);return[a.makeTensorInfo(l,i.dtype,o),a.makeTensorInfo([p.length],"int32",p)]}},_M={kernelName:Ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:s}=t;let{axis:i}=a;i<0&&(i+=s.shape.length);const r=s,o=r.shape.length,l=s.shape[i],p=new Array(o-1);let d=0;for(let e=0;e<o;e++)e!==i&&(p[d++]=r.shape[e]);const u=[],c=new Array(o).fill(0),h=r.shape.slice();h[i]=1;const m=new Array(l);for(let e=0;e<m.length;e++){c[i]=e;const t=xR({inputs:{x:r},backend:n,attrs:{begin:c,size:h}}),a=m_({inputs:{x:t},backend:n,attrs:{shape:p}});m[e]=a,u.push(t)}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}};class RM{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,s=e.inSize,i=e.numSegments,r=i*Math.ceil(s/n);this.outputShape=[a,r];const o=4*Math.floor(n/4),l=n%4,p="\n        sumValue += dot(values, segFilter);\n    ";let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${u}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${p}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${p}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${p}\n        }\n        setOutput(sumValue);\n      }\n    `}}const AM={kernelName:La,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:i}=t,{numSegments:r}=a,o=s.shape.length,l=[];let p=0;const d=xl([p],o);let u=s;null!=d&&(u=S_({inputs:{x:s},backend:n,attrs:{perm:d}}),l.push(u),p=kl(1,o)[0]);const c=Du(u.shape,p,r),h=Z([u.shape[p]]),m=m_({inputs:{x:u},backend:n,attrs:{shape:[-1,h]}});l.push(m);const f=Gs(s.dtype),g=(e,t,a,s,i)=>{const r=e.shape[0],o=e.shape[1],p=Au(o,i),d=new RM({windowSize:p,inSize:o,batchSize:r,numSegments:i},t),u=n.compileAndRun(d,[e,a],s);if(l.push(u),u.shape[1]===i)return u;const c=tO({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),h=xM({inputs:{x:c},backend:n,attrs:{reps:[o/p]}});return l.push(c),l.push(h),g(u,t,h,s,i)},v=m_({inputs:{x:g(m,"unsortedSegmentSum",i,f,r)},backend:n,attrs:{shape:c}});let b=v;if(null!=d){l.push(v);const e=wl(d);b=S_({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},DM=[C_,$_,R_,D_,M_,z_,V_,B_,q_,K_,Y_,Z_,eR,nR,sR,oR,lR,uR,cR,hR,gR,kR,IR,SR,NR,_R,DR,MR,Z$,zR,qR,tA,rA,lA,pA,dA,uA,hA,fA,vA,IA,SA,NA,CA,_A,DA,FA,MA,PA,zA,BA,UA,GA,jA,KA,YA,QA,nD,iD,oD,dD,cD,fD,bD,yD,wD,SD,TD,ED,Y$,$D,GR,RD,DD,OD,t_,LD,zD,VD,UD,GD,jD,KD,YD,QD,tF,aF,iF,rF,oF,dF,uF,cF,hF,mF,gF,yF,wF,_F,h_,AF,FF,MF,PF,CR,VF,WF,GF,KF,YF,s_,JF,ZF,QF,eO,nO,$R,SF,sO,rO,lO,f_,uO,hO,gO,bO,wO,IO,NO,CO,_O,AO,FO,MO,PO,VO,UO,GO,wR,$F,jO,qO,KO,XO,YO,JO,ZO,QO,nM,aM,rM,oM,lM,dM,uM,cM,hM,CF,I_,fM,vM,bM,wM,TM,EM,N_,$M,_M,AM,UF];for(const e of DM)Ja(e);var FM=function(){function e(){if(r()(this,e),e.instance)return e.instance;e.instance=this}return l()(e,[{key:"loadModel",value:(t=x()(k().mark(function t(n){var a;return k().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(!e.modelCache.has(n)){t.next=1;break}return t.abrupt("return",e.modelCache.get(n));case 1:return t.next=2,Bv(n);case 2:return a=t.sent,e.modelCache.set(n,a),t.abrupt("return",a);case 3:case"end":return t.stop()}},t)})),function(e){return t.apply(this,arguments)})}],[{key:"getInstance",value:function(){return e.instance||(e.instance=new e),e.instance}}]);var t}();B()(FM,"instance",null),B()(FM,"modelCache",new Map);var OM=function(){return l()(function e(){r()(this,e)},[{key:"cleanOldMemory",value:function(e){var t,n;e&&null!==(t=e.state)&&void 0!==t&&t.dispose&&e.state.dispose(),e&&null!==(n=e.nextState)&&void 0!==n&&n.dispose&&e.nextState.dispose()}},{key:"changeEnvironment",value:function(e){}}])}(),MM=function(){return l()(function e(t){r()(this,e),this.capacity=t,this.tree=new Float32Array(2*t-1),this.data=new Array(t),this.size=0,this.write=0},[{key:"total",value:function(){return this.tree[0]}},{key:"add",value:function(e,t){var n=this.write+this.capacity-1;this.data[this.write]=t,this.update(n,e),this.write++,this.write>=this.capacity&&(this.write=0),this.size<this.capacity&&this.size++}},{key:"update",value:function(e,t){var n=t-this.tree[e];for(this.tree[e]=t;0!==e;)e=Math.floor((e-1)/2),this.tree[e]+=n}},{key:"get",value:function(e){if(e>this.total)throw new Error("SumTree: randomValue is greater than total");for(var t=0;2*t+1<this.tree.length;){var n=2*t+1,a=n+1;e<=this.tree[n]?t=n:(t=a,e-=this.tree[n])}return{index:t,value:this.tree[t],data:this.getData(t)}}},{key:"getData",value:function(e){var t=e-(this.capacity-1);return this.data[t]}}])}();function LM(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(LM=function(){return!!e})()}var PM=function(e){function t(e,n){var a,s,i,o,l=arguments.length>2&&void 0!==arguments[2]&&arguments[2],p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.6;return r()(this,t),s=this,i=t,i=C()(i),(a=N()(s,LM()?Reflect.construct(i,[],C()(s).constructor):i.apply(s,o))).capacity=e,a.rng=n,a.calculateWeight=l,a.alpha=p,a.defaultPriority=1,a.sumTree=new MM(e),a.currentMaxPriority=Math.pow(a.defaultPriority,a.alpha),a}return R()(t,e),l()(t,[{key:"add",value:function(e,t,n,a,s){var i={state:e,action:t,reward:n,nextState:a,done:s},r=this.sumTree.data[this.sumTree.write];r&&this.cleanOldMemory(r),this.sumTree.add(this.currentMaxPriority,i)}},{key:"sample",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.4,n=[],a=[],s=[],i=this.sumTree.total(),r=0,o=0;o<e;o++){var l=this.rng()*i,p=this.sumTree.get(l),d=p.index,u=p.value,c=p.data;a.push(d),n.push(c);var h=u/i,m=Math.pow(this.sumTree.size*h,-t);s.push(m),m>r&&(r=m)}var f=s.map(function(e){return e/r});return{samples:n,indices:a,weights:this.calculateWeight?f:null}}},{key:"updatePriority",value:function(e,t,n){var a=Math.abs(t)+1e-5,s=Math.pow(a,this.alpha);this.sumTree.update(e,s),s>this.currentMaxPriority&&(this.currentMaxPriority=s)}},{key:"size",value:function(){return this.sumTree.size}},{key:"changeEnvironment",value:function(e){}}])}(OM);function zM(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(zM=function(){return!!e})()}var VM=function(e){function t(e,n){var a,s,i,o;return r()(this,t),s=this,i=t,i=C()(i),(a=N()(s,zM()?Reflect.construct(i,[],C()(s).constructor):i.apply(s,o))).capacity=e,a.rng=n,a.buffer=[],a}return R()(t,e),l()(t,[{key:"add",value:function(e,t,n,a,s){if(this.buffer.push({state:e,action:t,reward:n,nextState:a,done:s}),this.buffer.length>this.capacity){var i=this.buffer.shift();this.cleanOldMemory(i)}}},{key:"sample",value:function(e){for(var t=[],n=[],a=0;a<e;a++){var s=Math.floor(this.rng()*this.buffer.length);t.push(this.buffer[s]),n.push(s)}return{samples:t,indices:n,weight:null}}},{key:"updatePriority",value:function(e,t){}},{key:"size",value:function(){return this.buffer.length}},{key:"changeEnvironment",value:function(e){}}])}(OM);function BM(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=Array(t);n<t;n++)a[n]=e[n];return a}function UM(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(UM=function(){return!!e})()}var WM=function(e){function t(e,n){var a,s,i,o,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"uniform",p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"cycling";return r()(this,t),s=this,i=t,i=C()(i),(a=N()(s,UM()?Reflect.construct(i,[],C()(s).constructor):i.apply(s,o))).capacity=e,a.rng=n,a.buffers=new Map,a.currentEnvironment=null,a.selectMode=p||"classic",a.currentBufferIndex=0,a.createBuffer=function(e){return"prioritized"===l?new PM(e,n):new VM(e,n)},a}return R()(t,e),l()(t,[{key:"changeEnvironment",value:function(e){this.currentEnvironment=e,this.buffers.has(e)||this.buffers.set(e,this.createBuffer(this.capacity))}},{key:"add",value:function(e,t,n,a,s){if(!this.currentEnvironment)throw new Error("No environment selected. Please use changeEnvironment(envId) to setup the current environment.");this.buffers.get(this.currentEnvironment).add(e,t,n,a,s)}},{key:"sample",value:function(e){var t=Array.from(this.buffers.keys()),n=this.size();if(0===t.length||0===n)return{samples:[],indices:[],weight:null};switch(this.selectMode){case"cycling":return this.cyclingSample(t,e);case"random":return this.randomSample(t,e,n);case"balanced":return this.balancedSample(t,e,n);default:return this.classicSample(t,e,n)}}},{key:"classicSample",value:function(e,t,n){var a=this,s=e.map(function(e){var s=a.buffers.get(e),i=s.size();return 0===i?null:a.sampleBuffer(s,Math.max(1,Math.floor(t*(i/n))),e)}).filter(Boolean);return{samples:s.flatMap(function(e){return e.samples}),indices:s.flatMap(function(e){return e.indices}),weight:s.some(function(e){return e.weight})?s.flatMap(function(e){return e.weight}):null,envAssignments:s.flatMap(function(e){return e.envAssignments})}}},{key:"balancedSample",value:function(e,t){var n=this,a=Math.max(1,Math.floor(t/e.length)),s=e.map(function(e){return n.sampleBuffer(n.buffers.get(e),a,e)});return{samples:s.flatMap(function(e){return e.samples}),indices:s.flatMap(function(e){return e.indices}),weight:s.flatMap(function(e){return e.weight}).filter(function(e){return null!==e}),envAssignments:s.flatMap(function(e){return e.envAssignments})}}},{key:"cyclingSample",value:function(e,t){var n=e[this.currentBufferIndex],a=this.buffers.get(n);return this.currentBufferIndex=(this.currentBufferIndex+1)%e.length,this.sampleBuffer(a,t,n)}},{key:"randomSample",value:function(e,t,n){var a=this,s=e.map(function(e){return a.buffers.get(e).size()/n}),i=this.weightedRandomChoice(e,s);return this.sampleBuffer(this.buffers.get(i),t,i)}},{key:"weightedRandomChoice",value:function(e,t){for(var n=t.reduce(function(e,t){return e+t},0),a=this.rng()*n,s=0;s<e.length;s++){if(a<t[s])return e[s];a-=t[s]}return e[e.length-1]}},{key:"sampleBuffer",value:function(e,t,n){var a=e.sample(t),s=a.samples,i=a.indices,r=a.weight;return{samples:s,indices:i,weight:(null==r?void 0:r.length)>0?r:null,envAssignments:Array(i.length).fill(n)}}},{key:"updatePriority",value:function(e,t,n){var a=this.buffers.get(n);a&&a.updatePriority(e,t)}},{key:"cleanOldMemory",value:function(e){var t=this.buffers.get(this.currentEnvironment);t&&t.cleanOldMemory(e)}},{key:"size",value:function(){var e,t=0,n=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return BM(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?BM(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var a=0,s=function(){};return{s,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,r=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return r=e.done,e},e:function(e){o=!0,i=e},f:function(){try{r||null==n.return||n.return()}finally{if(o)throw i}}}}(this.buffers.values());try{for(n.s();!(e=n.n()).done;)t+=e.value.size()}catch(e){n.e(e)}finally{n.f()}return t}}])}(OM),GM=__webpack_require__(5715),HM=__webpack_require__.n(GM);function jM(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(jM=function(){return!!e})()}var qM=function(e){function t(e){return r()(this,t),n=this,a=t,s=[e||{}],a=C()(a),N()(n,jM()?Reflect.construct(a,s||[],C()(n).constructor):a.apply(n,s));var n,a,s}return R()(t,e),l()(t,[{key:"computeOutputShape",value:function(e){return e[1]}},{key:"call",value:function(e){return yi(function(){var t=HM()(e,2),n=t[0],a=t[1],s=a.mean(1,!0);return n.add(a.sub(s))})}}],[{key:"className",get:function(){return"DuelingQLayer"}}])}(cg);function KM(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function XM(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?KM(Object(n),!0).forEach(function(t){B()(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):KM(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function YM(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(YM=function(){return!!e})()}function JM(e,t,n,a){var s=$()(C()(1&a?e.prototype:e),t,n);return 2&a&&"function"==typeof s?function(e){return s.apply(n,e)}:s}function ZM(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";return yi(function(){var n=Ul(e,0,1,t);return pr(Yl(n),dr(Cr(n)))})}yr(qM);var QM=function(e){function t(e){var n,a,s,i;r()(this,t);var o,l,p,d=XM(XM({},e),{},{sigma:null!==(n=e.sigma)&&void 0!==n?n:.5,useFactorised:null===(a=e.useFactorised)||void 0===a||a,useBias:null===(s=e.useBias)||void 0===s||s,dtype:e.dtype||"float32"});return o=this,l=t,p=[d],l=C()(l),(i=N()(o,YM()?Reflect.construct(l,p||[],C()(o).constructor):l.apply(o,p))).sigma=d.sigma,i.useFactorised=d.useFactorised,i.dtype=d.dtype,i}return R()(t,e),l()(t,[{key:"build",value:function(e){if(this.lastDim=e[e.length-1],null==this.lastDim)throw new Error("The last dimension of the input must be defined.");var n=Math.sqrt(this.lastDim),a=this.useFactorised?1/n:Math.sqrt(3/this.lastDim),s=this.useFactorised?this.sigma/n:.017;this.muKernel=this.addWeight("muKernel",[this.lastDim,this.units],this.dtype,Og({minval:-a,maxval:a})),this.sigmaKernel=this.addWeight("sigmaKernel",[this.lastDim,this.units],this.dtype,Fg({value:s})),this.epsKernel=this.addWeight("epsKernel",[this.lastDim,this.units],this.dtype,Dg(),void 0,!1),this.useBias&&(this.muBias=this.addWeight("muBias",[this.units],this.dtype,Og({minval:-a,maxval:a})),this.sigmaBias=this.addWeight("sigmaBias",[this.units],this.dtype,Fg({value:s})),this.epsBias=this.addWeight("epsBias",[this.units],this.dtype,Dg(),void 0,!1)),this.resetNoise(),JM(t,"build",this,3)([e])}},{key:"kernel",get:function(){var e=this;return yi(function(){return rr(e.muKernel.read(),pr(e.sigmaKernel.read(),e.epsKernel.read()))})}},{key:"bias",get:function(){var e=this;return this.useBias?yi(function(){return rr(e.muBias.read(),pr(e.sigmaBias.read(),e.epsBias.read()))}):null}},{key:"call",value:function(e){return JM(t,"call",this,3)([e])}},{key:"resetNoise",value:function(){var e=this;yi(function(){if(e.useFactorised){var t=ZM([e.lastDim,1],e.dtype),n=ZM([1,e.units],e.dtype),a=Nl(t,n);e.epsKernel.write(a),e.useBias&&e.epsBias.write(n.flatten())}else e.epsKernel.write(Ul([e.lastDim,e.units])),e.useBias&&e.epsBias.write(Ul([e.units]))})}},{key:"removeNoise",value:function(){var e=this;yi(function(){e.epsKernel.write(Ol([e.lastDim,e.units])),e.useBias&&e.epsBias.write(Ol([e.units]))})}},{key:"getConfig",value:function(){return XM(XM({},JM(t,"getConfig",this,3)([])),{},{sigma:this.sigma,useFactorised:this.useFactorised,dtype:this.dtype})}}],[{key:"className",get:function(){return"NoisyDense"}}])}(ix);function eL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(eL=function(){return!!e})()}yr(QM);var tL=function(e){function t(e,n,a,s){var i,o,l,p;return r()(this,t),o=this,l=t,l=C()(l),(i=N()(o,eL()?Reflect.construct(l,[],C()(o).constructor):l.apply(o,p))).aiLevelText="ultra",i.enableTrainingMode=e,i.modelLocation=n,i.trainingRandomSeed=a||(new(m())).int32(),i.trainingRng=new(m())(i.trainingRandomSeed),i.logger=s||console,i.mainModel=null,i.targetModel=null,i.modelHeight=25,i.modelWidth=25,i.modelDepth=2,i.numberOfPossibleActions=4,i.dtype="float32",i.enableTargetModel=!0,i.enableDuelingQLearning=!0,i.enableNoisyNetwork=!0,i.enableVariableInputSize=!1,i.syncTargetEvery=1e3,i.gamma=.95,i.epsilonMax=1,i.epsilonMin=.005,i.epsilon=i.epsilonMax,i.learningRate=.001,i.batchSize=32,i.maxMemoryLength=1e4,i.memory=new WM(i.maxMemoryLength,i.trainingRng,"prioritized"),i.currentEnv=null,i.lastAction=null,i.currentQValue=0,i.currentEpoch=0,i.stepsSinceLastSync=0,i.summaryWriter=null,i}return R()(t,e),l()(t,[{key:"setup",value:(p=x()(k().mark(function e(t){return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=1,this.createOrLoadModel(this.enableTrainingMode,this.modelLocation);case 1:this.mainModel=e.sent,this.enableTrainingMode?(this.enableTargetModel&&(this.targetModel=this.createModel(),this.targetModel.setWeights(this.mainModel.getWeights())),this.summaryWriter=t,this.logger.info("INFO: The current seed for this training process is: ".concat(this.trainingRandomSeed,"\n")),this.enableNoisyNetwork&&this.resetNoisyLayers()):this.enableNoisyNetwork&&this.clearNoisyLayers();case 2:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"createOrLoadModel",value:(o=x()(k().mark(function e(t,n){var a,s;return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!n){e.next=2;break}return e.next=1,this.loadModel(n);case 1:s=e.sent,e.next=3;break;case 2:s=this.createModel();case 3:return a=s,t&&this.compileModel(a),e.abrupt("return",a);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return o.apply(this,arguments)})},{key:"loadModel",value:function(e){return FM.getInstance().loadModel(e)}},{key:"createModel",value:function(){var e,t,n=this,a=function(e){return n.enableNoisyNetwork?new QM(e):ix(e)},s=fg({shape:[this.enableVariableInputSize?null:this.modelHeight,this.enableVariableInputSize?null:this.modelWidth,this.modelDepth]}),i=sx({filters:32,kernelSize:3,activation:"relu",padding:"same",dtype:this.dtype}).apply(s),r=sx({filters:64,kernelSize:3,activation:"relu",padding:"same",dtype:this.dtype}).apply(i),o=this.enableVariableInputSize?(e={dataFormat:"channelsLast",trainable:!0,dtype:this.dtype},new Uy(e)).apply(r):function(e){return new sy(e)}({dtype:this.dtype}).apply(r),l=a({units:64,activation:"relu",dtype:this.dtype}).apply(o),p=a({units:this.numberOfPossibleActions,activation:"linear",dtype:this.dtype}).apply(l);if(this.enableDuelingQLearning){var d=a({units:64,activation:"relu",dtype:this.dtype}).apply(o),u=a({units:1,activation:"linear",dtype:this.dtype}).apply(d);t=Wv({inputs:s,outputs:(new qM).apply([u,p]),dtype:this.dtype})}else t=Wv({inputs:s,outputs:p,dtype:this.dtype});return t}},{key:"compileModel",value:function(e){e.compile({optimizer:Nd.rmsprop(this.learningRate),loss:function(e,t){return Sd.huberLoss(e,t)}})}},{key:"resetNoisyLayers",value:function(){this.enableNoisyNetwork&&this.enableTrainingMode&&(this.mainModel.layers.forEach(function(e){e instanceof QM&&e.resetNoise()}),this.enableTargetModel&&this.targetModel&&this.targetModel.layers.forEach(function(e){e instanceof QM&&e.resetNoise()}))}},{key:"clearNoisyLayers",value:function(){this.enableNoisyNetwork&&(this.mainModel.layers.forEach(function(e){e instanceof QM&&e.removeNoise()}),this.enableTargetModel&&this.targetModel&&this.targetModel.layers.forEach(function(e){e instanceof QM&&e.removeNoise()}))}},{key:"ai",value:function(e){var t;return t=this.trainingRng()<this.epsilon&&this.enableTrainingMode&&!this.enableNoisyNetwork?this.getRandomAction():this.getBestAction(e),this.lastAction=t,this.actionToKey(e,t)}},{key:"getRandomAction",value:function(){return u.randRange(0,this.numberOfPossibleActions-1)}},{key:"getBestAction",value:function(e){var t=this;return yi(function(){var n=t.stateToTensor(t.getState(e)).expandDims(0),a=t.mainModel.predict(n).dataSync(),s=u.fastArgMax(a),i=s.maxValue,r=s.maxIndex;return t.summaryWriter&&(t.currentQValue=i),r})}},{key:"actionToKey",value:function(e,t){if(4===this.numberOfPossibleActions)return s.ActionMappingInverse[t];if(3!==this.numberOfPossibleActions)throw new Error("Error: this number of possible actions (".concat(this.numberOfPossibleActions,") is not supported"));var n=e.getHeadPosition().direction;if(t===s.AIActions.CONTINUE)return s.ActionMappingInverse[n];if(t===s.AIActions.TURN_LEFT)switch(n){case s.Direction.UP:return s.ActionMappingInverse[s.Direction.LEFT];case s.Direction.BOTTOM:return s.ActionMappingInverse[s.Direction.RIGHT];case s.Direction.RIGHT:return s.ActionMappingInverse[s.Direction.TOP];case s.Direction.LEFT:return s.ActionMappingInverse[s.Direction.BOTTOM]}if(t===s.AIActions.TURN_RIGHT)switch(n){case s.Direction.UP:return s.ActionMappingInverse[s.Direction.RIGHT];case s.Direction.BOTTOM:return s.ActionMappingInverse[s.Direction.LEFT];case s.Direction.RIGHT:return s.ActionMappingInverse[s.Direction.BOTTOM];case s.Direction.LEFT:return s.ActionMappingInverse[s.Direction.TOP]}throw new Error("Error: no action was mapped for actionIndex ".concat(t))}},{key:"getState",value:function(e){for(var t=e.grid,n=new Array(t.height).fill(0).map(function(){return new Array(t.width).fill(0)}),a=new Array(t.height).fill(0).map(function(){return new Array(t.width).fill(0)}),i=0;i<t.height;i++)for(var r=0;r<t.width;r++){var o=new c(r,i),l=t.get(o);e.positionInQueue(o)?e.getHeadPosition().equals(o)?n[i][r]=3:e.getTailPosition().equals(o)?n[i][r]=2:n[i][r]=1:l===s.CaseType.SNAKE&&(n[i][r]=4),l===s.CaseType.FRUIT?a[i][r]=1:l===s.CaseType.FRUIT_GOLD&&(a[i][r]=2),l!==s.CaseType.WALL&&l!=s.CaseType.SNAKE_DEAD||(a[i][r]=3)}return{snakesLayer:n,fruitsAndWallsLayer:a}}},{key:"stateToTensor",value:function(e){for(var t=e.snakesLayer.length,n=e.snakesLayer[0].length,a=this.enableVariableInputSize?t:this.modelHeight,s=this.enableVariableInputSize?n:this.modelWidth,i=new Float32Array(a*s*2),r=0;r<a;r++)for(var o=0;o<s;o++){var l=2*(r*s+o),p=r<t&&o<n;i[l]=p?e.snakesLayer[r][o]:-1,i[l+1]=p?e.fruitsAndWallsLayer[r][o]:-1}return mi(i,[a,s,2],this.dtype)}},{key:"findPositionInState",value:function(e,t){for(var n=0;n<e.length;n++)for(var a=0;a<e[n].length;a++)if(e[n][a]===s.CaseTypeAIValue[t])return{x:a,y:n};return null}},{key:"remember",value:function(e,t,n,a,s){this.memory.add(e,t,n,a,s)}},{key:"train",value:(i=x()(k().mark(function e(){var t,n,a,s,i,r,o=this;return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(this.memory.size()<this.batchSize)){e.next=1;break}return e.abrupt("return");case 1:return t=this.loadBatches(),n=yi(function(){var e=rp(t.samples.map(function(e){var t=e.nextState;return o.stateToTensor(t)})),n=rp(t.samples.map(function(e){var t=e.state;return o.stateToTensor(t)})),a=lp(t.samples.map(function(e){return e.reward}),o.dtype),s=lp(t.samples.map(function(e){return e.done?0:1}),o.dtype),i=lp(t.samples.map(function(e){return e.action}),"int32"),r=(o.enableTargetModel?o.targetModel:o.mainModel).predict(e),l=o.mainModel.predict(n),p=r.max(1),d=l.clone(),u=p.mul(o.gamma).mul(s),c=a.add(u),h=Fl(i,d.shape[1],void 0,void 0,o.dtype),m=l.mul(h).sum(1),f=c.sub(m).abs(),g=f.mean().dataSync()[0];return f.dataSync().forEach(function(e,n){o.memory.updatePriority(t.indices[n],e,t.envAssignments?t.envAssignments[n]:null)}),{inputs:n,targets:d.mul(mr(1).sub(h)).add(h.mul(c.expandDims(1))),meanTDError:g}}),a=n.inputs,s=n.targets,i=n.meanTDError,e.next=2,this.mainModel.fit(a,s,{batchSize:this.batchSize,epochs:1,verbose:0,shuffle:!0});case 2:r=e.sent,this.summaryWriter&&(this.summaryWriter.scalar("loss",r.history.loss[0],this.currentEpoch),this.summaryWriter.scalar("td_error",i,this.currentEpoch),this.summaryWriter.scalar("epsilon",this.epsilon,this.currentEpoch)),a.dispose(),s.dispose(),this.stepsSinceLastSync>=this.syncTargetEvery&&(this.synchronizeTargetNetwork(),this.stepsSinceLastSync=0),this.stepsSinceLastSync++,this.currentEpoch++;case 3:case"end":return e.stop()}},e,this)})),function(){return i.apply(this,arguments)})},{key:"loadBatches",value:function(){return this.memory.sample(this.batchSize)}},{key:"synchronizeTargetNetwork",value:function(){this.enableTargetModel&&(this.targetModel.setWeights(this.mainModel.getWeights()),this.logger.info("Target network synchronized!\n"))}},{key:"calculateReward",value:function(e,t,n){var a=e.gameOver,i=e.getHeadPosition(),r=this.findPositionInState(t.fruitsAndWallsLayer,s.CaseType.FRUIT),o=this.findPositionInState(t.fruitsAndWallsLayer,s.CaseType.FRUIT_GOLD);if(r||this.logger.warn("No fruit detected\n"),a){for(var l=0,p=0,d=[s.Direction.UP,s.Direction.DOWN,s.Direction.LEFT,s.Direction.RIGHT];p<d.length;p++){var u=d[p],c=e.getNextPosition(i,u);e.grid.isDeadPosition(c)||l++}return l>=1?s.AIRewards.GAME_OVER_WITH_EMPTY_CASES_AROUND:s.AIRewards.GAME_OVER}return n&&e.isAIStuck(3)?s.AIRewards.STUCK:r&&i.x===r.x&&i.y===r.y?s.AIRewards.FRUIT_EATEN:o&&i.x===o.x&&i.y===o.y?s.AIRewards.GOLD_FRUIT_EATEN:s.AIRewards.MOVE}},{key:"step",value:(a=x()(k().mark(function e(t,n,a){var s,i;return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:s=this.getState(t),i=this.calculateReward(t,n,a),this.remember(n,this.lastAction,i,s,a);case 1:case"end":return e.stop()}},e,this)})),function(e,t,n){return a.apply(this,arguments)})},{key:"changeEnvironment",value:function(e){this.currentEnv!==e&&(this.logger.info("Changing environment to: ".concat(e,"\n")),this.memory&&this.memory.changeEnvironment(e),this.currentEnv=e)}},{key:"beginEpisode",value:function(){this.resetNoisyLayers()}},{key:"saveModel",value:(n=x()(k().mark(function e(t){return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=1,this.mainModel.save(t);case 1:case"end":return e.stop()}},e,this)})),function(e){return n.apply(this,arguments)})}]);var n,a,i,o,p}(I);function nL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(nL=function(){return!!e})()}var aL=function(e){function t(){var e,n,a,s;return r()(this,t),n=this,a=t,a=C()(a),(e=N()(n,nL()?Reflect.construct(a,[],C()(n).constructor):a.apply(n,s))).aiLevelText="mock",e}return R()(t,e),l()(t,[{key:"ai",value:function(){return null}}])}(I);function sL(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=Array(t);n<t;n++)a[n]=e[n];return a}var iL=function(){function e(t,n,a,i,o,l,p,d){r()(this,e),this.direction=null==t?s.Direction.RIGHT:t,this.initialDirection=this.direction,this.initialLength=null==n?3:n,this.initTriedDirections=[],this.errorInit=!1,this.grid=a||new b,this.queue=[],this.lastKey=-1,this.lastTail,this.lastHead,this.lastTailMoved,this.lastHeadMoved,this.ticksDead=0,this.player=null==i?s.PlayerType.HUMAN:i,this.aiLevel=null==o?s.AiLevel.DEFAULT:o,this.autoRetry=null!=l&&l,this.score=0,this.gameOver=!1,this.scoreMax=!1,this.color,this.name=null==p?"Snake":p,this.snakeAI=new I,this.customAI=d,this.lastPositions=[],this.stuckCounter=0}return l()(e,[{key:"init",value:(n=x()(k().mark(function e(){var t,n,a,i,r,o,l,p,d;return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(this.initialLength<=0)){e.next=1;break}return this.errorInit=!0,e.abrupt("return",!1);case 1:if(this.grid.maze&&this.initTriedDirections.length<=0&&(this.initialDirection=this.grid.mazeFirstPosition.direction,this.direction=this.initialDirection),t=0,n=0,a=Object.values(s.HorizontalDirection),i=Object.values(s.VerticalDirection),a.includes(this.initialDirection)&&!this.initTriedDirections.includes(this.initialDirection)?t=this.checkSpace(!1):i.includes(this.initialDirection)&&!this.initTriedDirections.includes(this.initialDirection)&&(n=this.checkSpace(!0)),this.initTriedDirections.push(this.initialDirection),!(t<=0&&a.includes(this.initialDirection)||n<=0&&i.includes(this.initialDirection))){e.next=2;break}return e.abrupt("return",this.handleNoSpace());case 2:r=!0,o=[];case 3:if(!r){e.next=6;break}if(r=!1,l=this.getStartPosition()){e.next=4;break}return this.errorInit=!0,e.abrupt("return",!1);case 4:if((p=this.generateSnakePositions(l))?o=p:r=!0,!this.grid.maze||!r){e.next=5;break}return e.abrupt("return",this.init());case 5:e.next=3;break;case 6:return(d=this.isNearDeadPosition(o))&&(this.direction=this.grid.invertDirection(this.direction)),this.placeSnakeOnGrid(o,d),this.grid.maze&&this.player==s.PlayerType.HYBRID_HUMAN_AI&&(this.player=s.PlayerType.HUMAN),this.player==s.PlayerType.HYBRID_HUMAN_AI&&(this.aiLevel=s.AiLevel.HIGH),this.lastTail=this.getTailPosition(),this.lastHead=this.getHeadPosition(),e.next=7,this.initAI();case 7:return e.abrupt("return",!0);case 8:case"end":return e.stop()}},e,this)})),function(){return n.apply(this,arguments)})},{key:"checkSpace",value:function(e){for(var t=0,n=e?this.grid.width:this.grid.height,a=e?this.grid.height:this.grid.width,i=0;i<n;i++)for(var r=0,o=0;o<a;o++){var l=e?i:o,p=e?o:i;if(this.grid.get(new c(l,p))==s.CaseType.EMPTY?r++:r=0,r>=this.initialLength){t++;break}}return t}},{key:"handleNoSpace",value:function(){for(var e=0,t=Object.values(s.SimpleDirection);e<t.length;e++){var n=t[e];if(!this.initTriedDirections.includes(n))return this.initialDirection=n,this.direction=n,this.init()}return this.errorInit=!0,!1}},{key:"getStartPosition",value:function(){return this.grid.maze?this.grid.mazeFirstPosition:this.grid.getRandomPosition()}},{key:"generateSnakePositions",value:function(e){for(var t=[],n=new c(e.x,e.y,this.initialDirection),a=this.initialLength-1;a>=0;a--){if(a<this.initialLength-1&&(n=this.grid.getNextPosition(n,this.initialDirection)),this.grid.get(n)!=s.CaseType.EMPTY)return null;t.push(new c(n.x,n.y,n.direction))}return t}},{key:"isNearDeadPosition",value:function(e){if(!this.grid.maze)for(var t=new c(e[e.length-1].x,e[e.length-1].y,this.direction),n=0,a=Object.values(s.SimpleDirection);n<a.length;n++){var i=a[n];if(this.grid.isDeadPosition(this.grid.getNextPosition(t,i),!1)&&this.direction==i)return!0}return!1}},{key:"placeSnakeOnGrid",value:function(e,t){for(var n=0;n<e.length;n++)if(t){var a=e[e.length-n-1];a.direction=this.grid.invertDirection(a.direction),this.insert(e[e.length-n-1])}else this.insert(e[n])}},{key:"initAI",value:(t=x()(k().mark(function e(){var t,n;return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.customAI){e.next=10;break}n=this.aiLevel,e.next=n===s.AiLevel.RANDOM?1:n===s.AiLevel.LOW?2:n===s.AiLevel.DEFAULT?3:n===s.AiLevel.HIGH?4:n===s.AiLevel.ULTRA?5:n===s.AiLevel.MOCK?7:8;break;case 1:return this.snakeAI=new D,e.abrupt("continue",9);case 2:return this.snakeAI=new O,e.abrupt("continue",9);case 3:return this.snakeAI=new L,e.abrupt("continue",9);case 4:return this.snakeAI=new z,e.abrupt("continue",9);case 5:return t=new tL(!1,s.AIModelLocation),e.next=6,t.setup();case 6:return this.snakeAI=t,e.abrupt("continue",9);case 7:return this.snakeAI=new aL,e.abrupt("continue",9);case 8:return this.snakeAI=new L,e.abrupt("continue",9);case 9:e.next=11;break;case 10:this.snakeAI=this.customAI,this.aiLevel=s.AiLevel.CUSTOM;case 11:case"end":return e.stop()}},e,this)})),function(){return t.apply(this,arguments)})},{key:"reset",value:function(){this.direction=this.initialDirection,this.initTriedDirections=[],this.errorInit=!1,this.queue=[],this.score=0,this.gameOver=!1,this.scoreMax=!1,this.lastTailMoved=!0,this.lastHeadMoved=!0,this.lastTail=void 0,this.lastHead=void 0,this.lastKey=-1,this.ticksDead=0,this.lastPositions=[],this.stuckCounter=0,this.snakeAI&&(this.snakeAI.aiFruitGoal=s.CaseType.FRUIT)}},{key:"insert",value:function(e){this.queue.unshift(e),this.grid.set(s.CaseType.SNAKE,e)}},{key:"remove",value:function(){var e=this.queue.pop();this.grid.set(s.CaseType.EMPTY,e),this.lastTail=e,this.lastHead=this.getHeadPosition()}},{key:"length",value:function(){return this.queue.length}},{key:"get",value:function(e){return this.queue&&null!=this.queue[e]?this.queue[e].copy():null}},{key:"set",value:function(e,t){e>=0&&e<this.length()&&(this.queue[e]=t)}},{key:"increaseScore",value:function(e){this.score+=e,this.stuckCounter=0,this.lastPositions=[]}},{key:"getHeadPosition",value:function(){return this.get(0)}},{key:"getTailPosition",value:function(){return this.get(this.length()-1)}},{key:"positionInQueue",value:function(e){var t,n=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return sL(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?sL(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var a=0,s=function(){};return{s,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,r=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return r=e.done,e},e:function(e){o=!0,i=e},f:function(){try{r||null==n.return||n.return()}finally{if(o)throw i}}}}(this.queue);try{for(n.s();!(t=n.n()).done;){var a=t.value;if(a&&a.x==e.x&&a.y==e.y)return!0}}catch(e){n.e(e)}finally{n.f()}return!1}},{key:"hasMaxScore",value:function(){return this.grid.getTotal(s.CaseType.EMPTY)<=0&&!this.grid.fruitPosGold&&!this.grid.fruitPos}},{key:"setGameOver",value:function(e){this.gameOver=!0,this.ticksDead=e;for(var t=0;t<this.length();t++)this.grid.set(s.CaseType.SNAKE_DEAD,this.get(t))}},{key:"kill",value:function(){this.autoRetry=!1,this.grid=null,this.queue=null}},{key:"keyToDirection",value:function(e){return e==s.Key.LEFT&&this.direction!=s.Direction.RIGHT&&this.direction!=s.Direction.LEFT?s.Direction.LEFT:e==s.Key.UP&&this.direction!=s.Direction.BOTTOM&&this.direction!=s.Direction.UP?s.Direction.UP:e==s.Key.RIGHT&&this.direction!=s.Direction.LEFT&&this.direction!=s.Direction.RIGHT?s.Direction.RIGHT:e==s.Key.BOTTOM&&this.direction!=s.Direction.UP&&this.direction!=s.Direction.BOTTOM?s.Direction.BOTTOM:null}},{key:"moveTo",value:function(e){var t=this.keyToDirection(e);null!=t&&(this.direction=t),this.addMoveToHistory()}},{key:"addMoveToHistory",value:function(){var e=this.getHeadPosition(),t="".concat(e.x,",").concat(e.y,",").concat(e.direction);this.lastPositions.includes(t)?this.stuckCounter++:this.stuckCounter=Math.max(0,this.stuckCounter-1),this.lastPositions.push(t),this.lastPositions.size>this.maxLastMoves&&this.lastPositions.shift()}},{key:"maxLastMoves",get:function(){return Math.max(this.grid.width,this.grid.height)}},{key:"getNextPosition",value:function(e,t){return this.grid.getNextPosition(e,t)}},{key:"getDirectionTo",value:function(e,t){return this.grid.getDirectionTo(e,t)}},{key:"getGraphicDirectionFor",value:function(e,t,n){if(null==t||null==n)return e.direction;var a=this.getDirectionTo(e,n),i=this.getDirectionTo(e,t);return a==s.Direction.LEFT&&i==s.Direction.BOTTOM||a==s.Direction.BOTTOM&&i==s.Direction.LEFT?s.Direction.ANGLE_1:a==s.Direction.RIGHT&&i==s.Direction.BOTTOM||a==s.Direction.BOTTOM&&i==s.Direction.RIGHT?s.Direction.ANGLE_2:a==s.Direction.UP&&i==s.Direction.RIGHT||a==s.Direction.RIGHT&&i==s.Direction.UP?s.Direction.ANGLE_3:a==s.Direction.UP&&i==s.Direction.LEFT||a==s.Direction.LEFT&&i==s.Direction.UP?s.Direction.ANGLE_4:e.direction}},{key:"getGraphicDirection",value:function(e){return this.getGraphicDirectionFor(this.get(e),this.get(e-1),this.get(e+1))}},{key:"copy",value:function(){for(var t=new e(this.direction,3,new b(this.grid.width,this.grid.height,!1,!1),this.player,this.aiLevel,!1),n=0;n<t.grid.height;n++)for(var a=0;a<t.grid.width;a++)t.grid.set(this.grid.get(new c(a,n)),new c(a,n));t.queue=[];for(var s=0;s<this.queue.length;s++)t.queue.push(JSON.parse(JSON.stringify(this.queue[s])));return t}},{key:"ai",value:function(){return this.snakeAI&&this.snakeAI.ai?this.snakeAI.ai(this):null}},{key:"isAIStuck",value:function(e){return!(!this.snakeAI||!this.snakeAI.ai)&&this.stuckCounter>=this.maxLastMoves*e}},{key:"getAILevelText",value:function(){return this.snakeAI?this.snakeAI.aiLevelText:"???"}}]);var t,n}(),rL=function(){return l()(function e(t){r()(this,e),this.games=null==t?[]:t,this.reactor=new d,this.reactor.registerEvent("onStart"),this.reactor.registerEvent("onPause"),this.reactor.registerEvent("onContinue"),this.reactor.registerEvent("onStop"),this.reactor.registerEvent("onReset"),this.reactor.registerEvent("onExit"),this.reactor.registerEvent("onScoreIncreased"),this.init()},[{key:"init",value:function(){for(var e=this,t=0;t<this.games.length;t++)0==t&&(this.games[t].enableKeyMenu=!0),this.games[t].onPause(function(t){e.pauseAll(t)}.bind(null,t)),this.games[t].onContinue(function(t){e.startAll(t)}.bind(null,t)),this.games[t].onExit(function(t){e.checkExit(t)}.bind(null,t)),this.games[t].onStop(function(t){e.checkStop(t)}.bind(null,t)),this.games[t].onReset(function(t){e.resetAll(t)}.bind(null,t)),this.games[t].onScoreIncreased(function(t){e.checkOnScoreIncreased(t)}.bind(null,t))}},{key:"start",value:function(){this.startAll(null)}},{key:"startAll",value:function(e){for(var t=0;t<this.games.length;t++)!this.games[t].paused||this.games[t].starting||null!=e&&t==e||this.games[t].start();this.reactor.dispatchEvent("onStart")}},{key:"onStart",value:function(e){this.reactor.addEventListener("onStart",e)}},{key:"pauseAll",value:function(e){for(var t=0;t<this.games.length;t++)this.games[t].paused||null!=e&&t==e||this.games[t].pause();this.reactor.dispatchEvent("onPause")}},{key:"onPause",value:function(e){this.reactor.addEventListener("onPause",e)}},{key:"resetAll",value:function(e){for(var t=0;t<this.games.length;t++)this.games[t].isReseted||null!=e&&t==e||this.games[t].reset();this.reactor.dispatchEvent("onReset")}},{key:"onReset",value:function(e){this.reactor.addEventListener("onReset",e)}},{key:"checkExit",value:function(e){for(var t=!0,n=0;n<this.games.length;n++)this.games[n].exited||(t=!1);t?this.reactor.dispatchEvent("onExit"):this.startAll(e)}},{key:"onExit",value:function(e){this.reactor.addEventListener("onExit",e)}},{key:"checkStop",value:function(){for(var e=!0,t=0;t<this.games.length;t++)this.games[t].gameOver||(e=!1);e&&this.reactor.dispatchEvent("onStop")}},{key:"onStop",value:function(e){this.reactor.addEventListener("onStop",e)}},{key:"stopAll",value:function(e){for(var t=0;t<this.games.length;t++)e?this.games[t].finish(!0):this.games[t].stop()}},{key:"killAll",value:function(){for(var e=0;e<this.games.length;e++)this.games[e].kill()}},{key:"checkOnScoreIncreased",value:function(){this.reactor.dispatchEvent("onScoreIncreased")}},{key:"onScoreIncreased",value:function(e){this.reactor.addEventListener("onScoreIncreased",e)}},{key:"setDisplayFPS",value:function(e){for(var t=0;t<this.games.length;t++)this.games[t].setDisplayFPS(e)}},{key:"setNotification",value:function(e){for(var t=0;t<this.games.length;t++)this.games[t].setNotification(e.copy())}},{key:"closeNotification",value:function(){for(var e=0;e<this.games.length;e++)this.games[e].setNotification(null)}},{key:"errorOccurred",value:function(){for(var e=0;e<this.games.length;e++)if(this.games[e].errorOccurred)return!0;return!1}},{key:"closeRanking",value:function(){for(var e=0;e<this.games.length;e++)this.games[e].closeRanking();return!1}},{key:"destroySnakes",value:function(e,t){for(var n=0;n<this.games.length;n++)if(this.games[n].destroySnakes(e,t),e&&Array.isArray(e))for(var a=0;a<e.length;a++)e[a]-=1}},{key:"getWinners",value:function(){for(var e=[],t=[],n=-1,a=0;a<this.games.length;a++)for(var s=0;s<this.games[a].snakes.length;s++)this.games[a].snakes[s].score>n&&(n=this.games[a].snakes[s].score);if(n>=0)for(var i=0,r=0;r<this.games.length;r++)for(var o=0;o<this.games[r].snakes.length;o++)this.games[r].snakes[o].score>=n&&(e.push(this.games[r].snakes[o]),t.push(i)),i++;return{winners:e,score:n,index:t}}}])}();function oL(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return lL(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?lL(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var a=0,s=function(){};return{s,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,r=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return r=e.done,e},e:function(e){o=!0,i=e},f:function(){try{r||null==n.return||n.return()}finally{if(o)throw i}}}}function lL(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=Array(t);n<t;n++)a[n]=e[n];return a}var pL=function(){return l()(function e(t,n,a,s,i,o,l,p){r()(this,e),this.grid=t,this.snakes=n,this.speed=null==a?8:a,this.initialSpeed=null==a?8:a,this.initialSpeedUntouched=null==a?8:a,this.enablePause=null==s||s,this.enableRetry=null==i||i,this.progressiveSpeed=null!=o&&o,this.aiStuckLimit=null==l?3:l,this.disableStuckAIDetection=null!=p&&p,this.countBeforePlay=3,this.lastKey=-1,this.numFruit=1,this.ticks=0,this.isInit=!1,this.engineLoading=!0,this.firstStart=!0,this.starting=!1,this.paused=!0,this.exited=!1,this.killed=!1,this.isReseted=!0,this.gameOver=!1,this.gameFinished=!1,this.gameMazeWin=!1,this.scoreMax=!1,this.errorOccurred=!1,this.clientSidePredictionsMode=!1,this.aiStuck=!1,this.intervalPlay,this.reactor=new d,this.reactor.registerEvent("onStart"),this.reactor.registerEvent("onPause"),this.reactor.registerEvent("onContinue"),this.reactor.registerEvent("onReset"),this.reactor.registerEvent("onStop"),this.reactor.registerEvent("onExit"),this.reactor.registerEvent("onKill"),this.reactor.registerEvent("onScoreIncreased"),this.reactor.registerEvent("onUpdate"),this.reactor.registerEvent("onUpdateCounter")},[{key:"init",value:(n=x()(k().mark(function e(){var t,n,a,s;return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.clientSidePredictionsMode){e.next=4;break}if(this.engineLoading=!0,null==this.snakes?(this.errorOccurred=!0,this.snakes=[]):Array.isArray(this.snakes)?(Array.isArray(this.snakes)&&this.snakes.length<=0||this.grid.maze&&this.snakes.length>1)&&(this.errorOccurred=!0):this.snakes=[this.snakes],this.grid instanceof b!=0){e.next=1;break}this.errorOccurred=!0,e.next=3;break;case 1:if(this.errorOccurred){e.next=3;break}return e.next=2,this.initGridAndSnakes();case 2:t=u.randRange(0,360,this.grid?new(m())(this.grid.seedGame):null),n=oL(this.snakes);try{for(n.s();!(a=n.n()).done;)(s=a.value)instanceof iL==0?this.errorOccurred=!0:(t=u.addHue(t,Math.round(360/this.snakes.length)),s.color=t)}catch(e){n.e(e)}finally{n.f()}case 3:this.engineLoading=!1;case 4:this.isInit=!0;case 5:case"end":return e.stop()}},e,this)})),function(){return n.apply(this,arguments)})},{key:"initGridAndSnakes",value:(t=x()(k().mark(function e(){var t,n,a,s,i,r;return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.grid.reset(),this.grid.init(),null==this.snakes){e.next=7;break}t=oL(this.snakes);try{for(t.s();!(n=t.n()).done;)n.value.reset()}catch(e){t.e(e)}finally{t.f()}a=oL(this.snakes),e.prev=1,a.s();case 2:if((s=a.n()).done){e.next=4;break}return i=s.value,e.next=3,i.init();case 3:e.next=2;break;case 4:e.next=6;break;case 5:e.prev=5,r=e.catch(1),a.e(r);case 6:return e.prev=6,a.f(),e.finish(6);case 7:this.grid.setFruit(this.snakes.length);case 8:case"end":return e.stop()}},e,this,[[1,5,6,7]])})),function(){return t.apply(this,arguments)})},{key:"reset",value:(e=x()(k().mark(function e(){return k().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.paused=!0,this.isReseted=!0,this.exited=!1,this.clearIntervalPlay(),this.numFruit=1,this.ticks=0,this.lastKey=-1,this.scoreMax=!1,this.errorOccurred=!1,this.gameOver=!1,this.gameFinished=!1,this.gameMazeWin=!1,this.starting=!1,this.initialSpeed=this.initialSpeedUntouched,this.speed=this.initialSpeedUntouched,this.aiStuck=!1,this.grid.seedGrid&&(this.grid.seedGrid=""+(parseInt(this.grid.seedGrid)+1)),this.grid.seedGame&&(this.grid.seedGame=""+(parseInt(this.grid.seedGame)+1)),e.next=1,this.initGridAndSnakes();case 1:this.reactor.dispatchEvent("onReset"),this.start();case 2:case"end":return e.stop()}},e,this)})),function(){return e.apply(this,arguments)})},{key:"start",value:function(){var e=this;if(this.reactor.dispatchEvent("onUpdateCounter"),!this.errorOccurred){if(null!=this.snakes){var t,n=oL(this.snakes);try{for(n.s();!(t=n.n()).done;)t.value.errorInit&&(this.errorOccurred=!0,this.stop())}catch(e){n.e(e)}finally{n.f()}}!this.paused||this.gameOver||this.killed||this.scoreMax||this.starting||(this.starting=!0,this.firstStart||this.reactor.dispatchEvent("onContinue"),this.countBeforePlay=3,this.clearIntervalPlay(),this.reactor.dispatchEvent("onUpdateCounter"),this.intervalPlay=setInterval(function(){e.countBeforePlay--,e.reactor.dispatchEvent("onUpdateCounter"),e.countBeforePlay<0&&e.forceStart()},1e3))}}},{key:"forceStart",value:function(){this.clearIntervalPlay(),this.countBeforePlay=-1,this.paused=!1,this.isReseted=!1,this.firstStart=!1,this.starting=!1,this.reactor.dispatchEvent("onStart"),this.tick()}},{key:"clearIntervalPlay",value:function(){clearInterval(this.intervalPlay)}},{key:"continue",value:function(){this.clientSidePredictionsMode||(this.start(),this.reactor.dispatchEvent("onContinue"))}},{key:"stop",value:function(e){this.gameOver||this.clientSidePredictionsMode||(this.paused=!0,this.gameOver=!0,e&&(this.gameFinished=!0),this.clearIntervalPlay(),this.reactor.dispatchEvent("onStop"))}},{key:"pause",value:function(){this.paused||this.clientSidePredictionsMode||(this.paused=!0,this.clearIntervalPlay(),this.reactor.dispatchEvent("onPause"))}},{key:"kill",value:function(){if(!this.killed){if(this.paused=!0,this.gameOver=!0,this.killed=!0,null!=this.snakes){var e,t=oL(this.snakes);try{for(t.s();!(e=t.n()).done;)e.value.kill()}catch(e){t.e(e)}finally{t.f()}this.snakes=[]}this.clearIntervalPlay(),this.grid=null,this.snakes=null,this.reactor.dispatchEvent("onKill")}}},{key:"exit",value:function(){this.exited||(this.stop(),this.exited=!0,this.reactor.dispatchEvent("onExit"))}},{key:"destroySnakes",value:function(e,t){for(var n=0;n<this.snakes.length;n++)e&&Array.isArray(e)&&e.indexOf(n)<0&&t.indexOf(this.snakes[n].player)>-1&&this.snakes[n].setGameOver(this.ticks)}},{key:"getNBPlayer",value:function(e){var t=0;if(null!=this.snakes){var n,a=oL(this.snakes);try{for(a.s();!(n=a.n()).done;)n.value.player==e&&t++}catch(e){a.e(e)}finally{a.f()}}return t}},{key:"getPlayer",value:function(e,t){var n=0;if(null!=this.snakes){var a,s=oL(this.snakes);try{for(s.s();!(a=s.n()).done;){var i=a.value;if(i.player==t&&n++,n==e)return i}}catch(e){s.e(e)}finally{s.f()}}return null}},{key:"tick",value:function(){var e=this;setTimeout(function(){e.doTick()},this.initialSpeed*s.Setting.TIME_MULTIPLIER)}},{key:"shouldUpdateEngine",value:function(){var e,t=this.grid.maze,n=this.grid.mazeForceAuto,a=this.getNBPlayer(s.PlayerType.HUMAN)+this.getNBPlayer(s.PlayerType.HYBRID_HUMAN_AI),i=null===(e=this.getPlayer(1,s.PlayerType.HYBRID_HUMAN_AI)||this.getPlayer(1,s.PlayerType.HUMAN))||void 0===e?void 0:e.lastKey;return this.grid&&(!t||n||0===a||a>0&&-1!==i)}},{key:"doTick",value:function(){if(!this.paused&&!this.killed){if(this.shouldUpdateEngine()){var e,t=!1;this.ticks++;var n,a=oL(this.snakes);try{for(a.s();!(n=a.n()).done;){var s=n.value,i=s.direction;if(t=!1,s.lastTailMoved=!1,s.lastHeadMoved=!1,!s.gameOver&&!s.scoreMax){var r=this.moveSnake(s,i);if(r)if(this.grid.isDeadPosition(r))s.setGameOver(this.ticks);else{var o=this.handleSnakeMoveResult(r,s),l=o.scoreHasIncreased,p=o.setFruit;e=l,this.scoreMax||!p||this.clientSidePredictionsMode||(t=!this.grid.setFruit(this.snakes.length))}}}}catch(e){a.e(e)}finally{a.f()}t=this.handleStuckFruits(t),this.checkEndGameCondition(t),this.reactor.dispatchEvent("onUpdate"),e&&this.reactor.dispatchEvent("onScoreIncreased")}this.tick()}}},{key:"moveSnake",value:function(e,t){e.player==s.PlayerType.HUMAN||e.player==s.PlayerType.HYBRID_HUMAN_AI?(e.moveTo(e.lastKey),e.lastKey=-1):e.player==s.PlayerType.AI&&(!this.clientSidePredictionsMode||this.clientSidePredictionsMode&&e.aiLevel!=s.AiLevel.RANDOM)&&e.moveTo(e.ai());var n=e.getHeadPosition(),a=this.grid.isDeadPosition(e.getNextPosition(n,e.direction));return e.player==s.PlayerType.HYBRID_HUMAN_AI&&a&&(e.direction=t,e.moveTo(e.ai()),e.lastKey=-1),this.grid.maze&&e.player==s.PlayerType.HUMAN&&a?(e.direction=t,e.lastKey=-1,null):e.getNextPosition(n,e.direction)}},{key:"handleSnakeMoveResult",value:function(e,t){var n=this.grid.get(e);return n==s.CaseType.FRUIT||n==s.CaseType.FRUIT_GOLD?this.handleScoreIncrease(t,n,e):(t.insert(e),this.grid.maze||(t.remove(),t.lastTailMoved=!0,t.lastHeadMoved=!0),{goldFruit:!1,scoreHasIncreased:!1,setFruit:!1})}},{key:"handleScoreIncrease",value:function(e,t,n){var a=!1,i=!1;return t==s.CaseType.FRUIT?(e.increaseScore(1),this.grid.set(s.CaseType.EMPTY,this.grid.fruitPos),this.grid.fruitPos=null):t==s.CaseType.FRUIT_GOLD&&(e.increaseScore(3),i=!0,this.grid.set(s.CaseType.EMPTY,this.grid.fruitPosGold),this.grid.fruitPosGold=null),e.insert(n),this.grid.maze?(this.gameMazeWin=!0,this.gameFinished=!0,this.stop()):e.hasMaxScore()&&this.snakes.length<=1?(this.scoreMax=!0,e.scoreMax=!0,this.stop()):(this.numFruit++,i||(a=!0)),this.handleSpeedIncrease(e),{goldFruit:i,scoreHasIncreased:!0,setFruit:a}}},{key:"handleSpeedIncrease",value:function(e){this.snakes.length<=1&&this.progressiveSpeed&&e.score>0&&this.initialSpeed>1&&(this.initialSpeed=Math.ceil(-this.initialSpeedUntouched/100*e.score+this.initialSpeedUntouched),this.initialSpeed=this.initialSpeed<1?1:this.initialSpeed)}},{key:"handleStuckFruits",value:function(e){return this.scoreMax||e||!this.grid.detectCorridor(this.grid.fruitPos)&&!this.grid.isFruitSurrounded(this.grid.fruitPos,!0)||this.clientSidePredictionsMode||(e=!this.grid.setFruit(this.snakes.length)),this.scoreMax||null==this.grid.fruitPosGold||!this.grid.detectCorridor(this.grid.fruitPosGold)&&!this.grid.isFruitSurrounded(this.grid.fruitPosGold,!0)||(this.grid.set(s.CaseType.EMPTY,this.grid.fruitPosGold),this.grid.fruitPosGold=null),e}},{key:"checkSnakeAIStuckStatus",value:function(e){var t=!this.disableStuckAIDetection&&e.isAIStuck(this.aiStuckLimit/2);return{isPartiallyStuck:t,isFullyStuck:!this.disableStuckAIDetection&&t&&e.isAIStuck(this.aiStuckLimit),isHumanPlayer:(e.player===s.PlayerType.HUMAN||e.player===s.PlayerType.HYBRID_HUMAN_AI)&&!e.gameOver}}},{key:"checkEndGameCondition",value:function(e){var t,n=0,a=!0,s=!0,i=!1,r=oL(this.snakes);try{for(r.s();!(t=r.n()).done;){var o=t.value;if(o.gameOver||o.scoreMax)n++;else{var l=this.checkSnakeAIStuckStatus(o),p=l.isPartiallyStuck,d=l.isFullyStuck;l.isHumanPlayer&&(i=!0),p?d||(s=!1):(a=!1,s=!1)}}}catch(e){r.e(e)}finally{r.f()}var u=n>=this.snakes.length||e||s&&!i;this.aiStuck=a&&!i&&!u,u&&(this.stop(),this.snakes.length>1&&(this.gameFinished=!0))}},{key:"onReset",value:function(e){this.reactor.addEventListener("onReset",e)}},{key:"onStart",value:function(e){this.reactor.addEventListener("onStart",e)}},{key:"onContinue",value:function(e){this.reactor.addEventListener("onContinue",e)}},{key:"onStop",value:function(e){this.reactor.addEventListener("onStop",e)}},{key:"onPause",value:function(e){this.reactor.addEventListener("onPause",e)}},{key:"onExit",value:function(e){this.reactor.addEventListener("onExit",e)}},{key:"onKill",value:function(e){this.reactor.addEventListener("onKill",e)}},{key:"onScoreIncreased",value:function(e){this.reactor.addEventListener("onScoreIncreased",e)}},{key:"onUpdate",value:function(e){this.reactor.addEventListener("onUpdate",e)}},{key:"onUpdateCounter",value:function(e){this.reactor.addEventListener("onUpdateCounter",e)}}]);var e,t,n}()})(),__webpack_exports__})());