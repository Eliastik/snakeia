/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/locales/engine.js":
/*!**********************************!*\
  !*** ./assets/locales/engine.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var i18next = __webpack_require__(/*! ../../libs/i18next.min */ \"./libs/i18next.min.js\");\n}\n\n// French\ni18next.addResourceBundle(\"fr\", \"translation\", {\n  \"engine\": {\n    \"score\": \"Score\",\n    \"num\": \"n°\",\n    \"initFailed\": \"Échec de l'initialisation du jeu : le Snake est plus grand que la grille\",\n    \"continue\": \"Reprendre\",\n    \"reset\": \"Recommencer la partie\",\n    \"retryInit\": \"Réessayer\",\n    \"exit\": \"Quitter\",\n    \"yes\": \"Oui\",\n    \"no\": \"Non\",\n    \"ok\": \"OK\",\n    \"about\": \"À propos…\",\n    \"infosGame\": \"Infos partie\",\n    \"player\": \"Joueur :\",\n    \"playerHuman\": \"Vous\",\n    \"playerAI\": \"IA\",\n    \"aiLevel\": \"Niveau de l'IA :\",\n    \"aiLevelList\": {\n      \"random\": \"Au hasard\",\n      \"low\": \"Faible\",\n      \"normal\": \"Normal\",\n      \"high\": \"Élevé\",\n      \"ultra\": \"Ultra\"\n    },\n    \"sizeGrid\": \"Taille de la grille :\",\n    \"currentSpeed\": \"Vitesse actuelle :\",\n    \"progressiveSpeed\": \"Vitesse progressive\",\n    \"loading\": \"Chargement des ressources…\",\n    \"exited\": \"Cette partie a été définitivement quittée. En attente de la fin des autres parties…\",\n    \"error\": \"Une erreur est survenue !\",\n    \"errorLoading\": \"Une erreur est survenue lors du chargement des ressources. Vérifiez votre connexion Internet.\",\n    \"exitConfirm\": \"Êtes-vous sûr de vouloir quitter la partie ?\",\n    \"resetConfirm\": \"Êtes-vous sûr de vouloir recommencer la partie ?\",\n    \"scoreMax\": \"Score maximal atteint !\",\n    \"gameOver\": \"Game Over !\",\n    \"gameFinished\": \"Partie terminée !\",\n    \"pause\": \"Pause\",\n    \"playerMin\": \"J\",\n    \"aiMin\": \"IA\",\n    \"aboutScreen\": {\n      \"title\": \"SnakeIA par Eliastik\",\n      \"versionAndDate\": \"Version {{version}} ({{date, DD/MM/YYYY}})\"\n    },\n    \"debug\": {\n      \"fps\": \"IPS\",\n      \"frames\": \"Images\",\n      \"ticks\": \"Tours\",\n      \"speed\": \"Vit.\",\n      \"paused\": \"En pause\"\n    },\n    \"colors\": {\n      \"white\": \"Blanc\",\n      \"gray\": \"Gris\",\n      \"black\": \"Noir\",\n      \"red\": \"Rouge\",\n      \"brown\": \"Marron\",\n      \"orange\": \"Orange\",\n      \"yellow\": \"Jaune\",\n      \"green\": \"Vert\",\n      \"blue\": \"Bleu\",\n      \"purple\": \"Mauve\",\n      \"pink\": \"Rose\"\n    },\n    \"colorPlayer\": \"Vous êtes le Snake\\nen {{color}}\",\n    \"arrowPlayer\": \"Vous êtes le Snake\\nindiqué par la\\nflèche\",\n    \"ready\": \"Partez !\",\n    \"assistAI\": \"Assistant IA\",\n    \"exitFullScreen\": \"Quitter plein-écran\",\n    \"enterFullScreen\": \"Mode plein-écran\",\n    \"mazeMode\": \"Mode labyrinthe ! Trouvez le chemin vers la pomme pour réussir la partie.\\nLe Snake n'avance pas automatiquement.\",\n    \"mazeWin\": \"Bien joué !\",\n    \"mazeModeMin\": \"Mode labyrinthe\",\n    \"servers\": {\n      \"errorConnection\": \"Une erreur est survenue lors de la connexion au serveur.\",\n      \"waitingPlayers\": \"En attente de joueurs…\",\n      \"gameStart\": \"Début de la partie\\ndans\",\n      \"spectatorMode\": \"Mode spectateur\"\n    }\n  }\n}, true, false);\n\n// English\ni18next.addResourceBundle(\"en\", \"translation\", {\n  \"engine\": {\n    \"score\": \"Score\",\n    \"num\": \"n°\",\n    \"initFailed\": \"Game init failed: the Snake is bigger than the grid\",\n    \"continue\": \"Continue\",\n    \"reset\": \"Reset the game\",\n    \"retryInit\": \"Retry\",\n    \"exit\": \"Exit\",\n    \"yes\": \"Yes\",\n    \"no\": \"No\",\n    \"ok\": \"OK\",\n    \"about\": \"About…\",\n    \"infosGame\": \"Current game infos\",\n    \"player\": \"Player:\",\n    \"playerHuman\": \"You\",\n    \"playerAI\": \"AI\",\n    \"aiLevel\": \"AI level:\",\n    \"aiLevelList\": {\n      \"random\": \"Random\",\n      \"low\": \"Low\",\n      \"normal\": \"Normal\",\n      \"high\": \"High\",\n      \"ultra\": \"Ultra\"\n    },\n    \"sizeGrid\": \"Grid size:\",\n    \"currentSpeed\": \"Current speed:\",\n    \"progressiveSpeed\": \"Progressive speed\",\n    \"loading\": \"Loading resources…\",\n    \"exited\": \"This game has been definitively exited. Waiting for the end of the other games…\",\n    \"error\": \"An error has occurred!\",\n    \"errorLoading\": \"An error occurred while loading resources. Check your Internet connection.\",\n    \"exitConfirm\": \"Are you sure that you want to exit the game?\",\n    \"resetConfirm\": \"Are you sure that you want to reset the game?\",\n    \"scoreMax\": \"Maximum score reached!\",\n    \"gameFinished\": \"Game finished!\",\n    \"gameOver\": \"Game Over!\",\n    \"pause\": \"Pause\",\n    \"playerMin\": \"P\",\n    \"aiMin\": \"AI\",\n    \"aboutScreen\": {\n      \"title\": \"SnakeIA by Eliastik\",\n      \"versionAndDate\": \"Version {{version}} ({{date, MM/DD/YYYY}})\"\n    },\n    \"debug\": {\n      \"fps\": \"FPS\",\n      \"frames\": \"Frames\",\n      \"ticks\": \"Ticks\",\n      \"speed\": \"Speed\",\n      \"paused\": \"Paused\"\n    },\n    \"colors\": {\n      \"white\": \"White\",\n      \"gray\": \"Gray\",\n      \"black\": \"Black\",\n      \"red\": \"Red\",\n      \"brown\": \"Brown\",\n      \"orange\": \"Orange\",\n      \"yellow\": \"Yellow\",\n      \"green\": \"Green\",\n      \"blue\": \"Blue\",\n      \"purple\": \"Purple\",\n      \"pink\": \"Pink\"\n    },\n    \"colorPlayer\": \"You are the Snake\\nin {{color}}\",\n    \"arrowPlayer\": \"You are the Snake\\npointed by the\\narrow\",\n    \"ready\": \"Go!\",\n    \"assistAI\": \"AI assistant\",\n    \"exitFullScreen\": \"Exit fullscreen\",\n    \"enterFullScreen\": \"Fullscreen mode\",\n    \"mazeMode\": \"Maze mode! Find the path to the apple to finish this game.\\nThe Snake doesn't move automatically.\",\n    \"mazeWin\": \"Good game!\",\n    \"mazeModeMin\": \"Maze mode\",\n    \"servers\": {\n      \"errorConnection\": \"An error has occurred when connecting to the server.\",\n      \"waitingPlayers\": \"Waiting for players…\",\n      \"gameStart\": \"Start of the game\\nin\",\n      \"spectatorMode\": \"Spectator mode\"\n    }\n  }\n}, true, false);\n\n//# sourceURL=webpack:///./assets/locales/engine.js?");

/***/ }),

/***/ "./assets/locales/init.js":
/*!********************************!*\
  !*** ./assets/locales/init.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var i18next = __webpack_require__(/*! ../../libs/i18next.min */ \"./libs/i18next.min.js\");\n  var i18nextBrowserLanguageDetector = __webpack_require__(/*! ../../libs/i18nextBrowserLanguageDetector.min */ \"./libs/i18nextBrowserLanguageDetector.min.js\");\n}\n\ni18next.use(i18nextBrowserLanguageDetector).init({\n  fallbackLng: ['en', 'fr'],\n  load: 'languageOnly',\n  detection: {\n    order: ['localStorage', 'querystring', 'navigator', 'htmlTag'],\n    lookupQuerystring: 'lng',\n    lookupLocalStorage: 'i18nextLng',\n    caches: ['localStorage'],\n  },\n});\n\n\n//# sourceURL=webpack:///./assets/locales/init.js?");

/***/ }),

/***/ "./assets/locales/menu.js":
/*!********************************!*\
  !*** ./assets/locales/menu.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var i18next = __webpack_require__(/*! ../../libs/i18next.min */ \"./libs/i18next.min.js\");\n}\n\n// French\ni18next.addResourceBundle(\"fr\", \"translation\", {\n  \"debugModeEnabled\": \"Mode de debug activé\",\n  \"lang\": {\n    \"fr\": \"Français\",\n    \"en\": \"English\"\n  },\n  \"update\": {\n    \"updateAvailable\": \"Une mise à jour du jeu est disponible\",\n    \"version\": \"Version\",\n    \"of\": \"du\",\n    \"current\": \"Vous disposez actuellement de la version\",\n    \"versionDate\": \"{{date, DD/MM/YYYY}}\",\n    \"download\": \"Télécharger la mise à jour\",\n    \"getURL\": \"Obtenir l'adresse URL du téléchargement\",\n    \"getChanges\": \"Obtenir la liste des changements\",\n    \"URLToDownload\": \"Adresse URL menant au téléchargement :\",\n    \"noChanges\": \"Aucun changement renseigné.\",\n    \"changes\": \"Changements de la nouvelle version :\"\n  },\n  \"menu\": {\n    \"selectGame\": \"Sélectionnez un mode de jeu :\",\n    \"soloAi\": \"IA solo\",\n    \"soloPlayer\": \"Joueur solo\",\n    \"playerVsAi\": \"Joueur VS IA\",\n    \"aiVsAi\": \"IA VS IA\",\n    \"battleRoyale\": \"Battle Royale\",\n    \"onlineBattleRoyale\": \"Battle Royale en ligne\",\n    \"levelsSoloPlayer\": \"Niveaux (joueur solo)\",\n    \"levelsSoloAI\": \"Niveaux (IA solo)\",\n    \"version\": \"Version\",\n    \"versionDate\": \"{{date, DD/MM/YYYY}}\",\n    \"by\": \"Par\",\n    \"infos\": \"Plus d'infos\",\n    \"readme\": \"Fichier Lisez-moi\",\n    \"source\": \"Télécharger la source\",\n    \"language\": \"Langue :\",\n    \"enableAnimations\": \"Activer les animations\"\n  },\n  \"settings\": {\n    \"title\": \"Paramètres de la partie :\",\n    \"possibleFailInitGame\": \"Il est possible que l'initialisation de la partie échoue avec vos paramètres car il n'y aura pas assez d'espace pour placer tous les Snake. Dans ce cas, un message « Une erreur est survenue » peut s'afficher. Essayez avec d'autres paramètres.\",\n    \"gridSize\": \"Taille de la grille :\",\n    \"placeholderHeight\": \"Hauteur\",\n    \"placeholderWidth\": \"Largeur\",\n    \"invalidHeight\": \"Cette valeur doit être comprise entre 5 et 100\",\n    \"invalidWidth\": \"Cette valeur doit être comprise entre 5 et 100\",\n    \"options\": \"Autres options :\",\n    \"borderWalls\": \"Entourer la grille de murs\",\n    \"generateWalls\": \"Générer des murs à des positions aléatoires\",\n    \"mazeGrid\": \"Générer un labyrinthe\",\n    \"sameGrid\": \"Partie sur la même grille\",\n    \"speed\": \"Vitesse du jeu :\",\n    \"speedSelect\": {\n      \"1\": \"1 – La plus rapide\",\n      \"3\": \"3 – Rapide\",\n      \"5\": \"5 – Moyenne\",\n      \"8\": \"8 – Normale\",\n      \"10\": \"10 – Assez lente\",\n      \"15\": \"15 – Lente\",\n      \"20\": \"20 – Très lente\",\n      \"25\": \"25 – Extrêmement lente\",\n      \"custom\": \"Vitesse personnalisée…\"\n    },\n    \"invalidSpeed\": \"Cette valeur doit être comprise entre 1 et 100\",\n    \"progressiveSpeed\": \"Augmenter la vitesse progressivement\",\n    \"customSpeed\": \"Vitesse personnalisée :\",\n    \"placeholderCustomSpeed\": \"Entrez la vitesse…\",\n    \"invalidCustomSpeed\": \"Cette valeur doit être comprise entre 1 et 100\",\n    \"customSpeedHelp\": \"Plus le nombre est élevé, plus la vitesse du jeu est lente, et inversement\",\n    \"playerSettings\": \"Options du joueur :\",\n    \"aiAssistant\": \"Activer l'assistant IA\",\n    \"aiAssistantInfos\": \"En activant cette option, une IA tentera de corriger votre trajectoire si vous êtes sur le point de vous écraser sur un obstacle. Réduit la difficulté du jeu.\",\n    \"aiLevel\": \"Niveau de l'IA :\",\n    \"aiLevelSelect\": {\n      \"random\": \"Au hasard\",\n      \"low\": \"Faible\",\n      \"normal\": \"Normal\",\n      \"high\": \"Élevé\",\n      \"ultra\": \"Ultra\"\n    },\n    \"invalidaiLevel\": \"Cette valeur est invalide\",\n    \"autoRetry\": \"Faire que l'IA recommence auto sa partie après un Game Over\",\n    \"numberIA\": \"Nombre d'IA :\",\n    \"placeholderNumberIA\": \"Entrez le nombre…\",\n    \"invalidIANumber\": \"Cette valeur doit être comprise entre 2 et 100\",\n    \"battleAgainstAIs\": \"Jouer contre les IA\",\n    \"validate\": \"Valider\",\n    \"reset\": \"Réinitialiser\",\n    \"backToMenu\": \"Retour au menu\",\n    \"privateGame\": \"Garder la partie privée\"\n  },\n  \"game\": {\n    \"backToMenu\": \"Retour au menu\",\n    \"currentMode\": \"Mode de jeu actuel :\",\n    \"confirmQuit\": \"Êtes-vous sûr de vouloir retourner au menu ?\",\n    \"equalityPlayerVSAI\": \"Vous avez fini ex-aequo avec l'IA !\",\n    \"winPlayerVSAI\": \"Bravo, vous avez gagné !\",\n    \"losePlayerVSAI\": \"Dommage, l'IA vous a battu avec un score supérieur !\",\n    \"oneWinnerAIVSAI\": \"L'IA n°{{numWinner}} a gagné !\",\n    \"equalityAIVSAI\": \"Les deux IA ont fini ex-aequo !\",\n    \"oneWinnerBattleRoyale\": \"L'IA n°{{numWinner}} a gagné avec un score de {{score}} !\",\n    \"winnersBattleRoyale\": \"Les IA\",\n    \"winnerAIBattleRoyale\": \"L'IA\",\n    \"winnersNumBattleRoyale\": \"n°{{numWinner}}\",\n    \"andWinnersBattleRoyale\": \"et\",\n    \"andPlayerWinnersBattleRoyale\": \"ainsi que vous\",\n    \"winScoreBattleRoyale\": \"ont gagné avec un score de {{score}} !\",\n    \"winPlayerScoreBattleRoyale\": \"avez gagné avec un score de {{score}} !\",\n    \"playerWinnerBattleRoyale\": \"Vous avez gagné avec un score de {{score}} !\"\n  },\n  \"levels\": {\n    \"default\": \"Niveaux par défaut\",\n    \"downloaded\": \"Niveaux téléchargés\",\n    \"titlePlayer\": \"Niveaux (joueur solo)\",\n    \"titleAI\": \"Niveaux (IA solo)\",\n    \"emptyList\": \"Aucun niveau trouvé…\",\n    \"download\": \"Télécharger des niveaux\",\n    \"downloadLink\": \"Les niveaux seront téléchargés depuis {{url}}\",\n    \"editDownloadURL\": \"Modifier l'URL de téléchargement\",\n    \"editDownloadURLPrompt\": \"Entrez l'URL de téléchargement des niveaux.\\n* Variables disponibles :\\n{player} - type de joueur (humain, IA)\\n{appVersion} - version de l'application.\\n\\nLa modification de ce paramètre peut faire planter le jeu ou vous exposer à des problèmes de sécurité. Ne la modifiez que si vous savez ce que vous faites. Ce paramètre n'est pas persistant et sera effacé si vous rechargez l'application.\",\n    \"downloading\": \"Téléchargement en cours, veuillez patienter… Si le bouton reste grisé après plus de 10 secondes, cliquez sur le bouton ci-dessous pour le débloquer et réessayer le téléchargement :\",\n    \"buttonDeblock\": \"Débloquer le téléchargement\",\n    \"disabledLevel\": \"Niveau bloqué. Terminez les niveaux précédents pour le débloquer.\",\n    \"notCompatible\": \"Ce niveau n'est pas compatible avec cette version du jeu. Mettez-le à jour.\",\n    \"goalAchieved\": \"Objectif atteint ! Vous pouvez passer au prochain niveau.\",\n    \"goalNotAchieved\": \"Objectif raté ! Essayez à nouveau.\",\n    \"level\": \"Niveau\",\n    \"reachScore\": \"Atteignez au moins le score de {{value}} pour passer ce niveau !\",\n    \"reachScoreTime\": \"Atteignez le score de {{value}} en moins de {{count}} seconde !\",\n    \"reachScoreTime_plural\": \"Atteignez le score de {{value}} en moins de {{count}} secondes !\",\n    \"reachMaxScore\": \"Atteignez le score maximal pour cette grille pour passer ce niveau !\",\n    \"multiBestScore\": \"Terminez cette partie en obtenant un meilleur score que l'adversaire pour passer ce niveau !\",\n    \"multiBestScore_plural\": \"Terminez cette partie en obtenant un meilleur score que les adversaires pour passer ce niveau !\",\n    \"multiReachScoreFirst\": \"Atteignez le score de {{value}} avant l'adversaire pour passer ce niveau !\",\n    \"multiReachScoreFirst_plural\": \"Atteignez le score de {{value}} avant les adversaires pour passer ce niveau !\",\n    \"mazeMode\": \"Mode labyrinthe ! Trouvez le chemin vers la pomme pour passer ce niveau.\\nLe Snake n'avance pas automatiquement.\",\n    \"bestScore\": \"Meilleur score : {{count}}\",\n    \"bestTime\": \"Meilleur temps : {{count}} seconde\",\n    \"bestTime_plural\": \"Meilleur temps : {{count}} secondes\",\n    \"bestScoreShort\": \"× {{count}}\",\n    \"bestTimeShort\": \"{{count}} seconde\",\n    \"bestTimeShort_plural\": \"{{count}} secondes\",\n    \"timerRemaining\": \"Il reste {{count}} seconde\",\n    \"timerRemaining_plural\": \"Il reste {{count}} secondes\",\n    \"localstorageDisabled\": \"Les cookies sont désactivés sur votre navigateur. Vous perdrez votre progression au prochain rechargement de la page. Activez-les puis rechargez la page pour éviter cela.\",\n    \"difficulty\": \"Difficulté :\"\n  },\n  \"servers\": {\n    \"serverList\": \"Liste des serveurs\",\n    \"selectInfo\": \"Sélectionnez un serveur :\",\n    \"noServerFound\": \"Aucun serveur trouvé…\",\n    \"loadingList\": \"Chargement de la liste des serveurs… Veuillez patienter.\",\n    \"noRoomound\": \"Aucune salle trouvée…\",\n    \"infos\": \"{{width}}×{{height}} – Vitesse : {{speed}}\",\n    \"infosBorderWalls\": \"Grille entourée de murs\",\n    \"infosGenerateWalls\": \"Murs générés aléatoirement\",\n    \"infosPlayers\": \"{{count}} joueur/{{max}}\",\n    \"infosPlayers_plural\": \"{{count}} joueurs/{{max}}\",\n    \"infosSpectators\": \"{{count}} spectateur\",\n    \"infosSpectators_plural\": \"{{count}} spectateurs\",\n    \"backToList\": \"Retour à la liste des serveurs\",\n    \"roomsListTitle\": \"Liste des salles\",\n    \"roomsListInfos\": \"Sélectionnez une salle :\",\n    \"loadingRooms\": \"Chargement de la liste des salles… Veuillez patienter.\",\n    \"createRoom\": \"Créer une salle\",\n    \"connectionError\": \"Une erreur est survenue lors de la connexion au serveur. Veuillez réessayer.\",\n    \"errorLoadingRooms\": \"Une erreur est survenue lors du chargement de la liste des salles. Veuillez réessayer.\",\n    \"creatingRoom\": \"Création de la salle… Veuillez patienter.\",\n    \"room\": \"Salle n°{{number}}\",\n    \"errorRoomCreation\": \"Une erreur est survenue lors de la création de la salle. Veuillez réessayer.\",\n    \"joinPrivateRoom\": \"Rejoindre une salle privée\",\n    \"enterCode\": \"Entrez le code de la salle :\",\n    \"customServer\": \"Serveur personnalisé…\",\n    \"enterCustomServer\": \"Entrez l'adresse du serveur :\",\n    \"connectingToServer\": \"Connexion au serveur… Veuillez patienter.\",\n    \"cancel\": \"Annuler\",\n    \"refreshRooms\": \"Actualiser la liste\",\n    \"joinRoom\": \"Connexion à la salle… Veuillez patienter.\",\n    \"errorRoomJoin\": \"Une erreur est survenue lors de la connexion à la salle. Veuillez réessayer.\",\n    \"errorReason\": \"Raison de l'erreur :\",\n    \"errorReason_unknown\": \"Inconnue\",\n    \"errorRoomJoinReason_roomNotFound\": \"La salle n'a pas été trouvée.\",\n    \"errorRoomJoinReason_roomAlreadyJoined\": \"Vous avez déjà rejoint cette salle.\",\n    \"errorRoomCreationReason_maxRoomLimitReached\": \"Le nombre maximal de salles que le serveur peut gérer a été atteint.\",\n    \"errorRoomCreationReason_invalidSettings\": \"Paramètres invalides.\",\n    \"errorServerVersion\": \"La version de ce serveur ({{server_version}}) est différente de votre version du jeu ({{client_version}}). Vous risquez de rencontrer des problèmes.\",\n    \"addressLabel\": \"Adresse du serveur :\",\n    \"roomCode\": \"Code de la salle :\",\n    \"untitled\": \"Sans titre\",\n    \"searchingPlayers\": \"(recherche de joueurs)\",\n    \"started\": \"(partie démarrée)\",\n    \"starting\": \"(démarrage en cours)\"\n  }\n}, true, false);\n\n// English\ni18next.addResourceBundle(\"en\", \"translation\", {\n  \"debugModeEnabled\": \"Debug mode enabled\",\n  \"lang\": {\n    \"fr\": \"Français\",\n    \"en\": \"English\"\n  },\n  \"update\": {\n    \"updateAvailable\": \"An update of the game is available\",\n    \"version\": \"Version\",\n    \"of\": \"of\",\n    \"current\": \"You currently have the version\",\n    \"versionDate\": \"{{date, MM/DD/YYYY}}\",\n    \"download\": \"Download the update\",\n    \"getURL\": \"Get the URL of the download\",\n    \"getChanges\": \"Get the list of changes\",\n    \"URLToDownload\": \"Download URL:\",\n    \"noChanges\": \"No change filled.\",\n    \"changes\": \"Changes in the new version:\"\n  },\n  \"menu\": {\n    \"selectGame\": \"Select a game mode:\",\n    \"soloAi\": \"Single AI\",\n    \"soloPlayer\": \"Single player\",\n    \"playerVsAi\": \"Player VS AI\",\n    \"aiVsAi\": \"AI VS AI\",\n    \"battleRoyale\": \"Battle Royale\",\n    \"onlineBattleRoyale\": \"Online Battle Royale\",\n    \"levelsSoloPlayer\": \"Levels (single player)\",\n    \"levelsSoloAI\": \"Levels (single AI)\",\n    \"version\": \"Version\",\n    \"versionDate\": \"{{date, MM/DD/YYYY}}\",\n    \"by\": \"By\",\n    \"infos\": \"More informations\",\n    \"readme\": \"Readme file\",\n    \"source\": \"Download the source\",\n    \"language\": \"Language:\",\n    \"enableAnimations\": \"Enable the animations\"\n  },\n  \"settings\": {\n    \"title\": \"Game settings:\",\n    \"possibleFailInitGame\": \"It's possible that the initialization of the game fails with your settings because there will not be enough space to place all Snake. In this case, a message \\\"An error has occurred\\\" may be displayed. Try with other settings.\",\n    \"gridSize\": \"Grid size:\",\n    \"placeholderHeight\": \"Height\",\n    \"placeholderWidth\": \"Width\",\n    \"invalidHeight\": \"This value must be between 5 and 100\",\n    \"invalidWidth\": \"This value must be between 5 and 100\",\n    \"options\": \"Others options:\",\n    \"borderWalls\": \"Surround the grid with walls\",\n    \"generateWalls\": \"Generate walls at random positions\",\n    \"mazeGrid\": \"Generate a maze\",\n    \"sameGrid\": \"Game on the same grid\",\n    \"speed\": \"Speed:\",\n    \"speedSelect\": {\n      \"1\": \"1 – Fastest\",\n      \"3\": \"3 – Fast\",\n      \"5\": \"5 – Medium\",\n      \"8\": \"8 – Normal\",\n      \"10\": \"10 – Quite slow\",\n      \"15\": \"15 – Slow\",\n      \"20\": \"20 – Very slow\",\n      \"25\": \"25 – Extremely slow\",\n      \"custom\": \"Custom speed…\"\n    },\n    \"invalidSpeed\": \"This value must be between 1 and 100\",\n    \"progressiveSpeed\": \"Increase the speed progressively\",\n    \"customSpeed\": \"Custom speed:\",\n    \"placeholderCustomSpeed\": \"Enter the speed…\",\n    \"invalidCustomSpeed\": \"This value must be between 1 and 100\",\n    \"customSpeedHelp\": \"The higher the number, the slower the game speed, and inversely\",\n    \"playerSettings\": \"Player options:\",\n    \"aiAssistant\": \"Enable the AI assistant\",\n    \"aiAssistantInfos\": \"By enabling this option, an AI ​​will try to correct your trajectory if you are about to crash into an obstacle. Reduces the difficulty of the game.\",\n    \"aiLevel\": \"AI level:\",\n    \"aiLevelSelect\": {\n      \"random\": \"Random\",\n      \"low\": \"Low\",\n      \"normal\": \"Normal\",\n      \"high\": \"High\",\n      \"ultra\": \"Ultra\"\n    },\n    \"invalidaiLevel\": \"This value is invalid\",\n    \"autoRetry\": \"Make the AI restart its game after a Game Over\",\n    \"numberIA\": \"Number of AI:\",\n    \"placeholderNumberIA\": \"Enter the number…\",\n    \"invalidIANumber\": \"This value must be between 2 and 100\",\n    \"battleAgainstAIs\": \"Play against AIs\",\n    \"validate\": \"Validate\",\n    \"reset\": \"Reset\",\n    \"backToMenu\": \"Back to the menu\",\n    \"privateGame\": \"Keep the game private\"\n  },\n  \"game\": {\n    \"backToMenu\": \"Back to the menu\",\n    \"currentMode\": \"Current game mode:\",\n    \"confirmQuit\": \"Are you sure that you want to go back to the menu?\",\n    \"equalityPlayerVSAI\": \"You finished tied with AI!\",\n    \"winPlayerVSAI\": \"Congratulations, you won!\",\n    \"losePlayerVSAI\": \"Too bad, the AI ​​beat you with a higher score!\",\n    \"oneWinnerAIVSAI\": \"The AI n°{{numWinner}} won!\",\n    \"equalityAIVSAI\": \"The two AIs finished tied!\",\n    \"oneWinnerBattleRoyale\": \"The AI n°{{numWinner}} won with a score of {{score}}!\",\n    \"winnersBattleRoyale\": \"The AIs\",\n    \"winnerAIBattleRoyale\": \"The AI\",\n    \"winnersNumBattleRoyale\": \"n°{{numWinner}}\",\n    \"andWinnersBattleRoyale\": \"and\",\n    \"andPlayerWinnersBattleRoyale\": \"as well as you\",\n    \"winScoreBattleRoyale\": \"won with a score of {{score}}!\",\n    \"winPlayerScoreBattleRoyale\": \"won with a score of {{score}}!\",\n    \"playerWinnerBattleRoyale\": \"You won with a score of {{score}}!\"\n  },\n  \"levels\": {\n    \"default\": \"Default levels\",\n    \"downloaded\": \"Downloaded levels\",\n    \"titlePlayer\": \"Levels (single player)\",\n    \"titleAI\": \"Levels (single AI)\",\n    \"emptyList\": \"No level found…\",\n    \"download\": \"Download levels\",\n    \"downloadLink\": \"The levels will be downloaded from {{url}}\",\n    \"editDownloadURL\": \"Edit the download URL\",\n    \"editDownloadURLPrompt\": \"Enter the download URL of the levels.\\n* Available variables:\\n{player} - player type (human, AI)\\n{appVersion} - version of the application.\\n\\nChanging this setting may cause the game to crash or expose you to security issues. Only change it if you know what you are doing. This setting is not persistent and will be erased if you reload the application.\",\n    \"downloading\": \"Downloading, please wait… If the button remains gray after more than 10 seconds, click on the button below to unblock and try again:\",\n    \"buttonDeblock\": \"Unlock the download\",\n    \"disabledLevel\": \"Level locked. Complete the previous levels to unlock it.\",\n    \"notCompatible\": \"This level is not compatible with this version of the game. Update it.\",\n    \"goalAchieved\": \"Goal achieved! You can move to the next level.\",\n    \"goalNotAchieved\": \"Goal missed! Try again.\",\n    \"level\": \"Level\",\n    \"reachScore\": \"Reach at least the score of {{value}} to pass this level!\",\n    \"reachScoreTime\": \"Reach the score of {{value}} in less than {{count}} second!\",\n    \"reachScoreTime_plural\": \"Reach the score of {{value}} in less than {{count}} seconds!\",\n    \"reachMaxScore\": \"Reach the maximum score for this grid to pass this level!\",\n    \"multiBestScore\": \"Finish this game by getting a better score than the opponent to pass this level!\",\n    \"multiBestScore_plural\": \"Finish this game by getting a better score than the opponents to pass this level!\",\n    \"multiReachScoreFirst\": \"Reach the score of {{value}} before the opponent to pass this level!\",\n    \"multiReachScoreFirst_plural\": \"Reach the score of {{value}} before the opponents to pass this level!\",\n    \"mazeMode\": \"Maze mode! Find the path to the apple to pass this level.\\nThe Snake doesn't move automatically.\",\n    \"bestScore\": \"Best score: {{count}}\",\n    \"bestTime\": \"Best time: {{count}} second\",\n    \"bestTime_plural\": \"Best time: {{count}} seconds\",\n    \"timerRemaining\": \"{{count}} second left\",\n    \"timerRemaining_plural\": \"{{count}} seconds left\",\n    \"bestScoreShort\": \"× {{count}}\",\n    \"bestTimeShort\": \"{{count}} second\",\n    \"bestTimeShort_plural\": \"{{count}} seconds\",\n    \"localstorageDisabled\": \"Cookies are disabled on your browser. You will lose your progress the next time you reload the page. Activate them and reload the page to avoid this.\",\n    \"difficulty\": \"Difficulty :\"\n  },\n  \"servers\": {\n    \"serverList\": \"Servers list\",\n    \"selectInfo\": \"Select a server:\",\n    \"noServerFound\": \"No server found…\",\n    \"loadingList\": \"Loading servers list… Please wait.\",\n    \"noRoomound\": \"No room found…\",\n    \"infos\": \"{{width}}×{{height}} – Speed: {{speed}}\",\n    \"infosBorderWalls\": \"Grid bordered by walls\",\n    \"infosGenerateWalls\": \"Random walls\",\n    \"infosPlayers\": \"{{count}} player/{{max}}\",\n    \"infosPlayers_plural\": \"{{count}} players/{{max}}\",\n    \"infosSpectators\": \"{{count}} spectator\",\n    \"infosSpectators_plural\": \"{{count}} spectators\",\n    \"backToList\": \"Back to the servers list\",\n    \"roomsListTitle\": \"Rooms list\",\n    \"roomsListInfos\": \"Select a room:\",\n    \"loadingRooms\": \"Loading the rooms list… Please wait.\",\n    \"createRoom\": \"Create a room\",\n    \"connectionError\": \"An error has occurred when connecting to the server. Please retry.\",\n    \"errorLoadingRooms\": \"An error has occurred when loading the rooms list. Please retry.\",\n    \"creatingRoom\": \"Creating the room… Please wait.\",\n    \"room\": \"Room n°{{number}}\",\n    \"errorRoomCreation\": \"An error has occurred when creating the room. Please retry.\",\n    \"joinPrivateRoom\": \"Join a private room\",\n    \"enterCode\": \"Enter the code of the room:\",\n    \"customServer\": \"Custom server…\",\n    \"enterCustomServer\": \"Enter the address of the server:\",\n    \"connectingToServer\": \"Connecting to the server… Please wait.\",\n    \"cancel\": \"Cancel\",\n    \"refreshRooms\": \"Refresh the list\",\n    \"joinRoom\": \"Joining the room… Please wait.\",\n    \"errorRoomJoin\": \"An error has occurred when joining the room. Please retry.\",\n    \"errorReason\": \"Error reason:\",\n    \"errorReason_unknown\": \"Unknown\",\n    \"errorRoomJoinReason_roomNotFound\": \"The room was not found.\",\n    \"errorRoomJoinReason_roomAlreadyJoined\": \"You already joined this room.\",\n    \"errorRoomCreationReason_maxRoomLimitReached\": \"The maximum number of rooms the server can manage has been reached.\",\n    \"errorRoomCreationReason_invalidSettings\": \"Invalid settings.\",\n    \"errorServerVersion\": \"This server version ({{server_version}}) is different from your version of the game ({{client_version}}). You may encounter problems.\",\n    \"addressLabel\": \"Server address:\",\n    \"roomCode\": \"Room code:\",\n    \"untitled\": \"Untitled\",\n    \"searchingPlayers\": \"(searching players)\",\n    \"started\": \"(game started)\",\n    \"starting\": \"(game starting)\"\n  }\n}, true, false);\n\n//# sourceURL=webpack:///./assets/locales/menu.js?");

/***/ }),

/***/ "./libs/i18next.min.js":
/*!*****************************!*\
  !*** ./libs/i18next.min.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t():undefined}(this,function(){\"use strict\";function e(t){return(e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(t)}function t(n){return(t=\"function\"==typeof Symbol&&\"symbol\"===e(Symbol.iterator)?function(t){return e(t)}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":e(t)})(n)}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{},i=Object.keys(o);\"function\"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(o).filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),i.forEach(function(t){n(e,t,o[t])})}return e}function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function r(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}function s(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function u(e,n){return!n||\"object\"!==t(n)&&\"function\"!=typeof n?s(e):n}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function f(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}function p(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}var g={type:\"logger\",log:function(e){this.output(\"log\",e)},warn:function(e){this.output(\"warn\",e)},error:function(e){this.output(\"error\",e)},output:function(e,t){var n;console&&console[e]&&(n=console)[e].apply(n,p(t))}},h=new(function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};i(this,e),this.init(t,n)}return a(e,[{key:\"init\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||\"i18next:\",this.logger=e||g,this.options=t,this.debug=t.debug}},{key:\"setDebug\",value:function(e){this.debug=e}},{key:\"log\",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,\"log\",\"\",!0)}},{key:\"warn\",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,\"warn\",\"\",!0)}},{key:\"error\",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,\"error\",\"\")}},{key:\"deprecate\",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,\"warn\",\"WARNING DEPRECATED: \",!0)}},{key:\"forward\",value:function(e,t,n,o){return o&&!this.debug?null:(\"string\"==typeof e[0]&&(e[0]=\"\".concat(n).concat(this.prefix,\" \").concat(e[0])),this.logger[t](e))}},{key:\"create\",value:function(t){return new e(this.logger,o({},{prefix:\"\".concat(this.prefix,\":\").concat(t,\":\")},this.options))}}]),e}()),d=function(){function e(){i(this,e),this.observers={}}return a(e,[{key:\"on\",value:function(e,t){var n=this;return e.split(\" \").forEach(function(e){n.observers[e]=n.observers[e]||[],n.observers[e].push(t)}),this}},{key:\"off\",value:function(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter(function(e){return e!==t}):delete this.observers[e])}},{key:\"emit\",value:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];this.observers[e]&&[].concat(this.observers[e]).forEach(function(e){e.apply(void 0,n)});this.observers[\"*\"]&&[].concat(this.observers[\"*\"]).forEach(function(t){t.apply(t,[e].concat(n))})}}]),e}();function v(){var e,t,n=new Promise(function(n,o){e=n,t=o});return n.resolve=e,n.reject=t,n}function y(e){return null==e?\"\":\"\"+e}function m(e,t,n){function o(e){return e&&e.indexOf(\"###\")>-1?e.replace(/###/g,\".\"):e}function i(){return!e||\"string\"==typeof e}for(var r=\"string\"!=typeof t?[].concat(t):t.split(\".\");r.length>1;){if(i())return{};var a=o(r.shift());!e[a]&&n&&(e[a]=new n),e=e[a]}return i()?{}:{obj:e,k:o(r.shift())}}function b(e,t,n){var o=m(e,t,Object);o.obj[o.k]=n}function k(e,t){var n=m(e,t),o=n.obj,i=n.k;if(o)return o[i]}function x(e,t,n){var o=k(e,n);return void 0!==o?o:k(t,n)}function w(e){return e.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\"\\\\$&\")}var S={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\",\"/\":\"&#x2F;\"};function O(e){return\"string\"==typeof e?e.replace(/[&<>\"'\\/]/g,function(e){return S[e]}):e}var L=function(e){function t(e){var n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:[\"translation\"],defaultNS:\"translation\"};return i(this,t),n=u(this,l(t).call(this)),d.call(s(n)),n.data=e||{},n.options=o,void 0===n.options.keySeparator&&(n.options.keySeparator=\".\"),n}return f(t,d),a(t,[{key:\"addNamespaces\",value:function(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}},{key:\"removeNamespaces\",value:function(e){var t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}},{key:\"getResource\",value:function(e,t,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=void 0!==o.keySeparator?o.keySeparator:this.options.keySeparator,r=[e,t];return n&&\"string\"!=typeof n&&(r=r.concat(n)),n&&\"string\"==typeof n&&(r=r.concat(i?n.split(i):n)),e.indexOf(\".\")>-1&&(r=e.split(\".\")),k(this.data,r)}},{key:\"addResource\",value:function(e,t,n,o){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1},r=this.options.keySeparator;void 0===r&&(r=\".\");var a=[e,t];n&&(a=a.concat(r?n.split(r):n)),e.indexOf(\".\")>-1&&(o=t,t=(a=e.split(\".\"))[1]),this.addNamespaces(t),b(this.data,a,o),i.silent||this.emit(\"added\",e,t,n,o)}},{key:\"addResources\",value:function(e,t,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(var i in n)\"string\"!=typeof n[i]&&\"[object Array]\"!==Object.prototype.toString.apply(n[i])||this.addResource(e,t,i,n[i],{silent:!0});o.silent||this.emit(\"added\",e,t,n)}},{key:\"addResourceBundle\",value:function(e,t,n,i,r){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},s=[e,t];e.indexOf(\".\")>-1&&(i=n,n=t,t=(s=e.split(\".\"))[1]),this.addNamespaces(t);var u=k(this.data,s)||{};i?function e(t,n,o){for(var i in n)i in t?\"string\"==typeof t[i]||t[i]instanceof String||\"string\"==typeof n[i]||n[i]instanceof String?o&&(t[i]=n[i]):e(t[i],n[i],o):t[i]=n[i];return t}(u,n,r):u=o({},u,n),b(this.data,s,u),a.silent||this.emit(\"added\",e,t,n)}},{key:\"removeResourceBundle\",value:function(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit(\"removed\",e,t)}},{key:\"hasResourceBundle\",value:function(e,t){return void 0!==this.getResource(e,t)}},{key:\"getResourceBundle\",value:function(e,t){return t||(t=this.options.defaultNS),\"v1\"===this.options.compatibilityAPI?o({},{},this.getResource(e,t)):this.getResource(e,t)}},{key:\"getDataByLanguage\",value:function(e){return this.data[e]}},{key:\"toJSON\",value:function(){return this.data}}]),t}(),R={processors:{},addPostProcessor:function(e){this.processors[e.name]=e},handle:function(e,t,n,o,i){var r=this;return e.forEach(function(e){r.processors[e]&&(t=r.processors[e].process(t,n,o,i))}),t}},N={},j=function(e){function n(e){var t,o,r,a,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return i(this,n),t=u(this,l(n).call(this)),d.call(s(t)),o=[\"resourceStore\",\"languageUtils\",\"pluralResolver\",\"interpolator\",\"backendConnector\",\"i18nFormat\",\"utils\"],r=e,a=s(t),o.forEach(function(e){r[e]&&(a[e]=r[e])}),t.options=c,void 0===t.options.keySeparator&&(t.options.keySeparator=\".\"),t.logger=h.create(\"translator\"),t}return f(n,d),a(n,[{key:\"changeLanguage\",value:function(e){e&&(this.language=e)}},{key:\"exists\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}},n=this.resolve(e,t);return n&&void 0!==n.res}},{key:\"extractFromKey\",value:function(e,t){var n=t.nsSeparator||this.options.nsSeparator;void 0===n&&(n=\":\");var o=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,i=t.ns||this.options.defaultNS;if(n&&e.indexOf(n)>-1){var r=e.split(n);(n!==o||n===o&&this.options.ns.indexOf(r[0])>-1)&&(i=r.shift()),e=r.join(o)}return\"string\"==typeof i&&(i=[i]),{key:e,namespaces:i}}},{key:\"translate\",value:function(e,n){var i=this;if(\"object\"!==t(n)&&this.options.overloadTranslationOptionHandler&&(n=this.options.overloadTranslationOptionHandler(arguments)),n||(n={}),null==e)return\"\";Array.isArray(e)||(e=[String(e)]);var r=void 0!==n.keySeparator?n.keySeparator:this.options.keySeparator,a=this.extractFromKey(e[e.length-1],n),s=a.key,u=a.namespaces,l=u[u.length-1],c=n.lng||this.language,f=n.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(c&&\"cimode\"===c.toLowerCase()){if(f){var p=n.nsSeparator||this.options.nsSeparator;return l+p+s}return s}var g=this.resolve(e,n),h=g&&g.res,d=g&&g.usedKey||s,v=g&&g.exactUsedKey||s,y=Object.prototype.toString.apply(h),m=void 0!==n.joinArrays?n.joinArrays:this.options.joinArrays,b=!this.i18nFormat||this.i18nFormat.handleAsObject;if(b&&h&&(\"string\"!=typeof h&&\"boolean\"!=typeof h&&\"number\"!=typeof h)&&[\"[object Number]\",\"[object Function]\",\"[object RegExp]\"].indexOf(y)<0&&(\"string\"!=typeof m||\"[object Array]\"!==y)){if(!n.returnObjects&&!this.options.returnObjects)return this.logger.warn(\"accessing an object - but returnObjects options is not enabled!\"),this.options.returnedObjectHandler?this.options.returnedObjectHandler(d,h,n):\"key '\".concat(s,\" (\").concat(this.language,\")' returned an object instead of string.\");if(r){var k=\"[object Array]\"===y,x=k?[]:{},w=k?v:d;for(var S in h)if(Object.prototype.hasOwnProperty.call(h,S)){var O=\"\".concat(w).concat(r).concat(S);x[S]=this.translate(O,o({},n,{joinArrays:!1,ns:u})),x[S]===O&&(x[S]=h[S])}h=x}}else if(b&&\"string\"==typeof m&&\"[object Array]\"===y)(h=h.join(m))&&(h=this.extendTranslation(h,e,n));else{var L=!1,R=!1;if(!this.isValidLookup(h)&&void 0!==n.defaultValue){if(L=!0,void 0!==n.count){var N=this.pluralResolver.getSuffix(c,n.count);h=n[\"defaultValue\".concat(N)]}h||(h=n.defaultValue)}this.isValidLookup(h)||(R=!0,h=s);var j=n.defaultValue&&n.defaultValue!==h&&this.options.updateMissing;if(R||L||j){this.logger.log(j?\"updateKey\":\"missingKey\",c,l,s,j?n.defaultValue:h);var C=[],P=this.languageUtils.getFallbackCodes(this.options.fallbackLng,n.lng||this.language);if(\"fallback\"===this.options.saveMissingTo&&P&&P[0])for(var E=0;E<P.length;E++)C.push(P[E]);else\"all\"===this.options.saveMissingTo?C=this.languageUtils.toResolveHierarchy(n.lng||this.language):C.push(n.lng||this.language);var F=function(e,t){i.options.missingKeyHandler?i.options.missingKeyHandler(e,l,t,j?n.defaultValue:h,j,n):i.backendConnector&&i.backendConnector.saveMissing&&i.backendConnector.saveMissing(e,l,t,j?n.defaultValue:h,j,n),i.emit(\"missingKey\",e,l,t,h)};if(this.options.saveMissing){var T=void 0!==n.count&&\"string\"!=typeof n.count;this.options.saveMissingPlurals&&T?C.forEach(function(e){i.pluralResolver.getPluralFormsOfKey(e,s).forEach(function(t){return F([e],t)})}):F(C,s)}}h=this.extendTranslation(h,e,n,g),R&&h===s&&this.options.appendNamespaceToMissingKey&&(h=\"\".concat(l,\":\").concat(s)),R&&this.options.parseMissingKeyHandler&&(h=this.options.parseMissingKeyHandler(h))}return h}},{key:\"extendTranslation\",value:function(e,t,n,i){var r=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,n,i.usedLng,i.usedNS,i.usedKey,{resolved:i});else if(!n.skipInterpolation){n.interpolation&&this.interpolator.init(o({},n,{interpolation:o({},this.options.interpolation,n.interpolation)}));var a=n.replace&&\"string\"!=typeof n.replace?n.replace:n;this.options.interpolation.defaultVariables&&(a=o({},this.options.interpolation.defaultVariables,a)),e=this.interpolator.interpolate(e,a,n.lng||this.language,n),!1!==n.nest&&(e=this.interpolator.nest(e,function(){return r.translate.apply(r,arguments)},n)),n.interpolation&&this.interpolator.reset()}var s=n.postProcess||this.options.postProcess,u=\"string\"==typeof s?[s]:s;return null!=e&&u&&u.length&&!1!==n.applyPostProcessor&&(e=R.handle(u,e,t,this.options&&this.options.postProcessPassResolved?o({i18nResolved:i},n):n,this)),e}},{key:\"resolve\",value:function(e){var t,n,o,i,r,a=this,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e&&(e=[e]),e.forEach(function(e){if(!a.isValidLookup(t)){var u=a.extractFromKey(e,s),l=u.key;n=l;var c=u.namespaces;a.options.fallbackNS&&(c=c.concat(a.options.fallbackNS));var f=void 0!==s.count&&\"string\"!=typeof s.count,p=void 0!==s.context&&\"string\"==typeof s.context&&\"\"!==s.context,g=s.lngs?s.lngs:a.languageUtils.toResolveHierarchy(s.lng||a.language,s.fallbackLng);c.forEach(function(e){a.isValidLookup(t)||(r=e,!N[\"\".concat(g[0],\"-\").concat(e)]&&a.utils&&a.utils.hasLoadedNamespace&&!a.utils.hasLoadedNamespace(r)&&(N[\"\".concat(g[0],\"-\").concat(e)]=!0,a.logger.warn('key \"'.concat(n,'\" for namespace \"').concat(r,'\" for languages \"').concat(g.join(\", \"),\"\\\" won't get resolved as namespace was not yet loaded\"),\"This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!\")),g.forEach(function(n){if(!a.isValidLookup(t)){i=n;var r,u,c=l,g=[c];if(a.i18nFormat&&a.i18nFormat.addLookupKeys)a.i18nFormat.addLookupKeys(g,l,n,e,s);else f&&(r=a.pluralResolver.getSuffix(n,s.count)),f&&p&&g.push(c+r),p&&g.push(c+=\"\".concat(a.options.contextSeparator).concat(s.context)),f&&g.push(c+=r);for(;u=g.pop();)a.isValidLookup(t)||(o=u,t=a.getResource(n,e,u,s))}}))})}}),{res:t,usedKey:n,exactUsedKey:o,usedLng:i,usedNS:r}}},{key:\"isValidLookup\",value:function(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&\"\"===e)}},{key:\"getResource\",value:function(e,t,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,n,o):this.resourceStore.getResource(e,t,n,o)}}]),n}();function C(e){return e.charAt(0).toUpperCase()+e.slice(1)}var P=function(){function e(t){i(this,e),this.options=t,this.whitelist=this.options.whitelist||!1,this.logger=h.create(\"languageUtils\")}return a(e,[{key:\"getScriptPartFromCode\",value:function(e){if(!e||e.indexOf(\"-\")<0)return null;var t=e.split(\"-\");return 2===t.length?null:(t.pop(),this.formatLanguageCode(t.join(\"-\")))}},{key:\"getLanguagePartFromCode\",value:function(e){if(!e||e.indexOf(\"-\")<0)return e;var t=e.split(\"-\");return this.formatLanguageCode(t[0])}},{key:\"formatLanguageCode\",value:function(e){if(\"string\"==typeof e&&e.indexOf(\"-\")>-1){var t=[\"hans\",\"hant\",\"latn\",\"cyrl\",\"cans\",\"mong\",\"arab\"],n=e.split(\"-\");return this.options.lowerCaseLng?n=n.map(function(e){return e.toLowerCase()}):2===n.length?(n[0]=n[0].toLowerCase(),n[1]=n[1].toUpperCase(),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=C(n[1].toLowerCase()))):3===n.length&&(n[0]=n[0].toLowerCase(),2===n[1].length&&(n[1]=n[1].toUpperCase()),\"sgn\"!==n[0]&&2===n[2].length&&(n[2]=n[2].toUpperCase()),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=C(n[1].toLowerCase())),t.indexOf(n[2].toLowerCase())>-1&&(n[2]=C(n[2].toLowerCase()))),n.join(\"-\")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}},{key:\"isWhitelisted\",value:function(e){return(\"languageOnly\"===this.options.load||this.options.nonExplicitWhitelist)&&(e=this.getLanguagePartFromCode(e)),!this.whitelist||!this.whitelist.length||this.whitelist.indexOf(e)>-1}},{key:\"getFallbackCodes\",value:function(e,t){if(!e)return[];if(\"string\"==typeof e&&(e=[e]),\"[object Array]\"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];var n=e[t];return n||(n=e[this.getScriptPartFromCode(t)]),n||(n=e[this.formatLanguageCode(t)]),n||(n=e.default),n||[]}},{key:\"toResolveHierarchy\",value:function(e,t){var n=this,o=this.getFallbackCodes(t||this.options.fallbackLng||[],e),i=[],r=function(e){e&&(n.isWhitelisted(e)?i.push(e):n.logger.warn(\"rejecting non-whitelisted language code: \".concat(e)))};return\"string\"==typeof e&&e.indexOf(\"-\")>-1?(\"languageOnly\"!==this.options.load&&r(this.formatLanguageCode(e)),\"languageOnly\"!==this.options.load&&\"currentOnly\"!==this.options.load&&r(this.getScriptPartFromCode(e)),\"currentOnly\"!==this.options.load&&r(this.getLanguagePartFromCode(e))):\"string\"==typeof e&&r(this.formatLanguageCode(e)),o.forEach(function(e){i.indexOf(e)<0&&r(n.formatLanguageCode(e))}),i}}]),e}(),E=[{lngs:[\"ach\",\"ak\",\"am\",\"arn\",\"br\",\"fil\",\"gun\",\"ln\",\"mfe\",\"mg\",\"mi\",\"oc\",\"pt\",\"pt-BR\",\"tg\",\"ti\",\"tr\",\"uz\",\"wa\"],nr:[1,2],fc:1},{lngs:[\"af\",\"an\",\"ast\",\"az\",\"bg\",\"bn\",\"ca\",\"da\",\"de\",\"dev\",\"el\",\"en\",\"eo\",\"es\",\"et\",\"eu\",\"fi\",\"fo\",\"fur\",\"fy\",\"gl\",\"gu\",\"ha\",\"hi\",\"hu\",\"hy\",\"ia\",\"it\",\"kn\",\"ku\",\"lb\",\"mai\",\"ml\",\"mn\",\"mr\",\"nah\",\"nap\",\"nb\",\"ne\",\"nl\",\"nn\",\"no\",\"nso\",\"pa\",\"pap\",\"pms\",\"ps\",\"pt-PT\",\"rm\",\"sco\",\"se\",\"si\",\"so\",\"son\",\"sq\",\"sv\",\"sw\",\"ta\",\"te\",\"tk\",\"ur\",\"yo\"],nr:[1,2],fc:2},{lngs:[\"ay\",\"bo\",\"cgg\",\"fa\",\"id\",\"ja\",\"jbo\",\"ka\",\"kk\",\"km\",\"ko\",\"ky\",\"lo\",\"ms\",\"sah\",\"su\",\"th\",\"tt\",\"ug\",\"vi\",\"wo\",\"zh\"],nr:[1],fc:3},{lngs:[\"be\",\"bs\",\"cnr\",\"dz\",\"hr\",\"ru\",\"sr\",\"uk\"],nr:[1,2,5],fc:4},{lngs:[\"ar\"],nr:[0,1,2,3,11,100],fc:5},{lngs:[\"cs\",\"sk\"],nr:[1,2,5],fc:6},{lngs:[\"csb\",\"pl\"],nr:[1,2,5],fc:7},{lngs:[\"cy\"],nr:[1,2,3,8],fc:8},{lngs:[\"fr\"],nr:[1,2],fc:9},{lngs:[\"ga\"],nr:[1,2,3,7,11],fc:10},{lngs:[\"gd\"],nr:[1,2,3,20],fc:11},{lngs:[\"is\"],nr:[1,2],fc:12},{lngs:[\"jv\"],nr:[0,1],fc:13},{lngs:[\"kw\"],nr:[1,2,3,4],fc:14},{lngs:[\"lt\"],nr:[1,2,10],fc:15},{lngs:[\"lv\"],nr:[1,2,0],fc:16},{lngs:[\"mk\"],nr:[1,2],fc:17},{lngs:[\"mnk\"],nr:[0,1,2],fc:18},{lngs:[\"mt\"],nr:[1,2,11,20],fc:19},{lngs:[\"or\"],nr:[2,1],fc:2},{lngs:[\"ro\"],nr:[1,2,20],fc:20},{lngs:[\"sl\"],nr:[5,1,2,3],fc:21},{lngs:[\"he\"],nr:[1,2,20,21],fc:22}],F={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0===e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0===e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0===e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1===e?0:2===e?1:(e<0||e>10)&&e%10==0?2:3)}};var T=function(){function e(t){var n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};i(this,e),this.languageUtils=t,this.options=o,this.logger=h.create(\"pluralResolver\"),this.rules=(n={},E.forEach(function(e){e.lngs.forEach(function(t){n[t]={numbers:e.nr,plurals:F[e.fc]}})}),n)}return a(e,[{key:\"addRule\",value:function(e,t){this.rules[e]=t}},{key:\"getRule\",value:function(e){return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}},{key:\"needsPlural\",value:function(e){var t=this.getRule(e);return t&&t.numbers.length>1}},{key:\"getPluralFormsOfKey\",value:function(e,t){var n=this,o=[],i=this.getRule(e);return i?(i.numbers.forEach(function(i){var r=n.getSuffix(e,i);o.push(\"\".concat(t).concat(r))}),o):o}},{key:\"getSuffix\",value:function(e,t){var n=this,o=this.getRule(e);if(o){var i=o.noAbs?o.plurals(t):o.plurals(Math.abs(t)),r=o.numbers[i];this.options.simplifyPluralSuffix&&2===o.numbers.length&&1===o.numbers[0]&&(2===r?r=\"plural\":1===r&&(r=\"\"));var a=function(){return n.options.prepend&&r.toString()?n.options.prepend+r.toString():r.toString()};return\"v1\"===this.options.compatibilityJSON?1===r?\"\":\"number\"==typeof r?\"_plural_\".concat(r.toString()):a():\"v2\"===this.options.compatibilityJSON?a():this.options.simplifyPluralSuffix&&2===o.numbers.length&&1===o.numbers[0]?a():this.options.prepend&&i.toString()?this.options.prepend+i.toString():i.toString()}return this.logger.warn(\"no plural rule found for: \".concat(e)),\"\"}}]),e}(),A=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};i(this,e),this.logger=h.create(\"interpolator\"),this.options=t,this.format=t.interpolation&&t.interpolation.format||function(e){return e},this.init(t)}return a(e,[{key:\"init\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});var t=e.interpolation;this.escape=void 0!==t.escape?t.escape:O,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?w(t.prefix):t.prefixEscaped||\"{{\",this.suffix=t.suffix?w(t.suffix):t.suffixEscaped||\"}}\",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||\",\",this.unescapePrefix=t.unescapeSuffix?\"\":t.unescapePrefix||\"-\",this.unescapeSuffix=this.unescapePrefix?\"\":t.unescapeSuffix||\"\",this.nestingPrefix=t.nestingPrefix?w(t.nestingPrefix):t.nestingPrefixEscaped||w(\"$t(\"),this.nestingSuffix=t.nestingSuffix?w(t.nestingSuffix):t.nestingSuffixEscaped||w(\")\"),this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp()}},{key:\"reset\",value:function(){this.options&&this.init(this.options)}},{key:\"resetRegExp\",value:function(){var e=\"\".concat(this.prefix,\"(.+?)\").concat(this.suffix);this.regexp=new RegExp(e,\"g\");var t=\"\".concat(this.prefix).concat(this.unescapePrefix,\"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=new RegExp(t,\"g\");var n=\"\".concat(this.nestingPrefix,\"(.+?)\").concat(this.nestingSuffix);this.nestingRegexp=new RegExp(n,\"g\")}},{key:\"interpolate\",value:function(e,t,n,o){var i,r,a,s=this,u=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function l(e){return e.replace(/\\$/g,\"$$$$\")}var c=function(e){if(e.indexOf(s.formatSeparator)<0){var i=x(t,u,e);return s.alwaysFormat?s.format(i,void 0,n):i}var r=e.split(s.formatSeparator),a=r.shift().trim(),l=r.join(s.formatSeparator).trim();return s.format(x(t,u,a),l,n,o)};this.resetRegExp();var f=o&&o.missingInterpolationHandler||this.options.missingInterpolationHandler;for(a=0;i=this.regexpUnescape.exec(e);){if(void 0===(r=c(i[1].trim())))if(\"function\"==typeof f){var p=f(e,i,o);r=\"string\"==typeof p?p:\"\"}else this.logger.warn(\"missed to pass in variable \".concat(i[1],\" for interpolating \").concat(e)),r=\"\";else\"string\"==typeof r||this.useRawValueToEscape||(r=y(r));if(e=e.replace(i[0],l(r)),this.regexpUnescape.lastIndex=0,++a>=this.maxReplaces)break}for(a=0;i=this.regexp.exec(e);){if(void 0===(r=c(i[1].trim())))if(\"function\"==typeof f){var g=f(e,i,o);r=\"string\"==typeof g?g:\"\"}else this.logger.warn(\"missed to pass in variable \".concat(i[1],\" for interpolating \").concat(e)),r=\"\";else\"string\"==typeof r||this.useRawValueToEscape||(r=y(r));if(r=this.escapeValue?l(this.escape(r)):l(r),e=e.replace(i[0],r),this.regexp.lastIndex=0,++a>=this.maxReplaces)break}return e}},{key:\"nest\",value:function(e,t){var n,i,r=o({},arguments.length>2&&void 0!==arguments[2]?arguments[2]:{});function a(e,t){if(e.indexOf(\",\")<0)return e;var n=e.split(\",\");e=n.shift();var i=n.join(\",\");i=(i=this.interpolate(i,r)).replace(/'/g,'\"');try{r=JSON.parse(i),t&&(r=o({},t,r))}catch(t){this.logger.error(\"failed parsing options string in nesting for key \".concat(e),t)}return delete r.defaultValue,e}for(r.applyPostProcessor=!1,delete r.defaultValue;n=this.nestingRegexp.exec(e);){if((i=t(a.call(this,n[1].trim(),r),r))&&n[0]===e&&\"string\"!=typeof i)return i;\"string\"!=typeof i&&(i=y(i)),i||(this.logger.warn(\"missed to resolve \".concat(n[1],\" for nesting \").concat(e)),i=\"\"),e=e.replace(n[0],i),this.regexp.lastIndex=0}return e}}]),e}();function V(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],o=!0,i=!1,r=void 0;try{for(var a,s=e[Symbol.iterator]();!(o=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);o=!0);}catch(e){i=!0,r=e}finally{try{o||null==s.return||s.return()}finally{if(i)throw r}}return n}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}var U=function(e){function t(e,n,o){var r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return i(this,t),r=u(this,l(t).call(this)),d.call(s(r)),r.backend=e,r.store=n,r.services=o,r.languageUtils=o.languageUtils,r.options=a,r.logger=h.create(\"backendConnector\"),r.state={},r.queue=[],r.backend&&r.backend.init&&r.backend.init(o,a.backend,a),r}return f(t,d),a(t,[{key:\"queueLoad\",value:function(e,t,n,o){var i=this,r=[],a=[],s=[],u=[];return e.forEach(function(e){var o=!0;t.forEach(function(t){var s=\"\".concat(e,\"|\").concat(t);!n.reload&&i.store.hasResourceBundle(e,t)?i.state[s]=2:i.state[s]<0||(1===i.state[s]?a.indexOf(s)<0&&a.push(s):(i.state[s]=1,o=!1,a.indexOf(s)<0&&a.push(s),r.indexOf(s)<0&&r.push(s),u.indexOf(t)<0&&u.push(t)))}),o||s.push(e)}),(r.length||a.length)&&this.queue.push({pending:a,loaded:{},errors:[],callback:o}),{toLoad:r,pending:a,toLoadLanguages:s,toLoadNamespaces:u}}},{key:\"loaded\",value:function(e,t,n){var o=V(e.split(\"|\"),2),i=o[0],r=o[1];t&&this.emit(\"failedLoading\",i,r,t),n&&this.store.addResourceBundle(i,r,n),this.state[e]=t?-1:2;var a={};this.queue.forEach(function(n){var o,s,u,l,c,f;o=n.loaded,s=r,l=m(o,[i],Object),c=l.obj,f=l.k,c[f]=c[f]||[],u&&(c[f]=c[f].concat(s)),u||c[f].push(s),function(e,t){for(var n=e.indexOf(t);-1!==n;)e.splice(n,1),n=e.indexOf(t)}(n.pending,e),t&&n.errors.push(t),0!==n.pending.length||n.done||(Object.keys(n.loaded).forEach(function(e){a[e]||(a[e]=[]),n.loaded[e].length&&n.loaded[e].forEach(function(t){a[e].indexOf(t)<0&&a[e].push(t)})}),n.done=!0,n.errors.length?n.callback(n.errors):n.callback())}),this.emit(\"loaded\",a),this.queue=this.queue.filter(function(e){return!e.done})}},{key:\"read\",value:function(e,t,n){var o=this,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:250,a=arguments.length>5?arguments[5]:void 0;return e.length?this.backend[n](e,t,function(s,u){s&&u&&i<5?setTimeout(function(){o.read.call(o,e,t,n,i+1,2*r,a)},r):a(s,u)}):a(null,{})}},{key:\"prepareLoading\",value:function(e,t){var n=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn(\"No backend was added via i18next.use. Will not load resources.\"),i&&i();\"string\"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),\"string\"==typeof t&&(t=[t]);var r=this.queueLoad(e,t,o,i);if(!r.toLoad.length)return r.pending.length||i(),null;r.toLoad.forEach(function(e){n.loadOne(e)})}},{key:\"load\",value:function(e,t,n){this.prepareLoading(e,t,{},n)}},{key:\"reload\",value:function(e,t,n){this.prepareLoading(e,t,{reload:!0},n)}},{key:\"loadOne\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",o=V(e.split(\"|\"),2),i=o[0],r=o[1];this.read(i,r,\"read\",void 0,void 0,function(o,a){o&&t.logger.warn(\"\".concat(n,\"loading namespace \").concat(r,\" for language \").concat(i,\" failed\"),o),!o&&a&&t.logger.log(\"\".concat(n,\"loaded namespace \").concat(r,\" for language \").concat(i),a),t.loaded(e,o,a)})}},{key:\"saveMissing\",value:function(e,t,n,i,r){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t)?this.logger.warn('did not save key \"'.concat(n,'\" for namespace \"').concat(t,'\" as the namespace was not yet loaded'),\"This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!\"):null!=n&&\"\"!==n&&(this.backend&&this.backend.create&&this.backend.create(e,t,n,i,null,o({},a,{isUpdate:r})),e&&e[0]&&this.store.addResource(e[0],t,n,i))}}]),t}();function D(e){return\"string\"==typeof e.ns&&(e.ns=[e.ns]),\"string\"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),\"string\"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.whitelist&&e.whitelist.indexOf(\"cimode\")<0&&(e.whitelist=e.whitelist.concat([\"cimode\"])),e}function I(){}return new(function(e){function n(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0;if(i(this,n),e=u(this,l(n).call(this)),d.call(s(e)),e.options=D(t),e.services={},e.logger=h,e.modules={external:[]},o&&!e.isInitialized&&!t.isClone){if(!e.options.initImmediate)return e.init(t,o),u(e,s(e));setTimeout(function(){e.init(t,o)},0)}return e}return f(n,d),a(n,[{key:\"init\",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=arguments.length>1?arguments[1]:void 0;function r(e){return e?\"function\"==typeof e?new e:e:null}if(\"function\"==typeof n&&(i=n,n={}),this.options=o({},{debug:!1,initImmediate:!0,ns:[\"translation\"],defaultNS:[\"translation\"],fallbackLng:[\"dev\"],fallbackNS:!1,whitelist:!1,nonExplicitWhitelist:!1,load:\"all\",preload:!1,simplifyPluralSuffix:!0,keySeparator:\".\",nsSeparator:\":\",pluralSeparator:\"_\",contextSeparator:\"_\",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:\"fallback\",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!0,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){var n={};if(\"object\"===t(e[1])&&(n=e[1]),\"string\"==typeof e[1]&&(n.defaultValue=e[1]),\"string\"==typeof e[2]&&(n.tDescription=e[2]),\"object\"===t(e[2])||\"object\"===t(e[3])){var o=e[3]||e[2];Object.keys(o).forEach(function(e){n[e]=o[e]})}return n},interpolation:{escapeValue:!0,format:function(e,t,n,o){return e},prefix:\"{{\",suffix:\"}}\",formatSeparator:\",\",unescapePrefix:\"-\",nestingPrefix:\"$t(\",nestingSuffix:\")\",maxReplaces:1e3}},this.options,D(n)),this.format=this.options.interpolation.format,i||(i=I),!this.options.isClone){this.modules.logger?h.init(r(this.modules.logger),this.options):h.init(null,this.options);var a=new P(this.options);this.store=new L(this.options.resources,this.options);var s=this.services;s.logger=h,s.resourceStore=this.store,s.languageUtils=a,s.pluralResolver=new T(a,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),s.interpolator=new A(this.options),s.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},s.backendConnector=new U(r(this.modules.backend),s.resourceStore,s,this.options),s.backendConnector.on(\"*\",function(t){for(var n=arguments.length,o=new Array(n>1?n-1:0),i=1;i<n;i++)o[i-1]=arguments[i];e.emit.apply(e,[t].concat(o))}),this.modules.languageDetector&&(s.languageDetector=r(this.modules.languageDetector),s.languageDetector.init(s,this.options.detection,this.options)),this.modules.i18nFormat&&(s.i18nFormat=r(this.modules.i18nFormat),s.i18nFormat.init&&s.i18nFormat.init(this)),this.translator=new j(this.services,this.options),this.translator.on(\"*\",function(t){for(var n=arguments.length,o=new Array(n>1?n-1:0),i=1;i<n;i++)o[i-1]=arguments[i];e.emit.apply(e,[t].concat(o))}),this.modules.external.forEach(function(t){t.init&&t.init(e)})}this.modules.languageDetector||this.options.lng||this.logger.warn(\"init: no languageDetector is used and no lng is defined\");[\"getResource\",\"addResource\",\"addResources\",\"addResourceBundle\",\"removeResourceBundle\",\"hasResourceBundle\",\"getResourceBundle\",\"getDataByLanguage\"].forEach(function(t){e[t]=function(){var n;return(n=e.store)[t].apply(n,arguments)}});var u=v(),l=function(){e.changeLanguage(e.options.lng,function(t,n){e.isInitialized=!0,e.logger.log(\"initialized\",e.options),e.emit(\"initialized\",e.options),u.resolve(n),i(t,n)})};return this.options.resources||!this.options.initImmediate?l():setTimeout(l,0),u}},{key:\"loadResources\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:I,o=\"string\"==typeof e?e:this.language;if(\"function\"==typeof e&&(n=e),!this.options.resources||this.options.partialBundledLanguages){if(o&&\"cimode\"===o.toLowerCase())return n();var i=[],r=function(e){e&&t.services.languageUtils.toResolveHierarchy(e).forEach(function(e){i.indexOf(e)<0&&i.push(e)})};if(o)r(o);else this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(function(e){return r(e)});this.options.preload&&this.options.preload.forEach(function(e){return r(e)}),this.services.backendConnector.load(i,this.options.ns,n)}else n(null)}},{key:\"reloadResources\",value:function(e,t,n){var o=v();return e||(e=this.languages),t||(t=this.options.ns),n||(n=I),this.services.backendConnector.reload(e,t,function(e){o.resolve(),n(e)}),o}},{key:\"use\",value:function(e){return\"backend\"===e.type&&(this.modules.backend=e),(\"logger\"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),\"languageDetector\"===e.type&&(this.modules.languageDetector=e),\"i18nFormat\"===e.type&&(this.modules.i18nFormat=e),\"postProcessor\"===e.type&&R.addPostProcessor(e),\"3rdParty\"===e.type&&this.modules.external.push(e),this}},{key:\"changeLanguage\",value:function(e,t){var n=this;this.isLanguageChangingTo=e;var o=v();this.emit(\"languageChanging\",e);var i=function(e){e&&(n.language||(n.language=e,n.languages=n.services.languageUtils.toResolveHierarchy(e)),n.translator.language||n.translator.changeLanguage(e),n.services.languageDetector&&n.services.languageDetector.cacheUserLanguage(e)),n.loadResources(e,function(i){!function(e,i){i?(n.language=i,n.languages=n.services.languageUtils.toResolveHierarchy(i),n.translator.changeLanguage(i),n.isLanguageChangingTo=void 0,n.emit(\"languageChanged\",i),n.logger.log(\"languageChanged\",i)):n.isLanguageChangingTo=void 0,o.resolve(function(){return n.t.apply(n,arguments)}),t&&t(e,function(){return n.t.apply(n,arguments)})}(i,e)})};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect(i):i(e):i(this.services.languageDetector.detect()),o}},{key:\"getFixedT\",value:function(e,n){var i=this,r=function e(n,r){var a;if(\"object\"!==t(r)){for(var s=arguments.length,u=new Array(s>2?s-2:0),l=2;l<s;l++)u[l-2]=arguments[l];a=i.options.overloadTranslationOptionHandler([n,r].concat(u))}else a=o({},r);return a.lng=a.lng||e.lng,a.lngs=a.lngs||e.lngs,a.ns=a.ns||e.ns,i.t(n,a)};return\"string\"==typeof e?r.lng=e:r.lngs=e,r.ns=n,r}},{key:\"t\",value:function(){var e;return this.translator&&(e=this.translator).translate.apply(e,arguments)}},{key:\"exists\",value:function(){var e;return this.translator&&(e=this.translator).exists.apply(e,arguments)}},{key:\"setDefaultNamespace\",value:function(e){this.options.defaultNS=e}},{key:\"hasLoadedNamespace\",value:function(e){var t=this;if(!this.isInitialized)return this.logger.warn(\"hasLoadedNamespace: i18next was not initialized\",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn(\"hasLoadedNamespace: i18n.languages were undefined or empty\",this.languages),!1;var n=this.languages[0],o=!!this.options&&this.options.fallbackLng,i=this.languages[this.languages.length-1];if(\"cimode\"===n.toLowerCase())return!0;var r=function(e,n){var o=t.services.backendConnector.state[\"\".concat(e,\"|\").concat(n)];return-1===o||2===o};return!!this.hasResourceBundle(n,e)||(!this.services.backendConnector.backend||!(!r(n,e)||o&&!r(i,e)))}},{key:\"loadNamespaces\",value:function(e,t){var n=this,o=v();return this.options.ns?(\"string\"==typeof e&&(e=[e]),e.forEach(function(e){n.options.ns.indexOf(e)<0&&n.options.ns.push(e)}),this.loadResources(function(e){o.resolve(),t&&t(e)}),o):(t&&t(),Promise.resolve())}},{key:\"loadLanguages\",value:function(e,t){var n=v();\"string\"==typeof e&&(e=[e]);var o=this.options.preload||[],i=e.filter(function(e){return o.indexOf(e)<0});return i.length?(this.options.preload=o.concat(i),this.loadResources(function(e){n.resolve(),t&&t(e)}),n):(t&&t(),Promise.resolve())}},{key:\"dir\",value:function(e){if(e||(e=this.languages&&this.languages.length>0?this.languages[0]:this.language),!e)return\"rtl\";return[\"ar\",\"shu\",\"sqr\",\"ssh\",\"xaa\",\"yhd\",\"yud\",\"aao\",\"abh\",\"abv\",\"acm\",\"acq\",\"acw\",\"acx\",\"acy\",\"adf\",\"ads\",\"aeb\",\"aec\",\"afb\",\"ajp\",\"apc\",\"apd\",\"arb\",\"arq\",\"ars\",\"ary\",\"arz\",\"auz\",\"avl\",\"ayh\",\"ayl\",\"ayn\",\"ayp\",\"bbz\",\"pga\",\"he\",\"iw\",\"ps\",\"pbt\",\"pbu\",\"pst\",\"prp\",\"prd\",\"ur\",\"ydd\",\"yds\",\"yih\",\"ji\",\"yi\",\"hbo\",\"men\",\"xmn\",\"fa\",\"jpr\",\"peo\",\"pes\",\"prs\",\"dv\",\"sam\"].indexOf(this.services.languageUtils.getLanguagePartFromCode(e))>=0?\"rtl\":\"ltr\"}},{key:\"createInstance\",value:function(){return new n(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1?arguments[1]:void 0)}},{key:\"cloneInstance\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:I,r=o({},this.options,t,{isClone:!0}),a=new n(r);return[\"store\",\"services\",\"language\"].forEach(function(t){a[t]=e[t]}),a.translator=new j(a.services,a.options),a.translator.on(\"*\",function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];a.emit.apply(a,[e].concat(n))}),a.init(r,i),a.translator.options=a.options,a}}]),n}())});\n\n\n//# sourceURL=webpack:///./libs/i18next.min.js?");

/***/ }),

/***/ "./libs/i18nextBrowserLanguageDetector.min.js":
/*!****************************************************!*\
  !*** ./libs/i18nextBrowserLanguageDetector.min.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,o){ true?module.exports=o():undefined}(this,(function(){\"use strict\";function e(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=[],t=o.forEach,n=o.slice;function a(e){return t.call(n.call(arguments,1),(function(o){if(o)for(var t in o)void 0===e[t]&&(e[t]=o[t])})),e}var i,r=function(e,o,t,n){var a;if(t){var i=new Date;i.setTime(i.getTime()+60*t*1e3),a=\"; expires=\"+i.toGMTString()}else a=\"\";n=n?\"domain=\"+n+\";\":\"\",document.cookie=e+\"=\"+o+a+\";\"+n+\"path=/\"},u=function(e){for(var o=e+\"=\",t=document.cookie.split(\";\"),n=0;n<t.length;n++){for(var a=t[n];\" \"===a.charAt(0);)a=a.substring(1,a.length);if(0===a.indexOf(o))return a.substring(o.length,a.length)}return null},c={name:\"cookie\",lookup:function(e){var o;if(e.lookupCookie&&\"undefined\"!=typeof document){var t=u(e.lookupCookie);t&&(o=t)}return o},cacheUserLanguage:function(e,o){o.lookupCookie&&\"undefined\"!=typeof document&&r(o.lookupCookie,e,o.cookieMinutes,o.cookieDomain)}},l={name:\"querystring\",lookup:function(e){var o;if(\"undefined\"!=typeof window)for(var t=window.location.search.substring(1).split(\"&\"),n=0;n<t.length;n++){var a=t[n].indexOf(\"=\");if(a>0)t[n].substring(0,a)===e.lookupQuerystring&&(o=t[n].substring(a+1))}return o}};try{i=\"undefined\"!==window&&null!==window.localStorage;window.localStorage.setItem(\"i18next.translate.boo\",\"foo\"),window.localStorage.removeItem(\"i18next.translate.boo\")}catch(e){i=!1}var s={name:\"localStorage\",lookup:function(e){var o;if(e.lookupLocalStorage&&i){var t=window.localStorage.getItem(e.lookupLocalStorage);t&&(o=t)}return o},cacheUserLanguage:function(e,o){o.lookupLocalStorage&&i&&window.localStorage.setItem(o.lookupLocalStorage,e)}},f={name:\"navigator\",lookup:function(e){var o=[];if(\"undefined\"!=typeof navigator){if(navigator.languages)for(var t=0;t<navigator.languages.length;t++)o.push(navigator.languages[t]);navigator.userLanguage&&o.push(navigator.userLanguage),navigator.language&&o.push(navigator.language)}return o.length>0?o:void 0}},d={name:\"htmlTag\",lookup:function(e){var o,t=e.htmlTag||(\"undefined\"!=typeof document?document.documentElement:null);return t&&\"function\"==typeof t.getAttribute&&(o=t.getAttribute(\"lang\")),o}},g={name:\"path\",lookup:function(e){var o;if(\"undefined\"!=typeof window){var t=window.location.pathname.match(/\\/([a-zA-Z-]*)/g);if(t instanceof Array)if(\"number\"==typeof e.lookupFromPathIndex){if(\"string\"!=typeof t[e.lookupFromPathIndex])return;o=t[e.lookupFromPathIndex].replace(\"/\",\"\")}else o=t[0].replace(\"/\",\"\")}return o}},p={name:\"subdomain\",lookup:function(e){var o;if(\"undefined\"!=typeof window){var t=window.location.href.match(/(?:http[s]*\\:\\/\\/)*(.*?)\\.(?=[^\\/]*\\..{2,5})/gi);t instanceof Array&&(o=\"number\"==typeof e.lookupFromSubdomainIndex?t[e.lookupFromSubdomainIndex].replace(\"http://\",\"\").replace(\"https://\",\"\").replace(\".\",\"\"):t[0].replace(\"http://\",\"\").replace(\"https://\",\"\").replace(\".\",\"\"))}return o}};var h=function(){function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(e,o){if(!(e instanceof o))throw new TypeError(\"Cannot call a class as a function\")}(this,o),this.type=\"languageDetector\",this.detectors={},this.init(e,t)}var t,n,i;return t=o,(n=[{key:\"init\",value:function(e){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.services=e,this.options=a(o,this.options||{},{order:[\"querystring\",\"cookie\",\"localStorage\",\"navigator\",\"htmlTag\"],lookupQuerystring:\"lng\",lookupCookie:\"i18next\",lookupLocalStorage:\"i18nextLng\",caches:[\"localStorage\"],excludeCacheFor:[\"cimode\"],checkWhitelist:!0}),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=t,this.addDetector(c),this.addDetector(l),this.addDetector(s),this.addDetector(f),this.addDetector(d),this.addDetector(g),this.addDetector(p)}},{key:\"addDetector\",value:function(e){this.detectors[e.name]=e}},{key:\"detect\",value:function(e){var o=this;e||(e=this.options.order);var t,n=[];if(e.forEach((function(e){if(o.detectors[e]){var t=o.detectors[e].lookup(o.options);t&&\"string\"==typeof t&&(t=[t]),t&&(n=n.concat(t))}})),n.forEach((function(e){if(!t){var n=o.services.languageUtils.formatLanguageCode(e);o.options.checkWhitelist&&!o.services.languageUtils.isWhitelisted(n)||(t=n)}})),!t){var a=this.i18nOptions.fallbackLng;\"string\"==typeof a&&(a=[a]),a||(a=[]),t=\"[object Array]\"===Object.prototype.toString.apply(a)?a[0]:a[0]||a.default&&a.default[0]}return t}},{key:\"cacheUserLanguage\",value:function(e,o){var t=this;o||(o=this.options.caches),o&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(e)>-1||o.forEach((function(o){t.detectors[o]&&t.detectors[o].cacheUserLanguage(e,t.options)})))}}])&&e(t.prototype,n),i&&e(t,i),o}();return h.type=\"languageDetector\",h}));\n\n\n//# sourceURL=webpack:///./libs/i18nextBrowserLanguageDetector.min.js?");

/***/ }),

/***/ "./libs/lowlight.astar.min.js":
/*!************************************!*\
  !*** ./libs/lowlight.astar.min.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\nCopyright 2017, Lecoq Simon (lowlight.fr)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n(function(a){var b=Math.sign,c=Math.min,d=Math.abs;\"undefined\"==typeof a.Lowlight&&(a.Lowlight={}), true&&\"object\"==typeof module.exports&&(module.exports=a.Lowlight);class e{constructor(){this.nodes=new Map}id(a){return a}node(a,b=!1){return b?this.nodes.get(this.id(arguments[0])):this.nodes.get(a)}data(a,b){return 2===arguments.length&&(a.graph.get(this)._data=b),a.graph.get(this)._data}adjacent(c,a){return c.graph.get(this).has(a)}neighbors(a){return Array.from(a.graph.get(this).keys())}connected(c,a){return c.graph.get(this)._connectivity===a.graph.get(this)._connectivity}connect(){let a=Array.from(this.nodes.values()),b=0;for(let b=0;b<a.length;b++)a[b].graph.get(this)._connectivity=void 0;for(let c=0;c<a.length;c++){if(void 0!==a[c].graph.get(this)._connectivity)continue;let d=[a[c]];for(b++;d.length;){let a=d.shift();a.graph.get(this)._connectivity=b,this.neighbors(a).map((a)=>{void 0===a.graph.get(this)._connectivity&&0>d.indexOf(a)&&d.push(a)})}}}add(a){return 1<arguments.length?Array.from(arguments).map((a)=>this.add(a)):(a.graph.set(this,new Map),this.nodes.set(a.id,a),a)}delete(a){return 1<arguments.length?Array.from(arguments).map((a)=>this.delete(a)):(a.graph.delete(this),this.nodes.delete(a.id),a)}edge(c,a,b=1,d=1){if(!c.graph.has(this)||!a.graph.has(this))throw new Error(\"Nodes must be on the same graph\");return null===b?c.graph.get(this).delete(a):c.graph.get(this).set(a,b),null===d?a.graph.get(this).delete(c):a.graph.get(this).set(c,d),this}cost(c,a){return this.adjacent(c,a)?c.graph.get(this).get(a):null}}e.fromArray=function(a,b={}){let c=e.fromArray.X(a,b.order),d=e.fromArray.Y(a,b.order),g=e.fromArray.at.bind(null,a,b.order),h=[],j=null;for(let k,l=1;l<Math.max(2,arguments.length);l++){k=new e,h.push(k),b=arguments[l]||{};let a=e.fromArray.id.bind(null,c,d,b.torus),i=b.cost||e.fromArray.cost,n=e.fromArray.edge.bind(null,k,i);for(let b=0;b<c;b++)for(let c,e=0;e<d;e++)c=k.add(j?j.get(a(b,e)):new f(a(b,e))),c.x=b,c.y=e,c.graph.get(k)._data=g(b,e),n(c,k.nodes.get(a(b-1,e))),n(c,k.nodes.get(a(b+1,e))),n(c,k.nodes.get(a(b,e-1))),n(c,k.nodes.get(a(b,e+1)));if(b.diagonals)for(let e=0;e<c;e++)for(let c=0;c<d;c++){let d=k.nodes.get(a(e,c)),f=k.adjacent(d,k.nodes.get(a(e-1,c))),g=k.adjacent(d,k.nodes.get(a(e+1,c))),h=k.adjacent(d,k.nodes.get(a(e,c-1))),i=k.adjacent(d,k.nodes.get(a(e,c+1)));\"strict\"===b.cutting?(f&&h&&n(d,k.nodes.get(a(e-1,c-1))),f&&i&&n(d,k.nodes.get(a(e-1,c+1))),g&&h&&n(d,k.nodes.get(a(e+1,c-1))),g&&i&&n(d,k.nodes.get(a(e+1,c+1)))):((f||h||b.cutting)&&n(d,k.nodes.get(a(e-1,c-1))),(f||i||b.cutting)&&n(d,k.nodes.get(a(e-1,c+1))),(g||h||b.cutting)&&n(d,k.nodes.get(a(e+1,c-1))),(g||i||b.cutting)&&n(d,k.nodes.get(a(e+1,c+1))))}Object.defineProperty(k,\"id\",{enumerable:!1,configurable:!1,writable:!0,value(b){return a(b.x,b.y)}}),k.connect(),k.X=c,k.Y=d,k.TORUS=b.torus,j||(j=k.nodes)}return 1<h.length?h:h[0]},e.fromArray.X=function(a,b=\"yx\"){return\"xy\"===b?a.length:\"yx\"===b?a[0].length:0},e.fromArray.Y=function(a,b=\"yx\"){return\"xy\"===b?a[0].length:\"yx\"===b?a.length:0},e.fromArray.at=function(a,b=\"yx\",c,d){return\"xy\"===b?a[c][d]:a[d][c]},e.fromArray.id=function(a=0,b=0,c=!1,d,e){return c?(e+b)%b*a+(d+a)%a:0<=d&&d<a&&0<=e&&e<b?e*a+d:null},e.fromArray.cost=function(){return 1},e.fromArray.edge=function(c,d,e,a){a&&c.edge(e,a,d(c.data(e),c.data(a)),d(c.data(a),c.data(e)))},e.fromArray.update=function(){console.warn(\"Graph.fromArray isn't implemented yet\")};class f{constructor(a,b){for(let c in this.id=a,this.graph=new Map,b)\"id\"!=c&&\"graph\"!=c&&(this[c]=b[c])}}class g{constructor(a){this.nodes=[],this.score=\"function\"==typeof a?a:(b)=>+b}get size(){return this.nodes.length}add(a){if(1<arguments.length){for(let a=0;a<arguments.length;a++)this.add(arguments[a]);return this}return this.nodes.push(a),this.bubble(this.size-1)}set(a){let b=this.nodes.indexOf(a);return~b?this.score(a)<=this.score(this.nodes[b])?this.bubble(this.nodes.indexOf(a)):this.sink(this.nodes.indexOf(a)):this.add(a)}pop(){let a=this.nodes[0],b=this.nodes.pop();return 0<this.size&&(this.nodes[0]=b,this.sink(0)),a}top(){return this.nodes[0]}delete(a){if(1<arguments.length){for(let a=0;a<arguments.length;a++)this.delete(arguments[a]);return this}for(let b=0;b<this.size;b++){if(this.nodes[b]!=a)continue;let c=this.nodes.pop();return b==this.size-1?this:(this.nodes[b]=c,this.bubble(b).sink(b))}}bubble(a){let b=this.nodes[a],c=this.score(b);for(;0<a;){let d=Math.floor((a+1)/2)-1,e=this.nodes[d];if(c>=this.score(e))break;this.nodes[d]=b,this.nodes[a]=e,a=d}return this}sink(a){let b=this.nodes[a],c=this.score(b);for(;;){let d=2*(a+1),e=d-1,f=null;if(e<this.size&&this.score(this.nodes[e])<c&&(f=e),d<this.size&&this.score(this.nodes[d])<(f?this.score(this.nodes[f]):c)&&(f=d),null===f)break;this.nodes[a]=this.nodes[f],this.nodes[f]=b,a=f}return this}}let h={manhattan:function(c,a,b={}){let e=d(a.x-c.x),f=d(a.y-c.y);return(b.multiplier||1)*(e+f)},manhattanTorus:function(e,a,b={}){let f=c(d(a.x-e.x),a.x+(b.x||0)-e.x,e.x+(b.x||0)-a.x),g=c(d(a.y-e.y),a.y+(b.y||0)-e.y,e.y+(b.y||0)-a.y);return(b.multiplier||1)*(f+g)},diagonal:function(e,a,b={}){let f=d(a.x-e.x),g=d(a.y-e.y);return m*(f+g)+(dm-2*m)*c(f,g)},diagonalTorus:function(e,a,b={}){let f=c(d(a.x-e.x),a.x+(b.x||0)-e.x,e.x+(b.x||0)-a.x),g=c(d(a.y-e.y),a.y+(b.y||0)-e.y,e.y+(b.y||0)-a.y);return(b.multiplier||1)*(f+g)+((b.diagonalMultiplier||1.4)-2*(b.multiplier||1))*c(f,g)},euclidian:function(c,a,b={}){let e=d(a.x-c.x),f=d(a.y-c.y);return(b.multiplier||1)*Math.sqrt(e*e+f*f)},euclidianTorus:function(e,a,b={}){let f=c(d(a.x-e.x),a.x+(b.x||0)-e.x,e.x+(b.x||0)-a.x),g=c(d(a.y-e.y),a.y+(b.y||0)-e.y,e.y+(b.y||0)-a.y);return(b.multiplier||1)*(f+g)+((b.diagonalMultiplier||1.4)-2*(b.multiplier||1))*c(f,g)}};class i extends Error{constructor(a){super(a),this.name=\"WorkerError\"}}class j{constructor(a,b={}){if(this.graphs=[],this.heuristic=b.heuristic||\"manhattan\",this.heuristicOptions=b.heuristicOptions||{},Array.isArray(a)&&(this.heuristic=b.heuristic in h?b.heuristic:b.diagonals?b.torus?\"diagonalTorus\":\"diagonal\":b.torus?\"manhattanTorus\":\"manhattan\",this.heuristicOptions.x=e.fromArray.X(a,b.order),this.heuristicOptions.y=e.fromArray.Y(a,b.order),this.graphs=e.fromArray.apply(this,arguments),!Array.isArray(this.graphs)&&(this.graphs=[this.graphs])),b.thread&&(\"undefined\"==typeof WorkerGlobalScope||!(self instanceof WorkerGlobalScope))){this.worker=null;try{this.worker=new Worker(b.thread)}catch(a){throw\"file:\"===window.location.protocol&&console.warn(\"WebWorkers in local files may not be supported by your browser.\"),new i(`${b.thread} couldn't be opened.`)}\"cost\"in b&&(b.cost=b.cost.toString()),this.worker.postMessage([\"constructor\",a,b]),this.path=(a,b,c={})=>{this._worker_path_callback=c.callback,delete c.callback,this.worker.postMessage([\"path\",a,b,c])},this.worker.onmessage=(a)=>{let b=JSON.parse(a.data);switch(b[0]){case\"path\":this._worker_path_callback(b[1]);}}}}path(a,b,c={}){if(c.jps)return this.jps(a,b,c);let d=new g((a)=>a.estimated),e=new Map,f=this.graphs[c.layer||0];if(a=f.node(a,!0),b=f.node(b,!0),d.add({node:a,estimated:0}),e.set(a,{score:0,from:null}),!c.static||f.connected(a,b))for(;d.size;){let a=d.pop().node;if(a===b)break;f.neighbors(a).map((g)=>{let i=(e.has(a)?e.get(a).score:0)+f.cost(a,g);i<(e.has(g)?e.get(g).score:Infinity)&&(e.set(g,{score:i,from:a}),d.set({node:g,estimated:i+h[c.heuristic||this.heuristic](g,b,c.heuristicOptions||this.heuristicOptions)}))}),d.delete(a)}let i=[];if(e.has(b)){let a=b;for(i.push(b);null!==(a=e.get(a).from);)i.push(a);i=i.reverse()}return c.callback&&c.callback(i,e),i}}if(j.JPS=class{constructor(){}static access(c,d,a,b){return c.adjacent(d,b?c.node(a,!0):a)}static neighborhood(a,c,d,e){let f=[],g=d.get(e).from||null;if(null!==g){let h={x:b(e.x-g.x),y:b(e.y-g.y)};if(0!=h.x&&0!=h.y){let b=a(e,{x:e.x+h.x,y:e.y},!0),d=a(e,{x:e.x,y:e.y+h.y},!0);(b||d)&&(f.push(c.node({x:e.x+h.x,y:e.y+h.y},!0)),b&&(f.push(c.node({x:e.x+h.x,y:e.y},!0)),!a(e,{x:e.x,y:e.y-h.y},!0)&&f.push(c.node({x:e.x+h.x,y:e.y-h.y},!0))),d&&(f.push(c.node({x:e.x,y:e.y+h.y},!0)),!a(e,{x:e.x-h.x,y:e.y},!0)&&f.push(c.node({x:e.x-h.x,y:e.y+h.y},!0))))}else a(e,{x:e.x+h.x,y:e.y+h.y},!0)&&(f.push(c.node({x:e.x+h.x,y:e.y+h.y},!0)),0==h.x?0!=h.y&&(!a(e,{x:e.x-1,y:e.y},!0)&&f.push(c.node({x:e.x-1,y:e.y+h.y},!0)),!a(e,{x:e.x+1,y:e.y},!0)&&f.push(c.node({x:e.x+1,y:e.y+h.y},!0))):(!a(e,{x:e.x,y:e.y-1},!0)&&f.push(c.node({x:e.x+h.x,y:e.y-1},!0)),!a(e,{x:e.x,y:e.y+1},!0)&&f.push(c.node({x:e.x+h.x,y:e.y+1},!0))))}else return c.neighbors(e);return f.filter((a)=>a)}static jump(a,c,e,f,g,h){for(;;){if(!a(h,g))return null;if(g.x===f.x&&g.y===f.y)return g;let i={x:b(g.x-h.x),y:b(g.y-h.y)};if(0!=i.x&&0!=i.y){if(!a(g,{x:g.x-i.x,y:g.y},!0)&&a(g,{x:g.x-i.x,y:g.y+i.y},!0)||!a(g,{x:g.x,y:g.y-i.y},!0)&&a(g,{x:g.x+i.x,y:g.y-i.y},!0))return g;let b=j.JPS.jump.bind(this,a,c,e,f);if(null!==b(c.node({x:g.x+i.x,y:g.y},!0),g)||null!==b(c.node({x:g.x,y:g.y+i.y},!0),g))return g}else if(0!=i.x){if(!a(g,{x:g.x,y:g.y-1},!0)&&a(g,{x:g.x+i.x,y:g.y-1},!0)||!a(g,{x:g.x,y:g.y+1},!0)&&a(g,{x:g.x+i.x,y:g.y+1},!0))return g;}else if(0!=i.y&&(!a(g,{x:g.x-1,y:g.y},!0)&&a(g,{x:g.x-1,y:g.y+i.y},!0)||!a(g,{x:g.x+1,y:g.y},!0)&&a(g,{x:g.x+1,y:g.y+i.y},!0)))return g;h=g,g=c.node({x:g.x+i.x,y:g.y+i.y},!0)}return null}},j.prototype.jps=function(a,c,d={}){if(this.graphs[d.layer||0].TORUS)return console.warn(\"Torus map aren't yet supported by JPS\"),d.callback&&d.callback([],new Map),[];let e=new g((a)=>a.estimated),f=new Map,i=this.graphs[d.layer||0],k=null;a=i.node(a,!0),c=i.node(c,!0),e.add({node:a,estimated:0}),f.set(a,{score:0,from:null});let l=j.JPS.access.bind(this,i),n=j.JPS.neighborhood.bind(this,l,i,f),o=j.JPS.jump.bind(this,l,i,f,c);if(!d.static||i.connected(a,c))for(;e.size;){let a=e.pop().node;if(a===c)break;n(a).map((b)=>{if(null!==(k=o(b,a))){let b=(f.has(a)?f.get(a).score:0)+i.cost(a,k);b<(f.has(k)?f.get(k).score:Infinity)&&(f.set(k,{score:b,from:a,jumped:!0}),e.set({node:k,estimated:b+h[d.heuristic||this.heuristic](k,c,d.heuristicOptions||this.heuristicOptions)}))}}),e.delete(a)}let p=[];if(f.has(c)){let d=c;for(;d.x!=a.x||d.y!=a.y;)for(let a=f.get(d).from;d.x!=a.x||d.y!=a.y;)p.push(d),d=i.node({x:d.x+b(a.x-d.x),y:d.y+b(a.y-d.y)},!0);p.push(d),p.reverse()}return d.callback&&d.callback(p,f),p},\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope){let a;onmessage=function(b){let c=b.data;switch(c[0]){case\"constructor\":if(\"cost\"in c[2]){let a=/^\\((.*?)\\)\\s*=>\\s*{/.test(c[2].cost),b=/^function /.test(c[2].cost);c[2].cost=eval(`(${a||b?\"\":\"function \"}${c[2].cost})`)}a=new j(c[1],c[2]);break;case\"path\":postMessage(JSON.stringify([\"path\",a.path(c[1],c[2],c[3])]));}}}a.Lowlight.Astar={Graph:e,Node:f,BinaryHeap:g,Heuristic:h,Configuration:j,WorkerError:i}})(\"undefined\"==typeof window?this:window);\n\n//# sourceURL=webpack:///./libs/lowlight.astar.min.js?");

/***/ }),

/***/ "./libs/socket.io.js":
/*!***************************!*\
  !*** ./libs/socket.io.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/*!\n * Socket.IO v2.3.0\n * (c) 2014-2019 Guillermo Rauch\n * Released under the MIT License.\n */\n!function(t,e){ true?module.exports=e():undefined}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){function r(t,e){\"object\"==typeof t&&(e=t,t=void 0),e=e||{};var n,r=o(t),i=r.source,u=r.id,p=r.path,h=c[u]&&p in c[u].nsps,f=e.forceNew||e[\"force new connection\"]||!1===e.multiplex||h;return f?(a(\"ignoring socket cache for %s\",i),n=s(i,e)):(c[u]||(a(\"new io instance for %s\",i),c[u]=s(i,e)),n=c[u]),r.query&&!e.query&&(e.query=r.query),n.socket(r.path,e)}var o=n(1),i=n(7),s=n(15),a=n(3)(\"socket.io-client\");t.exports=e=r;var c=e.managers={};e.protocol=i.protocol,e.connect=r,e.Manager=n(15),e.Socket=n(39)},function(t,e,n){function r(t,e){var n=t;e=e||\"undefined\"!=typeof location&&location,null==t&&(t=e.protocol+\"//\"+e.host),\"string\"==typeof t&&(\"/\"===t.charAt(0)&&(t=\"/\"===t.charAt(1)?e.protocol+t:e.host+t),/^(https?|wss?):\\/\\//.test(t)||(i(\"protocol-less url %s\",t),t=\"undefined\"!=typeof e?e.protocol+\"//\"+t:\"https://\"+t),i(\"parse %s\",t),n=o(t)),n.port||(/^(http|ws)$/.test(n.protocol)?n.port=\"80\":/^(http|ws)s$/.test(n.protocol)&&(n.port=\"443\")),n.path=n.path||\"/\";var r=n.host.indexOf(\":\")!==-1,s=r?\"[\"+n.host+\"]\":n.host;return n.id=n.protocol+\"://\"+s+\":\"+n.port,n.href=n.protocol+\"://\"+s+(e&&e.port===n.port?\"\":\":\"+n.port),n}var o=n(2),i=n(3)(\"socket.io-client:url\");t.exports=r},function(t,e){var n=/^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/,r=[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"];t.exports=function(t){var e=t,o=t.indexOf(\"[\"),i=t.indexOf(\"]\");o!=-1&&i!=-1&&(t=t.substring(0,o)+t.substring(o,i).replace(/:/g,\";\")+t.substring(i,t.length));for(var s=n.exec(t||\"\"),a={},c=14;c--;)a[r[c]]=s[c]||\"\";return o!=-1&&i!=-1&&(a.source=e,a.host=a.host.substring(1,a.host.length-1).replace(/;/g,\":\"),a.authority=a.authority.replace(\"[\",\"\").replace(\"]\",\"\").replace(/;/g,\":\"),a.ipv6uri=!0),a}},function(t,e,n){(function(r){\"use strict\";function o(){return!(\"undefined\"==typeof window||!window.process||\"renderer\"!==window.process.type&&!window.process.__nwjs)||(\"undefined\"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))&&(\"undefined\"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/))}function i(e){if(e[0]=(this.useColors?\"%c\":\"\")+this.namespace+(this.useColors?\" %c\":\" \")+e[0]+(this.useColors?\"%c \":\" \")+\"+\"+t.exports.humanize(this.diff),this.useColors){var n=\"color: \"+this.color;e.splice(1,0,n,\"color: inherit\");var r=0,o=0;e[0].replace(/%[a-zA-Z%]/g,function(t){\"%%\"!==t&&(r++,\"%c\"===t&&(o=r))}),e.splice(o,0,n)}}function s(){var t;return\"object\"===(\"undefined\"==typeof console?\"undefined\":p(console))&&console.log&&(t=console).log.apply(t,arguments)}function a(t){try{t?e.storage.setItem(\"debug\",t):e.storage.removeItem(\"debug\")}catch(n){}}function c(){var t=void 0;try{t=e.storage.getItem(\"debug\")}catch(n){}return!t&&\"undefined\"!=typeof r&&\"env\"in r&&(t=r.env.DEBUG),t}function u(){try{return localStorage}catch(t){}}var p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t};e.log=s,e.formatArgs=i,e.save=a,e.load=c,e.useColors=o,e.storage=u(),e.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"],t.exports=n(5)(e);var h=t.exports.formatters;h.j=function(t){try{return JSON.stringify(t)}catch(e){return\"[UnexpectedJSONParseError]: \"+e.message}}}).call(e,n(4))},function(t,e){function n(){throw new Error(\"setTimeout has not been defined\")}function r(){throw new Error(\"clearTimeout has not been defined\")}function o(t){if(p===setTimeout)return setTimeout(t,0);if((p===n||!p)&&setTimeout)return p=setTimeout,setTimeout(t,0);try{return p(t,0)}catch(e){try{return p.call(null,t,0)}catch(e){return p.call(this,t,0)}}}function i(t){if(h===clearTimeout)return clearTimeout(t);if((h===r||!h)&&clearTimeout)return h=clearTimeout,clearTimeout(t);try{return h(t)}catch(e){try{return h.call(null,t)}catch(e){return h.call(this,t)}}}function s(){y&&l&&(y=!1,l.length?d=l.concat(d):m=-1,d.length&&a())}function a(){if(!y){var t=o(s);y=!0;for(var e=d.length;e;){for(l=d,d=[];++m<e;)l&&l[m].run();m=-1,e=d.length}l=null,y=!1,i(t)}}function c(t,e){this.fun=t,this.array=e}function u(){}var p,h,f=t.exports={};!function(){try{p=\"function\"==typeof setTimeout?setTimeout:n}catch(t){p=n}try{h=\"function\"==typeof clearTimeout?clearTimeout:r}catch(t){h=r}}();var l,d=[],y=!1,m=-1;f.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];d.push(new c(t,e)),1!==d.length||y||o(a)},c.prototype.run=function(){this.fun.apply(null,this.array)},f.title=\"browser\",f.browser=!0,f.env={},f.argv=[],f.version=\"\",f.versions={},f.on=u,f.addListener=u,f.once=u,f.off=u,f.removeListener=u,f.removeAllListeners=u,f.emit=u,f.prependListener=u,f.prependOnceListener=u,f.listeners=function(t){return[]},f.binding=function(t){throw new Error(\"process.binding is not supported\")},f.cwd=function(){return\"/\"},f.chdir=function(t){throw new Error(\"process.chdir is not supported\")},f.umask=function(){return 0}},function(t,e,n){\"use strict\";function r(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function o(t){function e(t){for(var e=0,n=0;n<t.length;n++)e=(e<<5)-e+t.charCodeAt(n),e|=0;return o.colors[Math.abs(e)%o.colors.length]}function o(t){function n(){for(var t=arguments.length,e=Array(t),i=0;i<t;i++)e[i]=arguments[i];if(n.enabled){var s=n,a=Number(new Date),c=a-(r||a);s.diff=c,s.prev=r,s.curr=a,r=a,e[0]=o.coerce(e[0]),\"string\"!=typeof e[0]&&e.unshift(\"%O\");var u=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,function(t,n){if(\"%%\"===t)return t;u++;var r=o.formatters[n];if(\"function\"==typeof r){var i=e[u];t=r.call(s,i),e.splice(u,1),u--}return t}),o.formatArgs.call(s,e);var p=s.log||o.log;p.apply(s,e)}}var r=void 0;return n.namespace=t,n.enabled=o.enabled(t),n.useColors=o.useColors(),n.color=e(t),n.destroy=i,n.extend=s,\"function\"==typeof o.init&&o.init(n),o.instances.push(n),n}function i(){var t=o.instances.indexOf(this);return t!==-1&&(o.instances.splice(t,1),!0)}function s(t,e){var n=o(this.namespace+(\"undefined\"==typeof e?\":\":e)+t);return n.log=this.log,n}function a(t){o.save(t),o.names=[],o.skips=[];var e=void 0,n=(\"string\"==typeof t?t:\"\").split(/[\\s,]+/),r=n.length;for(e=0;e<r;e++)n[e]&&(t=n[e].replace(/\\*/g,\".*?\"),\"-\"===t[0]?o.skips.push(new RegExp(\"^\"+t.substr(1)+\"$\")):o.names.push(new RegExp(\"^\"+t+\"$\")));for(e=0;e<o.instances.length;e++){var i=o.instances[e];i.enabled=o.enabled(i.namespace)}}function c(){var t=[].concat(r(o.names.map(p)),r(o.skips.map(p).map(function(t){return\"-\"+t}))).join(\",\");return o.enable(\"\"),t}function u(t){if(\"*\"===t[t.length-1])return!0;var e=void 0,n=void 0;for(e=0,n=o.skips.length;e<n;e++)if(o.skips[e].test(t))return!1;for(e=0,n=o.names.length;e<n;e++)if(o.names[e].test(t))return!0;return!1}function p(t){return t.toString().substring(2,t.toString().length-2).replace(/\\.\\*\\?$/,\"*\")}function h(t){return t instanceof Error?t.stack||t.message:t}return o.debug=o,o[\"default\"]=o,o.coerce=h,o.disable=c,o.enable=a,o.enabled=u,o.humanize=n(6),Object.keys(t).forEach(function(e){o[e]=t[e]}),o.instances=[],o.names=[],o.skips=[],o.formatters={},o.selectColor=e,o.enable(o.load()),o}t.exports=o},function(t,e){function n(t){if(t=String(t),!(t.length>100)){var e=/^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(e){var n=parseFloat(e[1]),r=(e[2]||\"ms\").toLowerCase();switch(r){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return n*h;case\"weeks\":case\"week\":case\"w\":return n*p;case\"days\":case\"day\":case\"d\":return n*u;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return n*c;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return n*a;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return n*s;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return n;default:return}}}}function r(t){var e=Math.abs(t);return e>=u?Math.round(t/u)+\"d\":e>=c?Math.round(t/c)+\"h\":e>=a?Math.round(t/a)+\"m\":e>=s?Math.round(t/s)+\"s\":t+\"ms\"}function o(t){var e=Math.abs(t);return e>=u?i(t,e,u,\"day\"):e>=c?i(t,e,c,\"hour\"):e>=a?i(t,e,a,\"minute\"):e>=s?i(t,e,s,\"second\"):t+\" ms\"}function i(t,e,n,r){var o=e>=1.5*n;return Math.round(t/n)+\" \"+r+(o?\"s\":\"\")}var s=1e3,a=60*s,c=60*a,u=24*c,p=7*u,h=365.25*u;t.exports=function(t,e){e=e||{};var i=typeof t;if(\"string\"===i&&t.length>0)return n(t);if(\"number\"===i&&isFinite(t))return e[\"long\"]?o(t):r(t);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(t))}},function(t,e,n){function r(){}function o(t){var n=\"\"+t.type;if(e.BINARY_EVENT!==t.type&&e.BINARY_ACK!==t.type||(n+=t.attachments+\"-\"),t.nsp&&\"/\"!==t.nsp&&(n+=t.nsp+\",\"),null!=t.id&&(n+=t.id),null!=t.data){var r=i(t.data);if(r===!1)return g;n+=r}return f(\"encoded %j as %s\",t,n),n}function i(t){try{return JSON.stringify(t)}catch(e){return!1}}function s(t,e){function n(t){var n=d.deconstructPacket(t),r=o(n.packet),i=n.buffers;i.unshift(r),e(i)}d.removeBlobs(t,n)}function a(){this.reconstructor=null}function c(t){var n=0,r={type:Number(t.charAt(0))};if(null==e.types[r.type])return h(\"unknown packet type \"+r.type);if(e.BINARY_EVENT===r.type||e.BINARY_ACK===r.type){for(var o=\"\";\"-\"!==t.charAt(++n)&&(o+=t.charAt(n),n!=t.length););if(o!=Number(o)||\"-\"!==t.charAt(n))throw new Error(\"Illegal attachments\");r.attachments=Number(o)}if(\"/\"===t.charAt(n+1))for(r.nsp=\"\";++n;){var i=t.charAt(n);if(\",\"===i)break;if(r.nsp+=i,n===t.length)break}else r.nsp=\"/\";var s=t.charAt(n+1);if(\"\"!==s&&Number(s)==s){for(r.id=\"\";++n;){var i=t.charAt(n);if(null==i||Number(i)!=i){--n;break}if(r.id+=t.charAt(n),n===t.length)break}r.id=Number(r.id)}if(t.charAt(++n)){var a=u(t.substr(n)),c=a!==!1&&(r.type===e.ERROR||y(a));if(!c)return h(\"invalid payload\");r.data=a}return f(\"decoded %s as %j\",t,r),r}function u(t){try{return JSON.parse(t)}catch(e){return!1}}function p(t){this.reconPack=t,this.buffers=[]}function h(t){return{type:e.ERROR,data:\"parser error: \"+t}}var f=n(8)(\"socket.io-parser\"),l=n(11),d=n(12),y=n(13),m=n(14);e.protocol=4,e.types=[\"CONNECT\",\"DISCONNECT\",\"EVENT\",\"ACK\",\"ERROR\",\"BINARY_EVENT\",\"BINARY_ACK\"],e.CONNECT=0,e.DISCONNECT=1,e.EVENT=2,e.ACK=3,e.ERROR=4,e.BINARY_EVENT=5,e.BINARY_ACK=6,e.Encoder=r,e.Decoder=a;var g=e.ERROR+'\"encode error\"';r.prototype.encode=function(t,n){if(f(\"encoding packet %j\",t),e.BINARY_EVENT===t.type||e.BINARY_ACK===t.type)s(t,n);else{var r=o(t);n([r])}},l(a.prototype),a.prototype.add=function(t){var n;if(\"string\"==typeof t)n=c(t),e.BINARY_EVENT===n.type||e.BINARY_ACK===n.type?(this.reconstructor=new p(n),0===this.reconstructor.reconPack.attachments&&this.emit(\"decoded\",n)):this.emit(\"decoded\",n);else{if(!m(t)&&!t.base64)throw new Error(\"Unknown type: \"+t);if(!this.reconstructor)throw new Error(\"got binary data when not reconstructing a packet\");n=this.reconstructor.takeBinaryData(t),n&&(this.reconstructor=null,this.emit(\"decoded\",n))}},a.prototype.destroy=function(){this.reconstructor&&this.reconstructor.finishedReconstruction()},p.prototype.takeBinaryData=function(t){if(this.buffers.push(t),this.buffers.length===this.reconPack.attachments){var e=d.reconstructPacket(this.reconPack,this.buffers);return this.finishedReconstruction(),e}return null},p.prototype.finishedReconstruction=function(){this.reconPack=null,this.buffers=[]}},function(t,e,n){(function(r){\"use strict\";function o(){return!(\"undefined\"==typeof window||!window.process||\"renderer\"!==window.process.type)||(\"undefined\"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))&&(\"undefined\"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/))}function i(t){var n=this.useColors;if(t[0]=(n?\"%c\":\"\")+this.namespace+(n?\" %c\":\" \")+t[0]+(n?\"%c \":\" \")+\"+\"+e.humanize(this.diff),n){var r=\"color: \"+this.color;t.splice(1,0,r,\"color: inherit\");var o=0,i=0;t[0].replace(/%[a-zA-Z%]/g,function(t){\"%%\"!==t&&(o++,\"%c\"===t&&(i=o))}),t.splice(i,0,r)}}function s(){return\"object\"===(\"undefined\"==typeof console?\"undefined\":p(console))&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function a(t){try{null==t?e.storage.removeItem(\"debug\"):e.storage.debug=t}catch(n){}}function c(){var t;try{t=e.storage.debug}catch(n){}return!t&&\"undefined\"!=typeof r&&\"env\"in r&&(t=r.env.DEBUG),t}function u(){try{return window.localStorage}catch(t){}}var p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t};e=t.exports=n(9),e.log=s,e.formatArgs=i,e.save=a,e.load=c,e.useColors=o,e.storage=\"undefined\"!=typeof chrome&&\"undefined\"!=typeof chrome.storage?chrome.storage.local:u(),e.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"],e.formatters.j=function(t){try{return JSON.stringify(t)}catch(e){return\"[UnexpectedJSONParseError]: \"+e.message}},e.enable(c())}).call(e,n(4))},function(t,e,n){\"use strict\";function r(t){var n,r=0;for(n in t)r=(r<<5)-r+t.charCodeAt(n),r|=0;return e.colors[Math.abs(r)%e.colors.length]}function o(t){function n(){if(n.enabled){var t=n,r=+new Date,i=r-(o||r);t.diff=i,t.prev=o,t.curr=r,o=r;for(var s=new Array(arguments.length),a=0;a<s.length;a++)s[a]=arguments[a];s[0]=e.coerce(s[0]),\"string\"!=typeof s[0]&&s.unshift(\"%O\");var c=0;s[0]=s[0].replace(/%([a-zA-Z%])/g,function(n,r){if(\"%%\"===n)return n;c++;var o=e.formatters[r];if(\"function\"==typeof o){var i=s[c];n=o.call(t,i),s.splice(c,1),c--}return n}),e.formatArgs.call(t,s);var u=n.log||e.log||console.log.bind(console);u.apply(t,s)}}var o;return n.namespace=t,n.enabled=e.enabled(t),n.useColors=e.useColors(),n.color=r(t),n.destroy=i,\"function\"==typeof e.init&&e.init(n),e.instances.push(n),n}function i(){var t=e.instances.indexOf(this);return t!==-1&&(e.instances.splice(t,1),!0)}function s(t){e.save(t),e.names=[],e.skips=[];var n,r=(\"string\"==typeof t?t:\"\").split(/[\\s,]+/),o=r.length;for(n=0;n<o;n++)r[n]&&(t=r[n].replace(/\\*/g,\".*?\"),\"-\"===t[0]?e.skips.push(new RegExp(\"^\"+t.substr(1)+\"$\")):e.names.push(new RegExp(\"^\"+t+\"$\")));for(n=0;n<e.instances.length;n++){var i=e.instances[n];i.enabled=e.enabled(i.namespace)}}function a(){e.enable(\"\")}function c(t){if(\"*\"===t[t.length-1])return!0;var n,r;for(n=0,r=e.skips.length;n<r;n++)if(e.skips[n].test(t))return!1;for(n=0,r=e.names.length;n<r;n++)if(e.names[n].test(t))return!0;return!1}function u(t){return t instanceof Error?t.stack||t.message:t}e=t.exports=o.debug=o[\"default\"]=o,e.coerce=u,e.disable=a,e.enable=s,e.enabled=c,e.humanize=n(10),e.instances=[],e.names=[],e.skips=[],e.formatters={}},function(t,e){function n(t){if(t=String(t),!(t.length>100)){var e=/^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t);if(e){var n=parseFloat(e[1]),r=(e[2]||\"ms\").toLowerCase();switch(r){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return n*p;case\"days\":case\"day\":case\"d\":return n*u;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return n*c;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return n*a;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return n*s;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return n;default:return}}}}function r(t){return t>=u?Math.round(t/u)+\"d\":t>=c?Math.round(t/c)+\"h\":t>=a?Math.round(t/a)+\"m\":t>=s?Math.round(t/s)+\"s\":t+\"ms\"}function o(t){return i(t,u,\"day\")||i(t,c,\"hour\")||i(t,a,\"minute\")||i(t,s,\"second\")||t+\" ms\"}function i(t,e,n){if(!(t<e))return t<1.5*e?Math.floor(t/e)+\" \"+n:Math.ceil(t/e)+\" \"+n+\"s\"}var s=1e3,a=60*s,c=60*a,u=24*c,p=365.25*u;t.exports=function(t,e){e=e||{};var i=typeof t;if(\"string\"===i&&t.length>0)return n(t);if(\"number\"===i&&isNaN(t)===!1)return e[\"long\"]?o(t):r(t);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(t))}},function(t,e,n){function r(t){if(t)return o(t)}function o(t){for(var e in r.prototype)t[e]=r.prototype[e];return t}t.exports=r,r.prototype.on=r.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks[\"$\"+t]=this._callbacks[\"$\"+t]||[]).push(e),this},r.prototype.once=function(t,e){function n(){this.off(t,n),e.apply(this,arguments)}return n.fn=e,this.on(t,n),this},r.prototype.off=r.prototype.removeListener=r.prototype.removeAllListeners=r.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n=this._callbacks[\"$\"+t];if(!n)return this;if(1==arguments.length)return delete this._callbacks[\"$\"+t],this;for(var r,o=0;o<n.length;o++)if(r=n[o],r===e||r.fn===e){n.splice(o,1);break}return this},r.prototype.emit=function(t){this._callbacks=this._callbacks||{};var e=[].slice.call(arguments,1),n=this._callbacks[\"$\"+t];if(n){n=n.slice(0);for(var r=0,o=n.length;r<o;++r)n[r].apply(this,e)}return this},r.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks[\"$\"+t]||[]},r.prototype.hasListeners=function(t){return!!this.listeners(t).length}},function(t,e,n){function r(t,e){if(!t)return t;if(s(t)){var n={_placeholder:!0,num:e.length};return e.push(t),n}if(i(t)){for(var o=new Array(t.length),a=0;a<t.length;a++)o[a]=r(t[a],e);return o}if(\"object\"==typeof t&&!(t instanceof Date)){var o={};for(var c in t)o[c]=r(t[c],e);return o}return t}function o(t,e){if(!t)return t;if(t&&t._placeholder)return e[t.num];if(i(t))for(var n=0;n<t.length;n++)t[n]=o(t[n],e);else if(\"object\"==typeof t)for(var r in t)t[r]=o(t[r],e);return t}var i=n(13),s=n(14),a=Object.prototype.toString,c=\"function\"==typeof Blob||\"undefined\"!=typeof Blob&&\"[object BlobConstructor]\"===a.call(Blob),u=\"function\"==typeof File||\"undefined\"!=typeof File&&\"[object FileConstructor]\"===a.call(File);e.deconstructPacket=function(t){var e=[],n=t.data,o=t;return o.data=r(n,e),o.attachments=e.length,{packet:o,buffers:e}},e.reconstructPacket=function(t,e){return t.data=o(t.data,e),t.attachments=void 0,t},e.removeBlobs=function(t,e){function n(t,a,p){if(!t)return t;if(c&&t instanceof Blob||u&&t instanceof File){r++;var h=new FileReader;h.onload=function(){p?p[a]=this.result:o=this.result,--r||e(o)},h.readAsArrayBuffer(t)}else if(i(t))for(var f=0;f<t.length;f++)n(t[f],f,t);else if(\"object\"==typeof t&&!s(t))for(var l in t)n(t[l],l,t)}var r=0,o=t;n(o),r||e(o)}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return\"[object Array]\"==n.call(t)}},function(t,e){function n(t){return r&&Buffer.isBuffer(t)||o&&(t instanceof ArrayBuffer||i(t))}t.exports=n;var r=\"function\"==typeof Buffer&&\"function\"==typeof Buffer.isBuffer,o=\"function\"==typeof ArrayBuffer,i=function(t){return\"function\"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):t.buffer instanceof ArrayBuffer}},function(t,e,n){function r(t,e){if(!(this instanceof r))return new r(t,e);t&&\"object\"==typeof t&&(e=t,t=void 0),e=e||{},e.path=e.path||\"/socket.io\",this.nsps={},this.subs=[],this.opts=e,this.reconnection(e.reconnection!==!1),this.reconnectionAttempts(e.reconnectionAttempts||1/0),this.reconnectionDelay(e.reconnectionDelay||1e3),this.reconnectionDelayMax(e.reconnectionDelayMax||5e3),this.randomizationFactor(e.randomizationFactor||.5),this.backoff=new f({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==e.timeout?2e4:e.timeout),this.readyState=\"closed\",this.uri=t,this.connecting=[],this.lastPing=null,this.encoding=!1,this.packetBuffer=[];var n=e.parser||a;this.encoder=new n.Encoder,this.decoder=new n.Decoder,this.autoConnect=e.autoConnect!==!1,this.autoConnect&&this.open()}var o=n(16),i=n(39),s=n(11),a=n(7),c=n(41),u=n(42),p=n(3)(\"socket.io-client:manager\"),h=n(38),f=n(43),l=Object.prototype.hasOwnProperty;t.exports=r,r.prototype.emitAll=function(){this.emit.apply(this,arguments);for(var t in this.nsps)l.call(this.nsps,t)&&this.nsps[t].emit.apply(this.nsps[t],arguments)},r.prototype.updateSocketIds=function(){for(var t in this.nsps)l.call(this.nsps,t)&&(this.nsps[t].id=this.generateId(t))},r.prototype.generateId=function(t){return(\"/\"===t?\"\":t+\"#\")+this.engine.id},s(r.prototype),r.prototype.reconnection=function(t){return arguments.length?(this._reconnection=!!t,this):this._reconnection},r.prototype.reconnectionAttempts=function(t){return arguments.length?(this._reconnectionAttempts=t,this):this._reconnectionAttempts},r.prototype.reconnectionDelay=function(t){return arguments.length?(this._reconnectionDelay=t,this.backoff&&this.backoff.setMin(t),this):this._reconnectionDelay},r.prototype.randomizationFactor=function(t){return arguments.length?(this._randomizationFactor=t,this.backoff&&this.backoff.setJitter(t),this):this._randomizationFactor},r.prototype.reconnectionDelayMax=function(t){return arguments.length?(this._reconnectionDelayMax=t,this.backoff&&this.backoff.setMax(t),this):this._reconnectionDelayMax},r.prototype.timeout=function(t){return arguments.length?(this._timeout=t,this):this._timeout},r.prototype.maybeReconnectOnOpen=function(){!this.reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()},r.prototype.open=r.prototype.connect=function(t,e){if(p(\"readyState %s\",this.readyState),~this.readyState.indexOf(\"open\"))return this;p(\"opening %s\",this.uri),this.engine=o(this.uri,this.opts);var n=this.engine,r=this;this.readyState=\"opening\",this.skipReconnect=!1;var i=c(n,\"open\",function(){r.onopen(),t&&t()}),s=c(n,\"error\",function(e){if(p(\"connect_error\"),r.cleanup(),r.readyState=\"closed\",r.emitAll(\"connect_error\",e),t){var n=new Error(\"Connection error\");n.data=e,t(n)}else r.maybeReconnectOnOpen()});if(!1!==this._timeout){var a=this._timeout;p(\"connect attempt will timeout after %d\",a);var u=setTimeout(function(){p(\"connect attempt timed out after %d\",a),i.destroy(),n.close(),n.emit(\"error\",\"timeout\"),r.emitAll(\"connect_timeout\",a)},a);this.subs.push({destroy:function(){clearTimeout(u)}})}return this.subs.push(i),this.subs.push(s),this},r.prototype.onopen=function(){p(\"open\"),this.cleanup(),this.readyState=\"open\",this.emit(\"open\");var t=this.engine;this.subs.push(c(t,\"data\",u(this,\"ondata\"))),this.subs.push(c(t,\"ping\",u(this,\"onping\"))),this.subs.push(c(t,\"pong\",u(this,\"onpong\"))),this.subs.push(c(t,\"error\",u(this,\"onerror\"))),this.subs.push(c(t,\"close\",u(this,\"onclose\"))),this.subs.push(c(this.decoder,\"decoded\",u(this,\"ondecoded\")))},r.prototype.onping=function(){this.lastPing=new Date,this.emitAll(\"ping\")},r.prototype.onpong=function(){this.emitAll(\"pong\",new Date-this.lastPing)},r.prototype.ondata=function(t){this.decoder.add(t)},r.prototype.ondecoded=function(t){this.emit(\"packet\",t)},r.prototype.onerror=function(t){p(\"error\",t),this.emitAll(\"error\",t)},r.prototype.socket=function(t,e){function n(){~h(o.connecting,r)||o.connecting.push(r)}var r=this.nsps[t];if(!r){r=new i(this,t,e),this.nsps[t]=r;var o=this;r.on(\"connecting\",n),r.on(\"connect\",function(){r.id=o.generateId(t)}),this.autoConnect&&n()}return r},r.prototype.destroy=function(t){var e=h(this.connecting,t);~e&&this.connecting.splice(e,1),this.connecting.length||this.close()},r.prototype.packet=function(t){p(\"writing packet %j\",t);var e=this;t.query&&0===t.type&&(t.nsp+=\"?\"+t.query),e.encoding?e.packetBuffer.push(t):(e.encoding=!0,this.encoder.encode(t,function(n){for(var r=0;r<n.length;r++)e.engine.write(n[r],t.options);e.encoding=!1,e.processPacketQueue()}))},r.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var t=this.packetBuffer.shift();this.packet(t)}},r.prototype.cleanup=function(){p(\"cleanup\");for(var t=this.subs.length,e=0;e<t;e++){var n=this.subs.shift();n.destroy()}this.packetBuffer=[],this.encoding=!1,this.lastPing=null,this.decoder.destroy()},r.prototype.close=r.prototype.disconnect=function(){p(\"disconnect\"),this.skipReconnect=!0,this.reconnecting=!1,\"opening\"===this.readyState&&this.cleanup(),this.backoff.reset(),this.readyState=\"closed\",this.engine&&this.engine.close()},r.prototype.onclose=function(t){p(\"onclose\"),this.cleanup(),this.backoff.reset(),this.readyState=\"closed\",this.emit(\"close\",t),this._reconnection&&!this.skipReconnect&&this.reconnect()},r.prototype.reconnect=function(){if(this.reconnecting||this.skipReconnect)return this;var t=this;if(this.backoff.attempts>=this._reconnectionAttempts)p(\"reconnect failed\"),this.backoff.reset(),this.emitAll(\"reconnect_failed\"),this.reconnecting=!1;else{var e=this.backoff.duration();p(\"will wait %dms before reconnect attempt\",e),this.reconnecting=!0;var n=setTimeout(function(){t.skipReconnect||(p(\"attempting reconnect\"),t.emitAll(\"reconnect_attempt\",t.backoff.attempts),t.emitAll(\"reconnecting\",t.backoff.attempts),t.skipReconnect||t.open(function(e){e?(p(\"reconnect attempt error\"),t.reconnecting=!1,t.reconnect(),t.emitAll(\"reconnect_error\",e.data)):(p(\"reconnect success\"),t.onreconnect())}))},e);this.subs.push({destroy:function(){clearTimeout(n)}})}},r.prototype.onreconnect=function(){var t=this.backoff.attempts;this.reconnecting=!1,this.backoff.reset(),this.updateSocketIds(),this.emitAll(\"reconnect\",t)}},function(t,e,n){t.exports=n(17),t.exports.parser=n(24)},function(t,e,n){function r(t,e){return this instanceof r?(e=e||{},t&&\"object\"==typeof t&&(e=t,t=null),t?(t=p(t),e.hostname=t.host,e.secure=\"https\"===t.protocol||\"wss\"===t.protocol,e.port=t.port,t.query&&(e.query=t.query)):e.host&&(e.hostname=p(e.host).host),this.secure=null!=e.secure?e.secure:\"undefined\"!=typeof location&&\"https:\"===location.protocol,e.hostname&&!e.port&&(e.port=this.secure?\"443\":\"80\"),this.agent=e.agent||!1,this.hostname=e.hostname||(\"undefined\"!=typeof location?location.hostname:\"localhost\"),this.port=e.port||(\"undefined\"!=typeof location&&location.port?location.port:this.secure?443:80),this.query=e.query||{},\"string\"==typeof this.query&&(this.query=h.decode(this.query)),this.upgrade=!1!==e.upgrade,this.path=(e.path||\"/engine.io\").replace(/\\/$/,\"\")+\"/\",this.forceJSONP=!!e.forceJSONP,this.jsonp=!1!==e.jsonp,this.forceBase64=!!e.forceBase64,this.enablesXDR=!!e.enablesXDR,this.withCredentials=!1!==e.withCredentials,this.timestampParam=e.timestampParam||\"t\",this.timestampRequests=e.timestampRequests,this.transports=e.transports||[\"polling\",\"websocket\"],this.transportOptions=e.transportOptions||{},this.readyState=\"\",this.writeBuffer=[],this.prevBufferLen=0,this.policyPort=e.policyPort||843,this.rememberUpgrade=e.rememberUpgrade||!1,this.binaryType=null,this.onlyBinaryUpgrades=e.onlyBinaryUpgrades,this.perMessageDeflate=!1!==e.perMessageDeflate&&(e.perMessageDeflate||{}),!0===this.perMessageDeflate&&(this.perMessageDeflate={}),this.perMessageDeflate&&null==this.perMessageDeflate.threshold&&(this.perMessageDeflate.threshold=1024),this.pfx=e.pfx||null,this.key=e.key||null,this.passphrase=e.passphrase||null,this.cert=e.cert||null,this.ca=e.ca||null,this.ciphers=e.ciphers||null,this.rejectUnauthorized=void 0===e.rejectUnauthorized||e.rejectUnauthorized,this.forceNode=!!e.forceNode,this.isReactNative=\"undefined\"!=typeof navigator&&\"string\"==typeof navigator.product&&\"reactnative\"===navigator.product.toLowerCase(),(\"undefined\"==typeof self||this.isReactNative)&&(e.extraHeaders&&Object.keys(e.extraHeaders).length>0&&(this.extraHeaders=e.extraHeaders),e.localAddress&&(this.localAddress=e.localAddress)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingIntervalTimer=null,this.pingTimeoutTimer=null,void this.open()):new r(t,e)}function o(t){var e={};for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}var i=n(18),s=n(11),a=n(3)(\"engine.io-client:socket\"),c=n(38),u=n(24),p=n(2),h=n(32);t.exports=r,r.priorWebsocketSuccess=!1,s(r.prototype),r.protocol=u.protocol,r.Socket=r,r.Transport=n(23),r.transports=n(18),r.parser=n(24),r.prototype.createTransport=function(t){a('creating transport \"%s\"',t);var e=o(this.query);e.EIO=u.protocol,e.transport=t;var n=this.transportOptions[t]||{};this.id&&(e.sid=this.id);var r=new i[t]({query:e,socket:this,agent:n.agent||this.agent,hostname:n.hostname||this.hostname,port:n.port||this.port,secure:n.secure||this.secure,path:n.path||this.path,forceJSONP:n.forceJSONP||this.forceJSONP,jsonp:n.jsonp||this.jsonp,forceBase64:n.forceBase64||this.forceBase64,enablesXDR:n.enablesXDR||this.enablesXDR,withCredentials:n.withCredentials||this.withCredentials,timestampRequests:n.timestampRequests||this.timestampRequests,timestampParam:n.timestampParam||this.timestampParam,policyPort:n.policyPort||this.policyPort,pfx:n.pfx||this.pfx,key:n.key||this.key,passphrase:n.passphrase||this.passphrase,cert:n.cert||this.cert,ca:n.ca||this.ca,ciphers:n.ciphers||this.ciphers,rejectUnauthorized:n.rejectUnauthorized||this.rejectUnauthorized,perMessageDeflate:n.perMessageDeflate||this.perMessageDeflate,extraHeaders:n.extraHeaders||this.extraHeaders,forceNode:n.forceNode||this.forceNode,localAddress:n.localAddress||this.localAddress,requestTimeout:n.requestTimeout||this.requestTimeout,protocols:n.protocols||void 0,isReactNative:this.isReactNative});return r},r.prototype.open=function(){var t;if(this.rememberUpgrade&&r.priorWebsocketSuccess&&this.transports.indexOf(\"websocket\")!==-1)t=\"websocket\";else{\nif(0===this.transports.length){var e=this;return void setTimeout(function(){e.emit(\"error\",\"No transports available\")},0)}t=this.transports[0]}this.readyState=\"opening\";try{t=this.createTransport(t)}catch(n){return this.transports.shift(),void this.open()}t.open(),this.setTransport(t)},r.prototype.setTransport=function(t){a(\"setting transport %s\",t.name);var e=this;this.transport&&(a(\"clearing existing transport %s\",this.transport.name),this.transport.removeAllListeners()),this.transport=t,t.on(\"drain\",function(){e.onDrain()}).on(\"packet\",function(t){e.onPacket(t)}).on(\"error\",function(t){e.onError(t)}).on(\"close\",function(){e.onClose(\"transport close\")})},r.prototype.probe=function(t){function e(){if(f.onlyBinaryUpgrades){var e=!this.supportsBinary&&f.transport.supportsBinary;h=h||e}h||(a('probe transport \"%s\" opened',t),p.send([{type:\"ping\",data:\"probe\"}]),p.once(\"packet\",function(e){if(!h)if(\"pong\"===e.type&&\"probe\"===e.data){if(a('probe transport \"%s\" pong',t),f.upgrading=!0,f.emit(\"upgrading\",p),!p)return;r.priorWebsocketSuccess=\"websocket\"===p.name,a('pausing current transport \"%s\"',f.transport.name),f.transport.pause(function(){h||\"closed\"!==f.readyState&&(a(\"changing transport and sending upgrade packet\"),u(),f.setTransport(p),p.send([{type:\"upgrade\"}]),f.emit(\"upgrade\",p),p=null,f.upgrading=!1,f.flush())})}else{a('probe transport \"%s\" failed',t);var n=new Error(\"probe error\");n.transport=p.name,f.emit(\"upgradeError\",n)}}))}function n(){h||(h=!0,u(),p.close(),p=null)}function o(e){var r=new Error(\"probe error: \"+e);r.transport=p.name,n(),a('probe transport \"%s\" failed because of error: %s',t,e),f.emit(\"upgradeError\",r)}function i(){o(\"transport closed\")}function s(){o(\"socket closed\")}function c(t){p&&t.name!==p.name&&(a('\"%s\" works - aborting \"%s\"',t.name,p.name),n())}function u(){p.removeListener(\"open\",e),p.removeListener(\"error\",o),p.removeListener(\"close\",i),f.removeListener(\"close\",s),f.removeListener(\"upgrading\",c)}a('probing transport \"%s\"',t);var p=this.createTransport(t,{probe:1}),h=!1,f=this;r.priorWebsocketSuccess=!1,p.once(\"open\",e),p.once(\"error\",o),p.once(\"close\",i),this.once(\"close\",s),this.once(\"upgrading\",c),p.open()},r.prototype.onOpen=function(){if(a(\"socket open\"),this.readyState=\"open\",r.priorWebsocketSuccess=\"websocket\"===this.transport.name,this.emit(\"open\"),this.flush(),\"open\"===this.readyState&&this.upgrade&&this.transport.pause){a(\"starting upgrade probes\");for(var t=0,e=this.upgrades.length;t<e;t++)this.probe(this.upgrades[t])}},r.prototype.onPacket=function(t){if(\"opening\"===this.readyState||\"open\"===this.readyState||\"closing\"===this.readyState)switch(a('socket receive: type \"%s\", data \"%s\"',t.type,t.data),this.emit(\"packet\",t),this.emit(\"heartbeat\"),t.type){case\"open\":this.onHandshake(JSON.parse(t.data));break;case\"pong\":this.setPing(),this.emit(\"pong\");break;case\"error\":var e=new Error(\"server error\");e.code=t.data,this.onError(e);break;case\"message\":this.emit(\"data\",t.data),this.emit(\"message\",t.data)}else a('packet received with socket readyState \"%s\"',this.readyState)},r.prototype.onHandshake=function(t){this.emit(\"handshake\",t),this.id=t.sid,this.transport.query.sid=t.sid,this.upgrades=this.filterUpgrades(t.upgrades),this.pingInterval=t.pingInterval,this.pingTimeout=t.pingTimeout,this.onOpen(),\"closed\"!==this.readyState&&(this.setPing(),this.removeListener(\"heartbeat\",this.onHeartbeat),this.on(\"heartbeat\",this.onHeartbeat))},r.prototype.onHeartbeat=function(t){clearTimeout(this.pingTimeoutTimer);var e=this;e.pingTimeoutTimer=setTimeout(function(){\"closed\"!==e.readyState&&e.onClose(\"ping timeout\")},t||e.pingInterval+e.pingTimeout)},r.prototype.setPing=function(){var t=this;clearTimeout(t.pingIntervalTimer),t.pingIntervalTimer=setTimeout(function(){a(\"writing ping packet - expecting pong within %sms\",t.pingTimeout),t.ping(),t.onHeartbeat(t.pingTimeout)},t.pingInterval)},r.prototype.ping=function(){var t=this;this.sendPacket(\"ping\",function(){t.emit(\"ping\")})},r.prototype.onDrain=function(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emit(\"drain\"):this.flush()},r.prototype.flush=function(){\"closed\"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length&&(a(\"flushing %d packets in socket\",this.writeBuffer.length),this.transport.send(this.writeBuffer),this.prevBufferLen=this.writeBuffer.length,this.emit(\"flush\"))},r.prototype.write=r.prototype.send=function(t,e,n){return this.sendPacket(\"message\",t,e,n),this},r.prototype.sendPacket=function(t,e,n,r){if(\"function\"==typeof e&&(r=e,e=void 0),\"function\"==typeof n&&(r=n,n=null),\"closing\"!==this.readyState&&\"closed\"!==this.readyState){n=n||{},n.compress=!1!==n.compress;var o={type:t,data:e,options:n};this.emit(\"packetCreate\",o),this.writeBuffer.push(o),r&&this.once(\"flush\",r),this.flush()}},r.prototype.close=function(){function t(){r.onClose(\"forced close\"),a(\"socket closing - telling transport to close\"),r.transport.close()}function e(){r.removeListener(\"upgrade\",e),r.removeListener(\"upgradeError\",e),t()}function n(){r.once(\"upgrade\",e),r.once(\"upgradeError\",e)}if(\"opening\"===this.readyState||\"open\"===this.readyState){this.readyState=\"closing\";var r=this;this.writeBuffer.length?this.once(\"drain\",function(){this.upgrading?n():t()}):this.upgrading?n():t()}return this},r.prototype.onError=function(t){a(\"socket error %j\",t),r.priorWebsocketSuccess=!1,this.emit(\"error\",t),this.onClose(\"transport error\",t)},r.prototype.onClose=function(t,e){if(\"opening\"===this.readyState||\"open\"===this.readyState||\"closing\"===this.readyState){a('socket close with reason: \"%s\"',t);var n=this;clearTimeout(this.pingIntervalTimer),clearTimeout(this.pingTimeoutTimer),this.transport.removeAllListeners(\"close\"),this.transport.close(),this.transport.removeAllListeners(),this.readyState=\"closed\",this.id=null,this.emit(\"close\",t,e),n.writeBuffer=[],n.prevBufferLen=0}},r.prototype.filterUpgrades=function(t){for(var e=[],n=0,r=t.length;n<r;n++)~c(this.transports,t[n])&&e.push(t[n]);return e}},function(t,e,n){function r(t){var e,n=!1,r=!1,a=!1!==t.jsonp;if(\"undefined\"!=typeof location){var c=\"https:\"===location.protocol,u=location.port;u||(u=c?443:80),n=t.hostname!==location.hostname||u!==t.port,r=t.secure!==c}if(t.xdomain=n,t.xscheme=r,e=new o(t),\"open\"in e&&!t.forceJSONP)return new i(t);if(!a)throw new Error(\"JSONP disabled\");return new s(t)}var o=n(19),i=n(21),s=n(35),a=n(36);e.polling=r,e.websocket=a},function(t,e,n){var r=n(20);t.exports=function(t){var e=t.xdomain,n=t.xscheme,o=t.enablesXDR;try{if(\"undefined\"!=typeof XMLHttpRequest&&(!e||r))return new XMLHttpRequest}catch(i){}try{if(\"undefined\"!=typeof XDomainRequest&&!n&&o)return new XDomainRequest}catch(i){}if(!e)try{return new(self[[\"Active\"].concat(\"Object\").join(\"X\")])(\"Microsoft.XMLHTTP\")}catch(i){}}},function(t,e){try{t.exports=\"undefined\"!=typeof XMLHttpRequest&&\"withCredentials\"in new XMLHttpRequest}catch(n){t.exports=!1}},function(t,e,n){function r(){}function o(t){if(c.call(this,t),this.requestTimeout=t.requestTimeout,this.extraHeaders=t.extraHeaders,\"undefined\"!=typeof location){var e=\"https:\"===location.protocol,n=location.port;n||(n=e?443:80),this.xd=\"undefined\"!=typeof location&&t.hostname!==location.hostname||n!==t.port,this.xs=t.secure!==e}}function i(t){this.method=t.method||\"GET\",this.uri=t.uri,this.xd=!!t.xd,this.xs=!!t.xs,this.async=!1!==t.async,this.data=void 0!==t.data?t.data:null,this.agent=t.agent,this.isBinary=t.isBinary,this.supportsBinary=t.supportsBinary,this.enablesXDR=t.enablesXDR,this.withCredentials=t.withCredentials,this.requestTimeout=t.requestTimeout,this.pfx=t.pfx,this.key=t.key,this.passphrase=t.passphrase,this.cert=t.cert,this.ca=t.ca,this.ciphers=t.ciphers,this.rejectUnauthorized=t.rejectUnauthorized,this.extraHeaders=t.extraHeaders,this.create()}function s(){for(var t in i.requests)i.requests.hasOwnProperty(t)&&i.requests[t].abort()}var a=n(19),c=n(22),u=n(11),p=n(33),h=n(3)(\"engine.io-client:polling-xhr\");if(t.exports=o,t.exports.Request=i,p(o,c),o.prototype.supportsBinary=!0,o.prototype.request=function(t){return t=t||{},t.uri=this.uri(),t.xd=this.xd,t.xs=this.xs,t.agent=this.agent||!1,t.supportsBinary=this.supportsBinary,t.enablesXDR=this.enablesXDR,t.withCredentials=this.withCredentials,t.pfx=this.pfx,t.key=this.key,t.passphrase=this.passphrase,t.cert=this.cert,t.ca=this.ca,t.ciphers=this.ciphers,t.rejectUnauthorized=this.rejectUnauthorized,t.requestTimeout=this.requestTimeout,t.extraHeaders=this.extraHeaders,new i(t)},o.prototype.doWrite=function(t,e){var n=\"string\"!=typeof t&&void 0!==t,r=this.request({method:\"POST\",data:t,isBinary:n}),o=this;r.on(\"success\",e),r.on(\"error\",function(t){o.onError(\"xhr post error\",t)}),this.sendXhr=r},o.prototype.doPoll=function(){h(\"xhr poll\");var t=this.request(),e=this;t.on(\"data\",function(t){e.onData(t)}),t.on(\"error\",function(t){e.onError(\"xhr poll error\",t)}),this.pollXhr=t},u(i.prototype),i.prototype.create=function(){var t={agent:this.agent,xdomain:this.xd,xscheme:this.xs,enablesXDR:this.enablesXDR};t.pfx=this.pfx,t.key=this.key,t.passphrase=this.passphrase,t.cert=this.cert,t.ca=this.ca,t.ciphers=this.ciphers,t.rejectUnauthorized=this.rejectUnauthorized;var e=this.xhr=new a(t),n=this;try{h(\"xhr open %s: %s\",this.method,this.uri),e.open(this.method,this.uri,this.async);try{if(this.extraHeaders){e.setDisableHeaderCheck&&e.setDisableHeaderCheck(!0);for(var r in this.extraHeaders)this.extraHeaders.hasOwnProperty(r)&&e.setRequestHeader(r,this.extraHeaders[r])}}catch(o){}if(\"POST\"===this.method)try{this.isBinary?e.setRequestHeader(\"Content-type\",\"application/octet-stream\"):e.setRequestHeader(\"Content-type\",\"text/plain;charset=UTF-8\")}catch(o){}try{e.setRequestHeader(\"Accept\",\"*/*\")}catch(o){}\"withCredentials\"in e&&(e.withCredentials=this.withCredentials),this.requestTimeout&&(e.timeout=this.requestTimeout),this.hasXDR()?(e.onload=function(){n.onLoad()},e.onerror=function(){n.onError(e.responseText)}):e.onreadystatechange=function(){if(2===e.readyState)try{var t=e.getResponseHeader(\"Content-Type\");(n.supportsBinary&&\"application/octet-stream\"===t||\"application/octet-stream; charset=UTF-8\"===t)&&(e.responseType=\"arraybuffer\")}catch(r){}4===e.readyState&&(200===e.status||1223===e.status?n.onLoad():setTimeout(function(){n.onError(\"number\"==typeof e.status?e.status:0)},0))},h(\"xhr data %s\",this.data),e.send(this.data)}catch(o){return void setTimeout(function(){n.onError(o)},0)}\"undefined\"!=typeof document&&(this.index=i.requestsCount++,i.requests[this.index]=this)},i.prototype.onSuccess=function(){this.emit(\"success\"),this.cleanup()},i.prototype.onData=function(t){this.emit(\"data\",t),this.onSuccess()},i.prototype.onError=function(t){this.emit(\"error\",t),this.cleanup(!0)},i.prototype.cleanup=function(t){if(\"undefined\"!=typeof this.xhr&&null!==this.xhr){if(this.hasXDR()?this.xhr.onload=this.xhr.onerror=r:this.xhr.onreadystatechange=r,t)try{this.xhr.abort()}catch(e){}\"undefined\"!=typeof document&&delete i.requests[this.index],this.xhr=null}},i.prototype.onLoad=function(){var t;try{var e;try{e=this.xhr.getResponseHeader(\"Content-Type\")}catch(n){}t=\"application/octet-stream\"===e||\"application/octet-stream; charset=UTF-8\"===e?this.xhr.response||this.xhr.responseText:this.xhr.responseText}catch(n){this.onError(n)}null!=t&&this.onData(t)},i.prototype.hasXDR=function(){return\"undefined\"!=typeof XDomainRequest&&!this.xs&&this.enablesXDR},i.prototype.abort=function(){this.cleanup()},i.requestsCount=0,i.requests={},\"undefined\"!=typeof document)if(\"function\"==typeof attachEvent)attachEvent(\"onunload\",s);else if(\"function\"==typeof addEventListener){var f=\"onpagehide\"in self?\"pagehide\":\"unload\";addEventListener(f,s,!1)}},function(t,e,n){function r(t){var e=t&&t.forceBase64;p&&!e||(this.supportsBinary=!1),o.call(this,t)}var o=n(23),i=n(32),s=n(24),a=n(33),c=n(34),u=n(3)(\"engine.io-client:polling\");t.exports=r;var p=function(){var t=n(19),e=new t({xdomain:!1});return null!=e.responseType}();a(r,o),r.prototype.name=\"polling\",r.prototype.doOpen=function(){this.poll()},r.prototype.pause=function(t){function e(){u(\"paused\"),n.readyState=\"paused\",t()}var n=this;if(this.readyState=\"pausing\",this.polling||!this.writable){var r=0;this.polling&&(u(\"we are currently polling - waiting to pause\"),r++,this.once(\"pollComplete\",function(){u(\"pre-pause polling complete\"),--r||e()})),this.writable||(u(\"we are currently writing - waiting to pause\"),r++,this.once(\"drain\",function(){u(\"pre-pause writing complete\"),--r||e()}))}else e()},r.prototype.poll=function(){u(\"polling\"),this.polling=!0,this.doPoll(),this.emit(\"poll\")},r.prototype.onData=function(t){var e=this;u(\"polling got data %s\",t);var n=function(t,n,r){return\"opening\"===e.readyState&&e.onOpen(),\"close\"===t.type?(e.onClose(),!1):void e.onPacket(t)};s.decodePayload(t,this.socket.binaryType,n),\"closed\"!==this.readyState&&(this.polling=!1,this.emit(\"pollComplete\"),\"open\"===this.readyState?this.poll():u('ignoring poll - transport state \"%s\"',this.readyState))},r.prototype.doClose=function(){function t(){u(\"writing close packet\"),e.write([{type:\"close\"}])}var e=this;\"open\"===this.readyState?(u(\"transport open - closing\"),t()):(u(\"transport not open - deferring close\"),this.once(\"open\",t))},r.prototype.write=function(t){var e=this;this.writable=!1;var n=function(){e.writable=!0,e.emit(\"drain\")};s.encodePayload(t,this.supportsBinary,function(t){e.doWrite(t,n)})},r.prototype.uri=function(){var t=this.query||{},e=this.secure?\"https\":\"http\",n=\"\";!1!==this.timestampRequests&&(t[this.timestampParam]=c()),this.supportsBinary||t.sid||(t.b64=1),t=i.encode(t),this.port&&(\"https\"===e&&443!==Number(this.port)||\"http\"===e&&80!==Number(this.port))&&(n=\":\"+this.port),t.length&&(t=\"?\"+t);var r=this.hostname.indexOf(\":\")!==-1;return e+\"://\"+(r?\"[\"+this.hostname+\"]\":this.hostname)+n+this.path+t}},function(t,e,n){function r(t){this.path=t.path,this.hostname=t.hostname,this.port=t.port,this.secure=t.secure,this.query=t.query,this.timestampParam=t.timestampParam,this.timestampRequests=t.timestampRequests,this.readyState=\"\",this.agent=t.agent||!1,this.socket=t.socket,this.enablesXDR=t.enablesXDR,this.withCredentials=t.withCredentials,this.pfx=t.pfx,this.key=t.key,this.passphrase=t.passphrase,this.cert=t.cert,this.ca=t.ca,this.ciphers=t.ciphers,this.rejectUnauthorized=t.rejectUnauthorized,this.forceNode=t.forceNode,this.isReactNative=t.isReactNative,this.extraHeaders=t.extraHeaders,this.localAddress=t.localAddress}var o=n(24),i=n(11);t.exports=r,i(r.prototype),r.prototype.onError=function(t,e){var n=new Error(t);return n.type=\"TransportError\",n.description=e,this.emit(\"error\",n),this},r.prototype.open=function(){return\"closed\"!==this.readyState&&\"\"!==this.readyState||(this.readyState=\"opening\",this.doOpen()),this},r.prototype.close=function(){return\"opening\"!==this.readyState&&\"open\"!==this.readyState||(this.doClose(),this.onClose()),this},r.prototype.send=function(t){if(\"open\"!==this.readyState)throw new Error(\"Transport not open\");this.write(t)},r.prototype.onOpen=function(){this.readyState=\"open\",this.writable=!0,this.emit(\"open\")},r.prototype.onData=function(t){var e=o.decodePacket(t,this.socket.binaryType);this.onPacket(e)},r.prototype.onPacket=function(t){this.emit(\"packet\",t)},r.prototype.onClose=function(){this.readyState=\"closed\",this.emit(\"close\")}},function(t,e,n){function r(t,n){var r=\"b\"+e.packets[t.type]+t.data.data;return n(r)}function o(t,n,r){if(!n)return e.encodeBase64Packet(t,r);var o=t.data,i=new Uint8Array(o),s=new Uint8Array(1+o.byteLength);s[0]=v[t.type];for(var a=0;a<i.length;a++)s[a+1]=i[a];return r(s.buffer)}function i(t,n,r){if(!n)return e.encodeBase64Packet(t,r);var o=new FileReader;return o.onload=function(){e.encodePacket({type:t.type,data:o.result},n,!0,r)},o.readAsArrayBuffer(t.data)}function s(t,n,r){if(!n)return e.encodeBase64Packet(t,r);if(g)return i(t,n,r);var o=new Uint8Array(1);o[0]=v[t.type];var s=new w([o.buffer,t.data]);return r(s)}function a(t){try{t=d.decode(t,{strict:!1})}catch(e){return!1}return t}function c(t,e,n){for(var r=new Array(t.length),o=l(t.length,n),i=function(t,n,o){e(n,function(e,n){r[t]=n,o(e,r)})},s=0;s<t.length;s++)i(s,t[s],o)}var u,p=n(25),h=n(26),f=n(27),l=n(28),d=n(29);\"undefined\"!=typeof ArrayBuffer&&(u=n(30));var y=\"undefined\"!=typeof navigator&&/Android/i.test(navigator.userAgent),m=\"undefined\"!=typeof navigator&&/PhantomJS/i.test(navigator.userAgent),g=y||m;e.protocol=3;var v=e.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6},b=p(v),C={type:\"error\",data:\"parser error\"},w=n(31);e.encodePacket=function(t,e,n,i){\"function\"==typeof e&&(i=e,e=!1),\"function\"==typeof n&&(i=n,n=null);var a=void 0===t.data?void 0:t.data.buffer||t.data;if(\"undefined\"!=typeof ArrayBuffer&&a instanceof ArrayBuffer)return o(t,e,i);if(\"undefined\"!=typeof w&&a instanceof w)return s(t,e,i);if(a&&a.base64)return r(t,i);var c=v[t.type];return void 0!==t.data&&(c+=n?d.encode(String(t.data),{strict:!1}):String(t.data)),i(\"\"+c)},e.encodeBase64Packet=function(t,n){var r=\"b\"+e.packets[t.type];if(\"undefined\"!=typeof w&&t.data instanceof w){var o=new FileReader;return o.onload=function(){var t=o.result.split(\",\")[1];n(r+t)},o.readAsDataURL(t.data)}var i;try{i=String.fromCharCode.apply(null,new Uint8Array(t.data))}catch(s){for(var a=new Uint8Array(t.data),c=new Array(a.length),u=0;u<a.length;u++)c[u]=a[u];i=String.fromCharCode.apply(null,c)}return r+=btoa(i),n(r)},e.decodePacket=function(t,n,r){if(void 0===t)return C;if(\"string\"==typeof t){if(\"b\"===t.charAt(0))return e.decodeBase64Packet(t.substr(1),n);if(r&&(t=a(t),t===!1))return C;var o=t.charAt(0);return Number(o)==o&&b[o]?t.length>1?{type:b[o],data:t.substring(1)}:{type:b[o]}:C}var i=new Uint8Array(t),o=i[0],s=f(t,1);return w&&\"blob\"===n&&(s=new w([s])),{type:b[o],data:s}},e.decodeBase64Packet=function(t,e){var n=b[t.charAt(0)];if(!u)return{type:n,data:{base64:!0,data:t.substr(1)}};var r=u.decode(t.substr(1));return\"blob\"===e&&w&&(r=new w([r])),{type:n,data:r}},e.encodePayload=function(t,n,r){function o(t){return t.length+\":\"+t}function i(t,r){e.encodePacket(t,!!s&&n,!1,function(t){r(null,o(t))})}\"function\"==typeof n&&(r=n,n=null);var s=h(t);return n&&s?w&&!g?e.encodePayloadAsBlob(t,r):e.encodePayloadAsArrayBuffer(t,r):t.length?void c(t,i,function(t,e){return r(e.join(\"\"))}):r(\"0:\")},e.decodePayload=function(t,n,r){if(\"string\"!=typeof t)return e.decodePayloadAsBinary(t,n,r);\"function\"==typeof n&&(r=n,n=null);var o;if(\"\"===t)return r(C,0,1);for(var i,s,a=\"\",c=0,u=t.length;c<u;c++){var p=t.charAt(c);if(\":\"===p){if(\"\"===a||a!=(i=Number(a)))return r(C,0,1);if(s=t.substr(c+1,i),a!=s.length)return r(C,0,1);if(s.length){if(o=e.decodePacket(s,n,!1),C.type===o.type&&C.data===o.data)return r(C,0,1);var h=r(o,c+i,u);if(!1===h)return}c+=i,a=\"\"}else a+=p}return\"\"!==a?r(C,0,1):void 0},e.encodePayloadAsArrayBuffer=function(t,n){function r(t,n){e.encodePacket(t,!0,!0,function(t){return n(null,t)})}return t.length?void c(t,r,function(t,e){var r=e.reduce(function(t,e){var n;return n=\"string\"==typeof e?e.length:e.byteLength,t+n.toString().length+n+2},0),o=new Uint8Array(r),i=0;return e.forEach(function(t){var e=\"string\"==typeof t,n=t;if(e){for(var r=new Uint8Array(t.length),s=0;s<t.length;s++)r[s]=t.charCodeAt(s);n=r.buffer}e?o[i++]=0:o[i++]=1;for(var a=n.byteLength.toString(),s=0;s<a.length;s++)o[i++]=parseInt(a[s]);o[i++]=255;for(var r=new Uint8Array(n),s=0;s<r.length;s++)o[i++]=r[s]}),n(o.buffer)}):n(new ArrayBuffer(0))},e.encodePayloadAsBlob=function(t,n){function r(t,n){e.encodePacket(t,!0,!0,function(t){var e=new Uint8Array(1);if(e[0]=1,\"string\"==typeof t){for(var r=new Uint8Array(t.length),o=0;o<t.length;o++)r[o]=t.charCodeAt(o);t=r.buffer,e[0]=0}for(var i=t instanceof ArrayBuffer?t.byteLength:t.size,s=i.toString(),a=new Uint8Array(s.length+1),o=0;o<s.length;o++)a[o]=parseInt(s[o]);if(a[s.length]=255,w){var c=new w([e.buffer,a.buffer,t]);n(null,c)}})}c(t,r,function(t,e){return n(new w(e))})},e.decodePayloadAsBinary=function(t,n,r){\"function\"==typeof n&&(r=n,n=null);for(var o=t,i=[];o.byteLength>0;){for(var s=new Uint8Array(o),a=0===s[0],c=\"\",u=1;255!==s[u];u++){if(c.length>310)return r(C,0,1);c+=s[u]}o=f(o,2+c.length),c=parseInt(c);var p=f(o,0,c);if(a)try{p=String.fromCharCode.apply(null,new Uint8Array(p))}catch(h){var l=new Uint8Array(p);p=\"\";for(var u=0;u<l.length;u++)p+=String.fromCharCode(l[u])}i.push(p),o=f(o,c)}var d=i.length;i.forEach(function(t,o){r(e.decodePacket(t,n,!0),o,d)})}},function(t,e){t.exports=Object.keys||function(t){var e=[],n=Object.prototype.hasOwnProperty;for(var r in t)n.call(t,r)&&e.push(r);return e}},function(t,e,n){function r(t){if(!t||\"object\"!=typeof t)return!1;if(o(t)){for(var e=0,n=t.length;e<n;e++)if(r(t[e]))return!0;return!1}if(\"function\"==typeof Buffer&&Buffer.isBuffer&&Buffer.isBuffer(t)||\"function\"==typeof ArrayBuffer&&t instanceof ArrayBuffer||s&&t instanceof Blob||a&&t instanceof File)return!0;if(t.toJSON&&\"function\"==typeof t.toJSON&&1===arguments.length)return r(t.toJSON(),!0);for(var i in t)if(Object.prototype.hasOwnProperty.call(t,i)&&r(t[i]))return!0;return!1}var o=n(13),i=Object.prototype.toString,s=\"function\"==typeof Blob||\"undefined\"!=typeof Blob&&\"[object BlobConstructor]\"===i.call(Blob),a=\"function\"==typeof File||\"undefined\"!=typeof File&&\"[object FileConstructor]\"===i.call(File);t.exports=r},function(t,e){t.exports=function(t,e,n){var r=t.byteLength;if(e=e||0,n=n||r,t.slice)return t.slice(e,n);if(e<0&&(e+=r),n<0&&(n+=r),n>r&&(n=r),e>=r||e>=n||0===r)return new ArrayBuffer(0);for(var o=new Uint8Array(t),i=new Uint8Array(n-e),s=e,a=0;s<n;s++,a++)i[a]=o[s];return i.buffer}},function(t,e){function n(t,e,n){function o(t,r){if(o.count<=0)throw new Error(\"after called too many times\");--o.count,t?(i=!0,e(t),e=n):0!==o.count||i||e(null,r)}var i=!1;return n=n||r,o.count=t,0===t?e():o}function r(){}t.exports=n},function(t,e){function n(t){for(var e,n,r=[],o=0,i=t.length;o<i;)e=t.charCodeAt(o++),e>=55296&&e<=56319&&o<i?(n=t.charCodeAt(o++),56320==(64512&n)?r.push(((1023&e)<<10)+(1023&n)+65536):(r.push(e),o--)):r.push(e);return r}function r(t){for(var e,n=t.length,r=-1,o=\"\";++r<n;)e=t[r],e>65535&&(e-=65536,o+=d(e>>>10&1023|55296),e=56320|1023&e),o+=d(e);return o}function o(t,e){if(t>=55296&&t<=57343){if(e)throw Error(\"Lone surrogate U+\"+t.toString(16).toUpperCase()+\" is not a scalar value\");return!1}return!0}function i(t,e){return d(t>>e&63|128)}function s(t,e){if(0==(4294967168&t))return d(t);var n=\"\";return 0==(4294965248&t)?n=d(t>>6&31|192):0==(4294901760&t)?(o(t,e)||(t=65533),n=d(t>>12&15|224),n+=i(t,6)):0==(4292870144&t)&&(n=d(t>>18&7|240),n+=i(t,12),n+=i(t,6)),n+=d(63&t|128)}function a(t,e){e=e||{};for(var r,o=!1!==e.strict,i=n(t),a=i.length,c=-1,u=\"\";++c<a;)r=i[c],u+=s(r,o);return u}function c(){if(l>=f)throw Error(\"Invalid byte index\");var t=255&h[l];if(l++,128==(192&t))return 63&t;throw Error(\"Invalid continuation byte\")}function u(t){var e,n,r,i,s;if(l>f)throw Error(\"Invalid byte index\");if(l==f)return!1;if(e=255&h[l],l++,0==(128&e))return e;if(192==(224&e)){if(n=c(),s=(31&e)<<6|n,s>=128)return s;throw Error(\"Invalid continuation byte\")}if(224==(240&e)){if(n=c(),r=c(),s=(15&e)<<12|n<<6|r,s>=2048)return o(s,t)?s:65533;throw Error(\"Invalid continuation byte\")}if(240==(248&e)&&(n=c(),r=c(),i=c(),s=(7&e)<<18|n<<12|r<<6|i,s>=65536&&s<=1114111))return s;throw Error(\"Invalid UTF-8 detected\")}function p(t,e){e=e||{};var o=!1!==e.strict;h=n(t),f=h.length,l=0;for(var i,s=[];(i=u(o))!==!1;)s.push(i);return r(s)}/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar h,f,l,d=String.fromCharCode;t.exports={version:\"2.1.2\",encode:a,decode:p}},function(t,e){!function(){\"use strict\";for(var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",n=new Uint8Array(256),r=0;r<t.length;r++)n[t.charCodeAt(r)]=r;e.encode=function(e){var n,r=new Uint8Array(e),o=r.length,i=\"\";for(n=0;n<o;n+=3)i+=t[r[n]>>2],i+=t[(3&r[n])<<4|r[n+1]>>4],i+=t[(15&r[n+1])<<2|r[n+2]>>6],i+=t[63&r[n+2]];return o%3===2?i=i.substring(0,i.length-1)+\"=\":o%3===1&&(i=i.substring(0,i.length-2)+\"==\"),i},e.decode=function(t){var e,r,o,i,s,a=.75*t.length,c=t.length,u=0;\"=\"===t[t.length-1]&&(a--,\"=\"===t[t.length-2]&&a--);var p=new ArrayBuffer(a),h=new Uint8Array(p);for(e=0;e<c;e+=4)r=n[t.charCodeAt(e)],o=n[t.charCodeAt(e+1)],i=n[t.charCodeAt(e+2)],s=n[t.charCodeAt(e+3)],h[u++]=r<<2|o>>4,h[u++]=(15&o)<<4|i>>2,h[u++]=(3&i)<<6|63&s;return p}}()},function(t,e){function n(t){return t.map(function(t){if(t.buffer instanceof ArrayBuffer){var e=t.buffer;if(t.byteLength!==e.byteLength){var n=new Uint8Array(t.byteLength);n.set(new Uint8Array(e,t.byteOffset,t.byteLength)),e=n.buffer}return e}return t})}function r(t,e){e=e||{};var r=new i;return n(t).forEach(function(t){r.append(t)}),e.type?r.getBlob(e.type):r.getBlob()}function o(t,e){return new Blob(n(t),e||{})}var i=\"undefined\"!=typeof i?i:\"undefined\"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:\"undefined\"!=typeof MSBlobBuilder?MSBlobBuilder:\"undefined\"!=typeof MozBlobBuilder&&MozBlobBuilder,s=function(){try{var t=new Blob([\"hi\"]);return 2===t.size}catch(e){return!1}}(),a=s&&function(){try{var t=new Blob([new Uint8Array([1,2])]);return 2===t.size}catch(e){return!1}}(),c=i&&i.prototype.append&&i.prototype.getBlob;\"undefined\"!=typeof Blob&&(r.prototype=Blob.prototype,o.prototype=Blob.prototype),t.exports=function(){return s?a?Blob:o:c?r:void 0}()},function(t,e){e.encode=function(t){var e=\"\";for(var n in t)t.hasOwnProperty(n)&&(e.length&&(e+=\"&\"),e+=encodeURIComponent(n)+\"=\"+encodeURIComponent(t[n]));return e},e.decode=function(t){for(var e={},n=t.split(\"&\"),r=0,o=n.length;r<o;r++){var i=n[r].split(\"=\");e[decodeURIComponent(i[0])]=decodeURIComponent(i[1])}return e}},function(t,e){t.exports=function(t,e){var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e){\"use strict\";function n(t){var e=\"\";do e=s[t%a]+e,t=Math.floor(t/a);while(t>0);return e}function r(t){var e=0;for(p=0;p<t.length;p++)e=e*a+c[t.charAt(p)];return e}function o(){var t=n(+new Date);return t!==i?(u=0,i=t):t+\".\"+n(u++)}for(var i,s=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\".split(\"\"),a=64,c={},u=0,p=0;p<a;p++)c[s[p]]=p;o.encode=n,o.decode=r,t.exports=o},function(t,e,n){(function(e){function r(){}function o(){return\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:\"undefined\"!=typeof e?e:{}}function i(t){if(s.call(this,t),this.query=this.query||{},!c){var e=o();c=e.___eio=e.___eio||[]}this.index=c.length;var n=this;c.push(function(t){n.onData(t)}),this.query.j=this.index,\"function\"==typeof addEventListener&&addEventListener(\"beforeunload\",function(){n.script&&(n.script.onerror=r)},!1)}var s=n(22),a=n(33);t.exports=i;var c,u=/\\n/g,p=/\\\\n/g;a(i,s),i.prototype.supportsBinary=!1,i.prototype.doClose=function(){this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),this.form&&(this.form.parentNode.removeChild(this.form),this.form=null,this.iframe=null),s.prototype.doClose.call(this)},i.prototype.doPoll=function(){var t=this,e=document.createElement(\"script\");this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),e.async=!0,e.src=this.uri(),e.onerror=function(e){t.onError(\"jsonp poll error\",e)};var n=document.getElementsByTagName(\"script\")[0];n?n.parentNode.insertBefore(e,n):(document.head||document.body).appendChild(e),this.script=e;var r=\"undefined\"!=typeof navigator&&/gecko/i.test(navigator.userAgent);r&&setTimeout(function(){var t=document.createElement(\"iframe\");document.body.appendChild(t),document.body.removeChild(t)},100)},i.prototype.doWrite=function(t,e){function n(){r(),e()}function r(){if(o.iframe)try{o.form.removeChild(o.iframe)}catch(t){o.onError(\"jsonp polling iframe removal error\",t)}try{var e='<iframe src=\"javascript:0\" name=\"'+o.iframeId+'\">';i=document.createElement(e)}catch(t){i=document.createElement(\"iframe\"),i.name=o.iframeId,i.src=\"javascript:0\"}i.id=o.iframeId,o.form.appendChild(i),o.iframe=i}var o=this;if(!this.form){var i,s=document.createElement(\"form\"),a=document.createElement(\"textarea\"),c=this.iframeId=\"eio_iframe_\"+this.index;s.className=\"socketio\",s.style.position=\"absolute\",s.style.top=\"-1000px\",s.style.left=\"-1000px\",s.target=c,s.method=\"POST\",s.setAttribute(\"accept-charset\",\"utf-8\"),a.name=\"d\",s.appendChild(a),document.body.appendChild(s),this.form=s,this.area=a}this.form.action=this.uri(),r(),t=t.replace(p,\"\\\\\\n\"),this.area.value=t.replace(u,\"\\\\n\");try{this.form.submit()}catch(h){}this.iframe.attachEvent?this.iframe.onreadystatechange=function(){\"complete\"===o.iframe.readyState&&n()}:this.iframe.onload=n}}).call(e,function(){return this}())},function(t,e,n){function r(t){var e=t&&t.forceBase64;e&&(this.supportsBinary=!1),this.perMessageDeflate=t.perMessageDeflate,this.usingBrowserWebSocket=o&&!t.forceNode,this.protocols=t.protocols,this.usingBrowserWebSocket||(l=i),s.call(this,t)}var o,i,s=n(23),a=n(24),c=n(32),u=n(33),p=n(34),h=n(3)(\"engine.io-client:websocket\");if(\"undefined\"!=typeof WebSocket?o=WebSocket:\"undefined\"!=typeof self&&(o=self.WebSocket||self.MozWebSocket),\"undefined\"==typeof window)try{i=n(37)}catch(f){}var l=o||i;t.exports=r,u(r,s),r.prototype.name=\"websocket\",r.prototype.supportsBinary=!0,r.prototype.doOpen=function(){if(this.check()){var t=this.uri(),e=this.protocols,n={agent:this.agent,perMessageDeflate:this.perMessageDeflate};n.pfx=this.pfx,n.key=this.key,n.passphrase=this.passphrase,n.cert=this.cert,n.ca=this.ca,n.ciphers=this.ciphers,n.rejectUnauthorized=this.rejectUnauthorized,this.extraHeaders&&(n.headers=this.extraHeaders),this.localAddress&&(n.localAddress=this.localAddress);try{this.ws=this.usingBrowserWebSocket&&!this.isReactNative?e?new l(t,e):new l(t):new l(t,e,n)}catch(r){return this.emit(\"error\",r)}void 0===this.ws.binaryType&&(this.supportsBinary=!1),this.ws.supports&&this.ws.supports.binary?(this.supportsBinary=!0,this.ws.binaryType=\"nodebuffer\"):this.ws.binaryType=\"arraybuffer\",this.addEventListeners()}},r.prototype.addEventListeners=function(){var t=this;this.ws.onopen=function(){t.onOpen()},this.ws.onclose=function(){t.onClose()},this.ws.onmessage=function(e){t.onData(e.data)},this.ws.onerror=function(e){t.onError(\"websocket error\",e)}},r.prototype.write=function(t){function e(){n.emit(\"flush\"),setTimeout(function(){n.writable=!0,n.emit(\"drain\")},0)}var n=this;this.writable=!1;for(var r=t.length,o=0,i=r;o<i;o++)!function(t){a.encodePacket(t,n.supportsBinary,function(o){if(!n.usingBrowserWebSocket){var i={};if(t.options&&(i.compress=t.options.compress),n.perMessageDeflate){var s=\"string\"==typeof o?Buffer.byteLength(o):o.length;s<n.perMessageDeflate.threshold&&(i.compress=!1)}}try{n.usingBrowserWebSocket?n.ws.send(o):n.ws.send(o,i)}catch(a){h(\"websocket closed before onclose event\")}--r||e()})}(t[o])},r.prototype.onClose=function(){s.prototype.onClose.call(this)},r.prototype.doClose=function(){\"undefined\"!=typeof this.ws&&this.ws.close()},r.prototype.uri=function(){var t=this.query||{},e=this.secure?\"wss\":\"ws\",n=\"\";this.port&&(\"wss\"===e&&443!==Number(this.port)||\"ws\"===e&&80!==Number(this.port))&&(n=\":\"+this.port),this.timestampRequests&&(t[this.timestampParam]=p()),this.supportsBinary||(t.b64=1),t=c.encode(t),t.length&&(t=\"?\"+t);var r=this.hostname.indexOf(\":\")!==-1;return e+\"://\"+(r?\"[\"+this.hostname+\"]\":this.hostname)+n+this.path+t},r.prototype.check=function(){return!(!l||\"__initialize\"in l&&this.name===r.prototype.name)}},function(t,e){},function(t,e){var n=[].indexOf;t.exports=function(t,e){if(n)return t.indexOf(e);for(var r=0;r<t.length;++r)if(t[r]===e)return r;return-1}},function(t,e,n){function r(t,e,n){this.io=t,this.nsp=e,this.json=this,this.ids=0,this.acks={},this.receiveBuffer=[],this.sendBuffer=[],this.connected=!1,this.disconnected=!0,this.flags={},n&&n.query&&(this.query=n.query),this.io.autoConnect&&this.open()}var o=n(7),i=n(11),s=n(40),a=n(41),c=n(42),u=n(3)(\"socket.io-client:socket\"),p=n(32),h=n(26);t.exports=e=r;var f={connect:1,connect_error:1,connect_timeout:1,connecting:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1,ping:1,pong:1},l=i.prototype.emit;i(r.prototype),r.prototype.subEvents=function(){if(!this.subs){var t=this.io;this.subs=[a(t,\"open\",c(this,\"onopen\")),a(t,\"packet\",c(this,\"onpacket\")),a(t,\"close\",c(this,\"onclose\"))]}},r.prototype.open=r.prototype.connect=function(){return this.connected?this:(this.subEvents(),this.io.open(),\"open\"===this.io.readyState&&this.onopen(),this.emit(\"connecting\"),this)},r.prototype.send=function(){var t=s(arguments);return t.unshift(\"message\"),this.emit.apply(this,t),this},r.prototype.emit=function(t){if(f.hasOwnProperty(t))return l.apply(this,arguments),this;var e=s(arguments),n={type:(void 0!==this.flags.binary?this.flags.binary:h(e))?o.BINARY_EVENT:o.EVENT,data:e};return n.options={},n.options.compress=!this.flags||!1!==this.flags.compress,\"function\"==typeof e[e.length-1]&&(u(\"emitting packet with ack id %d\",this.ids),this.acks[this.ids]=e.pop(),n.id=this.ids++),this.connected?this.packet(n):this.sendBuffer.push(n),this.flags={},this},r.prototype.packet=function(t){t.nsp=this.nsp,this.io.packet(t)},r.prototype.onopen=function(){if(u(\"transport is open - connecting\"),\"/\"!==this.nsp)if(this.query){var t=\"object\"==typeof this.query?p.encode(this.query):this.query;u(\"sending connect packet with query %s\",t),this.packet({type:o.CONNECT,query:t})}else this.packet({type:o.CONNECT})},r.prototype.onclose=function(t){u(\"close (%s)\",t),this.connected=!1,this.disconnected=!0,delete this.id,this.emit(\"disconnect\",t)},r.prototype.onpacket=function(t){var e=t.nsp===this.nsp,n=t.type===o.ERROR&&\"/\"===t.nsp;if(e||n)switch(t.type){case o.CONNECT:this.onconnect();break;case o.EVENT:this.onevent(t);break;case o.BINARY_EVENT:this.onevent(t);break;case o.ACK:this.onack(t);break;case o.BINARY_ACK:this.onack(t);break;case o.DISCONNECT:this.ondisconnect();break;case o.ERROR:this.emit(\"error\",t.data)}},r.prototype.onevent=function(t){var e=t.data||[];u(\"emitting event %j\",e),null!=t.id&&(u(\"attaching ack callback to event\"),e.push(this.ack(t.id))),this.connected?l.apply(this,e):this.receiveBuffer.push(e)},r.prototype.ack=function(t){var e=this,n=!1;return function(){if(!n){n=!0;var r=s(arguments);u(\"sending ack %j\",r),e.packet({type:h(r)?o.BINARY_ACK:o.ACK,id:t,data:r})}}},r.prototype.onack=function(t){var e=this.acks[t.id];\"function\"==typeof e?(u(\"calling ack %s with %j\",t.id,t.data),e.apply(this,t.data),delete this.acks[t.id]):u(\"bad ack %s\",t.id)},r.prototype.onconnect=function(){this.connected=!0,this.disconnected=!1,this.emit(\"connect\"),this.emitBuffered()},r.prototype.emitBuffered=function(){var t;for(t=0;t<this.receiveBuffer.length;t++)l.apply(this,this.receiveBuffer[t]);for(this.receiveBuffer=[],t=0;t<this.sendBuffer.length;t++)this.packet(this.sendBuffer[t]);this.sendBuffer=[]},r.prototype.ondisconnect=function(){u(\"server disconnect (%s)\",this.nsp),this.destroy(),this.onclose(\"io server disconnect\")},r.prototype.destroy=function(){if(this.subs){for(var t=0;t<this.subs.length;t++)this.subs[t].destroy();this.subs=null}this.io.destroy(this)},r.prototype.close=r.prototype.disconnect=function(){return this.connected&&(u(\"performing disconnect (%s)\",this.nsp),this.packet({type:o.DISCONNECT})),this.destroy(),this.connected&&this.onclose(\"io client disconnect\"),this},r.prototype.compress=function(t){return this.flags.compress=t,this},r.prototype.binary=function(t){return this.flags.binary=t,this}},function(t,e){function n(t,e){var n=[];e=e||0;for(var r=e||0;r<t.length;r++)n[r-e]=t[r];return n}t.exports=n},function(t,e){function n(t,e,n){return t.on(e,n),{destroy:function(){t.removeListener(e,n)}}}t.exports=n},function(t,e){var n=[].slice;t.exports=function(t,e){if(\"string\"==typeof e&&(e=t[e]),\"function\"!=typeof e)throw new Error(\"bind() requires a function\");var r=n.call(arguments,2);return function(){return e.apply(t,r.concat(n.call(arguments)))}}},function(t,e){function n(t){t=t||{},this.ms=t.min||100,this.max=t.max||1e4,this.factor=t.factor||2,this.jitter=t.jitter>0&&t.jitter<=1?t.jitter:0,this.attempts=0}t.exports=n,n.prototype.duration=function(){var t=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var e=Math.random(),n=Math.floor(e*this.jitter*t);t=0==(1&Math.floor(10*e))?t-n:t+n}return 0|Math.min(t,this.max)},n.prototype.reset=function(){this.attempts=0},n.prototype.setMin=function(t){this.ms=t},n.prototype.setMax=function(t){this.max=t},n.prototype.setJitter=function(t){this.jitter=t}}])});\n//# sourceMappingURL=socket.io.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./libs/socket.io.js?");

/***/ }),

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var i18next = __webpack_require__(/*! ./libs/i18next.min */ \"./libs/i18next.min.js\");\n  var Game = __webpack_require__(/*! ./src/shim */ \"./src/shim.js\");\n  var GameConstants = __webpack_require__(/*! ./src/constants */ \"./src/constants.js\");\n  var Snake = __webpack_require__(/*! ./src/snake */ \"./src/snake.js\");\n  var Grid = __webpack_require__(/*! ./src/grid */ \"./src/grid.js\");\n  var NotificationMessage = __webpack_require__(/*! ./src/notificationMessage */ \"./src/notificationMessage.js\");\n  var GameGroup = __webpack_require__(/*! ./src/gameGroup */ \"./src/gameGroup.js\");\n  var OnlineClient = __webpack_require__(/*! ./src/onlineClient */ \"./src/onlineClient.js\");\n  var GameUI = __webpack_require__(/*! ./src/gameUI.js */ \"./src/gameUI.js\");\n}\n\n// Modes :\nwindow.SOLO_AI = \"SOLO_AI\";\nwindow.SOLO_PLAYER = \"SOLO_PLAYER\";\nwindow.PLAYER_VS_AI = \"PLAYER_VS_AI\";\nwindow.AI_VS_AI = \"AI_VS_AI\";\nwindow.BATTLE_ROYALE = \"BATTLE_ROYALE\";\nwindow.BATTLE_ROYALE_ONLINE = \"BATTLE_ROYALE_ONLINE\";\n// URIs :\nwindow.UPDATER_URI = \"https://www.eliastiksofts.com/snakeia/update.php\";\nwindow.SERVERS_LIST_URI = \"https://www.eliastiksofts.com/snakeia/serversList.php\";\n// Levels types :\nwindow.LEVEL_REACH_SCORE = \"LEVEL_REACH_SCORE\";\nwindow.LEVEL_REACH_MAX_SCORE = \"LEVEL_REACH_MAX_SCORE\";\nwindow.LEVEL_MULTI_BEST_SCORE = \"LEVEL_MULTI_BEST_SCORE\";\nwindow.LEVEL_MULTI_REACH_SCORE_FIRST = \"LEVEL_MULTI_REACH_SCORE_FIRST\";\nwindow.LEVEL_REACH_SCORE_ON_TIME = \"LEVEL_REACH_SCORE_ON_TIME\";\nwindow.LEVEL_MAZE_WIN = \"LEVEL_MAZE_WIN\";\nwindow.DEFAULT_LEVEL = \"DEFAULT_LEVEL\";\nwindow.DOWNLOADED_LEVEL = \"DOWNLOADED_LEVEL\";\n// Default levels :\n// Level model : { settings: [heightGrid, widthGrid, borderWalls, generateWalls, sameGrid, speed, progressiveSpeed, aiLevel, numberIA, generateMaze, customGrid, mazeForceAuto], type: levelType(see below), typeValue: levelTypeValue(score, time, ...), version: (version min to play the level) }\nwindow.DEFAULT_LEVELS_SOLO_PLAYER = {\n  1: { settings: [20, 20, false, false, true, null, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 20, version: GameConstants.Setting.APP_VERSION },\n  2: { settings: [20, 20, true, false, true, null, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 20, version: GameConstants.Setting.APP_VERSION },\n  3: { settings: [20, 20, true, true, true, 15, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 15, version: GameConstants.Setting.APP_VERSION },\n  4: { settings: [20, 20, false, false, true, null, false, null, 0], type: LEVEL_REACH_SCORE_ON_TIME, typeValue: [20, 60], version: GameConstants.Setting.APP_VERSION },\n  5: { settings: [10, 10, true, false, true, 15, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 20, version: GameConstants.Setting.APP_VERSION },\n  6: { settings: [15, 15, true, true, true, 15, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 20, version: GameConstants.Setting.APP_VERSION },\n  7: { settings: [15, 15, false, false, true, null, false, null, 0], type: LEVEL_REACH_SCORE_ON_TIME, typeValue: [20, 45], version: GameConstants.Setting.APP_VERSION },\n  8: { settings: [20, 20, false, false, true, null, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 35, version: GameConstants.Setting.APP_VERSION },\n  9: { settings: [15, 15, false, false, false, null, false, null, 1], type: LEVEL_MULTI_BEST_SCORE, typeValue: null, version: GameConstants.Setting.APP_VERSION },\n  10: { settings: [10, 10, false, false, true, null, false, null, 0], type: LEVEL_REACH_SCORE_ON_TIME, typeValue: [10, 15], version: GameConstants.Setting.APP_VERSION },\n  11: { settings: [20, 20, false, false, true, null, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 50, version: GameConstants.Setting.APP_VERSION },\n  12: { settings: [20, 20, true, false, true, null, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 50, version: GameConstants.Setting.APP_VERSION },\n  13: { settings: [20, 20, true, true, true, 15, false, null, 0], type: LEVEL_REACH_SCORE_ON_TIME, typeValue: [15, 60], version: GameConstants.Setting.APP_VERSION },\n  14: { settings: [20, 20, true, false, true, 5, true, null, 0], type: LEVEL_REACH_SCORE, typeValue: 30, version: GameConstants.Setting.APP_VERSION },\n  15: { settings: [15, 15, false, false, true, null, false, null, 1], type: LEVEL_REACH_SCORE_ON_TIME, typeValue: [15, 60], version: GameConstants.Setting.APP_VERSION },\n  16: { settings: [20, 20, false, false, true, null, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 75, version: GameConstants.Setting.APP_VERSION },\n  17: { settings: [15, 15, true, false, true, 15, false, null, 2], type: LEVEL_MULTI_BEST_SCORE, typeValue: null, version: GameConstants.Setting.APP_VERSION },\n  18: { settings: [5, 5, true, false, true, 25, false, null, 0], type: LEVEL_REACH_MAX_SCORE, typeValue: null, version: GameConstants.Setting.APP_VERSION },\n  19: { settings: [5, 5, false, true, true, 10, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 10, version: GameConstants.Setting.APP_VERSION },\n  20: { settings: [20, 20, false, true, true, 15, false, null, 0], type: LEVEL_REACH_SCORE, typeValue: 50, version: GameConstants.Setting.APP_VERSION }\n};\nwindow.SOLO_PLAYER_SAVE = \"snakeia_solo_player_\";\nwindow.DEFAULT_LEVELS_SOLO_AI = DEFAULT_LEVELS_SOLO_PLAYER;\nwindow.SOLO_AI_SAVE = \"snakeia_solo_ai_\";\n// Downloadable levels :\nwindow.DOWNLOAD_DEFAULT_URI = \"https://www.eliastiksofts.com/snakeia/downloadLevels.php?player={player}&ver={appVersion}\";\nwindow.SOLO_PLAYER_DOWNLOAD_LEVELS_TO = \"snakeia_solo_player_downloadedLevels\";\nwindow.SOLO_AI_DOWNLOAD_LEVELS_TO = \"snakeia_solo_ai_downloadedLevels\";\n\nvar selectedMode = SOLO_AI;\nvar enableAnimations = true;\nvar showDebugInfo = false;\nvar onlineClient = new OnlineClient();\n\ndocument.getElementById(\"versionTxt\").innerHTML = GameConstants.Setting.APP_VERSION;\ndocument.getElementById(\"appVersion\").innerHTML = GameConstants.Setting.APP_VERSION;\ndocument.getElementById(\"dateTxt\").innerHTML = DATE_VERSION;\ndocument.getElementById(\"appUpdateDate\").innerHTML = DATE_VERSION;\n\ndocument.getElementById(\"enableAnimations\").onchange = function() {\n  enableAnimations = this.checked;\n};\n\n// Libs\nString.prototype.strcmp = function(str) {\n  return ((this == str) ? 0 : ((this > str) ? 1 : -1));\n};\n\n// https://github.com/MichalZalecki/storage-factory\nfunction storageFactory(storage) {\n  var inMemoryStorage = {};\n\n  try {\n    var storage = storage || window.localStorage;\n  } catch(e) {\n    var storage = null;\n  }\n\n  function isSupported() {\n    try {\n      var testKey = \"__some_random_key_you_are_not_going_to_use__\";\n      storage.setItem(testKey, testKey);\n      storage.removeItem(testKey);\n      return true;\n    } catch(e) {\n      return false;\n    }\n  }\n\n  this.isSupported = function() {\n    return isSupported();\n  };\n\n  this.clear = function() {\n    if(isSupported()) {\n      storage.clear();\n    } else {\n      inMemoryStorage = {};\n    }\n  }\n\n  this.getItem = function(name) {\n    if(isSupported()) {\n      return storage.getItem(name);\n    }\n\n    if(inMemoryStorage.hasOwnProperty(name)) {\n      return inMemoryStorage[name];\n    }\n\n    return null;\n  }\n\n  this.key = function(index) {\n    if(isSupported()) {\n      return storage.key(index);\n    } else {\n      return Object.keys(inMemoryStorage)[index] || null;\n    }\n  }\n\n  this.removeItem = function(name) {\n    if(isSupported()) {\n      storage.removeItem(name);\n    } else {\n      delete inMemoryStorage[name];\n    }\n  }\n\n  this.setItem = function(name, value) {\n    if(isSupported()) {\n      storage.setItem(name, value);\n    } else {\n      inMemoryStorage[name] = String(value);\n    }\n  }\n\n  this.length = function() {\n    if(isSupported()) {\n      return storage.length;\n    } else {\n      return Object.keys(inMemoryStorage).length;\n    }\n  }\n}\n\nvar storageGlobal = new storageFactory();\n\nif(!storageGlobal.isSupported()) {\n  document.getElementById(\"localstorageDisabled\").style.display = \"block\";\n}\n\nfunction Timer(callback, delay, timerInterval) {\n  var timerId, start, remaining = delay;\n\n  this.pause = function() {\n    window.clearTimeout(timerId);\n    timerInterval != null && timerInterval.stop != null && timerInterval.stop();\n    remaining -= Date.now() - start;\n  };\n\n  this.resume = function() {\n    start = Date.now();\n    window.clearTimeout(timerId);\n    timerInterval != null && timerInterval.stop != null && timerInterval.stop();\n    timerId = window.setTimeout(callback, remaining);\n    timerInterval != null && timerInterval.start != null && timerInterval.start();\n  };\n\n  this.reset = function() {\n    window.clearTimeout(timerId);\n    timerInterval != null && timerInterval.stop != null && timerInterval.stop();\n    remaining = delay;\n  };\n\n  this.getTime = function() {\n    return remaining - (Date.now() - start);\n  };\n}\n\nfunction TimerInterval(callback) {\n  this.interval;\n\n  this.start = function() {\n    this.interval = setInterval(callback, 1000);\n  };\n\n  this.stop = function() {\n    clearInterval(this.interval);\n  };\n}\n\nwindow.enableDebugMode = function() {\n  showDebugInfo = true;\n  console.log(i18next.t(\"debugModeEnabled\"));\n}\n\n// Updater\nfunction checkUpdate() {\n  var script = document.createElement(\"script\");\n  script.src = UPDATER_URI;\n\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\nwindow.updateCallback = function(data) {\n  if(typeof(data) !== \"undefined\" && data !== null && typeof(data.version) !== \"undefined\" && data.version !== null) {\n    var newVersionTest = GameConstants.Setting.APP_VERSION.strcmp(data.version);\n\n    if(newVersionTest < 0) {\n      document.getElementById(\"updateAvailable\").style.display = \"block\";\n      document.getElementById(\"appUpdateVersion\").textContent = data.version;\n\n      var appUpdateDate = DATE_VERSION;\n\n      if(typeof(data.date) !== \"undefined\" && data.date !== null) {\n          var appUpdateDate = data.date;\n      }\n\n      document.getElementById(\"appUpdateDate\").textContent = appUpdateDate;\n\n      var downloadURL = \"http://eliastiksofts.com/snakeia/downloads/index.php\";\n\n      if(typeof(data.url) !== \"undefined\" && data.url !== null) {\n          var downloadURL = data.url;\n      }\n\n      document.getElementById(\"appDownloadLink\").onclick = function() {\n          window.open(downloadURL, '_blank');\n      };\n\n      document.getElementById(\"appDownloadURLGet\").onclick = function() {\n          prompt(i18next.t(\"update.URLToDownload\"), downloadURL);\n      };\n\n      var changes = i18next.t(\"update.noChanges\");\n\n      if(typeof(data.changes) !== \"undefined\" && data.changes !== null) {\n          var changes = data.changes;\n      }\n\n      document.getElementById(\"appUpdateChanges\").onclick = function() {\n          alert(i18next.t(\"update.changes\") + \"\\n\" + changes);\n      };\n\n      translateContent();\n    }\n  }\n}\n\ncheckUpdate();\n\n// Load server list\nfunction loadServerList() {\n  var script = document.createElement(\"script\");\n  script.src = SERVERS_LIST_URI;\n\n  document.getElementsByTagName('head')[0].appendChild(script);\n  document.getElementById(\"loadingServersList\").style.display = \"inline-block\";\n  document.getElementById(\"serverListGroup\").innerHTML = \"\";\n}\n\nwindow.listServersCallback = function(data) {\n  document.getElementById(\"serverListGroup\").innerHTML = \"\";\n\n  if(data != null && data.length > 0) {\n    for(var i = 0; i < data.length; i++) {\n      if(data[i][\"url\"] != null && data[i][\"port\"] != null) {\n        var url = data[i][\"url\"];\n        var port = data[i][\"port\"];\n        var name = data[i][\"name\"];\n\n        var linkServer = document.createElement(\"a\");\n        linkServer.classList.add(\"list-group-item\");\n        linkServer.classList.add(\"list-group-item-action\");\n\n        if(name != null) {\n          linkServer.textContent = name;\n        } else {\n          linkServer.textContent = i18next.t(\"servers.untitled\");\n        }\n\n        linkServer.onclick = function() {\n          connectToServer(url, port);\n        };\n  \n        var serverAddress = document.createElement(\"div\");\n        serverAddress.classList.add(\"small\");\n        serverAddress.classList.add(\"text-muted\");\n        serverAddress.textContent = url + \":\" + port;\n        linkServer.appendChild(serverAddress);\n  \n        document.getElementById(\"serverListGroup\").appendChild(linkServer);\n      }\n    }\n  } else {\n    var noServerFound = document.createElement(\"strong\");\n    noServerFound.textContent = i18next.t(\"servers.noServerFound\");\n\n    document.getElementById(\"serverListGroup\").appendChild(noServerFound);\n  }\n\n  document.getElementById(\"loadingServersList\").style.display = \"none\";\n}\n\ndocument.getElementById(\"linkCustomServer\").onclick = function() {\n  var url = prompt(i18next.t(\"servers.enterCustomServer\"), \"http://\");\n\n  if(url != null && url.trim() != \"\") {\n    connectToServer(url);\n  }\n};\n\nfunction connectToServer(url, port) {\n  document.getElementById(\"menu\").style.display = \"none\";\n  document.getElementById(\"levelContainer\").style.display = \"none\";\n  document.getElementById(\"gameContainer\").style.display = \"none\";\n  document.getElementById(\"serverListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineCreation\").style.display = \"none\";\n  document.getElementById(\"errorRoomCreation\").style.display = \"none\";\n  document.getElementById(\"settings\").style.display = \"none\";\n  document.getElementById(\"connectingToServer\").style.display = \"block\";\n  document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n\n  onlineClient.connect(url, port, function(success) {\n    document.getElementById(\"connectingToServer\").style.display = \"none\";\n\n    if(!success) {\n      alert(i18next.t(\"servers.connectionError\"));\n      displayServerList();\n    } else {\n      displayRoomsList();\n    }\n  });\n}\n\ndocument.getElementById(\"cancelConnectingToServer\").onclick = function() {\n  document.getElementById(\"connectingToServer\").style.display = \"none\";\n  onlineClient.disconnect();\n  displayServerList();\n};\n\nfunction displayRooms() {\n  document.getElementById(\"loadingRoomsOnlineList\").style.display = \"inline-block\";\n  document.getElementById(\"roomsOnlineListGroup\").innerHTML = \"\";\n  document.getElementById(\"refreshRooms\").disabled = \"disabled\";\n  document.getElementById(\"errorRoomJoin\").style.display = \"none\";\n  document.getElementById(\"errorServerVersion\").style.display = \"none\";\n\n  onlineClient.displayRooms(function(data) { // Request rooms data\n    document.getElementById(\"roomsOnlineListGroup\").innerHTML = \"\";\n    document.getElementById(\"errorRoomsList\").style.display = \"none\";\n    document.getElementById(\"refreshRooms\").disabled = \"\";\n  \n    if(data.rooms != null && data.rooms.error) {\n      document.getElementById(\"errorRoomsList\").style.display = \"block\";\n    } else if(data.rooms != null && Object.keys(data.rooms).length > 0) {\n      for(var i = 0; i < Object.keys(data.rooms).length; i++) {\n        var room = data.rooms[Object.keys(data.rooms)[i]];\n        var code = room[\"code\"];\n  \n        var linkRoom = document.createElement(\"a\");\n        linkRoom.classList.add(\"list-group-item\");\n        linkRoom.classList.add(\"list-group-item-action\");\n        linkRoom.textContent = i18next.t(\"servers.room\", { number: (i + 1) }) + (room.state != null ? \" \" + (\n          room.state == GameConstants.GameState.SEARCHING_PLAYERS ? i18next.t(\"servers.searchingPlayers\") :\n          room.state == GameConstants.GameState.STARTING ? i18next.t(\"servers.starting\") :\n          room.state == GameConstants.GameState.STARTED ? i18next.t(\"servers.started\") : \"\"\n        ) : \"\");\n  \n        linkRoom.onclick = function() {\n          joinRoom(code);\n        };\n  \n        var gameInfos = document.createElement(\"div\");\n        gameInfos.classList.add(\"small\");\n        gameInfos.classList.add(\"text-muted\");\n        gameInfos.textContent = i18next.t(\"servers.infos\", { width : room.width, height: room.height, speed: room.speed });\n  \n        var gameInfosSecond = document.createElement(\"div\");\n        gameInfosSecond.classList.add(\"small\");\n        gameInfosSecond.classList.add(\"text-muted\");\n        gameInfosSecond.textContent = room.borderWalls ? i18next.t(\"servers.infosBorderWalls\") : \"\";\n        \n        var gameInfosThird = document.createElement(\"div\");\n        gameInfosThird.classList.add(\"small\");\n        gameInfosThird.classList.add(\"text-muted\");\n        gameInfosThird.textContent = room.generateWalls ? i18next.t(\"servers.infosGenerateWalls\") : \"\";\n  \n        var gameInfosPlayers = document.createElement(\"div\");\n        gameInfosPlayers.classList.add(\"small\");\n        gameInfosPlayers.classList.add(\"text-muted\");\n        gameInfosPlayers.textContent = i18next.t(\"servers.infosPlayers\", { count : room.players, max: room.maxPlayers });\n  \n        linkRoom.appendChild(gameInfos);\n        linkRoom.appendChild(gameInfosSecond);\n        linkRoom.appendChild(gameInfosThird);\n        linkRoom.appendChild(gameInfosPlayers);\n  \n        if(room.spectators > 0) {\n          var gameInfosSpectators = document.createElement(\"div\");\n          gameInfosSpectators.classList.add(\"small\");\n          gameInfosSpectators.classList.add(\"text-muted\");\n          gameInfosSpectators.textContent = i18next.t(\"servers.infosSpectators\", { count : room.spectators });\n          linkRoom.appendChild(gameInfosSpectators);\n        }\n  \n        document.getElementById(\"roomsOnlineListGroup\").appendChild(linkRoom);\n      }\n    } else {\n      var noRoomFound = document.createElement(\"strong\");\n      noRoomFound.textContent = i18next.t(\"servers.noRoomound\");\n  \n      document.getElementById(\"roomsOnlineListGroup\").appendChild(noRoomFound);\n    }\n\n    if(data != null && data.serverVersion != null && data.serverVersion != GameConstants.Setting.APP_VERSION) {\n      document.getElementById(\"errorServerVersion\").style.display = \"block\";\n      document.getElementById(\"errorServerVersionText\").textContent = i18next.t(\"servers.errorServerVersion\", { server_version: data.serverVersion, client_version: GameConstants.Setting.APP_VERSION });\n    }\n      \n    document.getElementById(\"loadingRoomsOnlineList\").style.display = \"none\";\n    document.getElementById(\"serverAddress\").textContent = onlineClient.url + (onlineClient.port != null ? (\":\" + onlineClient.port) : \"\");\n  });\n}\n\ndocument.getElementById(\"refreshRooms\").onclick = function() {\n  displayRooms();\n};\n\nfunction joinRoom(code) {\n  document.getElementById(\"menu\").style.display = \"none\";\n  document.getElementById(\"levelContainer\").style.display = \"none\";\n  document.getElementById(\"gameContainer\").style.display = \"none\";\n  document.getElementById(\"serverListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineCreation\").style.display = \"none\";\n  document.getElementById(\"errorRoomCreation\").style.display = \"none\";\n  document.getElementById(\"settings\").style.display = \"none\";\n  document.getElementById(\"connectingToServer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineJoin\").style.display = \"block\";\n  document.getElementById(\"errorRoomJoin\").style.display = \"none\";\n\n  onlineClient.joinRoom(code, function(data) {\n    document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n\n    if(data.success) {\n      var ui = new GameUI(null, document.getElementById(\"gameContainer\"), null, null, (showDebugInfo ? true : false), null, !enableAnimations);\n      var game = onlineClient.getGame(ui);\n      game.init();\n\n      document.getElementById(\"gameContainer\").style.display = \"block\";\n      document.getElementById(\"titleGame\").innerHTML = i18next.t(\"game.currentMode\") + \" \" + i18next.t(\"menu.onlineBattleRoyale\");\n      document.getElementById(\"gameOrder\").textContent = i18next.t(\"servers.roomCode\") + \" \" + code;\n      document.getElementById(\"gameStatus\").textContent = \"\";\n      document.getElementById(\"gameStatusError\").textContent = \"\";\n\n      if(ui.canvas != undefined) {\n        ui.canvas.scrollIntoView();\n      }\n\n      game.onExit(function() {\n        onlineClient.stopGame();\n        displayRoomsList();\n      });\n\n      game.onKill(function() {\n        onlineClient.stopGame();\n        displayRoomsList();\n      });\n\n      document.getElementById(\"backToMenuGame\").onclick = function() {\n        if(confirm(i18next.t(\"game.confirmQuit\"))) {\n          onlineClient.stopGame();\n          displayRoomsList();\n          group = null;\n        }\n      };\n    } else {\n      var errorCode = data.errorCode;\n      var errorCode_text = \"\";\n\n      switch(errorCode) {\n        case GameConstants.Error.ROOM_NOT_FOUND:\n          errorCode_text = i18next.t(\"servers.errorRoomJoinReason_roomNotFound\");\n          break;\n        case GameConstants.Error.ROOM_ALREADY_JOINED:\n          errorCode_text = i18next.t(\"servers.errorRoomJoinReason_roomAlreadyJoined\");\n          break;\n        default:\n          errorCode_text = i18next.t(\"servers.errorReason_unknown\");\n          break;\n      }\n\n      document.getElementById(\"errorRoomJoinReason\").textContent = errorCode_text;\n      document.getElementById(\"errorRoomJoin\").style.display = \"block\";\n      document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n      document.getElementById(\"roomsOnlineListContainer\").style.display = \"block\";\n    }\n  });\n}\n\ndocument.getElementById(\"joinPrivateRoom\").onclick = function() {\n  var code = prompt(i18next.t(\"servers.enterCode\"));\n\n  if(code != null) {\n    joinRoom(code);\n  }\n};\n\n// Simple modes\nfunction selectMode(mode) {\n  selectedMode = mode;\n\n  if(selectedMode == SOLO_PLAYER) {\n    document.getElementById(\"iaSettings\").style.display = \"none\";\n  } else {\n    document.getElementById(\"iaSettings\").style.display = \"block\";\n  }\n\n  if(selectedMode == SOLO_AI) {\n    document.getElementById(\"autoRetrySettings\").style.display = \"block\";\n  } else {\n    document.getElementById(\"autoRetrySettings\").style.display = \"none\";\n  }\n\n  if(selectedMode == BATTLE_ROYALE) {\n    document.getElementById(\"numberIASettings\").style.display = \"block\";\n  } else {\n    document.getElementById(\"numberIASettings\").style.display = \"none\";\n  }\n\n  if(selectedMode == PLAYER_VS_AI || selectedMode == AI_VS_AI || selectedMode == BATTLE_ROYALE) {\n    document.getElementById(\"sameGridDiv\").style.display = \"block\";\n  } else {\n    document.getElementById(\"sameGridDiv\").style.display = \"none\";\n  }\n\n  if(selectedMode == SOLO_AI || selectedMode == SOLO_PLAYER) {\n    document.getElementById(\"mazeGridDiv\").style.display = \"block\";\n  } else {\n    document.getElementById(\"mazeGridDiv\").style.display = \"none\";\n  }\n\n  if(selectedMode == BATTLE_ROYALE_ONLINE) {\n    document.getElementById(\"sameGridDiv\").style.display = \"none\";\n    document.getElementById(\"mazeGridDiv\").style.display = \"none\";\n    document.getElementById(\"iaSettings\").style.display = \"none\";\n    document.getElementById(\"autoRetrySettings\").style.display = \"none\";\n    document.getElementById(\"progressiveSpeedDiv\").style.display = \"none\";\n    document.getElementById(\"privateGameDiv\").style.display = \"block\";\n  } else {\n    document.getElementById(\"privateGameDiv\").style.display = \"none\";\n  }\n\n  displaySettings();\n}\n\ndocument.getElementById(\"soloAi\").onclick = function() {\n  selectMode(SOLO_AI);\n};\n\ndocument.getElementById(\"soloPlayer\").onclick = function() {\n  selectMode(SOLO_PLAYER);\n};\n\ndocument.getElementById(\"playerVsAi\").onclick = function() {\n  selectMode(PLAYER_VS_AI);\n};\n\ndocument.getElementById(\"aiVsAi\").onclick = function() {\n  selectMode(AI_VS_AI);\n};\n\ndocument.getElementById(\"battleRoyale\").onclick = function() {\n  selectMode(BATTLE_ROYALE);\n};\n\ndocument.getElementById(\"createRoom\").onclick = function() {\n  selectMode(BATTLE_ROYALE_ONLINE);\n};\n\nfunction displaySettings() {\n  document.getElementById(\"menu\").style.display = \"none\";\n  document.getElementById(\"levelContainer\").style.display = \"none\";\n  document.getElementById(\"gameContainer\").style.display = \"none\";\n  document.getElementById(\"serverListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineCreation\").style.display = \"none\";\n  document.getElementById(\"errorRoomCreation\").style.display = \"none\";\n  document.getElementById(\"settings\").style.display = \"block\";\n  document.getElementById(\"connectingToServer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n  checkSameGrid();\n  checkGameSpeed();\n  checkPlayer();\n  checkFailSettings();\n  checkMazeGrid();\n\n  if(selectedMode == BATTLE_ROYALE_ONLINE) {\n    document.getElementById(\"backToMenu\").onclick = function() {\n      displayRoomsList();\n    };\n  } else {\n    document.getElementById(\"backToMenu\").onclick = function() {\n      displayMenu();\n    };\n  }\n}\n\nfunction displayMenu() {\n  document.getElementById(\"settings\").style.display = \"none\";\n  document.getElementById(\"levelContainer\").style.display = \"none\";\n  document.getElementById(\"gameContainer\").style.display = \"none\";\n  document.getElementById(\"serverListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineCreation\").style.display = \"none\";\n  document.getElementById(\"errorRoomCreation\").style.display = \"none\";\n  document.getElementById(\"menu\").style.display = \"block\";\n  document.getElementById(\"connectingToServer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n}\n\ndocument.getElementById(\"backToMenu\").onclick = function() {\n  displayMenu();\n};\n\ndocument.getElementById(\"backToMenuLevelList\").onclick = function() {\n  displayMenu();\n};\n\ndocument.getElementById(\"backToMenuServerList\").onclick = function() {\n  onlineClient.disconnect();\n  displayMenu();\n};\n\nfunction displayServerList() {\n  selectMode(BATTLE_ROYALE_ONLINE);\n  document.getElementById(\"settings\").style.display = \"none\";\n  document.getElementById(\"levelContainer\").style.display = \"none\";\n  document.getElementById(\"gameContainer\").style.display = \"none\";\n  document.getElementById(\"serverListContainer\").style.display = \"block\";\n  document.getElementById(\"roomsOnlineListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineCreation\").style.display = \"none\";\n  document.getElementById(\"errorRoomCreation\").style.display = \"none\";\n  document.getElementById(\"menu\").style.display = \"none\";\n  document.getElementById(\"connectingToServer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n  loadServerList();\n}\n\ndocument.getElementById(\"onlineBattleRoyale\").onclick = function() {\n  displayServerList();\n};\n\ndocument.getElementById(\"backToServersRoomsList\").onclick = function() {\n  onlineClient.disconnect();\n  displayServerList();\n};\n\nfunction displayRoomsList() {\n  document.getElementById(\"settings\").style.display = \"none\";\n  document.getElementById(\"levelContainer\").style.display = \"none\";\n  document.getElementById(\"gameContainer\").style.display = \"none\";\n  document.getElementById(\"serverListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineListContainer\").style.display = \"block\";\n  document.getElementById(\"roomsOnlineCreation\").style.display = \"none\";\n  document.getElementById(\"menu\").style.display = \"none\";\n  document.getElementById(\"connectingToServer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n  displayRooms();\n}\n\nfunction displayLevelList(player) {\n  document.getElementById(\"settings\").style.display = \"none\";\n  document.getElementById(\"levelContainer\").style.display = \"block\";\n  document.getElementById(\"gameContainer\").style.display = \"none\";\n  document.getElementById(\"serverListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineListContainer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineCreation\").style.display = \"none\";\n  document.getElementById(\"errorRoomCreation\").style.display = \"none\";\n  document.getElementById(\"menu\").style.display = \"none\";\n  document.getElementById(\"connectingToServer\").style.display = \"none\";\n  document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n  document.getElementById(\"levelDownloading\").innerHTML = \"\";\n  document.getElementById(\"btnDeblockDiv\").innerHTML = \"\";\n\n  if(player == PLAYER_HUMAN) {\n    document.getElementById(\"titleLevelList\").innerHTML = i18next.t(\"levels.titlePlayer\");\n    document.getElementById(\"levelListDefault\").innerHTML = getListLevel(PLAYER_HUMAN, DEFAULT_LEVEL);\n    document.getElementById(\"levelListDownloadAI\").style.display = \"none\";\n    document.getElementById(\"levelListDownloadPlayer\").style.display = \"block\";\n    document.getElementById(\"levelListDownloadPlayer\").innerHTML = getListLevel(PLAYER_HUMAN, DOWNLOADED_LEVEL);\n  } else if(player == PLAYER_AI) {\n    document.getElementById(\"titleLevelList\").innerHTML = i18next.t(\"levels.titleAI\");\n    document.getElementById(\"levelListDefault\").innerHTML = getListLevel(PLAYER_AI, DEFAULT_LEVEL);\n    document.getElementById(\"levelListDownloadAI\").style.display = \"block\";\n    document.getElementById(\"levelListDownloadPlayer\").style.display = \"none\";\n    document.getElementById(\"levelListDownloadAI\").innerHTML = getListLevel(PLAYER_AI, DOWNLOADED_LEVEL);\n  }\n}\n\ndocument.getElementById(\"levelsSoloPlayer\").onclick = function() {\n  displayLevelList(PLAYER_HUMAN);\n};\n\ndocument.getElementById(\"levelsSoloAI\").onclick = function() {\n  displayLevelList(PLAYER_AI);\n};\n\nfunction checkSameGrid() {\n  if(document.getElementById(\"sameGrid\").checked && (selectedMode == PLAYER_VS_AI || selectedMode == AI_VS_AI || selectedMode == BATTLE_ROYALE)) {\n    document.getElementById(\"progressiveSpeed\").checked = false;\n    document.getElementById(\"progressiveSpeed\").disabled = true;\n    document.getElementById(\"autoRetry\").checked = false;\n    document.getElementById(\"autoRetry\").disabled = true;\n  } else {\n    document.getElementById(\"progressiveSpeed\").disabled = false;\n    document.getElementById(\"autoRetry\").disabled = false;\n  }\n}\n\nfunction checkGameSpeed() {\n  if(document.getElementById(\"gameSpeed\").value == \"custom\") {\n    document.getElementById(\"customSpeedSettings\").style.display = \"block\";\n  } else {\n    document.getElementById(\"customSpeedSettings\").style.display = \"none\";\n  }\n}\n\ndocument.getElementById(\"gameSpeed\").onchange = function() {\n  checkGameSpeed();\n};\n\nfunction checkPlayer() {\n  if(selectedMode == SOLO_PLAYER || selectedMode == PLAYER_VS_AI || (selectedMode == BATTLE_ROYALE && document.getElementById(\"battleAgainstAIs\").checked)) {\n    document.getElementById(\"playerSettings\").style.display = \"block\";\n  } else {\n    document.getElementById(\"playerSettings\").style.display = \"none\";\n  }\n}\n\nfunction checkMazeGrid() {\n  if(document.getElementById(\"mazeGrid\").checked && (selectedMode == SOLO_AI || selectedMode == SOLO_PLAYER)) {\n    document.getElementById(\"borderWalls\").checked = false;\n    document.getElementById(\"borderWalls\").disabled = true;\n    document.getElementById(\"generateWalls\").checked = false;\n    document.getElementById(\"generateWalls\").disabled = true;\n    document.getElementById(\"aiAssistant\").checked = false;\n    document.getElementById(\"aiAssistant\").disabled = true;\n  } else {\n    document.getElementById(\"borderWalls\").disabled = false;\n    document.getElementById(\"generateWalls\").disabled = false;\n    document.getElementById(\"aiAssistant\").disabled = false;\n  }\n}\n\nfunction gameCanFailToInit(heightGrid, widthGrid, borderWalls, generateWalls, numberPlayers) {\n  var heightGrid = parseInt(heightGrid);\n  var widthGrid = parseInt(widthGrid);\n\n  var numberEmptyCases = heightGrid * widthGrid;\n\n  if(borderWalls) {\n    numberEmptyCases -= (((widthGrid + heightGrid) * 2) - 4);\n  }\n\n  if(generateWalls) {\n    if(borderWalls) {\n      numberEmptyCases -= ((heightGrid * widthGrid) * 0.1);\n    } else {\n      numberEmptyCases -= ((heightGrid * widthGrid) * 0.1675);\n    }\n  }\n\n  var neededCases = numberPlayers * 5;\n\n  if(numberEmptyCases >= neededCases) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction checkFailSettings() {\n  document.getElementById(\"possibleFailInitGame\").style.display = \"none\";\n\n  if(validateSettings(true)) {\n    var heightGrid = document.getElementById(\"heightGrid\").value;\n    var widthGrid = document.getElementById(\"widthGrid\").value;\n    var borderWalls = document.getElementById(\"borderWalls\").checked;\n    var generateWalls = document.getElementById(\"generateWalls\").checked;\n    var sameGrid = document.getElementById(\"sameGrid\").checked;\n    var numberIA = document.getElementById(\"numberIA\").value;\n    var battleAgainstAIs = document.getElementById(\"battleAgainstAIs\").checked;\n\n    var numberPlayers = 1;\n\n    if(selectedMode == PLAYER_VS_AI || selectedMode == AI_VS_AI) {\n      if(sameGrid) {\n        numberPlayers = 2;\n      }\n    } else if(selectedMode == BATTLE_ROYALE) {\n      if(sameGrid) {\n        if(battleAgainstAIs) {\n          numberPlayers = parseInt(numberIA) + 1;\n        } else {\n          numberPlayers = numberIA;\n        }\n      }\n    }\n\n    if(gameCanFailToInit(heightGrid, widthGrid, borderWalls, generateWalls, numberPlayers)) {\n      document.getElementById(\"possibleFailInitGame\").style.display = \"block\";\n    }\n  }\n}\n\ndocument.getElementById(\"heightGrid\").onchange = function() {\n  checkFailSettings();\n};\n\ndocument.getElementById(\"widthGrid\").onchange = function() {\n  checkFailSettings();\n};\n\ndocument.getElementById(\"borderWalls\").onchange = function() {\n  checkFailSettings();\n};\n\ndocument.getElementById(\"generateWalls\").onchange = function() {\n  checkFailSettings();\n};\n\ndocument.getElementById(\"sameGrid\").onchange = function() {\n  checkSameGrid();\n  checkGameSpeed();\n  checkFailSettings();\n};\n\ndocument.getElementById(\"numberIA\").onchange = function() {\n  checkFailSettings();\n};\n\ndocument.getElementById(\"battleAgainstAIs\").onchange = function() {\n  checkPlayer();\n  checkFailSettings();\n};\n\ndocument.getElementById(\"mazeGrid\").onchange = function() {\n  checkMazeGrid();\n};\n\nfunction resetForm(resetValues) {\n  document.getElementById(\"invalidHeight\").style.display = \"none\";\n  document.getElementById(\"invalidWidth\").style.display = \"none\";\n  document.getElementById(\"heightGrid\").classList.remove(\"is-invalid\");\n  document.getElementById(\"widthGrid\").classList.remove(\"is-invalid\");\n  document.getElementById(\"gameSpeed\").classList.remove(\"is-invalid\");\n  document.getElementById(\"invalidSpeed\").style.display = \"none\";\n  document.getElementById(\"customSpeed\").classList.remove(\"is-invalid\");\n  document.getElementById(\"invalidCustomSpeed\").style.display = \"none\";\n  document.getElementById(\"aiLevel\").classList.remove(\"is-invalid\");\n  document.getElementById(\"invalidaiLevel\").style.display = \"none\";\n  document.getElementById(\"numberIA\").classList.remove(\"is-invalid\");\n  document.getElementById(\"invalidIANumber\").style.display = \"none\";\n  document.getElementById(\"resultLevels\").innerHTML = \"\";\n  document.getElementById(\"gameStatus\").innerHTML = \"\";\n  document.getElementById(\"gameOrder\").innerHTML = \"\";\n  document.getElementById(\"gameStatusError\").innerHTML = \"\";\n\n  if(resetValues) {\n    document.getElementById(\"heightGrid\").value = 20;\n    document.getElementById(\"widthGrid\").value = 20;\n    document.getElementById(\"borderWalls\").checked = false;\n    document.getElementById(\"generateWalls\").checked = false;\n    document.getElementById(\"mazeGrid\").checked = false;\n    document.getElementById(\"sameGrid\").checked = true;\n    document.getElementById(\"gameSpeed\").value = 8;\n    document.getElementById(\"progressiveSpeed\").checked = false;\n    document.getElementById(\"customSpeed\").value = 8;\n    document.getElementById(\"customSpeedSettings\").style.display = \"none\";\n    document.getElementById(\"aiLevel\").value = \"normal\";\n    document.getElementById(\"autoRetry\").checked = false;\n    document.getElementById(\"numberIA\").value = 20;\n    document.getElementById(\"battleAgainstAIs\").checked = false;\n    document.getElementById(\"aiAssistant\").checked = false;\n    document.getElementById(\"privateGame\").checked = false;\n  }\n\n  checkSameGrid();\n  checkGameSpeed();\n  checkPlayer();\n  checkFailSettings();\n  checkMazeGrid();\n}\n\ndocument.getElementById(\"resetSettings\").onclick = function() {\n  resetForm(true);\n};\n\nfunction validateSettings(returnValidation) {\n  if(!returnValidation) {\n    resetForm(false);\n  }\n\n  var heightGrid = document.getElementById(\"heightGrid\").value;\n  var widthGrid = document.getElementById(\"widthGrid\").value;\n  var borderWalls = document.getElementById(\"borderWalls\").checked;\n  var generateWalls = document.getElementById(\"generateWalls\").checked;\n  var mazeGrid = document.getElementById(\"mazeGrid\").checked;\n  var sameGrid = document.getElementById(\"sameGrid\").checked;\n  var speed = document.getElementById(\"gameSpeed\").value;\n  var progressiveSpeed = document.getElementById(\"progressiveSpeed\").checked;\n  var customSpeed = document.getElementById(\"customSpeed\").value;\n  var aiLevel = document.getElementById(\"aiLevel\").value;\n  var autoRetry = document.getElementById(\"autoRetry\").checked;\n  var numberIA = document.getElementById(\"numberIA\").value;\n  var battleAgainstAIs = document.getElementById(\"battleAgainstAIs\").checked;\n\n  if(document.getElementById(\"aiAssistant\").checked) {\n    var playerHumanType = PLAYER_HYBRID_HUMAN_AI;\n  } else {\n    var playerHumanType = PLAYER_HUMAN;\n  }\n\n  var formValidated = true;\n\n  if(heightGrid.trim() == \"\" || isNaN(heightGrid) || heightGrid < 5 || heightGrid > 100) {\n    formValidated = false;\n\n    if(!returnValidation) {\n      document.getElementById(\"heightGrid\").classList.add(\"is-invalid\");\n      document.getElementById(\"invalidHeight\").style.display = \"block\";\n    }\n  } else {\n    heightGrid = parseInt(heightGrid);\n  }\n\n  if(widthGrid.trim() == \"\" || isNaN(widthGrid) || widthGrid < 5 || widthGrid > 100) {\n    formValidated = false;\n\n    if(!returnValidation) {\n      document.getElementById(\"widthGrid\").classList.add(\"is-invalid\");\n      document.getElementById(\"invalidWidth\").style.display = \"block\";\n    }\n  } else {\n    widthGrid = parseInt(widthGrid);\n  }\n\n  if(speed != \"custom\" && (speed.trim() == \"\" || isNaN(speed) || speed < 1 || speed > 100)) {\n    formValidated = false;\n\n    if(!returnValidation) {\n      document.getElementById(\"gameSpeed\").classList.add(\"is-invalid\");\n      document.getElementById(\"invalidSpeed\").style.display = \"block\";\n    }\n  } else if(speed != \"custom\") {\n    speed = parseInt(speed);\n  }\n\n  if(speed == \"custom\" && (customSpeed.trim() == \"\" || isNaN(customSpeed) || customSpeed < 1 || customSpeed > 100)) {\n    formValidated = false;\n\n    if(!returnValidation) {\n      document.getElementById(\"customSpeed\").classList.add(\"is-invalid\");\n      document.getElementById(\"invalidCustomSpeed\").style.display = \"block\";\n    }\n  } else if(speed == \"custom\") {\n    speed = parseInt(customSpeed);\n  }\n\n  if(selectedMode != SOLO_PLAYER && selectedMode != BATTLE_ROYALE_ONLINE && (aiLevel != \"low\" && aiLevel != \"normal\" && aiLevel != \"high\" && aiLevel != \"random\")) {\n    formValidated = false;\n\n    if(!returnValidation) {\n      document.getElementById(\"aiLevel\").classList.add(\"is-invalid\");\n      document.getElementById(\"invalidaiLevel\").style.display = \"block\";\n    }\n  } else if(selectedMode != SOLO_PLAYER && selectedMode != BATTLE_ROYALE_ONLINE) {\n    switch(aiLevel) {\n      case \"random\":\n        aiLevel = AI_LEVEL_RANDOM;\n        break;\n      case \"low\":\n        aiLevel = AI_LEVEL_LOW;\n        break;\n      case \"normal\":\n        aiLevel = AI_LEVEL_DEFAULT;\n        break;\n      case \"high\":\n        aiLevel = AI_LEVEL_HIGH;\n        break;\n      case \"ultra\":\n        aiLevel = AI_LEVEL_ULTRA;\n        break;\n      default:\n        aiLevel = AI_LEVEL_DEFAULT;\n        break;\n    }\n  }\n\n  if(selectedMode == BATTLE_ROYALE && (numberIA.trim() == \"\" || isNaN(numberIA) || numberIA < 2 || numberIA > 100)) {\n    formValidated = false;\n\n    if(!returnValidation) {\n      document.getElementById(\"numberIA\").classList.add(\"is-invalid\");\n      document.getElementById(\"invalidIANumber\").style.display = \"block\";\n    }\n  } else if(selectedMode == BATTLE_ROYALE) {\n    numberIA = parseInt(numberIA);\n  }\n\n  if(selectedMode != SOLO_AI) {\n    autoRetry = false;\n  }\n\n  if(returnValidation) {\n    return formValidated;\n  }\n\n  if(formValidated) {\n    document.getElementById(\"roomsOnlineCreation\").style.display = \"block\";\n    document.getElementById(\"settings\").style.display = \"none\";\n    document.getElementById(\"errorRoomCreation\").style.display = \"none\";\n\n    if(selectedMode == BATTLE_ROYALE_ONLINE) {\n      onlineClient.createRoom({\n        speed: speed,\n        heightGrid: heightGrid,\n        widthGrid: widthGrid,\n        borderWalls: borderWalls,\n        generateWalls: generateWalls,\n        customSpeed: customSpeed,\n        enableAI: false,\n        private: document.getElementById(\"privateGame\").checked\n      }, function(data) {\n        if(data.connection_error) {\n          alert(i18next.t(\"servers.connectionError\"));\n          displayServerList();\n        } else {\n          if(data.success) {\n            joinRoom(data.code);\n          } else {\n            var errorCode = data.errorCode;\n            var errorCode_text = \"\";\n\n            switch(errorCode) {\n              case GameConstants.Error.INVALID_SETTINGS:\n                errorCode_text = i18next.t(\"servers.errorRoomCreationReason_invalidSettings\");\n                break;\n              case GameConstants.Error.MAX_ROOM_LIMIT_REACHED:\n                errorCode_text = i18next.t(\"servers.errorRoomCreationReason_maxRoomLimitReached\");\n                break;\n              default:\n                errorCode_text = i18next.t(\"servers.errorReason_unknown\");\n                break;\n            }\n\n            document.getElementById(\"errorRoomCreation\").style.display = \"block\";\n            document.getElementById(\"errorRoomCreationReason\").textContent = errorCode_text;\n            displayRoomsList();\n          }\n        }\n      });\n    } else {\n      document.getElementById(\"settings\").style.display = \"none\";\n      document.getElementById(\"menu\").style.display = \"none\";\n      document.getElementById(\"levelContainer\").style.display = \"none\";\n      document.getElementById(\"serverListContainer\").style.display = \"none\";\n      document.getElementById(\"roomsOnlineListContainer\").style.display = \"none\";\n      document.getElementById(\"roomsOnlineCreation\").style.display = \"none\";\n      document.getElementById(\"errorRoomCreation\").style.display = \"none\";\n      document.getElementById(\"gameContainer\").style.display = \"block\";\n      document.getElementById(\"connectingToServer\").style.display = \"none\";\n      document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n\n      var titleGame = \"\";\n\n      switch(selectedMode) {\n        case SOLO_AI:\n          titleGame = i18next.t(\"menu.soloAi\");\n          break;\n        case SOLO_PLAYER:\n          titleGame = i18next.t(\"menu.soloPlayer\");\n          break;\n        case PLAYER_VS_AI:\n          titleGame = i18next.t(\"menu.playerVsAi\");\n          break;\n        case AI_VS_AI:\n          titleGame = i18next.t(\"menu.aiVsAi\");\n          break;\n        case BATTLE_ROYALE:\n          titleGame = i18next.t(\"menu.battleRoyale\");\n          break;\n      }\n\n      document.getElementById(\"titleGame\").innerHTML = i18next.t(\"game.currentMode\") + \" \" + titleGame;\n\n      var games = [];\n\n      if(selectedMode == SOLO_AI) {\n        var grid = new Grid(widthGrid, heightGrid, generateWalls, borderWalls, mazeGrid);\n        var snake = new Snake(RIGHT, 3, grid, PLAYER_AI, aiLevel, autoRetry);\n\n        games.push(new Game(grid, snake, speed, document.getElementById(\"gameContainer\"), true, true, progressiveSpeed, null, null, null, null, !enableAnimations));\n      } else if(selectedMode == SOLO_PLAYER) {\n        var grid = new Grid(widthGrid, heightGrid, generateWalls, borderWalls, mazeGrid);\n        var snake = new Snake(RIGHT, 3, grid, playerHumanType);\n\n        games.push(new Game(grid, snake, speed, document.getElementById(\"gameContainer\"), true, true, progressiveSpeed, null, null, null, null, !enableAnimations));\n      } else if(selectedMode == PLAYER_VS_AI) {\n        var grid = new Grid(widthGrid, heightGrid, generateWalls, borderWalls);\n        var snake = new Snake(RIGHT, 3, grid, playerHumanType);\n\n        if(sameGrid) {\n          var snake2 = new Snake(RIGHT, 3, grid, PLAYER_AI, aiLevel, autoRetry);\n          games.push(new Game(grid, [snake, snake2], speed, document.getElementById(\"gameContainer\"), true, true, progressiveSpeed, null, null, null, null, !enableAnimations));\n        } else {\n          var grid2 = new Grid(widthGrid, heightGrid, generateWalls, borderWalls);\n          var snake2 = new Snake(RIGHT, 3, grid2, PLAYER_AI, aiLevel, autoRetry);\n\n          games.push(new Game(grid, snake, speed, document.getElementById(\"gameContainer\"), true, false, progressiveSpeed, null, null, null, null, !enableAnimations));\n          games.push(new Game(grid2, snake2, speed, document.getElementById(\"gameContainer\"), false, false, progressiveSpeed, null, null, null, null, !enableAnimations));\n        }\n      } else if(selectedMode == AI_VS_AI) {\n        var grid = new Grid(widthGrid, heightGrid, generateWalls, borderWalls);\n        var snake = new Snake(RIGHT, 3, grid, PLAYER_AI, aiLevel, autoRetry);\n\n        if(sameGrid) {\n          var snake2 = new Snake(RIGHT, 3, grid, PLAYER_AI, aiLevel, autoRetry);\n          games.push(new Game(grid, [snake, snake2], speed, document.getElementById(\"gameContainer\"), true, true, progressiveSpeed, null, null, null, null, !enableAnimations));\n        } else {\n          var grid2 = new Grid(widthGrid, heightGrid, generateWalls, borderWalls);\n          var snake2 = new Snake(RIGHT, 3, grid2, PLAYER_AI, aiLevel, autoRetry);\n\n          games.push(new Game(grid, snake, speed, document.getElementById(\"gameContainer\"), true, true, progressiveSpeed, null, null, null, null, !enableAnimations));\n          games.push(new Game(grid2, snake2, speed, document.getElementById(\"gameContainer\"), true, true, progressiveSpeed, null, null, null, null, !enableAnimations));\n        }\n      } else if(selectedMode == BATTLE_ROYALE) {\n        if(sameGrid) {\n          var grid = new Grid(widthGrid, heightGrid, generateWalls, borderWalls);\n          var snakes = [];\n\n          if(battleAgainstAIs) {\n            snakes.push(new Snake(RIGHT, 3, grid, playerHumanType, aiLevel, autoRetry));\n          }\n\n          for(var i = 0; i < numberIA; i++) {\n            snakes.push(new Snake(RIGHT, 3, grid, PLAYER_AI, aiLevel, autoRetry));\n          }\n\n          games.push(new Game(grid, snakes, speed, document.getElementById(\"gameContainer\"), true, true, progressiveSpeed, null, null, null, null, !enableAnimations));\n        } else {\n          if(battleAgainstAIs) {\n            var grid = new Grid(widthGrid, heightGrid, generateWalls, borderWalls);\n            var snake = new Snake(RIGHT, 3, grid, playerHumanType, aiLevel, autoRetry);\n\n            games.push(new Game(grid, snake, speed, document.getElementById(\"gameContainer\"), true, false, progressiveSpeed, 350, 250, null, null, !enableAnimations));\n          }\n\n          for(var i = 0; i < numberIA; i++) {\n            var grid = new Grid(widthGrid, heightGrid, generateWalls, borderWalls);\n            var snake = new Snake(RIGHT, 3, grid, PLAYER_AI, aiLevel, autoRetry);\n\n            games.push(new Game(grid, snake, speed, document.getElementById(\"gameContainer\"), true, false, progressiveSpeed, 350, 250, null, null, !enableAnimations));\n          }\n        }\n      }\n\n      var group = new GameGroup(games);\n      group.setDisplayFPS(showDebugInfo ? true : false);\n      group.start();\n\n      if(group.games[0].canvas != undefined) {\n        group.games[0].canvas.scrollIntoView();\n      }\n\n      if(mazeGrid && (selectedMode == SOLO_AI || selectedMode == SOLO_PLAYER)) {\n        group.setNotification(new NotificationMessage(i18next.t(\"engine.mazeMode\"), null, \"rgba(52, 152, 219, 0.5)\", 5, null, null, null, true));\n      }\n\n      document.getElementById(\"backToMenuGame\").onclick = function() {\n        if(confirm(i18next.t(\"game.confirmQuit\"))) {\n          group.killAll();\n          displayMenu();\n          group = null;\n        }\n      };\n\n      group.onStop(function() {\n        if(selectedMode == PLAYER_VS_AI || selectedMode == AI_VS_AI || selectedMode == BATTLE_ROYALE && !group.errorOccurred()) {\n          var resultMessage = \"\";\n          var winners = group.getWinners();\n\n          if(selectedMode == PLAYER_VS_AI) {\n            if(winners.index.length == 2) {\n              resultMessage = i18next.t(\"game.equalityPlayerVSAI\");\n            } else if(winners.index[0] == 0) {\n              resultMessage = i18next.t(\"game.winPlayerVSAI\");\n            } else if(winners.index[0] == 1) {\n              resultMessage = i18next.t(\"game.losePlayerVSAI\");\n            }\n          } else if(selectedMode == AI_VS_AI) {\n            if(winners.index.length == 1) {\n              resultMessage = i18next.t(\"game.oneWinnerAIVSAI\", { numWinner: winners.index[0] + 1 });\n            } else if(winners.index.length == 2) {\n              resultMessage = i18next.t(\"game.equalityAIVSAI\");\n            }\n          } else if(selectedMode == BATTLE_ROYALE) {\n            if(winners.index.length == 1) {\n              if(battleAgainstAIs && winners.index[0] == 0) {\n                resultMessage = i18next.t(\"game.playerWinnerBattleRoyale\", { score: winners.score });\n              } else {\n                resultMessage = i18next.t(\"game.oneWinnerBattleRoyale\", { numWinner: (battleAgainstAIs ? winners.index[0] : winners.index[0] + 1), score: winners.score });\n              }\n            } else if(battleAgainstAIs && winners.index.length == 2 && winners.index[0] == 0) {\n              resultMessage = i18next.t(\"game.winnerAIBattleRoyale\") + \" \" + i18next.t(\"game.winnersNumBattleRoyale\", { numWinner: winners.index[1] }) + \" \" + i18next.t(\"game.andPlayerWinnersBattleRoyale\") + \" \" + i18next.t(\"game.winPlayerScoreBattleRoyale\", { score: winners.score });\n            } else if(winners.index.length > 1) {\n              var playerWinnerBattleRoyale = false;\n              resultMessage = i18next.t(\"game.winnersBattleRoyale\") + \" \";\n\n              for(var i = 0; i < winners.index.length; i++) {\n                if(battleAgainstAIs && winners.index[i] == 0) {\n                  var playerWinnerBattleRoyale = true;\n                } else {\n                  resultMessage = resultMessage + i18next.t(\"game.winnersNumBattleRoyale\", { numWinner: (battleAgainstAIs ? winners.index[i] : winners.index[i] + 1) });\n\n                  if((i + 1) < winners.index.length - 1) {\n                    resultMessage = resultMessage + \", \";\n                  } else if((i + 1) == winners.index.length - 1) {\n                    resultMessage = resultMessage + \" \" + i18next.t(\"game.andWinnersBattleRoyale\") + \" \";\n                  }\n                }\n              }\n\n              if(battleAgainstAIs && playerWinnerBattleRoyale) {\n                resultMessage = resultMessage + \" \" + i18next.t(\"game.andPlayerWinnersBattleRoyale\") + \" \" + i18next.t(\"game.winPlayerScoreBattleRoyale\", { score: winners.score });\n              } else {\n                resultMessage = resultMessage + \" \" + i18next.t(\"game.winScoreBattleRoyale\", { score: winners.score });\n              }\n            }\n          }\n\n          if(resultMessage.trim() != \"\") {\n            document.getElementById(\"gameOrder\").innerHTML = resultMessage;\n            group.setNotification(new NotificationMessage(resultMessage, null, \"rgba(52, 152, 219, 0.5)\", 15, null, null, null, true));\n          }\n        }\n      });\n\n      group.onExit(function() {\n        if(selectedMode == SOLO_AI || selectedMode == SOLO_PLAYER || selectedMode == AI_VS_AI || (selectedMode == PLAYER_VS_AI && sameGrid) || (selectedMode == BATTLE_ROYALE && sameGrid)) {\n          group.killAll();\n          displayMenu();\n        }\n      });\n\n      group.onReset(function() {\n        document.getElementById(\"resultLevels\").innerHTML = \"\";\n        document.getElementById(\"gameStatus\").innerHTML = \"\";\n        document.getElementById(\"gameOrder\").innerHTML = \"\";\n        document.getElementById(\"gameStatusError\").innerHTML = \"\";\n        group.closeNotification();\n      });\n    }\n  }\n}\n\ndocument.getElementById(\"validateSettings\").onclick = function() {\n  validateSettings();\n};\n\n// Levels\nfunction getTitleSave(player, type) {\n  if(type == DEFAULT_LEVEL) {\n    if(player == PLAYER_HUMAN) {\n      var save = SOLO_PLAYER_SAVE + \"defautLevelsSave\";\n    } else if(player == PLAYER_AI) {\n      var save = SOLO_AI_SAVE + \"defautLevelsSave\";\n    }\n  } else if(type == DOWNLOADED_LEVEL) {\n    if(player == PLAYER_HUMAN) {\n      var save = SOLO_PLAYER_SAVE + \"downloadedLevelsSave\";\n    } else if(player == PLAYER_AI) {\n      var save = SOLO_AI_SAVE + \"downloadedLevelsSave\";\n    }\n  }\n\n  return save;\n}\n\nfunction getSave(player, type) {\n  if(storageGlobal.getItem(getTitleSave(player, type)) == null) {\n    initSaveLevel(player, type, false);\n  }\n\n  try {\n    var res = JSON.parse(storageGlobal.getItem(getTitleSave(player, type)));\n    return res;\n  } catch(e) {\n    initSaveLevel(player, type, true);\n    return getSave(player, type);\n  }\n}\n\nfunction getLevelSave(level, player, type) {\n  return getSave(player, type)[level];\n}\n\nfunction setLevelSave(value, level, player, type) {\n    var save = getTitleSave(player, type);\n    var item = getSave(player, type);\n    var levels = getLevels(player, type);\n\n    if(item != null) {\n      if(Array.isArray(value) && value.length >= 2 && Array.isArray(item[level]) && item[level].length >= 2 && item[level][0] == true) {\n        if(levels[level][\"type\"] != LEVEL_REACH_SCORE_ON_TIME && levels[level][\"type\"] != LEVEL_MULTI_REACH_SCORE_FIRST && levels[level][\"type\"] != LEVEL_MAZE_WIN) {\n          if(value[1] < item[level][1]) {\n            value[1] = item[level][1];\n          }\n        } else {\n          if(value[1] > item[level][1]) {\n            value[1] = item[level][1];\n          }\n        }\n      }\n\n      item[level] = value;\n      storageGlobal.setItem(save, JSON.stringify(item));\n\n      return true;\n    }\n\n    return false;\n}\n\nfunction initSaveLevel(player, type, force) {\n  if(typeof(Storage) !== \"undefined\") {\n    var save = getTitleSave(player, type);\n    var item = storageGlobal.getItem(save);\n\n    if(item == null || force) {\n      storageGlobal.setItem(save, JSON.stringify({ version: GameConstants.Setting.APP_VERSION }));\n      setLevelSave([false, 0], 1, player, type);\n    }\n\n    return false;\n  } else {\n    return false;\n  }\n}\n\nfunction getLevels(player, type) {\n  if(type == DEFAULT_LEVEL) {\n    if(player == PLAYER_HUMAN) {\n      return DEFAULT_LEVELS_SOLO_PLAYER;\n    } else if(player == PLAYER_AI) {\n      return DEFAULT_LEVELS_SOLO_AI;\n    }\n  } else if(type == DOWNLOADED_LEVEL) {\n    if(player == PLAYER_HUMAN) {\n      try {\n        return JSON.parse(storageGlobal.getItem(SOLO_PLAYER_DOWNLOAD_LEVELS_TO));\n      } catch(e) {\n        return null;\n      }\n    } else if(player == PLAYER_AI) {\n      try {\n        return JSON.parse(storageGlobal.getItem(SOLO_AI_DOWNLOAD_LEVELS_TO));\n      } catch(e) {\n        return null;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction canPlay(level, player, type) {\n  var res = true;\n  var levels = getLevels(player, type);\n\n  if(levels == null) {\n    return false;\n  }\n\n  for(var i = 1; i < level; i++) {\n    var save = getLevelSave(i, player, type);\n\n    if(save == null || (!save[0] && levelCompatible(levels[i][\"type\"], levels[i][\"version\"]))) {\n      res = false;\n    }\n  }\n\n  return res;\n}\n\nfunction levelCompatible(levelType, version) {\n  if((levelType != LEVEL_REACH_SCORE && levelType != LEVEL_REACH_MAX_SCORE && levelType != LEVEL_MULTI_BEST_SCORE && levelType != LEVEL_REACH_SCORE_ON_TIME && levelType != LEVEL_MULTI_REACH_SCORE_FIRST && levelType != LEVEL_MAZE_WIN) || GameConstants.Setting.APP_VERSION.strcmp(version) < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printResultLevel(level, player, levelType, type, shortVersion) {\n  var val = \"\";\n  var resultLevel = getLevelSave(level, player, type);\n\n  if(resultLevel == null) {\n    return \"\";\n  }\n\n  var resultLevel = resultLevel[1];\n\n  if(resultLevel <= 0) {\n    return \"\";\n  }\n\n  if(shortVersion) {\n    if(levelType == LEVEL_REACH_SCORE || levelType == LEVEL_REACH_MAX_SCORE || levelType == LEVEL_MULTI_BEST_SCORE) {\n      val = i18next.t(\"levels.bestScoreShort\", { count: resultLevel });\n    } else if(levelType == LEVEL_REACH_SCORE_ON_TIME || levelType == LEVEL_MULTI_REACH_SCORE_FIRST || levelType == LEVEL_MAZE_WIN) {\n      val = i18next.t(\"levels.bestTimeShort\", { count: Math.round(resultLevel) });\n    }\n  } else {\n    if(levelType == LEVEL_REACH_SCORE || levelType == LEVEL_REACH_MAX_SCORE || levelType == LEVEL_MULTI_BEST_SCORE) {\n      val = i18next.t(\"levels.bestScore\", { count: resultLevel });\n    } else if(levelType == LEVEL_REACH_SCORE_ON_TIME || levelType == LEVEL_MULTI_REACH_SCORE_FIRST || levelType == LEVEL_MAZE_WIN) {\n      val = i18next.t(\"levels.bestTime\", { count: Math.round(resultLevel) });\n    }\n  }\n\n  return val;\n}\n\nwindow.playLevel = function(level, player, type) {\n  var levels = getLevels(player, type);\n\n  if(levels == null) {\n    return false;\n  }\n\n  if(levels[level] != null) {\n    var levelSelected = levels[level];\n    var levelSettings = levelSelected[\"settings\"];\n    var levelType = levelSelected[\"type\"];\n    var levelTypeValue = levelSelected[\"typeValue\"];\n    var levelVersion = levelSelected[\"version\"];\n\n    if(!levelCompatible(levelType, levelVersion)) {\n      alert(i18next.t(\"levels.notCompatible\"));\n      return false;\n    }\n\n    if(!canPlay(level, player, type)) {\n      alert(i18next.t(\"levels.disabledLevel\"));\n      return false;\n    }\n\n    var heightGrid = levelSettings[0];\n    var widthGrid = levelSettings[1];\n    var borderWalls = levelSettings[2];\n    var generateWalls = levelSettings[3];\n    var sameGrid = levelSettings[4];\n    var speed = levelSettings[5];\n    var progressiveSpeed = levelSettings[6];\n    var aiLevel = levelSettings[7];\n    var numberIA = levelSettings[8];\n    var generateMaze = levelSettings[9];\n    var customGrid = levelSettings[10];\n    var mazeForceAuto = levelSettings[11];\n\n    var games = [];\n\n    var grid = new Grid(widthGrid, heightGrid, generateWalls, borderWalls, generateMaze, customGrid, mazeForceAuto);\n\n    if(player == PLAYER_AI) {\n      var playerSnake = new Snake(RIGHT, 3, grid, player, AI_LEVEL_HIGH);\n    } else if(player == PLAYER_HUMAN) {\n      var playerSnake = new Snake(RIGHT, 3, grid, player);\n    }\n\n    if(sameGrid) {\n      var snakes = [playerSnake];\n\n      for(var i = 0; i < numberIA; i++) {\n        snakes.push(new Snake(RIGHT, 3, grid, PLAYER_AI, aiLevel));\n      }\n\n      var playerGame = new Game(grid, snakes, speed, document.getElementById(\"gameContainer\"), true, true, progressiveSpeed, null, null, null, null, !enableAnimations);\n      games.push(playerGame);\n    } else {\n      if(numberIA + 1 <= 2) {\n        var width = null;\n        var height = null;\n      } else {\n        var width = 350;\n        var height = 250;\n      }\n\n      var playerGame = new Game(grid, playerSnake, speed, document.getElementById(\"gameContainer\"), true, true, progressiveSpeed, width, height, null, null, !enableAnimations);\n      games.push(playerGame);\n\n      for(var i = 0; i < numberIA; i++) {\n        var grid = new Grid(widthGrid, heightGrid, generateWalls, borderWalls);\n        var snake = new Snake(RIGHT, 3, grid, PLAYER_AI, aiLevel, false);\n\n        games.push(new Game(grid, snake, speed, document.getElementById(\"gameContainer\"), false, false, progressiveSpeed, width, height, null, null, !enableAnimations));\n      }\n    }\n\n    document.getElementById(\"settings\").style.display = \"none\";\n    document.getElementById(\"menu\").style.display = \"none\";\n    document.getElementById(\"levelContainer\").style.display = \"none\";\n    document.getElementById(\"serverListContainer\").style.display = \"none\";\n    document.getElementById(\"roomsOnlineListContainer\").style.display = \"none\";\n    document.getElementById(\"roomsOnlineCreation\").style.display = \"none\";\n    document.getElementById(\"errorRoomCreation\").style.display = \"none\";\n    document.getElementById(\"gameContainer\").style.display = \"block\";\n    document.getElementById(\"connectingToServer\").style.display = \"none\";\n    document.getElementById(\"roomsOnlineJoin\").style.display = \"none\";\n\n    document.getElementById(\"resultLevels\").innerHTML = \"\";\n    document.getElementById(\"gameStatus\").innerHTML = \"\";\n    document.getElementById(\"gameOrder\").innerHTML = \"\";\n    document.getElementById(\"gameStatusError\").innerHTML = \"\";\n\n    document.getElementById(\"titleGame\").innerHTML = i18next.t(\"levels.level\") + \" \" + level;\n\n    var group = new GameGroup(games);\n    group.setDisplayFPS(showDebugInfo ? true : false);\n    group.start();\n\n    document.getElementById(\"gameOrder\").scrollIntoView();\n\n    var levelTimer = new Timer(null, 0);\n    var notificationEndDisplayed = false;\n    var notificationStartDisplayed = false;\n    var notifErrorColor = \"rgba(231, 76, 60, 0.5)\";\n    var notifInfosColor = \"rgba(52, 152, 219, 0.5)\";\n    var notifInfo;\n    var textToDisplayGoal;\n\n    document.getElementById(\"backToMenuGame\").onclick = function() {\n      if(confirm(i18next.t(\"game.confirmQuit\"))) {\n        levelTimer.pause();\n        group.killAll();\n        displayLevelList(player);\n        group = null;\n      }\n    };\n\n    function initGoal() {\n      if(levelType == LEVEL_REACH_SCORE) {\n        playerGame.onScoreIncreased(function() {\n          if(playerGame.snakes[0].score >= levelTypeValue) {\n            setLevelSave([true, playerGame.snakes[0].score], level, player, type);\n            playerGame.setBestScore(printResultLevel(level, player, levelType, type, true));\n\n            if(!notificationEndDisplayed) {\n              playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalAchieved\")));\n              notificationEndDisplayed = true;\n            }\n          }\n        });\n\n        playerGame.onStop(function() {\n          if(playerGame.snakes[0].score < levelTypeValue) {\n            if(!notificationEndDisplayed) {\n              playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalNotAchieved\"), null, notifErrorColor, null, null, null, null, true));\n              notificationEndDisplayed = true;\n            }\n          }\n        });\n      } else if(levelType == LEVEL_REACH_SCORE_ON_TIME) {\n        levelTimer = new Timer(function() {\n          playerGame.setTimeToDisplay(0);\n          document.getElementById(\"gameStatus\").innerHTML = i18next.t(\"levels.timerRemaining\", { count: 0 });\n\n          if(!notificationEndDisplayed) {\n            playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalNotAchieved\"), null, notifErrorColor, null, null, null, null, true));\n            notificationEndDisplayed = true;\n          }\n\n          group.stopAll(true);\n        }, levelTypeValue[1] * 1000 - 1, new TimerInterval(function() {\n          document.getElementById(\"gameStatus\").innerHTML = i18next.t(\"levels.timerRemaining\", { count: Math.round(levelTimer.getTime() / 1000) });\n          playerGame.setTimeToDisplay(Math.round(levelTimer.getTime() / 1000));\n        }));\n\n        playerGame.onStart(function() {\n          levelTimer.resume();\n        });\n\n        playerGame.onPause(function() {\n          levelTimer.pause();\n        });\n\n        playerGame.onReset(function() {\n          levelTimer.reset();\n        });\n\n        playerGame.onStop(function() {\n          levelTimer.pause();\n        });\n\n        playerGame.onScoreIncreased(function() {\n          if(playerGame.snakes[0].score >= levelTypeValue[0]) {\n            var stop = (levelTypeValue[1] * 1000) - levelTimer.getTime();\n            levelTimer.reset();\n            group.stopAll(true);\n            setLevelSave([true, stop / 1000], level, player, type);\n            playerGame.setBestScore(printResultLevel(level, player, levelType, type, true));\n\n            if(!notificationEndDisplayed) {\n              playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalAchieved\"), null, null, null, null, null, null, true));\n              notificationEndDisplayed = true;\n            }\n          }\n        });\n      } else if(levelType == LEVEL_REACH_MAX_SCORE) {\n        playerGame.onStop(function() {\n          if(playerGame.scoreMax) {\n            setLevelSave([true, playerGame.snakes[0].score], level, player, type);\n            playerGame.setBestScore(printResultLevel(level, player, levelType, type, true));\n\n            if(!notificationEndDisplayed) {\n              playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalAchieved\"), null, null, null, null, null, null, true));\n              notificationEndDisplayed = true;\n            }\n          } else {\n            if(!notificationEndDisplayed) {\n              playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalNotAchieved\"), null, notifErrorColor, null, null, null, null, true));\n              notificationEndDisplayed = true;\n            }\n          }\n        });\n      } else if(levelType == LEVEL_MULTI_BEST_SCORE) {\n        group.onStop(function() {\n          var winners = group.getWinners();\n          var won = false;\n\n          for(var i = 0; i < winners.winners.length; i++) {\n            if(winners.winners[i] == playerGame.snakes[0]) {\n              won = true;\n              setLevelSave([true, playerGame.snakes[0].score], level, player, type);\n              playerGame.setBestScore(printResultLevel(level, player, levelType, type, true));\n\n              if(!notificationEndDisplayed) {\n                playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalAchieved\"), null, null, null, null, null, null, true));\n                notificationEndDisplayed = true;\n              }\n            }\n          }\n\n          if(!won && !notificationEndDisplayed) {\n            playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalNotAchieved\"), null, notifErrorColor, null, null, null, null, true));\n            notificationEndDisplayed = true;\n          }\n        });\n      } else if(levelType == LEVEL_MULTI_REACH_SCORE_FIRST) {\n        var time = 0;\n\n        var timerInterval = new TimerInterval(function() {\n          time++;\n        });\n\n        playerGame.onStart(function() {\n          timerInterval.start();\n        });\n\n        playerGame.onPause(function() {\n          timerInterval.stop();\n        });\n\n        playerGame.onReset(function() {\n          time = 0;\n          timerInterval.stop();\n        });\n\n        playerGame.onStop(function() {\n          timerInterval.stop();\n        });\n\n        group.onScoreIncreased(function() {\n          for(var i = 0; i < group.games.length; i++) {\n            for(var j = 0; j < group.games[i].snakes.length; j++) {\n              if(group.games[i].snakes[j].score >= levelTypeValue) {\n                if(group.games[i].snakes[j] == playerGame.snakes[0]) {\n                  group.stopAll(true);\n                  setLevelSave([true, time], level, player, type);\n                  playerGame.setBestScore(printResultLevel(level, player, levelType, type, true));\n\n                  if(!notificationEndDisplayed) {\n                    playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalAchieved\"), null, null, null, null, null, null, true));\n                    notificationEndDisplayed = true;\n                  }\n                } else {\n                  group.stopAll(true);\n\n                  if(!notificationEndDisplayed) {\n                    playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalNotAchieved\"), null, notifErrorColor, null, null, null, null, true));\n                    notificationEndDisplayed = true;\n                  }\n                }\n              }\n            }\n          }\n        });\n      } else if(levelType == LEVEL_MAZE_WIN) {\n        var time = 0;\n\n        var timerInterval = new TimerInterval(function() {\n          time++;\n        });\n\n        playerGame.onStart(function() {\n          timerInterval.start();\n        });\n\n        playerGame.onPause(function() {\n          timerInterval.stop();\n        });\n\n        playerGame.onReset(function() {\n          time = 0;\n          timerInterval.stop();\n        });\n\n        playerGame.onStop(function() {\n          timerInterval.stop();\n        });\n\n        playerGame.onScoreIncreased(function() {\n          if(playerGame.snakes[0].score >= 1) {\n            setLevelSave([true, time], level, player, type);\n            playerGame.setBestScore(printResultLevel(level, player, levelType, type, true));\n\n            if(!notificationEndDisplayed) {\n              playerGame.setNotification(new NotificationMessage(i18next.t(\"levels.goalAchieved\"), null, null, null, null, null, null, true));\n              notificationEndDisplayed = true;\n            }\n          }\n        });\n      }\n    }\n\n    function displayInfosGoal() {\n      playerGame.setBestScore(printResultLevel(level, player, levelType, type, true));\n\n      if(levelType == LEVEL_REACH_SCORE) {\n        textToDisplayGoal = i18next.t(\"levels.reachScore\", { value: levelTypeValue });\n      } else if(levelType == LEVEL_REACH_SCORE_ON_TIME) {\n        textToDisplayGoal = i18next.t(\"levels.reachScoreTime\", { value: levelTypeValue[0], count: levelTypeValue[1] });\n        document.getElementById(\"gameStatus\").innerHTML = i18next.t(\"levels.timerRemaining\", { count: levelTypeValue[1] });\n        playerGame.setTimeToDisplay(levelTypeValue[1]);\n      } else if(levelType == LEVEL_REACH_MAX_SCORE) {\n        textToDisplayGoal = i18next.t(\"levels.reachMaxScore\");\n      } else if(levelType == LEVEL_MULTI_BEST_SCORE) {\n        textToDisplayGoal = i18next.t(\"levels.multiBestScore\", { count: numberIA });\n      } else if(levelType == LEVEL_MULTI_REACH_SCORE_FIRST) {\n        textToDisplayGoal = i18next.t(\"levels.multiReachScoreFirst\", { value: levelTypeValue, count: numberIA });\n      } else if(levelType == LEVEL_MAZE_WIN) {\n        textToDisplayGoal = i18next.t(\"levels.mazeMode\", { value: levelTypeValue, count: numberIA });\n      }\n\n      document.getElementById(\"gameOrder\").innerHTML = textToDisplayGoal.replace(\"\\n\", \"<br />\");\n    }\n\n    initGoal();\n    displayInfosGoal();\n\n    group.onExit(function() {\n      levelTimer.pause();\n      group.killAll();\n      displayLevelList(player);\n    });\n\n    group.onReset(function() {\n      document.getElementById(\"resultLevels\").innerHTML = \"\";\n      document.getElementById(\"gameStatus\").innerHTML = \"\";\n      document.getElementById(\"gameOrder\").innerHTML = \"\";\n      document.getElementById(\"gameStatusError\").innerHTML = \"\";\n      notificationEndDisplayed = false;\n      notificationStartDisplayed = false;\n      displayInfosGoal();\n    });\n\n    playerGame.onStart(function() {\n      if(!notificationEndDisplayed && !notificationStartDisplayed) {\n        notifInfo = new NotificationMessage(textToDisplayGoal, null, notifInfosColor, 10);\n        playerGame.setNotification(notifInfo);\n        notificationStartDisplayed = true;\n      }\n    });\n  } else {\n    return false;\n  }\n}\n\nwindow.editDownloadURL = function() {\n  var value = window.prompt(i18next.t(\"levels.editDownloadURLPrompt\"), DOWNLOAD_DEFAULT_URI);\n\n  if(value != null) {\n    DOWNLOAD_DEFAULT_URI = value;\n  }\n}\n\nwindow.downloadLevels = function(player, button) {\n  var url = DOWNLOAD_DEFAULT_URI;\n  url = url.replace(\"{player}\", player);\n  url = url.replace(\"{appVersion}\", GameConstants.Setting.APP_VERSION);\n\n  var script = document.createElement(\"script\");\n  script.src = url;\n\n  var canceled = false;\n\n  window[\"callbackDownloadLevels\"] = function(player, data) {\n    if(!canceled) {\n      if(player == PLAYER_HUMAN) {\n        storageGlobal.setItem(SOLO_PLAYER_DOWNLOAD_LEVELS_TO, JSON.stringify(data));\n      } else if(player == PLAYER_AI) {\n        storageGlobal.setItem(SOLO_AI_DOWNLOAD_LEVELS_TO, JSON.stringify(data));\n      }\n\n      displayLevelList(player);\n    }\n\n    document.getElementById(\"levelDownloading\").innerHTML = \"\";\n    document.getElementById(\"btnDeblockDiv\").innerHTML = \"\";\n  };\n\n  button.disabled = true;\n  var buttonDeblock = document.createElement(\"button\");\n  buttonDeblock.classList = \"btn btn-lg btn-warning\";\n  buttonDeblock.innerHTML = i18next.t(\"levels.buttonDeblock\");\n\n  document.getElementById(\"levelDownloading\").innerHTML = '<strong>' + i18next.t(\"levels.downloading\") + '</strong>';\n  document.getElementById(\"btnDeblockDiv\").innerHTML = \"\";\n\n  document.getElementsByTagName('head')[0].appendChild(script);\n\n  buttonDeblock.onclick = function() {\n    canceled = true;\n    deblockButton(button, script, \"callbackDownloadLevels\");\n  };\n\n  document.getElementById(\"btnDeblockDiv\").appendChild(buttonDeblock);\n}\n\nfunction deblockButton(button, script) {\n  button.disabled = false;\n  script.src = null;\n  document.getElementById(\"levelDownloading\").innerHTML = \"\";\n  document.getElementById(\"btnDeblockDiv\").innerHTML = \"\";\n  document.getElementsByTagName('head')[0].removeChild(script);\n}\n\nfunction getListLevel(player, type) {\n  var levels = getLevels(player, type);\n  var res = \"\";\n\n  if(type == DOWNLOADED_LEVEL) {\n    res += '<div class=\"row mb-3\"><div class=\"col text-center\"><button class=\"btn btn-lg btn-warning\" onclick=\"downloadLevels(' + player + ', this);\"><span class=\"fui-plus-circle\"></span>&nbsp; ' + i18next.t(\"levels.download\") + '</button><br /><a href=\"#null\" onclick=\"editDownloadURL();\" class=\"small\"><span class=\"fui-new\"></span>&nbsp; ' + i18next.t(\"levels.editDownloadURL\") + '</a></div></div>';\n  }\n\n  if(levels == null) {\n    return res + \"<strong>\" + i18next.t(\"levels.emptyList\") + \"</strong>\";\n  }\n\n  var index = 1;\n  var empty = true;\n\n  for(var key in levels) {\n    if(levels.hasOwnProperty(key)) {\n      if(!canPlay(key, player, type)) {\n        var button = '<button class=\"btn btn-lg btn-primary btn-block-85\" disabled aria-label=\"' + i18next.t(\"levels.disabledLevel\") + '\" data-balloon-length=\"fit\" data-balloon-pos=\"up\">' + i18next.t(\"levels.level\") + ' ' + index + '</button>';\n      } else if(!levelCompatible(levels[key][\"type\"], levels[key][\"version\"])) {\n        var button = '<button class=\"btn btn-lg btn-primary btn-block-85\" disabled aria-label=\"' + i18next.t(\"levels.notCompatible\") + '\" data-balloon-length=\"fit\" data-balloon-pos=\"up\">' + i18next.t(\"levels.level\") + ' ' + index + '</button>';\n      } else {\n        var resultLevel = printResultLevel(key, player, levels[key][\"type\"], type);\n\n        var button = '<button class=\"btn btn-lg btn-primary btn-block-85\" onclick=\"playLevel(' + key + ', ' + player  + ', ' + type + ');\" ' + (resultLevel.trim() != \"\" ? 'aria-label=\"' + printResultLevel(key, player, levels[key][\"type\"], type) + '\" data-balloon-length=\"fit\" data-balloon-pos=\"up\"' : '') + '>' + i18next.t(\"levels.level\") + ' ' + index + '</button>';\n      }\n\n      if(index == 1) {\n        res += '<div class=\"row mb-2\">';\n      }\n\n      if(index % 2 == 0) {\n        res += '<div class=\"col pl-0 justify-content-center\">' + button + '</div></div><div class=\"row mb-2\">';\n      } else {\n        res += '<div class=\"col pr-0 justify-content-center\">' + button + '</div>';\n      }\n\n      empty = false;\n    }\n\n    index++;\n  }\n\n  if(empty) {\n    return res + \"<strong>\" + i18next.t(\"levels.emptyList\") + \"</strong>\";\n  }\n\n  if(index % 2 == 0) {\n    res += '<div class=\"col pr-0 justify-content-center\"></div>';\n  }\n\n  return res + \"</div>\";\n}\n\n// Localization\nfunction listTranslations(languages) {\n  if(languages != null) {\n    document.getElementById(\"languageSelect\").disabled = true;\n    document.getElementById(\"languageSelect\").innerHTML = \"\";\n\n    for(var i = 0; i < languages.length; i++) {\n      document.getElementById(\"languageSelect\").innerHTML = document.getElementById(\"languageSelect\").innerHTML + '<option data-i18n=\"lang.' + languages[i] + '\" value=\"'+ languages[i] +'\"></option>';\n    }\n\n    document.getElementById(\"languageSelect\").value = i18next.language.substr(0, 2);\n    document.getElementById(\"languageSelect\").disabled = false;\n  }\n}\n\nfunction translateContent() {\n  listTranslations(i18next.languages);\n\n  var i18nList = document.querySelectorAll(\"[data-i18n]\");\n\n  for(var i = 0, l = i18nList.length; i < l; i++) {\n    i18nList[i].innerHTML = i18next.t(i18nList[i].dataset.i18n);\n  }\n\n  document.getElementById(\"dateTxt\").innerHTML = i18next.t(\"menu.versionDate\", { date: new Intl.DateTimeFormat(i18next.language).format(new Date(DATE_VERSION)) });\n\n  document.getElementById(\"heightGrid\").placeholder = i18next.t(\"settings.placeholderHeight\");\n  document.getElementById(\"widthGrid\").placeholder = i18next.t(\"settings.placeholderWidth\");\n  document.getElementById(\"customSpeed\").placeholder = i18next.t(\"settings.placeholderCustomSpeed\");\n  document.getElementById(\"numberIA\").placeholder = i18next.t(\"settings.placeholderNumberIA\");\n\n  document.getElementById(\"appDownloadURLGet\").setAttribute(\"aria-label\", i18next.t(\"update.getURL\"));\n  document.getElementById(\"appUpdateChanges\").setAttribute(\"aria-label\", i18next.t(\"update.getChanges\"));\n\n  document.getElementById(\"appUpdateDateLocalized\").innerHTML = i18next.t(\"update.versionDate\", { date: new Intl.DateTimeFormat(i18next.language).format(new Date(document.getElementById(\"appUpdateDate\").innerHTML)) });\n\n  document.getElementById(\"aiAssistantInfos\").setAttribute(\"aria-label\", i18next.t(\"settings.aiAssistantInfos\"));\n}\n\ndocument.getElementById(\"languageSelect\").onchange = function() {\n  i18next.changeLanguage(document.getElementById(\"languageSelect\").value, function(err, t) {\n    translateContent();\n  });\n};\n\nwindow.addEventListener(\"load\", function() {\n  setTimeout(function() {\n    translateContent();\n  }, 250);\n});\n\n// Installable app\nif(\"serviceWorker\" in navigator) {\n  navigator.serviceWorker.register(\"service-worker.js\");\n}\n\n\n//# sourceURL=webpack:///./main.js?");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/button.js":
/*!***********************!*\
  !*** ./src/button.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var GameConstants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n}\n\nfunction Button(text, x, y, alignement, color, colorHover, colorDown, width, height, fontSize, fontFamily, fontColor, imgSrc, imageLoader, verticalAlignement) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.initialX = x;\n  this.initialY = y;\n  this.width = width || \"auto\";\n  this.height = height || \"auto\";\n  this.autoWidth = (this.width == \"auto\" ? true : false);\n  this.autoHeight = (this.height == \"auto\" ? true : false);\n  this.clicked = false;\n  this.hovered = false;\n  this.text = text;\n  this.fontSize = fontSize || Math.floor(GameConstants.Setting.FONT_SIZE / 1.25);\n  this.fontFamily = fontFamily || GameConstants.Setting.FONT_FAMILY;\n  this.fontColor = fontColor || \"white\";\n  this.color = color || \"rgba(0, 0, 0, 0)\";\n  this.colorHover = colorHover || \"#95a5a6\";\n  this.colorDown = colorDown || \"#727F80\"\n  this.triggerClick;\n  this.triggerHover;\n  this.triggerDown;\n  this.init = false;\n  this.disabled = false;\n  this.alignement = alignement || \"default\";\n  this.image;\n  this.imgSrc = imgSrc;\n  this.verticalAlignement = verticalAlignement || \"default\";\n  this.selected = false;\n  this.imageLoader = imageLoader;\n}\n\nfunction ButtonImage(imgSrc, x, y, alignement, verticalAlignement, width, height, color, colorHover, imageLoader) {\n  return new Button(null, x, y, alignement, color, colorHover, null, width, height, null, null, null, imgSrc, imageLoader, verticalAlignement);\n}\n  \nButton.prototype.draw = function(game) {\n  var canvas = game.canvas;\n  var ctx = canvas.getContext(\"2d\");\n  var precFillStyle = ctx.fillStyle;\n  var precFont = ctx.font;\n  this.fontSize = this.getFontSize(ctx);\n\n  ctx.font = this.fontSize + \"px \" + this.fontFamily;\n  var textSize = ctx.measureText(this.text);\n\n  if(this.imgSrc != null && this.imageLoader != null) {\n    this.loadImage(this.imageLoader);\n  }\n\n  if(this.image != null) {\n    var imgWidth = this.image.width;\n    var imgHeight = this.image.height;\n\n    if(this.autoWidth) {\n      this.width = imgWidth * 1.25;\n    }\n\n    if(this.autoHeight) {\n      this.height = imgHeight * 1.5;\n    }\n  } else if(this.text != null) {\n    var textWrapped = game.wrapTextLines(ctx, this.text, null, this.fontSize);\n    var heightText = textWrapped[\"height\"];\n\n    if(this.autoWidth) {\n      this.width = textSize.width + 25;\n    }\n\n    if(this.autoHeight) {\n      this.height = heightText + this.fontSize / 1.5;\n    }\n  }\n\n  if(this.alignement == \"center\") {\n    this.x =  (canvas.width / 2) - (this.width / 2) - this.initialX;\n  } else if(this.alignement == \"right\") {\n    this.x = (canvas.width) - (this.width) - 5 - this.initialX;\n  } else if(this.alignement == \"left\") {\n    this.x = 5;\n  }\n\n  if(this.verticalAlignement == \"bottom\") {\n    this.y = (canvas.height) - (this.height) - 5 - this.initialY;\n  } else if(this.verticalAlignement == \"center\") {\n    this.y = (canvas.height / 2) - (this.height / 2) - this.initialY;\n  } else if(this.verticalAlignement == \"top\") {\n    this.y = 15;\n  }\n\n  if(this.hovered && this.clicked) {\n    ctx.fillStyle = this.colorDown;\n  } else if(this.hovered) {\n    ctx.fillStyle = this.colorHover;\n  } else {\n    ctx.fillStyle = this.color;\n  }\n\n  ctx.fillRect(Math.round(this.x), Math.round(this.y), Math.round(this.width), Math.round(this.height));\n\n  if(this.selected) {\n    var initialStrokeStyle = ctx.strokeStyle;\n    var initialLineWidth = ctx.lineWidth;\n    \n    ctx.strokeStyle = \"#a2cdd8\";\n    ctx.lineWidth = 3;\n    \n    ctx.strokeRect(Math.round(this.x), Math.round(this.y), Math.round(this.width), Math.round(this.height));\n    \n    ctx.strokeStyle = initialStrokeStyle;\n    ctx.lineWidth = initialLineWidth;\n  }\n\n  if(this.image != null) {\n    if(this.image.width > this.width || this.image.height > this.height) {\n      var aspectRatio = this.image.width / this.image.height;\n      imgWidth = Math.floor(this.width / 1.25);\n      imgHeight = Math.floor(imgWidth / aspectRatio);\n    }\n    \n    var imgX = this.x + (this.width / 2) - (imgWidth / 2);\n    var imgY = this.y + (this.height / 2) - (imgHeight / 2);\n    \n    ctx.drawImage(this.image, Math.round(imgX), Math.round(imgY), Math.round(imgWidth), Math.round(imgHeight));\n  } else if(this.text != null) {\n    ctx.fillStyle = this.fontColor;\n    \n    var textX = this.x + (this.width / 2) - (textSize.width / 2);\n    var textY = this.y + this.fontSize + this.fontSize / 5;\n    \n    game.drawText(ctx, this.text, this.fontColor, this.fontSize, this.fontFamily, (this.alignement == \"center\" ? \"center\" : \"default\"), \"default\", Math.round(textX), Math.round(textY), true);\n  }\n\n  ctx.fillStyle = precFillStyle;\n  ctx.font = precFont;\n\n  if(!this.init && game != null) {\n    var self = this;\n    \n    game.canvas.addEventListener(\"mousemove\", function mouseOverFunction(evt) {\n      if(!self.disabled) {\n        if(self.isInside(self.getMousePos(game.canvas, evt))) {\n          if(self.triggerHover != null && !self.disabled) {\n            self.triggerHover();\n          }\n          \n          self.hovered = true;\n        } else {\n          self.hovered = false;\n        }\n      } else {\n        self.hovered = false;\n        self.clicked = false;\n      }\n    }, false);\n    \n    game.canvas.addEventListener(\"click\", function clickFunction(evt) {\n      if(!self.disabled) {\n        if(self.isInside(self.getMousePos(canvas, evt))) {\n          if(self.triggerClick != null) {\n            self.triggerClick();\n          }\n        } else {\n          self.clicked = false;\n        }\n      } else {\n        self.hovered = false;\n        self.clicked = false;\n      }\n    }, false);\n    \n    game.canvas.addEventListener(\"mousedown\", function clickFunction(evt) {\n      if(!self.disabled) {\n        if(self.isInside(self.getMousePos(canvas, evt))) {\n          if(self.triggerDown != null) {\n            self.triggerDown();\n          }\n          \n          self.clicked = true;\n        } else {\n          self.clicked = false;\n        }\n      } else {\n        self.hovered = false;\n        self.clicked = false;\n      }\n    }, false);\n    \n    game.canvas.addEventListener(\"mouseup\", function clickFunction(evt) {\n      self.clicked = false;\n    }, false);\n  }\n\n  this.init = true;\n};\n\nButton.prototype.getFontSize = function(ctx) {\n  return Math.floor(parseInt(ctx.font.match(/\\d+/), 10) / 1.25);\n};\n\nButton.prototype.getMousePos = function(canvas, event) {\n  var rect = canvas.getBoundingClientRect();\n\n  return {\n    x: event.clientX - rect.left,\n    y: event.clientY - rect.top\n  };\n};\n\nButton.prototype.isInside = function(pos) {\n  return pos.x > this.x && pos.x < this.x + this.width && pos.y < this.y + this.height && pos.y > this.y;\n};\n\nButton.prototype.addClickAction = function(canvas, trigger) {\n  this.triggerClick = trigger;\n};\n\nButton.prototype.removeClickAction = function(self) {\n  self.triggerClick = null;\n};\n\nButton.prototype.addMouseOverAction = function(game, trigger) {\n  this.triggerHover = trigger;\n};\n\nButton.prototype.removeHoverAction = function(self) {\n  self.triggerHover = null;\n};\n\nButton.prototype.addMouseDownAction = function(game, trigger) {\n  this.triggerDown = trigger;\n};\n\nButton.prototype.removeDownAction = function(self) {\n  self.triggerDown = null;\n};\n\nButton.prototype.disable = function() {\n  this.disabled = true;\n};\n\nButton.prototype.enable = function() {\n  this.disabled = false;\n};\n\nButton.prototype.loadImage = function(imageLoader) {\n  this.image = imageLoader.get(this.imgSrc);\n};\n\n// Export module\nif(true) {\n  module.exports = {\n    Button: Button,\n    ButtonImage: ButtonImage\n  }\n}\n\n//# sourceURL=webpack:///./src/button.js?");

/***/ }),

/***/ "./src/constants.js":
/*!**************************!*\
  !*** ./src/constants.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nvar GameConstants = {\n  CaseType: {\n    EMPTY: 0,\n    SNAKE: 1,\n    FRUIT: 2,\n    WALL: 3,\n    SNAKE_DEAD: 4,\n    SURROUNDED: 5\n  },\n  PlayerType: {\n    AI: \"PLAYER_AI\",\n    HUMAN: \"PLAYER_HUMAN\",\n    HYBRID_HUMAN_AI: \"PLAYER_HYBRID_HUMAN_AI\"\n  },\n  AiLevel: {\n    RANDOM: \"AI_LEVEL_RANDOM\",\n    LOW: \"AI_LEVEL_LOW\",\n    DEFAULT: \"AI_LEVEL_DEFAULT\",\n    HIGH: \"AI_LEVEL_HIGH\",\n    ULTRA: \"AI_LEVEL_ULTRA\"\n  },\n  OutputType: {\n    TEXT: \"OUTPUT_TEXT\",\n    GRAPHICAL: \"OUTPUT_GRAPHICAL\"\n  },\n  Setting: {\n    CANVAS_WIDTH: 800,\n    CANVAS_HEIGHT: 600,\n    FONT_FAMILY: \"Delius\",\n    FONT_SIZE: 32,\n    HEADER_HEIGHT_DEFAULT: 75,\n    TARGET_FPS: 60,\n    TIME_MULTIPLIER: 15,\n    IMAGE_SNAKE_HUE: 75,\n    IMAGE_SNAKE_SATURATION: 50,\n    IMAGE_SNAKE_VALUE: 77,\n    CARS_TO_PRERENDER: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"×\"],\n    APP_VERSION: \"1.5\",\n    DATE_VERSION: \"01/31/2020\"\n  },\n  Direction: {\n    UP: 0,\n    TOP: 0,\n    RIGHT: 1,\n    BOTTOM: 2,\n    DOWN: 2,\n    LEFT: 3,\n    ANGLE_1: 4,\n    ANGLE_2: 5,\n    ANGLE_3: 6,\n    ANGLE_4: 7\n  },\n  Key: {\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40,\n    LEFT: 37,\n    ENTER: 13\n  },\n  Error: {\n    ROOM_NOT_FOUND: \"ROOM_NOT_FOUND\",\n    ROOM_ALREADY_JOINED: \"ROOM_ALREADY_JOINED\",\n    INVALID_SETTINGS: \"INVALID_SETTINGS\",\n    MAX_ROOM_LIMIT_REACHED: \"MAX_ROOM_LIMIT_REACHED\"\n  },\n  GameState: {\n    STARTING: \"STARTING\",\n    STARTED: \"STARTED\",\n    SEARCHING_PLAYERS: \"SEARCHING_PLAYERS\"\n  }\n};\n\n// Export module\nif(true) {\n  module.exports = GameConstants;\n}\n\n//# sourceURL=webpack:///./src/constants.js?");

/***/ }),

/***/ "./src/event.js":
/*!**********************!*\
  !*** ./src/event.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nfunction Event(name) {\n  this.name = name;\n  this.callbacks = [];\n}\n\nEvent.prototype.registerCallback = function(callback) {\n  this.callbacks.push(callback);\n};\n\n// Export module\nif(true) {\n  module.exports = Event;\n}\n\n//# sourceURL=webpack:///./src/event.js?");

/***/ }),

/***/ "./src/gameController.js":
/*!*******************************!*\
  !*** ./src/gameController.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var GameConstants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n  var Reactor = __webpack_require__(/*! ./reactor */ \"./src/reactor.js\");\n}\n\nfunction GameController(engine, ui) {\n  this.gameUI = ui;\n  this.gameEngine = engine;\n  // Copy of game engine variables\n  this.snakes = null;\n  this.paused = false;\n  this.isReseted = false;\n  this.exited = false;\n  this.gameOver = false;\n  this.starting = false;\n  this.scoreMax = false;\n  this.gameFinished = false;\n  this.errorOccurred = false;\n  // Events\n  this.reactor = new Reactor();\n  this.reactor.registerEvent(\"onStart\");\n  this.reactor.registerEvent(\"onPause\");\n  this.reactor.registerEvent(\"onContinue\");\n  this.reactor.registerEvent(\"onReset\");\n  this.reactor.registerEvent(\"onStop\");\n  this.reactor.registerEvent(\"onExit\");\n  this.reactor.registerEvent(\"onKill\");\n  this.reactor.registerEvent(\"onScoreIncreased\");\n  this.reactor.registerEvent(\"onUpdate\");\n  this.reactor.registerEvent(\"onUpdateCounter\");\n}\n\nGameController.prototype.init = function() {\n  var self = this;\n  \n  this.update(\"init\", {\n    \"snakes\": this.gameEngine.snakes,\n    \"grid\": this.gameEngine.grid,\n    \"enablePause\": this.gameEngine.enablePause,\n    \"enableRetry\": this.gameEngine.enableRetry,\n    \"progressiveSpeed\": this.gameEngine.progressiveSpeed,\n    \"offsetFrame\": this.gameEngine.speed * GameConstants.Setting.TIME_MULTIPLIER,\n    \"errorOccurred\": this.gameEngine.errorOccurred\n  });\n\n  this.gameEngine.onReset(function() {\n    self.update(\"reset\", {\n      \"paused\": self.gameEngine.paused,\n      \"isReseted\": self.gameEngine.isReseted,\n      \"exited\": self.gameEngine.exited,\n      \"grid\": self.gameEngine.grid,\n      \"numFruit\": self.gameEngine.numFruit,\n      \"ticks\": self.gameEngine.ticks,\n      \"scoreMax\": self.gameEngine.scoreMax,\n      \"gameOver\": self.gameEngine.gameOver,\n      \"gameFinished\": self.gameEngine.gameFinished,\n      \"gameMazeWin\": self.gameEngine.gameMazeWin,\n      \"starting\": self.gameEngine.starting,\n      \"initialSpeed\": self.gameEngine.initialSpeed,\n      \"speed\": self.gameEngine.speed,\n      \"snakes\": self.gameEngine.snakes,\n      \"confirmReset\": false,\n      \"confirmExit\": false,\n      \"getInfos\": false,\n      \"getInfosGame\": false,\n      \"errorOccurred\": self.gameEngine.errorOccurred,\n      \"offsetFrame\": self.gameEngine.speed * GameConstants.Setting.TIME_MULTIPLIER\n    });\n    self.reactor.dispatchEvent(\"onReset\");\n  });\n\n  this.gameEngine.onStart(function() {\n    self.update(\"start\", {\n      \"snakes\": self.gameEngine.snakes,\n      \"grid\": self.gameEngine.grid,\n      \"starting\": self.gameEngine.starting,\n      \"countBeforePlay\": self.gameEngine.countBeforePlay,\n      \"paused\": self.gameEngine.paused,\n      \"isReseted\": self.gameEngine.isReseted,\n      \"confirmReset\": false,\n      \"confirmExit\": false,\n      \"getInfos\": false,\n      \"getInfosGame\": false,\n      \"errorOccurred\": self.gameEngine.errorOccurred\n    });\n    self.reactor.dispatchEvent(\"onStart\");\n  });\n\n  this.gameEngine.onPause(function() {\n    self.update(\"pause\", {\n      \"paused\": self.gameEngine.paused,\n      \"confirmReset\": false,\n      \"confirmExit\": false,\n      \"getInfos\": false,\n      \"getInfosGame\": false,\n      \"errorOccurred\": self.gameEngine.errorOccurred\n    });\n    self.reactor.dispatchEvent(\"onPause\");\n  });\n\n  this.gameEngine.onContinue(function() {\n    self.update(\"continue\", {\n      \"confirmReset\": false,\n      \"confirmExit\": false,\n      \"getInfos\": false,\n      \"getInfosGame\": false,\n      \"errorOccurred\": self.gameEngine.errorOccurred\n    });\n    self.reactor.dispatchEvent(\"onContinue\");\n  });\n\n  this.gameEngine.onStop(function() {\n    self.update(\"stop\", {\n      \"paused\": self.gameEngine.paused,\n      \"scoreMax\": self.gameEngine.scoreMax,\n      \"gameOver\": self.gameEngine.gameOver,\n      \"gameFinished\": self.gameEngine.gameFinished,\n      \"confirmReset\": false,\n      \"confirmExit\": false,\n      \"getInfos\": false,\n      \"getInfosGame\": false,\n      \"errorOccurred\": self.gameEngine.errorOccurred\n    });\n    self.reactor.dispatchEvent(\"onStop\");\n  });\n\n  this.gameEngine.onExit(function() {\n    self.update(\"exit\", {\n      \"paused\": self.gameEngine.paused,\n      \"gameOver\": self.gameEngine.gameOver,\n      \"gameFinished\": self.gameEngine.gameFinished,\n      \"exited\": self.gameEngine.exited,\n      \"confirmReset\": false,\n      \"confirmExit\": false,\n      \"getInfos\": false,\n      \"getInfosGame\": false,\n      \"errorOccurred\": self.gameEngine.errorOccurred\n    });\n    self.reactor.dispatchEvent(\"onExit\");\n  });\n\n  this.gameEngine.onKill(function() {\n    self.update(\"kill\", {\n      \"paused\": self.gameEngine.paused,\n      \"gameOver\": self.gameEngine.gameOver,\n      \"killed\": self.gameEngine.killed,\n      \"snakes\": self.gameEngine.snakes,\n      \"gameFinished\": self.gameEngine.gameFinished,\n      \"grid\": self.gameEngine.grid,\n      \"confirmReset\": false,\n      \"confirmExit\": false,\n      \"getInfos\": false,\n      \"getInfosGame\": false,\n      \"errorOccurred\": self.gameEngine.errorOccurred\n    });\n    self.reactor.dispatchEvent(\"onKill\");\n  });\n\n  this.gameEngine.onScoreIncreased(function() {\n    self.update(\"scoreIncreased\", {\n      \"snakes\": self.gameEngine.snakes,\n      \"scoreMax\": self.gameEngine.scoreMax,\n      \"gameFinished\": self.gameEngine.gameFinished,\n      \"errorOccurred\": self.gameEngine.errorOccurred\n    });\n    self.reactor.dispatchEvent(\"onScoreIncreased\");\n  });\n\n  this.gameEngine.onUpdate(function() {\n    self.update(\"update\", {\n      \"paused\": self.gameEngine.paused,\n      \"isReseted\": self.gameEngine.isReseted,\n      \"exited\": self.gameEngine.exited,\n      \"grid\": self.gameEngine.grid,\n      \"numFruit\": self.gameEngine.numFruit,\n      \"ticks\": self.gameEngine.ticks,\n      \"scoreMax\": self.gameEngine.scoreMax,\n      \"gameOver\": self.gameEngine.gameOver,\n      \"gameFinished\": self.gameEngine.gameFinished,\n      \"gameMazeWin\": self.gameEngine.gameMazeWin,\n      \"starting\": self.gameEngine.starting,\n      \"initialSpeed\": self.gameEngine.initialSpeed,\n      \"speed\": self.gameEngine.speed,\n      \"snakes\": self.gameEngine.snakes,\n      \"countBeforePlay\": self.gameEngine.countBeforePlay,\n      \"numFruit\": self.gameEngine.numFruit,\n      \"offsetFrame\": 0,\n      \"errorOccurred\": self.gameEngine.errorOccurred\n    });\n    self.reactor.dispatchEvent(\"onUpdate\");\n  });\n\n  this.gameEngine.onUpdateCounter(function() {\n    self.update(\"updateCounter\", {\n      \"paused\": self.gameEngine.paused,\n      \"isReseted\": self.gameEngine.isReseted,\n      \"exited\": self.gameEngine.exited,\n      \"grid\": self.gameEngine.grid,\n      \"numFruit\": self.gameEngine.numFruit,\n      \"ticks\": self.gameEngine.ticks,\n      \"scoreMax\": self.gameEngine.scoreMax,\n      \"gameOver\": self.gameEngine.gameOver,\n      \"gameFinished\": self.gameEngine.gameFinished,\n      \"gameMazeWin\": self.gameEngine.gameMazeWin,\n      \"starting\": self.gameEngine.starting,\n      \"initialSpeed\": self.gameEngine.initialSpeed,\n      \"speed\": self.gameEngine.speed,\n      \"snakes\": self.gameEngine.snakes,\n      \"countBeforePlay\": self.gameEngine.countBeforePlay,\n      \"numFruit\": self.gameEngine.numFruit,\n      \"errorOccurred\": self.gameEngine.errorOccurred\n    });\n    self.reactor.dispatchEvent(\"onUpdateCounter\");\n  });\n};\n\nGameController.prototype.reset = function() {\n  this.gameEngine.reset();\n};\n\nGameController.prototype.start = function() {\n  this.gameEngine.start();\n};\n\nGameController.prototype.stop = function() {\n  this.gameEngine.stop();\n};\n\nGameController.prototype.finish = function(finish) {\n  this.gameEngine.stop(finish);\n};\n\nGameController.prototype.pause = function() {\n  this.gameEngine.pause();\n};\n\nGameController.prototype.kill = function() {\n  this.gameEngine.kill();\n};\n\nGameController.prototype.tick = function() {\n  this.gameEngine.tick();\n};\n\nGameController.prototype.exit = function() {\n  this.gameEngine.exit();\n};\n\nGameController.prototype.setDisplayFPS = function(display) {\n  this.gameUI.setDisplayFPS(display);\n};\n\nGameController.prototype.setNotification = function(notification) {\n  this.gameUI.setNotification(notification);\n};\n\nGameController.prototype.setTimeToDisplay = function(time) {\n  this.gameUI.setTimeToDisplay(time);\n};\n\nGameController.prototype.setBestScore = function(score) {\n  this.gameUI.setBestScore(score);\n};\n\nGameController.prototype.key = function(key) {\n  this.gameEngine.lastKey = key;\n  var playerSnake = this.gameEngine.getPlayer(1, GameConstants.PlayerType.HUMAN) || this.gameEngine.getPlayer(1, GameConstants.PlayerType.HYBRID_HUMAN_AI);\n\n  if(playerSnake != null && playerSnake.lastKey != null) {\n    playerSnake.lastKey = key;\n  }\n};\n\nGameController.prototype.update = function(message, data) {\n  if(this.gameUI != null && data != null) {\n    var dataKeys = Object.keys(data);\n\n    for(var i = 0; i < dataKeys.length; i++) {\n      if(Object.prototype.hasOwnProperty.call(this.gameUI, dataKeys[i]) && typeof(data[dataKeys[i]]) !== \"function\" && typeof(this.gameUI[dataKeys[i]]) !== \"function\") {\n        this.gameUI[dataKeys[i]] = data[dataKeys[i]];\n      }\n\n      if(Object.prototype.hasOwnProperty.call(this, dataKeys[i]) && typeof(data[dataKeys[i]]) !== \"function\" && typeof(this[dataKeys[i]]) !== \"function\") {\n        this[dataKeys[i]] = data[dataKeys[i]];\n      }\n    }\n\n    if(data.hasOwnProperty(\"killed\") && data.killed) {\n      this.gameUI.setKill();\n    }\n  }\n};\n\nGameController.prototype.getNBPlayer = function(type) {\n  var numPlayer = 0;\n\n  if(this.snakes != null) {\n    for(var i = 0; i < this.snakes.length; i++) {\n      if(this.snakes[i].player == type) {\n        numPlayer++;\n      }\n    }\n  }\n\n  return numPlayer;\n};\n\nGameController.prototype.getPlayer = function(num, type) {\n  var numPlayer = 0;\n\n  if(this.snakes != null) {\n    for(var i = 0; i < this.snakes.length; i++) {\n      if(this.snakes[i].player == type) {\n        numPlayer++;\n      }\n  \n      if(numPlayer == num) {\n        return this.snakes[i];\n      }\n    }\n  }\n\n  return null;\n};\n\nGameController.prototype.onReset = function(callback) {\n  this.reactor.addEventListener(\"onReset\", callback);\n};\n\nGameController.prototype.onStart = function(callback) {\n  this.reactor.addEventListener(\"onStart\", callback);\n};\n\nGameController.prototype.onContinue = function(callback) {\n  this.reactor.addEventListener(\"onContinue\", callback);\n};\n\nGameController.prototype.onStop = function(callback) {\n  this.reactor.addEventListener(\"onStop\", callback);\n};\n\nGameController.prototype.onPause = function(callback) {\n  this.reactor.addEventListener(\"onPause\", callback);\n};\n\nGameController.prototype.onExit = function(callback) {\n  this.reactor.addEventListener(\"onExit\", callback);\n};\n\nGameController.prototype.onKill = function(callback) {\n  this.reactor.addEventListener(\"onKill\", callback);\n};\n\nGameController.prototype.onScoreIncreased = function(callback) {\n  this.reactor.addEventListener(\"onScoreIncreased\", callback);\n};\n\n// Export module\nif(true) {\n  module.exports = GameController;\n}\n\n//# sourceURL=webpack:///./src/gameController.js?");

/***/ }),

/***/ "./src/gameControllerSocket.js":
/*!*************************************!*\
  !*** ./src/gameControllerSocket.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var io = __webpack_require__(/*! ../libs/socket.io.js */ \"./libs/socket.io.js\");\n  var i18next = __webpack_require__(/*! ../libs/i18next.min */ \"./libs/i18next.min.js\");\n  var GameController = __webpack_require__(/*! ./gameController */ \"./src/gameController.js\");\n  var Grid = __webpack_require__(/*! ./grid */ \"./src/grid.js\");\n  var Snake = __webpack_require__(/*! ./snake */ \"./src/snake.js\");\n  var Position = __webpack_require__(/*! ./position */ \"./src/position.js\");\n  var NotificationMessage = __webpack_require__(/*! ./notificationMessage */ \"./src/notificationMessage.js\");\n}\n\nfunction GameControllerSocket(socket, ui) {\n  GameController.call(this, null, ui);\n\n  this.socket = socket;\n\n  this.parseData = function(m, d) {\n    var data = [m, d];\n\n    if(data.length > 1) {\n      var grid = this.gameUI.grid;\n\n      if(data[1].hasOwnProperty(\"grid\") && data[1][\"grid\"] != null) {\n        grid = Object.assign(new Grid(), data[1][\"grid\"]);\n        data[1][\"grid\"] = grid;\n      }\n      \n      if(data[1].hasOwnProperty(\"snakes\") && data[1][\"snakes\"] != null) {\n        for(var i = 0; i < data[1][\"snakes\"].length; i++) {\n          data[1][\"snakes\"][i].grid = grid;\n          data[1][\"snakes\"][i] = Object.assign(new Snake(), data[1][\"snakes\"][i]);\n\n          for(var j = 0; j < data[1][\"snakes\"][i].queue.length; j++) {\n            data[1][\"snakes\"][i].queue[j] = Object.assign(new Position(), data[1][\"snakes\"][i].queue[j]);\n          }\n        }\n      }\n      \n      this.update(data[0], data[1]);\n    }\n  };\n\n  this.init = function() {\n    var self = this;\n\n    this.socket.on(\"init\", function(data) {\n      self.parseData(\"init\", data);\n    });\n\n    this.socket.on(\"reset\", function(data) {\n      self.parseData(\"reset\", data);\n      self.reactor.dispatchEvent(\"onReset\");\n    });\n\n    this.socket.on(\"start\", function(data) {\n      self.parseData(\"start\", data);\n      self.reactor.dispatchEvent(\"onStart\");\n    });\n\n    this.socket.on(\"pause\", function(data) {\n      self.parseData(\"pause\", data);\n      self.reactor.dispatchEvent(\"onPause\");\n    });\n\n    this.socket.on(\"continue\", function(data) {\n      self.parseData(\"continue\", data);\n      self.reactor.dispatchEvent(\"onContinue\");\n    });\n\n    this.socket.on(\"stop\", function(data) {\n      self.parseData(\"stop\", data);\n      self.reactor.dispatchEvent(\"onStop\");\n    });\n\n    this.socket.on(\"exit\", function(data) {\n      self.parseData(\"exit\", data);\n      self.reactor.dispatchEvent(\"onExit\");\n    });\n\n    this.socket.on(\"kill\", function(data) {\n      self.parseData(\"kill\", data);\n      self.reactor.dispatchEvent(\"onKill\");\n    });\n\n    this.socket.on(\"scoreIncreased\", function(data) {\n      self.parseData(\"scoreIncreased\", data);\n      self.reactor.dispatchEvent(\"onScoreIncreased\");\n    });\n\n    this.socket.on(\"update\", function(data) {\n      self.parseData(\"update\", data);\n      self.reactor.dispatchEvent(\"onUpdate\");\n    });\n\n    this.socket.on(\"updateCounter\", function(data) {\n      self.parseData(\"updateCounter\", data);\n      self.reactor.dispatchEvent(\"onUpdateCounter\");\n    });\n\n    this.socket.on(\"connect_error\", function() {\n      self.gameUI.setNotification(new NotificationMessage(i18next.t(\"engine.servers.errorConnection\"), null, \"rgba(231, 76, 60, 0.5)\", null, null, null, null, true));\n    });\n\n    this.socket.on(\"reconnect_error\", function() {\n      self.gameUI.setNotification(new NotificationMessage(i18next.t(\"engine.servers.errorConnection\"), null, \"rgba(231, 76, 60, 0.5)\", null, null, null, null, true));\n    });\n  };\n\n  this.reset = function() {\n    this.socket.emit(\"reset\");\n  };\n\n  this.start = function() {\n    this.socket.emit(\"start\");\n  };\n\n  this.stop = function() {\n    this.socket.emit(\"stop\");\n  };\n\n  this.finish = function(finish) {\n    this.socket.emit(finish ? \"finish\" : \"stop\");\n  };\n\n  this.pause = function() {\n    this.socket.emit(\"pause\");\n  };\n\n  this.kill = function() {\n    this.socket.emit(\"kill\");\n  };\n\n  this.tick = function() {\n    this.socket.emit(\"tick\");\n  };\n\n  this.exit = function() {\n    this.socket.emit(\"exit\");\n  };\n\n  this.key = function(key) {\n    this.socket.emit(\"key\", key);\n  };\n}\n\n// extends GameController\nGameControllerSocket.prototype = Object.create(GameController).prototype;\nGameControllerSocket.prototype.constructor = GameControllerSocket;\n\n// Export module\nif(true) {\n  module.exports = GameControllerSocket;\n}\n\n//# sourceURL=webpack:///./src/gameControllerSocket.js?");

/***/ }),

/***/ "./src/gameControllerWorker.js":
/*!*************************************!*\
  !*** ./src/gameControllerWorker.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var GameController = __webpack_require__(/*! ./gameController */ \"./src/gameController.js\");\n  var Grid = __webpack_require__(/*! ./grid */ \"./src/grid.js\");\n  var Snake = __webpack_require__(/*! ./snake */ \"./src/snake.js\");\n  var Position = __webpack_require__(/*! ./position */ \"./src/position.js\");\n}\n\nfunction GameControllerWorker(game, ui) {\n  GameController.call(this, game, ui);\n\n  this.worker;\n\n  this.init = function() {\n    if(window.Worker) {\n      try {\n        this.worker = new Worker(\"src/gameEngineWorker.js\");\n      } catch(e) {\n        this.update(\"init\", {\n          \"errorOccurred\": true\n        });\n        return;\n      }\n\n      if(this.worker instanceof Worker) {\n        this.worker.postMessage([\"init\", game]);\n\n        var self = this;\n\n        this.worker.onmessage = function(e) {\n          var data = e.data;\n\n          if(data.length > 1) {\n            var grid = self.gameUI.grid;\n\n            if(data[1].hasOwnProperty(\"grid\") && data[1][\"grid\"] != null) {\n              grid = Object.assign(new Grid(), data[1][\"grid\"]);\n              data[1][\"grid\"] = grid;\n            }\n            \n            if(data[1].hasOwnProperty(\"snakes\") && data[1][\"snakes\"] != null) {\n              for(var i = 0; i < data[1][\"snakes\"].length; i++) {\n                data[1][\"snakes\"][i].grid = grid;\n                data[1][\"snakes\"][i] = Object.assign(new Snake(), data[1][\"snakes\"][i]);\n\n                for(var j = 0; j < data[1][\"snakes\"][i].queue.length; j++) {\n                  data[1][\"snakes\"][i].queue[j] = Object.assign(new Position(), data[1][\"snakes\"][i].queue[j]);\n                }\n              }\n            }\n            \n            self.update(data[0], data[1]);\n            \n            switch(data[0]) {\n              case \"reset\":\n                self.reactor.dispatchEvent(\"onReset\");\n                break;\n              case \"start\":\n                self.reactor.dispatchEvent(\"onStart\");\n                break;\n              case \"pause\":\n                self.reactor.dispatchEvent(\"onPause\");\n                break;\n              case \"continue\":\n                self.reactor.dispatchEvent(\"onContinue\");\n                break;\n              case \"stop\":\n                self.reactor.dispatchEvent(\"onStop\");\n                break;\n              case \"exit\":\n                self.reactor.dispatchEvent(\"onExit\");\n                break;\n              case \"kill\":\n                self.reactor.dispatchEvent(\"onKill\");\n                self.worker.terminate();\n                break;\n              case \"scoreIncreased\":\n                self.reactor.dispatchEvent(\"onScoreIncreased\");\n                break;\n              case \"update\":\n                self.reactor.dispatchEvent(\"onUpdate\");\n                break;\n              case \"updateCounter\":\n                self.reactor.dispatchEvent(\"onUpdateCounter\");\n                break;\n            }\n          }\n        };\n      } else {\n        if(this.gameUI != null) {\n          this.update(\"init\", {\n            \"errorOccurred\": true\n          });\n        }\n      }\n    } else {\n      if(this.gameUI != null) {\n        this.update(\"init\", {\n          \"errorOccurred\": true\n        });\n      }\n    }\n  };\n\n  this.reset = function() {\n    if(this.worker instanceof Worker) this.worker.postMessage([\"reset\"]);\n  };\n\n  this.start = function() {\n    if(this.worker instanceof Worker) this.worker.postMessage([\"start\"]);\n  };\n\n  this.stop = function() {\n    if(this.worker instanceof Worker) this.worker.postMessage([\"stop\"]);\n  };\n\n  this.finish = function(finish) {\n    if(this.worker instanceof Worker) this.worker.postMessage([finish ? \"finish\" : \"stop\"]);\n  };\n\n  this.pause = function() {\n    if(this.worker instanceof Worker) this.worker.postMessage([\"pause\"]);\n  };\n\n  this.kill = function() {\n    if(this.worker instanceof Worker) this.worker.postMessage([\"kill\"]);\n  };\n\n  this.tick = function() {\n    if(this.worker instanceof Worker) this.worker.postMessage([\"tick\"]);\n  };\n\n  this.exit = function() {\n    if(this.worker instanceof Worker) this.worker.postMessage([\"exit\"]);\n  };\n\n  this.key = function(key) {\n    if(this.worker instanceof Worker) this.worker.postMessage([\"key\", key]);\n  };\n}\n\n // extends GameController\nGameControllerWorker.prototype = Object.create(GameController).prototype;\nGameControllerWorker.prototype.constructor = GameControllerWorker;\n\n// Export module\nif(true) {\n  module.exports = GameControllerWorker;\n}\n\n//# sourceURL=webpack:///./src/gameControllerWorker.js?");

/***/ }),

/***/ "./src/gameEngine.js":
/*!***************************!*\
  !*** ./src/gameEngine.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var GameUtils = __webpack_require__(/*! ./gameUtils */ \"./src/gameUtils.js\");\n  var GameConstants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n  var Reactor = __webpack_require__(/*! ./reactor */ \"./src/reactor.js\");\n  var Grid = __webpack_require__(/*! ./grid */ \"./src/grid.js\");\n  var Snake = __webpack_require__(/*! ./snake */ \"./src/snake.js\");\n}\n\nfunction GameEngine(grid, snake, speed, enablePause, enableRetry, progressiveSpeed) {\n  // Game settings\n  this.grid = grid;\n  this.snakes = snake;\n  this.speed = speed == null ? 8 : speed;\n  this.initialSpeed = speed == null ? 8 : speed;\n  this.initialSpeedUntouched = speed == null ? 8 : speed;\n  this.enablePause = enablePause == null ? true : enablePause;\n  this.enableRetry = enableRetry == null ? true : enableRetry;\n  this.progressiveSpeed = progressiveSpeed == null ? false : progressiveSpeed;\n  this.countBeforePlay = 3;\n  // Game variables\n  this.lastKey = -1;\n  this.numFruit = 1;\n  this.ticks = 0;\n  // Game state variables\n  this.firstStart = true;\n  this.starting = false;\n  this.paused = true;\n  this.exited = false;\n  this.killed = false;\n  this.isReseted = true;\n  this.gameOver = false;\n  this.gameFinished = false; // only used if 2 and more snakes\n  this.gameMazeWin = false; // used in maze mode\n  this.scoreMax = false;\n  this.errorOccurred = false;\n  // Intervals, timeouts, frames\n  this.intervalPlay;\n  // Events\n  this.reactor = new Reactor();\n  this.reactor.registerEvent(\"onStart\");\n  this.reactor.registerEvent(\"onPause\");\n  this.reactor.registerEvent(\"onContinue\");\n  this.reactor.registerEvent(\"onReset\");\n  this.reactor.registerEvent(\"onStop\");\n  this.reactor.registerEvent(\"onExit\");\n  this.reactor.registerEvent(\"onKill\");\n  this.reactor.registerEvent(\"onScoreIncreased\");\n  this.reactor.registerEvent(\"onUpdate\");\n  this.reactor.registerEvent(\"onUpdateCounter\");\n}\n\nGameEngine.prototype.init = function() {\n  if(this.snakes == null) {\n    this.errorOccurred = true;\n    this.snakes = [];\n  } else if(!Array.isArray(this.snakes)) {\n    this.snakes = [this.snakes];\n  } else if((Array.isArray(this.snakes) && this.snakes.length <= 0) || (this.grid.maze && this.snakes.length > 1)) {\n    this.errorOccurred = true;\n  }\n\n  var startHue = GameUtils.randRange(0, 360);\n\n  for(var i = 0; i < this.snakes.length; i++) {\n    if(this.snakes[i] instanceof Snake == false) {\n      this.errorOccurred = true;\n    } else {\n      startHue = GameUtils.addHue(startHue, Math.round(360 / (this.snakes.length)));\n      this.snakes[i].color = startHue;\n    }\n  }\n\n  if(this.grid instanceof Grid == false) {\n    this.errorOccurred = true;\n  } else if(!this.errorOccurred) {\n    this.grid.setFruit();\n  }\n};\n\nGameEngine.prototype.reset = function() {\n  this.paused = true;\n  this.isReseted = true;\n  this.exited = false;\n  this.clearIntervalPlay();\n  this.grid.init();\n\n  if(this.snakes != null) {\n    for(var i = 0; i < this.snakes.length; i++) {\n      this.snakes[i].reset();\n    }\n  }\n\n  this.numFruit = 1;\n  this.ticks = 0;\n  this.lastKey = -1;\n  this.scoreMax = false;\n  this.errorOccurred = false;\n  this.gameOver = false;\n  this.gameFinished = false;\n  this.gameMazeWin = false;\n  this.starting = false;\n  this.initialSpeed = this.initialSpeedUntouched;\n  this.speed = this.initialSpeedUntouched;\n  this.grid.setFruit();\n  this.reactor.dispatchEvent(\"onReset\");\n  this.start();\n};\n\nGameEngine.prototype.start = function() {\n  this.reactor.dispatchEvent(\"onUpdateCounter\");\n  var self = this;\n\n  if(!this.errorOccurred) {\n    if(this.snakes != null) {\n      for(var i = 0; i < this.snakes.length; i++) {\n        if(this.snakes[i].errorInit) {\n          this.errorOccurred = true;\n          this.stop();\n        }\n      }\n    }\n    \n    if(this.paused && !this.gameOver && !this.killed && !this.scoreMax && !this.starting) {\n      this.starting = true;\n      \n      if(!this.firstStart) {\n        this.reactor.dispatchEvent(\"onContinue\");\n      }\n      \n      this.countBeforePlay = 3;\n      this.clearIntervalPlay();\n      \n      this.reactor.dispatchEvent(\"onUpdateCounter\");\n      \n      this.intervalPlay = setInterval(function() {\n        self.countBeforePlay--;\n        self.reactor.dispatchEvent(\"onUpdateCounter\");\n        \n        if(self.countBeforePlay < 0) {\n          self.clearIntervalPlay();\n          self.paused = false;\n          self.isReseted = false;\n          self.firstStart = false;\n          self.starting = false;\n          self.reactor.dispatchEvent(\"onStart\");\n          self.tick();\n        }\n      }, 1000);\n    }\n  }\n};\n\nGameEngine.prototype.clearIntervalPlay = function() {\n  clearInterval(this.intervalPlay);\n};\n\nGameEngine.prototype.continue = function() {\n  this.start();\n  this.reactor.dispatchEvent(\"onContinue\");\n};\n\nGameEngine.prototype.stop = function(finish) {\n  if(!this.gameOver) {\n    this.paused = true;\n    this.gameOver = true;\n    if(finish) this.gameFinished = true;\n    this.clearIntervalPlay();\n    this.reactor.dispatchEvent(\"onStop\");\n  }\n};\n\nGameEngine.prototype.pause = function() {\n  if(!this.paused) {\n    this.paused = true;\n    this.clearIntervalPlay();\n    this.reactor.dispatchEvent(\"onPause\");\n  }\n};\n\nGameEngine.prototype.kill = function() {\n  if(!this.killed) {\n    this.paused = true;\n    this.gameOver = true;\n    this.killed = true;\n\n    if(this.snakes != null) {\n      for(var i = 0; i < this.snakes.length; i++) {\n        this.snakes[i].kill();\n        this.snakes[i] = null;\n      }\n    }\n\n    this.clearIntervalPlay();\n\n    this.grid = null;\n    this.snakes = null;\n\n    this.reactor.dispatchEvent(\"onKill\");\n  }\n};\n\nGameEngine.prototype.exit = function() {\n  if(!this.exited) {\n    this.stop();\n    this.exited = true;\n    this.reactor.dispatchEvent(\"onExit\");\n  }\n};\n\nGameEngine.prototype.getNBPlayer = function(type) {\n  var numPlayer = 0;\n\n  if(this.snakes != null) {\n    for(var i = 0; i < this.snakes.length; i++) {\n      if(this.snakes[i].player == type) {\n        numPlayer++;\n      }\n    }\n  }\n\n  return numPlayer;\n};\n\nGameEngine.prototype.getPlayer = function(num, type) {\n  var numPlayer = 0;\n\n  if(this.snakes != null) {\n    for(var i = 0; i < this.snakes.length; i++) {\n      if(this.snakes[i].player == type) {\n        numPlayer++;\n      }\n  \n      if(numPlayer == num) {\n        return this.snakes[i];\n      }\n    }\n  }\n\n  return null;\n};\n\nGameEngine.prototype.tick = function() {\n  var self = this;\n\n  setTimeout(function() {\n    if(!self.paused && !self.killed) {\n      if(self.lastTime == 0) self.lastTime = time;\n      self.ticks++;\n      \n      if(!self.grid.maze || self.grid.mazeForceAuto || ((self.grid.maze && (self.getNBPlayer(GameConstants.PlayerType.HUMAN) <= 0 && self.getNBPlayer(GameConstants.PlayerType.HYBRID_HUMAN_AI) <= 0))) || (self.grid.maze && ((self.getNBPlayer(GameConstants.PlayerType.HUMAN) > 0 || self.getNBPlayer(GameConstants.PlayerType.HYBRID_HUMAN_AI) > 0) && (self.getPlayer(1, GameConstants.PlayerType.HYBRID_HUMAN_AI) || self.getPlayer(1, GameConstants.PlayerType.HUMAN)).lastKey != -1))) {\n        for(var i = 0; i < self.snakes.length; i++) {\n          var initialDirection = self.snakes[i].direction;\n          var setFruit = false;\n          var setFruitError = false;\n          self.snakes[i].lastTailMoved = false;\n\n          if(!self.snakes[i].gameOver && !self.snakes[i].scoreMax) {\n            if(self.snakes[i].player == GameConstants.PlayerType.HUMAN || self.snakes[i].player == GameConstants.PlayerType.HYBRID_HUMAN_AI) {\n              self.snakes[i].moveTo(self.snakes[i].lastKey);\n              self.snakes[i].lastKey = -1;\n            } else if(self.snakes[i].player == GameConstants.PlayerType.AI) {\n              self.snakes[i].moveTo(self.snakes[i].ai(true));\n            }\n\n            var headSnakePos = self.snakes[i].getHeadPosition();\n\n            if(self.snakes[i].player == GameConstants.PlayerType.HYBRID_HUMAN_AI && self.grid.isDeadPosition(self.snakes[i].getNextPosition(headSnakePos, self.snakes[i].direction))) {\n              self.snakes[i].direction = initialDirection;\n              self.snakes[i].moveTo(self.snakes[i].ai(true));\n              self.snakes[i].lastKey = -1;\n            }\n\n            headSnakePos = self.snakes[i].getNextPosition(headSnakePos, self.snakes[i].direction);\n\n            if(self.grid.isDeadPosition(headSnakePos)) {\n              self.snakes[i].setGameOver();\n            } else {\n              if(self.grid.get(headSnakePos) == GameConstants.CaseType.FRUIT) {\n                self.snakes[i].score++;\n                self.reactor.dispatchEvent(\"onScoreIncreased\");\n                self.snakes[i].insert(headSnakePos);\n\n                if(self.grid.maze) {\n                  self.stop();\n                  self.gameMazeWin = true;\n                  self.gameFinished = true;\n                } else if(self.snakes[i].hasMaxScore() && self.snakes.length <= 1) {\n                  self.scoreMax = true;\n                  self.snakes[i].scoreMax = true;\n                } else {\n                  self.numFruit++;\n                  var setFruit = true;\n                }\n\n                if(self.snakes.length <= 1 && self.progressiveSpeed && self.snakes[i].score > 0 && self.initialSpeed > 1) {\n                  self.initialSpeed = Math.ceil(((-self.initialSpeedUntouched / 100) * self.snakes[i].score) + self.initialSpeedUntouched);\n                  self.initialSpeed = self.initialSpeed < 1 ? 1 : self.initialSpeed;\n                }\n              } else {\n                self.snakes[i].insert(headSnakePos);\n\n                if(!self.grid.maze) {\n                  self.snakes[i].remove();\n                  self.snakes[i].lastTailMoved = true;\n                }\n              }\n            }\n          }\n\n          if(!self.scoreMax && setFruit) {\n            var setFruitError = !self.grid.setFruit();\n          }\n        }\n\n        if(!self.scoreMax && !setFruitError && self.grid.isFruitSurrounded(self.grid.fruitPos, true)) {\n          var setFruitError = !self.grid.setFruit();\n        }\n\n        var nbOver = 0;\n\n        for(var j = 0; j < self.snakes.length; j++) {\n          (self.snakes[j].gameOver || self.snakes[j].scoreMax) && nbOver++;\n        }\n\n        if(nbOver >= self.snakes.length || setFruitError) {\n          self.stop();\n\n          if(self.snakes.length > 1) {\n            self.gameFinished = true;\n          }\n        }\n\n        self.reactor.dispatchEvent(\"onUpdate\");\n      }\n      \n      self.tick();\n    }\n  }, this.initialSpeed * GameConstants.Setting.TIME_MULTIPLIER);\n};\n\nGameEngine.prototype.onReset = function(callback) {\n  this.reactor.addEventListener(\"onReset\", callback);\n};\n\nGameEngine.prototype.onStart = function(callback) {\n  this.reactor.addEventListener(\"onStart\", callback);\n};\n\nGameEngine.prototype.onContinue = function(callback) {\n  this.reactor.addEventListener(\"onContinue\", callback);\n};\n\nGameEngine.prototype.onStop = function(callback) {\n  this.reactor.addEventListener(\"onStop\", callback);\n};\n\nGameEngine.prototype.onPause = function(callback) {\n  this.reactor.addEventListener(\"onPause\", callback);\n};\n\nGameEngine.prototype.onExit = function(callback) {\n  this.reactor.addEventListener(\"onExit\", callback);\n};\n\nGameEngine.prototype.onKill = function(callback) {\n  this.reactor.addEventListener(\"onKill\", callback);\n};\n\nGameEngine.prototype.onScoreIncreased = function(callback) {\n  this.reactor.addEventListener(\"onScoreIncreased\", callback);\n};\n\nGameEngine.prototype.onUpdate = function(callback) {\n  this.reactor.addEventListener(\"onUpdate\", callback);\n};\n\nGameEngine.prototype.onUpdateCounter = function(callback) {\n  this.reactor.addEventListener(\"onUpdateCounter\", callback);\n};\n\n// Export module\nif(true) {\n  module.exports = GameEngine;\n}\n\n//# sourceURL=webpack:///./src/gameEngine.js?");

/***/ }),

/***/ "./src/gameGroup.js":
/*!**************************!*\
  !*** ./src/gameGroup.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var Reactor = __webpack_require__(/*! ./reactor */ \"./src/reactor.js\");\n}\n\nfunction GameGroup(games) {\n  this.games = games == undefined ? [] : games;\n  this.reactor = new Reactor();\n  this.reactor.registerEvent(\"onStart\");\n  this.reactor.registerEvent(\"onPause\");\n  this.reactor.registerEvent(\"onContinue\");\n  this.reactor.registerEvent(\"onStop\");\n  this.reactor.registerEvent(\"onReset\");\n  this.reactor.registerEvent(\"onExit\");\n  this.reactor.registerEvent(\"onScoreIncreased\");\n  \n  this.init();\n}\n\nGameGroup.prototype.init = function() {\n  var self = this;\n\n  for(var i = 0; i < this.games.length; i++) {\n    if(i == 0) {\n      self.games[i].enableKeyMenu = true;\n    }\n    \n    this.games[i].onPause(function(v) {\n      return function() {\n        self.pauseAll(v);\n      };\n    }(i));\n\n    this.games[i].onContinue(function(v) {\n      return function() {\n        self.startAll(v);\n      };\n    }(i));\n\n    this.games[i].onExit(function(v) {\n      return function() {\n        self.checkExit(v);\n      };\n    }(i));\n\n    this.games[i].onStop(function(v) {\n      return function() {\n        self.checkStop(v);\n      };\n    }(i));\n\n    this.games[i].onReset(function(v) {\n      return function() {\n        self.resetAll(v);\n      };\n    }(i));\n\n    this.games[i].onScoreIncreased(function(v) {\n      return function() {\n        self.checkOnScoreIncreased(v);\n      };\n    }(i));\n  }\n};\n\nGameGroup.prototype.start = function() {\n  this.startAll(null);\n};\n\nGameGroup.prototype.startAll = function(game) {\n  for(var i = 0; i < this.games.length; i++) {\n    if(this.games[i].paused && !this.games[i].starting && (game == null || i != game)) {\n      this.games[i].start();\n    }\n  }\n\n  this.reactor.dispatchEvent(\"onStart\");\n};\n\nGameGroup.prototype.onStart = function(callback) {\n  this.reactor.addEventListener(\"onStart\", callback);\n};\n\nGameGroup.prototype.pauseAll = function(game) {\n  for(var i = 0; i < this.games.length; i++) {\n    if(!this.games[i].paused && (game == null || i != game)) {\n      this.games[i].pause();\n    }\n  }\n\n  this.reactor.dispatchEvent(\"onPause\");\n};\n\nGameGroup.prototype.onPause = function(callback) {\n  this.reactor.addEventListener(\"onPause\", callback);\n};\n\nGameGroup.prototype.resetAll = function(game) {\n  for(var i = 0; i < this.games.length; i++) {\n    if(!this.games[i].isReseted && (game == null || i != game)) {\n      this.games[i].reset();\n    }\n  }\n\n  this.reactor.dispatchEvent(\"onReset\");\n};\n\nGameGroup.prototype.onReset = function(callback) {\n  this.reactor.addEventListener(\"onReset\", callback);\n};\n\nGameGroup.prototype.checkExit = function(game) {\n  allExited = true;\n\n  for(var i = 0; i < this.games.length; i++) {\n    if(!this.games[i].exited) {\n      allExited = false;\n    }\n  }\n\n  if(allExited) {\n    this.reactor.dispatchEvent(\"onExit\");\n  } else {\n    this.startAll(game);\n  }\n};\n\nGameGroup.prototype.onExit = function(callback) {\n  this.reactor.addEventListener(\"onExit\", callback);\n};\n\nGameGroup.prototype.checkStop = function() {\n  allStopped = true;\n\n  for(var i = 0; i < this.games.length; i++) {\n    if(!this.games[i].gameOver) {\n      allStopped = false;\n    }\n  }\n\n  if(allStopped) {\n    this.reactor.dispatchEvent(\"onStop\");\n  }\n};\n\nGameGroup.prototype.onStop = function(callback) {\n  this.reactor.addEventListener(\"onStop\", callback);\n};\n\nGameGroup.prototype.stopAll = function(finished) {\n  for(var i = 0; i < this.games.length; i++) {\n    if(finished) {\n      this.games[i].finish(true);\n    } else {\n      this.games[i].stop();\n    }\n  }\n};\n\nGameGroup.prototype.killAll = function() {\n  for(var i = 0; i < this.games.length; i++) {\n    this.games[i].kill();\n  }\n};\n\nGameGroup.prototype.checkOnScoreIncreased = function() {\n  this.reactor.dispatchEvent(\"onScoreIncreased\");\n};\n\nGameGroup.prototype.onScoreIncreased = function(callback) {\n  this.reactor.addEventListener(\"onScoreIncreased\", callback);\n};\n\nGameGroup.prototype.setDisplayFPS = function(value) {\n  for(var i = 0; i < this.games.length; i++) {\n    this.games[i].setDisplayFPS(value);\n  }\n};\n\nGameGroup.prototype.setNotification = function(notification) {\n  for(var i = 0; i < this.games.length; i++) {\n    this.games[i].setNotification(notification.copy());\n  }\n};\n\nGameGroup.prototype.closeNotification = function() {\n  for(var i = 0; i < this.games.length; i++) {\n    this.games[i].setNotification(null);\n  }\n};\n\nGameGroup.prototype.errorOccurred = function() {\n  for(var i = 0; i < this.games.length; i++) {\n    if(this.games[i].errorOccurred) return true;\n  }\n\n  return false;\n};\n\nGameGroup.prototype.getWinners = function() {\n  winners = [];\n  index = [];\n  maxScore = -1;\n\n  for(var i = 0; i < this.games.length; i++) {\n    for(var j = 0; j < this.games[i].snakes.length; j++) {\n      if(this.games[i].snakes[j].score > maxScore) {\n        maxScore = this.games[i].snakes[j].score;\n      }\n    }\n  }\n\n  if(maxScore >= 0) {\n    var idx = 0;\n\n    for(var i = 0; i < this.games.length; i++) {\n      for(var j = 0; j < this.games[i].snakes.length; j++) {\n        if(this.games[i].snakes[j].score >= maxScore) {\n          winners.push(this.games[i].snakes[j]);\n          index.push(idx);\n        }\n\n        idx++;\n      }\n    }\n  }\n\n  return {\n    winners: winners,\n    score: maxScore,\n    index: index\n  }\n};\n\n// Export module\nif(true) {\n  module.exports = GameGroup;\n}\n\n//# sourceURL=webpack:///./src/gameGroup.js?");

/***/ }),

/***/ "./src/gameUI.js":
/*!***********************!*\
  !*** ./src/gameUI.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var i18next = __webpack_require__(/*! ../libs/i18next.min */ \"./libs/i18next.min.js\");\n  var GameUtils = __webpack_require__(/*! ./gameUtils */ \"./src/gameUtils.js\");\n  var GameConstants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n  var Position = __webpack_require__(/*! ./position */ \"./src/position.js\");\n  var ImageLoader = __webpack_require__(/*! ./imageLoader */ \"./src/imageLoader.js\");\n  var Buttons = __webpack_require__(/*! ./button */ \"./src/button.js\");\n  var Button = Buttons.Button;\n  var ButtonImage = Buttons.ButtonImage;\n  var NotificationMessage = __webpack_require__(/*! ./notificationMessage */ \"./src/notificationMessage.js\");\n}\n\nfunction GameUI(controller, appendTo, canvasWidth, canvasHeight, displayFPS, outputType, disableAnimation) {\n  // Assets loader\n  this.imageLoader;\n  this.assetsLoaded = false;\n  // Game settings\n  this.controller = controller;\n  this.appendTo = appendTo;\n  this.displayFPS = displayFPS == undefined ? false : displayFPS;\n  this.outputType = outputType == undefined ? GameConstants.OutputType.GRAPHICAL : outputType;\n  this.disableAnimation = disableAnimation == undefined ? false : disableAnimation;\n  // UI variables\n  this.lastKey = -1;\n  this.frame = 0;\n  this.lastFrame = 0;\n  this.offsetFrame = 0;\n  this.lastFrameTime = 0;\n  this.currentFPS = 0;\n  // Copy of engine variables\n  this.grid = null;\n  this.snakes = null;\n  this.speed = 8;\n  this.initialSpeed = 8;\n  this.ticks = 0;\n  this.countBeforePlay = 3;\n  this.numFruit = 0;\n  this.paused = true;\n  this.exited = false;\n  this.killed = false;\n  this.isReseted = true;\n  this.gameOver = false;\n  this.gameFinished = false;\n  this.gameMazeWin = false;\n  this.scoreMax = false;\n  this.enablePause = false;\n  this.enableRetry = false;\n  this.progressiveSpeed = false;\n  // Game state variables\n  this.errorOccurred = false;\n  this.fullscreen = false;\n  // Online variables\n  this.searchingPlayers = false;\n  this.playerNumber = 0;\n  this.maxPlayers = 0;\n  this.timeStart = 0;\n  this.lastTime = 0;\n  this.currentPlayer = null;\n  this.spectatorMode = false;\n  // Menus state variables\n  this.lastKeyMenu = -1;\n  this.selectedButton = 0;\n  this.confirmReset = false;\n  this.confirmExit = false;\n  this.getInfos = false;\n  this.getInfosGame = false;\n  this.timeoutAutoRetry = null;\n  // DOM elements and others settings\n  this.textarea;\n  this.canvas;\n  this.canvasCtx;\n  this.canvasWidth = canvasWidth == undefined ? GameConstants.Setting.CANVAS_WIDTH : canvasWidth;\n  this.canvasHeight = canvasHeight == undefined ? GameConstants.Setting.CANVAS_HEIGHT : canvasHeight;\n  this.fontSize = GameConstants.Setting.FONT_SIZE;\n  this.headerHeight = GameConstants.Setting.HEADER_HEIGHT_DEFAULT;\n  this.timerToDisplay;\n  this.bestScoreToDisplay;\n  this.preRenderedFont;\n  // Intervals, timeouts, frames\n  this.intervalCountFPS;\n  // Buttons\n  this.btnFullScreen;\n  this.btnPause;\n  this.btnContinue;\n  this.btnRetry;\n  this.btnQuit;\n  this.btnYes;\n  this.btnNo;\n  this.btnOK;\n  this.btnAbout;\n  this.btnInfosGame;\n  this.btnTopArrow;\n  this.btnRightArrow;\n  this.btnLeftArrow;\n  this.btnBottomArrow;\n  this.btnExitFullScreen;\n  this.btnEnterFullScreen;\n  // Notification\n  this.notificationMessage;\n\n  this.init();\n}\n\nGameUI.prototype.init = function() {\n  var self = this;\n\n  this.imageLoader = new ImageLoader();\n\n  if(this.outputType == GameConstants.OutputType.TEXT) {\n    this.textarea = document.createElement(\"textarea\");\n    this.appendTo.appendChild(this.textarea);\n    this.assetsLoaded = true;\n  } else if(this.outputType == GameConstants.OutputType.GRAPHICAL) {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.canvasWidth;\n    this.canvas.height = this.canvasHeight;\n    this.canvasCtx = this.canvas.getContext(\"2d\");\n    this.appendTo.appendChild(this.canvas);\n    this.btnFullScreen = new ButtonImage(\"assets/images/fullscreen.png\", null, 5, \"right\", null, 64, 64);\n    this.btnPause = new ButtonImage(\"assets/images/pause.png\", null, 5, null, null, 64, 64);\n    this.btnContinue = new Button(i18next.t(\"engine.continue\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n    this.btnRetry = new Button(i18next.t(\"engine.reset\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n    this.btnQuit = new Button(i18next.t(\"engine.exit\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n    this.btnYes = new Button(i18next.t(\"engine.yes\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n    this.btnNo = new Button(i18next.t(\"engine.no\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n    this.btnOK = new Button(i18next.t(\"engine.ok\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n    this.btnAbout = new Button(i18next.t(\"engine.about\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n    this.btnInfosGame = new Button(i18next.t(\"engine.infosGame\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n    this.btnTopArrow = new ButtonImage(\"assets/images/up.png\", 64, 92, \"right\", \"bottom\", 64, 64, \"rgba(255, 255, 255, 0.25)\", \"rgba(149, 165, 166, 0.25)\");\n    this.btnRightArrow = new ButtonImage(\"assets/images/right.png\", 0, 46, \"right\", \"bottom\", 64, 64, \"rgba(255, 255, 255, 0.25)\", \"rgba(149, 165, 166, 0.25)\");\n    this.btnLeftArrow = new ButtonImage(\"assets/images/left.png\", 128, 46, \"right\", \"bottom\", 64, 64, \"rgba(255, 255, 255, 0.25)\", \"rgba(149, 165, 166, 0.25)\");\n    this.btnBottomArrow = new ButtonImage(\"assets/images/bottom.png\", 64, 0, \"right\", \"bottom\", 64, 64, \"rgba(255, 255, 255, 0.25)\", \"rgba(149, 165, 166, 0.25)\");\n    this.btnExitFullScreen = new Button(i18next.t(\"engine.exitFullScreen\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n    this.btnEnterFullScreen = new Button(i18next.t(\"engine.enterFullScreen\"), null, null, \"center\", \"#3498db\", \"#246A99\", \"#184766\");\n\n    this.btnFullScreen.addClickAction(this.canvas, function() {\n      self.toggleFullscreen();\n      self.pause();\n    });\n\n    this.btnPause.addClickAction(this.canvas, function() {\n      self.pause();\n    });\n\n    this.btnTopArrow.addClickAction(this.canvas, function() {\n      self.controller.key(GameConstants.Key.UP);\n    });\n\n    this.btnBottomArrow.addClickAction(this.canvas, function() {\n      self.controller.key(GameConstants.Key.BOTTOM);\n    });\n\n    this.btnLeftArrow.addClickAction(this.canvas, function() {\n      self.controller.key(GameConstants.Key.LEFT);\n    });\n\n    this.btnRightArrow.addClickAction(this.canvas, function() {\n      self.controller.key(GameConstants.Key.RIGHT);\n    });\n  }\n  \n  this.setIntervalCountFPS();\n\n  document.addEventListener(\"keydown\", function(evt) {\n    if(!self.killed) {\n      var keyCode = evt.keyCode;\n  \n      if(keyCode == 90 || keyCode == 87) keyCode = GameConstants.Key.UP; // W or Z\n      if(keyCode == 65 || keyCode == 81) keyCode = GameConstants.Key.LEFT; // A or Q\n      if(keyCode == 83) keyCode = GameConstants.Key.BOTTOM; // S\n      if(keyCode == 68) keyCode = GameConstants.Key.RIGHT; // D\n  \n      if(!self.paused) {\n        if(keyCode == GameConstants.Key.ENTER) {\n          self.pause();\n        } else {\n          self.controller.key(keyCode);\n        }\n      } else if(self.countBeforePlay < 0) {\n        self.lastKeyMenu = keyCode;\n      }\n    \n      evt.preventDefault();\n    }\n  });\n\n  window.addEventListener(\"resize\", function() {\n    self.autoResizeCanvas();\n  }, true);\n\n  this.autoResizeCanvas();\n  this.loadAssets();\n  this.startDraw();\n};\n\nGameUI.prototype.autoResizeCanvas = function() {\n  if(this.outputType == GameConstants.OutputType.GRAPHICAL && !this.killed) {\n    if(!document.fullscreenElement) {\n      if(this.canvasWidth >= document.documentElement.clientWidth * 0.85) {\n        var ratio = this.canvasWidth / this.canvasHeight;\n        this.canvas.width = document.documentElement.clientWidth * 0.85;\n        this.canvas.height = this.canvas.width / ratio;\n      } else {\n        this.canvas.width = this.canvasWidth;\n        this.canvas.height = this.canvasHeight;\n      }\n    } else if(document.fullscreenElement == this.canvas) {\n      this.canvas.width = window.innerWidth;\n      this.canvas.height = window.innerHeight;\n    }\n  }\n};\n\nGameUI.prototype.setIntervalCountFPS = function() {\n  var self = this;\n\n  this.clearIntervalCountFPS();\n\n  this.intervalCountFPS = window.setInterval(function() {\n    self.countFPS();\n  }, 1000);\n};\n\nGameUI.prototype.countFPS = function() {\n  if(this.lastFrame > 0) this.currentFPS = this.frame - this.lastFrame;\n  this.lastFrame = this.frame;\n};\n\nGameUI.prototype.clearIntervalCountFPS = function() {\n  clearInterval(this.intervalCountFPS);\n};\n\nGameUI.prototype.getNBPlayer = function(type) {\n  return this.controller.getNBPlayer(type);\n};\n\nGameUI.prototype.getPlayer = function(num, type) {\n  return this.controller.getPlayer(num, type);\n};\n\nGameUI.prototype.reset = function() {\n  this.controller.reset();\n};\n\nGameUI.prototype.start = function() {\n  this.controller.start();\n};\n\nGameUI.prototype.stop = function() {\n  this.controller.stop();\n};\n\nGameUI.prototype.pause = function() {\n  this.controller.pause();\n};\n\nGameUI.prototype.kill = function() {\n  this.controller.kill();\n};\n\nGameUI.prototype.exit = function() {\n  this.controller.exit();\n};\n\nGameUI.prototype.tick = function() {\n  this.controller.tick();\n};\n\nGameUI.prototype.setKill = function() {\n  this.killed = true;\n  this.clearIntervalCountFPS();\n\n  this.grid = null;\n  this.snakes = null;\n  this.preRenderedFont = null;\n\n  if(this.appendTo != null) {\n    if(this.outputType == GameConstants.OutputType.TEXT && this.textarea != null) {\n      this.appendTo.removeChild(this.textarea);\n      this.textarea = null;\n    } else if(this.outputType == GameConstants.OutputType.GRAPHICAL && this.canvas != null) {\n      this.canvas.getContext(\"2d\").clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.appendTo.removeChild(this.canvas);\n      this.canvas = null;\n      this.canvasCtx = null;\n      this.imageLoader.clear();\n    }\n  }\n};\n\nGameUI.prototype.toggleFullscreen = function() {\n  var self = this;\n\n  if(this.outputType == GameConstants.OutputType.GRAPHICAL && !this.killed) {\n    if(!document.fullscreenElement) {\n      if(this.canvas.requestFullscreen) {\n        this.canvas.requestFullscreen();\n      } else if(this.canvas.mozRequestFullScreen) {\n        this.canvas.mozRequestFullScreen();\n      } else if(this.canvas.webkitRequestFullscreen) {\n        this.canvas.webkitRequestFullscreen();\n      } else if(this.canvas.msRequestFullscreen) {\n        this.canvas.msRequestFullscreen();\n      } else if(this.canvas.oRequestFullscreen) {\n        this.canvas.oRequestFullscreen();\n      }\n    } else {\n      if(document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    }\n\n    var onfullscreenchange = function() {\n      if(self.outputType == GameConstants.OutputType.GRAPHICAL && !self.killed) {\n        if(document.fullscreenElement == self.canvas) {\n          self.fullscreen = true;\n        } else {\n          self.fullscreen = false;\n        }\n\n        self.autoResizeCanvas();\n\n        if(document.fullscreenElement == self.canvas && typeof(screen.orientation) !== \"undefined\" && typeof(screen.orientation.lock) !== \"undefined\") {\n          screen.orientation.lock(\"landscape\").catch(function() {});\n        }\n      }\n    };\n\n    if(typeof(document.onfullscreenchange) !== \"undefined\") {\n      document.onfullscreenchange = onfullscreenchange;\n    } else if(typeof(document.onmsfullscreenchange) !== \"undefined\") {\n      document.onmsfullscreenchange = onfullscreenchange;\n    } else if(typeof(document.onmozfullscreenchange) !== \"undefined\") {\n      document.onmozfullscreenchange = onfullscreenchange;\n    } else if(typeof(document.onwebkitfullscreenchange) !== \"undefined\") {\n      document.onwebkitfullscreenchange = onfullscreenchange;\n    } else if(typeof(document.onokitfullscreenchange) !== \"undefined\") {\n      document.onofullscreenchange = onfullscreenchange;\n    }\n\n    onfullscreenchange();\n  }\n};\n\nGameUI.prototype.loadAssets = function() {\n  var self = this;\n\n  if(!this.errorOccurred && this.outputType != GameConstants.OutputType.TEXT) {\n    this.imageLoader.load([\"assets/images/snake_4.png\", \"assets/images/snake_3.png\", \"assets/images/snake_2.png\", \"assets/images/snake.png\", \"assets/images/body_4_end.png\", \"assets/images/body_3_end.png\", \"assets/images/body_2_end.png\", \"assets/images/body_end.png\", \"assets/images/body_2.png\", \"assets/images/body.png\", \"assets/images/wall.png\", \"assets/images/fruit.png\", \"assets/images/body_angle_1.png\", \"assets/images/body_angle_2.png\", \"assets/images/body_angle_3.png\", \"assets/images/body_angle_4.png\", \"assets/images/pause.png\", \"assets/images/fullscreen.png\", \"assets/images/snake_dead_4.png\", \"assets/images/snake_dead_3.png\", \"assets/images/snake_dead_2.png\", \"assets/images/snake_dead.png\", \"assets/images/up.png\", \"assets/images/left.png\", \"assets/images/right.png\", \"assets/images/bottom.png\", \"assets/images/close.png\", \"assets/images/trophy.png\", \"assets/images/clock.png\"], function() {\n      if(self.imageLoader.hasError == true) {\n        self.errorOccurred = true;\n      } else {\n        self.assetsLoaded = true;\n        self.btnFullScreen.loadImage(self.imageLoader);\n        self.btnPause.loadImage(self.imageLoader);\n        self.btnTopArrow.loadImage(self.imageLoader);\n        self.btnBottomArrow.loadImage(self.imageLoader);\n        self.btnLeftArrow.loadImage(self.imageLoader);\n        self.btnRightArrow.loadImage(self.imageLoader);\n        self.start();\n      }\n    }, this);\n  } else if(!this.errorOccurred && this.outputType == GameConstants.OutputType.TEXT) {\n    this.assetsLoaded = true;\n    this.start();\n  }\n};\n\nGameUI.prototype.startDraw = function(renderBlur) {\n  var self = this;\n\n  requestAnimationFrame(function() {\n    if(!self.killed) {\n      if(!document.hasFocus() && !self.paused) {\n        self.controller.pause();\n      }\n  \n      self.draw(renderBlur);\n      self.lastTime = Date.now();\n      self.frame++;\n\n      if(!self.paused) {\n        self.offsetFrame += (Date.now() - self.lastFrameTime);\n        self.lastFrameTime = Date.now();\n      }\n\n      self.startDraw();\n    }\n  });\n}\n\nGameUI.prototype.draw = function(renderBlur) {\n  var self = this;\n  \n  if(this.outputType == GameConstants.OutputType.TEXT && !this.killed) {\n    if(this.grid != null) {\n      this.textarea.style.width = this.grid.width * 16.5 + \"px\";\n      this.textarea.style.height = this.grid.height * 16 + 100 + \"px\";\n    }\n\n    this.textarea.innerHTML = this.toString();\n  } else if(this.outputType == GameConstants.OutputType.GRAPHICAL && !this.killed) {\n    var ctx = this.canvasCtx;\n    var displayBestScore = false;\n    var renderBlur = renderBlur == undefined ? false : renderBlur;\n    this.fontSize = GameConstants.Setting.FONT_SIZE;\n    this.headerHeight = GameConstants.Setting.HEADER_HEIGHT_DEFAULT;\n\n    if(this.canvas.width <= GameConstants.Setting.CANVAS_WIDTH / 1.25) {\n      this.fontSize /= 1.25;\n      this.headerHeight = GameConstants.Setting.HEADER_HEIGHT_DEFAULT / 1.25;\n    } else if(this.canvas.width >= GameConstants.Setting.CANVAS_WIDTH * 1.5) {\n      this.fontSize *= 1.25;\n      this.headerHeight = GameConstants.Setting.HEADER_HEIGHT_DEFAULT * 1.25;\n    }\n\n    this.btnPause.width = this.headerHeight * 0.85;\n    this.btnPause.height = this.btnPause.width;\n    this.btnPause.y = (this.headerHeight / 2) - (this.btnPause.height / 2);\n    this.btnFullScreen.width = this.headerHeight * 0.85;\n    this.btnFullScreen.height = this.btnFullScreen.width;\n    this.btnFullScreen.y = (this.headerHeight / 2) - (this.btnFullScreen.height / 2);\n\n    if(renderBlur) {\n      ctx.filter = \"blur(5px)\";\n    }\n\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    ctx.fillStyle = \"rgba(204, 207, 211, 1)\";\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    ctx.fillStyle = \"#27AE60\";\n    ctx.fillRect(0, 0, this.canvas.width, this.headerHeight);\n    ctx.font = this.fontSize + \"px \" + GameConstants.Setting.FONT_FAMILY;\n    ctx.fillStyle = \"black\";\n\n    this.btnFullScreen.draw(this);\n\n    if(this.enablePause) {\n      this.btnPause.x = this.btnFullScreen.x - this.btnPause.width - 10;\n      this.btnPause.draw(this);\n    }\n\n    if(this.assetsLoaded && !this.errorOccurred) {\n\n      if(this.bestScoreToDisplay != undefined && this.bestScoreToDisplay != null) {\n        displayBestScore = true;\n      }\n\n      this.drawImage(ctx, \"assets/images/fruit.png\", 5, 5, this.headerHeight * 0.85 * (displayBestScore ? 0.5 : 1), this.headerHeight * 0.85 * (displayBestScore ? 0.5 : 1));\n\n      if(this.snakes != null && this.snakes.length <= 1) {\n        this.drawText(ctx, \"× \" + this.snakes[0].score, \"black\", this.headerHeight * 0.43 * (displayBestScore ? 0.75 : 1), GameConstants.Setting.FONT_FAMILY, \"default\", \"default\", this.headerHeight * 0.9 * (displayBestScore ? 0.58 : 1), this.headerHeight * 0.67 * (displayBestScore ? 0.63 : 1));\n      } else {\n        this.drawText(ctx, i18next.t(\"engine.num\") + (this.numFruit != null ? this.numFruit : \"???\"), \"black\", this.headerHeight * 0.43 * (displayBestScore ? 0.75 : 1), GameConstants.Setting.FONT_FAMILY, \"default\", \"default\", this.headerHeight * 0.9 * (displayBestScore ? 0.58 : 1), this.headerHeight * 0.67 * (displayBestScore ? 0.63 : 1));\n      }\n\n      if(displayBestScore) {\n        this.drawImage(ctx, \"assets/images/trophy.png\", 5, 8 + this.headerHeight * 0.425, this.headerHeight * 0.425, this.headerHeight * 0.425);\n        this.drawText(ctx, this.bestScoreToDisplay, \"black\", this.headerHeight * 0.43 * (displayBestScore ? 0.75 : 1), GameConstants.Setting.FONT_FAMILY, \"default\", \"default\", this.headerHeight * 0.9 * (displayBestScore ? 0.58 : 1), this.headerHeight * 0.425 + this.headerHeight * 0.67 * (displayBestScore ? 0.63 : 1));\n      }\n\n      if(this.grid != null && (!this.grid.maze || (this.grid.maze && (!this.paused || this.gameOver || this.gameFinished)))) {\n        var caseHeight = Math.floor((this.canvas.height - this.headerHeight) / this.grid.height);\n        var caseWidth = Math.floor(this.canvas.width / this.grid.width);\n        caseHeight = caseHeight > caseWidth ? caseWidth : caseHeight;\n        caseWidth = caseWidth > caseHeight ? caseHeight : caseWidth;\n\n        var totalWidth = caseWidth * this.grid.width;\n\n        for(var i = 0; i < this.grid.height; i++) {\n          for(var j = 0; j < this.grid.width; j++) {\n            var caseX = Math.floor(j * caseWidth + ((this.canvas.width - totalWidth) / 2));\n            var caseY = this.headerHeight + i * caseHeight;\n\n            if((i % 2 == 0 && j % 2 == 0) || (i % 2 == 1 && j % 2 == 1)) {\n              ctx.fillStyle = \"rgba(127, 140, 141, 0.75)\";\n            } else {\n              ctx.fillStyle = \"rgba(44, 62, 80, 0.75)\";\n            }\n\n            ctx.fillRect(caseX, caseY, caseWidth, caseHeight);\n            this.drawImage(ctx, this.grid.getImageCase(new Position(j, i)), caseX, caseY, caseWidth, caseHeight);\n          }\n        }\n\n        this.drawSnake(ctx, caseWidth, caseHeight, totalWidth, renderBlur);\n      }\n\n      if(this.timerToDisplay != undefined && this.timerToDisplay != null && !isNaN(this.timerToDisplay) && this.timerToDisplay >= 0) {\n        this.drawImage(ctx, \"assets/images/clock.png\", this.headerHeight * 0.24, this.headerHeight + 15, this.headerHeight * 0.64, this.headerHeight * 0.64);\n        this.drawText(ctx, \"\" + GameUtils.secondsFormat(this.timerToDisplay), \"rgba(0, 0, 0, 0.5)\", GameConstants.Setting.FONT_SIZE, GameConstants.Setting.FONT_FAMILY, \"default\", \"default\", this.headerHeight, this.headerHeight + 15 + this.headerHeight * 0.475);\n      }\n    } else if(!this.assetsLoaded && !renderBlur) {\n      var percentLoaded = Math.floor((100 * Object.keys(this.imageLoader.images).length) / this.imageLoader.nbImagesToLoad);\n      this.drawMenu(ctx, [], i18next.t(\"engine.loading\") + \"\\n\" + percentLoaded + \"%\", \"white\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, true);\n    }\n\n    if(this.notificationMessage != undefined && this.notificationMessage != null && this.notificationMessage instanceof NotificationMessage && !this.notificationMessage.foreGround) {\n      this.notificationMessage.draw(this);\n    }\n\n    if(this.snakes != null) {\n      for(var i = 0; i < this.snakes.length; i++) {\n        if(this.snakes[i].player == GameConstants.PlayerType.HUMAN || this.snakes[i].player == GameConstants.PlayerType.HYBRID_HUMAN_AI) {\n          this.btnTopArrow.draw(this);\n          this.btnBottomArrow.draw(this);\n          this.btnRightArrow.draw(this);\n          this.btnLeftArrow.draw(this);\n          break;\n        }\n      }\n    }\n\n    this.disableAllButtons();\n\n    if(!renderBlur) {\n      if(this.exited) {\n        this.drawMenu(ctx, this.fullscreen ? [this.btnExitFullScreen] : [], i18next.t(\"engine.exited\"), \"white\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, true, function() {\n          self.btnExitFullScreen.addClickAction(self.canvas, function() {\n            self.toggleFullscreen();\n          });\n        });\n      } else if(this.errorOccurred) {\n       this.drawMenu(ctx, [this.btnQuit], this.imageLoader.hasError ? i18next.t(\"engine.errorLoading\") : i18next.t(\"engine.error\"), \"#E74C3C\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, true, function() {\n         self.btnQuit.addClickAction(self.canvas, function() {\n           self.confirmExit = false;\n           self.selectedButton = 0;\n           self.exit();\n         });\n       });\n     } else if(this.getInfosGame) {\n        this.drawMenu(ctx, [this.btnOK], (this.snakes != null && this.snakes.length <= 1 ? i18next.t(\"engine.player\") + \" \" + (((this.snakes != null && this.snakes[0].player == GameConstants.PlayerType.HUMAN) || (this.snakes != null && this.snakes[0].player == GameConstants.PlayerType.HYBRID_HUMAN_AI)) ? i18next.t(\"engine.playerHuman\") : i18next.t(\"engine.playerAI\")) : \"\") + (this.getNBPlayer(GameConstants.PlayerType.AI) > 0 ? \"\\n\" +  i18next.t(\"engine.aiLevel\") + \" \" + this.getPlayer(1, GameConstants.PlayerType.AI).getAILevelText() : \"\") + \"\\n\" + i18next.t(\"engine.sizeGrid\") + \" \" + (this.grid != null && this.grid.width ? this.grid.width : \"???\") + \"×\" + (this.grid != null && this.grid.height ? this.grid.height : \"???\") + \"\\n\" + i18next.t(\"engine.currentSpeed\") + \" \" + (this.initialSpeed != null ? this.initialSpeed : \"???\") + (this.snakes != null && this.snakes.length <= 1 && this.progressiveSpeed ? \"\\n\" + i18next.t(\"engine.progressiveSpeed\") : \"\") + (this.grid != null && !this.grid.maze && this.snakes != null && this.snakes[0].player == GameConstants.PlayerType.HYBRID_HUMAN_AI ? \"\\n\" + i18next.t(\"engine.assistAI\") : \"\") + (this.grid != null && this.grid.maze ? \"\\n\" + i18next.t(\"engine.mazeModeMin\") : \"\"), \"white\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, false, function() {\n          self.btnOK.addClickAction(self.canvas, function() {\n            self.getInfosGame = false;\n            self.selectedButton = 0;\n          });\n        });\n      }  else if(this.getInfos) {\n        this.drawMenu(ctx, [this.btnInfosGame, this.btnOK], i18next.t(\"engine.aboutScreen.title\") + \"\\nwww.eliastiksofts.com\\n\\n\" + i18next.t(\"engine.aboutScreen.versionAndDate\", { version: GameConstants.Setting.APP_VERSION, date: new Intl.DateTimeFormat(i18next.language).format(new Date(GameConstants.Setting.DATE_VERSION)), interpolation: { escapeValue: false } }), \"white\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, false, function() {\n          self.btnInfosGame.addClickAction(self.canvas, function() {\n            self.getInfosGame = true;\n            self.selectedButton = 0;\n          });\n\n          self.btnOK.addClickAction(self.canvas, function() {\n            self.getInfos = false;\n            self.selectedButton = 0;\n          });\n        });\n      } else if(this.confirmExit) {\n        this.drawMenu(ctx, [this.btnNo, this.btnYes], i18next.t(\"engine.exitConfirm\"), \"#E74C3C\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, true, function() {\n          self.btnYes.addClickAction(self.canvas, function() {\n            self.confirmExit = false;\n            self.selectedButton = 0;\n            self.exit();\n          });\n\n          self.btnNo.addClickAction(self.canvas, function() {\n            self.confirmExit = false;\n            self.selectedButton = 0;\n          });\n        });\n      } else if(this.assetsLoaded && this.searchingPlayers) {\n        if(this.lastTime > 0) this.timeStart -= Math.max(0, Date.now() - this.lastTime);\n        this.drawMenu(ctx, [this.btnQuit], i18next.t(\"engine.servers.waitingPlayers\") + \"\\n\" + this.playerNumber + \"/\" + this.maxPlayers + (this.timeStart > 0 ? (\"\\n\" + i18next.t(\"engine.servers.gameStart\") + \" \" + GameUtils.millisecondsFormat(this.timeStart)) : \"\"), \"white\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, true, function() {\n          self.btnQuit.addClickAction(self.canvas, function() {\n            self.confirmExit = true;\n          });\n        });\n      } else if(this.assetsLoaded && this.countBeforePlay >= 0) {\n        if(this.snakes != null && ((this.snakes.length > 1 && this.getNBPlayer(GameConstants.PlayerType.HUMAN) <= 1 && this.getPlayer(1, GameConstants.PlayerType.HUMAN) != null) || (this.snakes.length > 1 && this.getNBPlayer(GameConstants.PlayerType.HYBRID_HUMAN_AI) <= 1 && this.getPlayer(1, GameConstants.PlayerType.HYBRID_HUMAN_AI) != null) || this.currentPlayer != null)) {\n          if(this.currentPlayer != null) {\n            var playerHuman = this.getPlayer(this.currentPlayer, GameConstants.PlayerType.HUMAN);\n          } else if(this.getPlayer(1, GameConstants.PlayerType.HUMAN) != null) {\n            var playerHuman = this.getPlayer(1, GameConstants.PlayerType.HUMAN);\n          } else {\n            var playerHuman = this.getPlayer(1, GameConstants.PlayerType.HYBRID_HUMAN_AI);\n          }\n\n          if(playerHuman != null) {\n            var colorName = GameUtils.hslToName(GameUtils.addHue(GameConstants.Setting.IMAGE_SNAKE_HUE, playerHuman.color), GameConstants.Setting.IMAGE_SNAKE_SATURATION, GameConstants.Setting.IMAGE_SNAKE_VALUE);\n            var colorRgb = GameUtils.hsvToRgb(GameUtils.addHue(GameConstants.Setting.IMAGE_SNAKE_HUE, playerHuman.color) / 360, GameConstants.Setting.IMAGE_SNAKE_SATURATION / 100, GameConstants.Setting.IMAGE_SNAKE_VALUE / 100);\n          }\n\n          if(this.countBeforePlay > 0) {\n            this.drawMenu(ctx, !this.fullscreen ? [this.btnEnterFullScreen] : [], \"\" + this.countBeforePlay + (playerHuman != null ? (\"\\n\" + (GameUtils.isFilterHueAvailable() ? i18next.t(\"engine.colorPlayer\", { color: colorName }) : i18next.t(\"engine.arrowPlayer\"))) : \"\"), (GameUtils.isFilterHueAvailable() ? [\"white\", \"rgb(\" + colorRgb[0] + \", \" + colorRgb[1] + \", \" + colorRgb[2] + \")\"] : [\"white\", \"#3498db\"]), this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, false, function() {\n              self.btnEnterFullScreen.addClickAction(self.canvas, function() {\n                self.toggleFullscreen();\n              });\n            });\n          } else {\n            this.drawMenu(ctx, !this.fullscreen ? [this.btnEnterFullScreen] : [], i18next.t(\"engine.ready\") + (playerHuman != null ? (\"\\n\" + (GameUtils.isFilterHueAvailable() ? i18next.t(\"engine.colorPlayer\", { color: colorName }) : i18next.t(\"engine.arrowPlayer\"))) : \"\"), (GameUtils.isFilterHueAvailable() ? [\"white\", \"rgb(\" + colorRgb[0] + \", \" + colorRgb[1] + \", \" + colorRgb[2] + \")\"] : [\"white\", \"#3498db\"]), this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, false, function() {\n              self.btnEnterFullScreen.addClickAction(self.canvas, function() {\n                self.toggleFullscreen();\n              });\n            }, true);\n          }\n        } else {\n          if(this.countBeforePlay > 0) {\n            this.drawMenu(ctx, !this.fullscreen ? [this.btnEnterFullScreen] : [], \"\" + this.countBeforePlay, \"white\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, false, function() {\n              self.btnEnterFullScreen.addClickAction(self.canvas, function() {\n                self.toggleFullscreen();\n              });\n            });\n          } else {\n            this.drawMenu(ctx, !this.fullscreen ? [this.btnEnterFullScreen] : [], i18next.t(\"engine.ready\"), \"white\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, false, function() {\n              self.btnEnterFullScreen.addClickAction(self.canvas, function() {\n                self.toggleFullscreen();\n              });\n            }, true);\n          }\n        }\n      } else if(this.confirmReset && !this.gameOver) {\n        this.drawMenu(ctx, [this.btnNo, this.btnYes], i18next.t(\"engine.resetConfirm\"), \"#E74C3C\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, true, function() {\n          self.btnYes.addClickAction(self.canvas, function() {\n            self.confirmReset = false;\n            self.selectedButton = 0;\n            self.reset();\n          });\n\n          self.btnNo.addClickAction(self.canvas, function() {\n            self.confirmReset = false;\n            self.selectedButton = 0;\n          });\n        });\n      } else if(this.gameFinished) {\n        this.drawMenu(ctx, this.enableRetry ? [this.btnRetry, this.btnQuit] : [this.btnQuit], (this.grid.maze && this.gameMazeWin) ? i18next.t(\"engine.mazeWin\") : i18next.t(\"engine.gameFinished\"), (this.grid.maze && this.gameMazeWin) ? \"#2ecc71\" : \"white\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, true, function() {\n          self.btnRetry.addClickAction(self.canvas, function() {\n            self.selectedButton = 0;\n            self.reset();\n          });\n\n          self.btnQuit.addClickAction(self.canvas, function() {\n            self.confirmExit = true;\n            self.selectedButton = 0;\n          });\n        });\n      } else if(this.scoreMax && this.snakes.length <= 1) {\n        this.drawMenu(ctx, this.enableRetry ? [this.btnRetry, this.btnQuit] : (this.fullscreen ? [this.btnExitFullScreen] : []), i18next.t(\"engine.scoreMax\"), \"#2ecc71\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, true, function() {\n          self.btnRetry.addClickAction(self.canvas, function() {\n            self.selectedButton = 0;\n            self.reset();\n          });\n\n          self.btnQuit.addClickAction(self.canvas, function() {\n            self.confirmExit = true;\n            self.selectedButton = 0;\n          });\n\n          self.btnExitFullScreen.addClickAction(self.canvas, function() {\n            self.toggleFullscreen();\n          });\n        });\n      } else if(this.gameOver && this.snakes.length <= 1) {\n        this.drawMenu(ctx, this.enableRetry && !this.snakes[0].autoRetry ? [this.btnRetry, this.btnQuit] : (this.fullscreen ? [this.btnExitFullScreen] : []), i18next.t(\"engine.gameOver\"), \"#E74C3C\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, false, function() {\n          if(self.snakes[0].autoRetry && self.timeoutAutoRetry == null) {\n            self.timeoutAutoRetry = setTimeout(function() {\n              self.selectedButton = 0;\n              self.reset();\n              self.timeoutAutoRetry = null;\n            }, 500);\n          } else {\n            self.btnRetry.addClickAction(self.canvas, function() {\n              self.selectedButton = 0;\n              self.reset();\n            });\n\n            self.btnQuit.addClickAction(self.canvas, function() {\n              self.confirmExit = true;\n              self.selectedButton = 0;\n            });\n\n            self.btnExitFullScreen.addClickAction(self.canvas, function() {\n              self.toggleFullscreen();\n            });\n          }\n        });\n      } else if(this.paused && !this.gameOver && this.assetsLoaded) {\n        this.drawMenu(ctx, this.enablePause ? (this.enableRetry ? [this.btnContinue, this.btnRetry, this.btnAbout, this.btnQuit] : [this.btnContinue, this.btnAbout, this.btnQuit]) : [this.btnContinue, this.btnAbout], i18next.t(\"engine.pause\"), \"white\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"center\", null, false, function() {\n          self.btnContinue.addClickAction(self.canvas, function() {\n            self.selectedButton = 0;\n            self.start();\n          });\n\n          self.btnRetry.addClickAction(self.canvas, function() {\n            self.confirmReset = true;\n            self.selectedButton = 0;\n          });\n\n          self.btnQuit.addClickAction(self.canvas, function() {\n            self.confirmExit = true;\n            self.selectedButton = 0;\n          });\n\n          self.btnAbout.addClickAction(self.canvas, function() {\n            self.getInfos = true;\n            self.selectedButton = 0;\n          });\n        });\n      } else if(this.assetsLoaded) {\n        this.btnFullScreen.enable();\n\n        if(this.snakes != null) {\n          for(var i = 0; i < this.snakes.length; i++) {\n            if(this.snakes[i].player == GameConstants.PlayerType.HUMAN || this.snakes[i].player == GameConstants.PlayerType.HYBRID_HUMAN_AI) {\n              this.btnTopArrow.enable();\n              this.btnBottomArrow.enable();\n              this.btnLeftArrow.enable();\n              this.btnRightArrow.enable();\n              break;\n            }\n          }\n        }\n\n        if(this.enablePause) {\n          this.btnPause.enable();\n        }\n\n        if(this.notificationMessage != undefined && this.notificationMessage != null && this.notificationMessage instanceof NotificationMessage && !this.notificationMessage.foreGround) {\n          this.notificationMessage.enableCloseButton();\n        }\n\n        if(this.notificationMessage != undefined && this.notificationMessage != null && this.notificationMessage instanceof NotificationMessage && this.notificationMessage.foreGround) {\n          this.notificationMessage.draw(this);\n        }\n      }\n    }\n\n    if(this.displayFPS) {\n      this.drawText(ctx, this.getDebugText(), \"rgba(255, 255, 255, 0.5)\", this.fontSize / 1.5, GameConstants.Setting.FONT_FAMILY, \"right\", \"bottom\", null, null, true);\n    }\n\n    if(this.spectatorMode) {\n      this.drawText(ctx, i18next.t(\"engine.servers.spectatorMode\"), \"rgba(255, 255, 255, 0.5)\", this.fontSize, GameConstants.Setting.FONT_FAMILY, \"left\", \"bottom\", null, null, true);\n    }\n\n    if(renderBlur) {\n      ctx.filter = \"none\";\n    }\n  }\n};\n\nGameUI.prototype.setDisplayFPS = function(display) {\n  this.displayFPS = display;\n};\n\nGameUI.prototype.disableAllButtons = function() {\n  if(this.outputType == GameConstants.OutputType.GRAPHICAL) {\n    this.btnContinue.disable();\n    this.btnRetry.disable();\n    this.btnQuit.disable();\n    this.btnYes.disable();\n    this.btnNo.disable();\n    this.btnOK.disable();\n    this.btnOK.disable();\n    this.btnAbout.disable();\n    this.btnInfosGame.disable();\n    this.btnFullScreen.disable();\n    this.btnPause.disable();\n    this.btnExitFullScreen.disable();\n    this.btnEnterFullScreen.disable();\n\n    if(this.notificationMessage != undefined && this.notificationMessage != null && this.notificationMessage instanceof NotificationMessage && !this.notificationMessage.foreGround) {\n      this.notificationMessage.disableCloseButton();\n    }\n\n    this.btnTopArrow.disable();\n    this.btnBottomArrow.disable();\n    this.btnRightArrow.disable();\n    this.btnLeftArrow.disable();\n  }\n};\n\nGameUI.prototype.setNotification = function(notification) {\n  if(this.notificationMessage != undefined && this.notificationMessage != null && this.notificationMessage instanceof NotificationMessage) {\n    this.notificationMessage.close();\n  }\n\n  this.notificationMessage = notification;\n\n  if(this.notificationMessage instanceof NotificationMessage && this.disableAnimation) {\n    this.notificationMessage.disableAnimation = true;\n  }\n};\n\nGameUI.prototype.setTimeToDisplay = function(time) {\n  this.timerToDisplay = time;\n};\n\nGameUI.prototype.setBestScore = function(score) {\n  if(score != undefined && score != null && score.trim() != \"\") {\n    this.bestScoreToDisplay = score;\n  }\n};\n\nGameUI.prototype.getDebugText = function() {\n  return i18next.t(\"engine.debug.fps\") + \" : \" + this.currentFPS + \" / \" + i18next.t(\"engine.debug.frames\") + \" : \" + this.frame + \" / \" + i18next.t(\"engine.debug.ticks\") + \" : \" + this.ticks + \" / \" + i18next.t(\"engine.debug.speed\") + \" : \" + this.speed;\n};\n\nGameUI.prototype.toString = function() {\n  return (this.grid != null ? this.grid.toString() : \"\") + \"\\n\" + (this.snakes != null && this.snakes.length <= 1 ? i18next.t(\"engine.score\") + \" : \" + (this.snakes != null ? this.snakes[0].score : \"\") : \"\") + (this.displayFPS ? \"\\n\" + this.getDebugText() : \"\") + (this.gameOver && !this.scoreMax ? \"\\n\" + i18next.t(\"engine.gameOver\") : \"\") + (this.scoreMax ? \"\\n\" + i18next.t(\"engine.scoreMax\") : \"\") + (!this.gameOver && this.paused ? \"\\n\" + i18next.t(\"engine.debug.paused\") : \"\") + (this.countBeforePlay > 0 ? \"\\n\" + this.countBeforePlay : \"\");\n};\n\nGameUI.prototype.preRenderFont = function(cars, size, color, fontFamily) {\n  cars.push(\"?\"); cars.push(\" \"); cars.push(\"A\");\n\n  for(var i = 0; i < cars.length; i++) {\n    var canvasTmp = document.createElement(\"canvas\");\n    var ctxTmp = canvasTmp.getContext(\"2d\");\n    ctxTmp.font = size + \"px \" + fontFamily;\n    var width = ctxTmp.measureText(cars[i]).width;\n\n    canvasTmp.width = width;\n    canvasTmp.height = size + (size / 6);\n\n    ctxTmp.font = size + \"px \" + fontFamily;\n    ctxTmp.fillStyle = color;\n    ctxTmp.textBaseline = \"top\";\n    ctxTmp.fillText(cars[i], 0, 0);\n\n    this.preRenderedFont[cars[i]] = canvasTmp;\n  }\n};\n\nGameUI.prototype.drawImage = function(ctx, imgSrc, x, y, width, height, sx, sy, sWidth, sHeight, eraseBelow, degrees) {\n  this.drawImageWrapper(ctx, this.imageLoader.get(imgSrc), x, y, width, height, sx, sy, sWidth, sHeight, eraseBelow, degrees);\n};\n\nGameUI.prototype.drawImageData = function(ctx, imageData, x, y, width, height, sx, sy, sWidth, sHeight, eraseBelow, degrees) {\n  this.drawImageWrapper(ctx, imageData, x, y, width, height, sx, sy, sWidth, sHeight, eraseBelow, degrees);\n};\n\nGameUI.prototype.drawImageWrapper = function(ctx, image, x, y, width, height, sx, sy, sWidth, sHeight, eraseBelow, degrees) {\n  var x = (x == undefined || isNaN(x)) ? null : Math.round(x);\n  var y = (y == undefined || isNaN(y)) ? null : Math.round(y);\n  var width = (width == undefined || isNaN(width)) ? null : Math.round(width);\n  var height = (height == undefined || isNaN(height)) ? null : Math.round(height);\n  var sx = (sx == undefined || isNaN(sx)) ? null : Math.round(sx);\n  var sy = (sy == undefined || isNaN(sy)) ? null : Math.round(sy);\n  var sWidth = (sWidth == undefined || isNaN(sWidth)) ? null : Math.round(sWidth);\n  var sHeight = (sHeight == undefined || isNaN(sHeight)) ? null : Math.round(sHeight);\n  var eraseBelow = eraseBelow == undefined ? false : eraseBelow;\n  var degrees = (degrees == undefined || isNaN(degrees)) ? null : degrees;\n\n  if(degrees != undefined) {\n    ctx.save();\n    ctx.translate(x + width / 2, y + height / 2);\n    ctx.rotate(degrees * Math.PI / 180);\n    x = -(width / 2);\n    y = -(height / 2);\n  }\n\n  if(eraseBelow) {\n    ctx.clearRect(x, y, width, height);\n  }\n\n  if(ctx != undefined && image != undefined) {\n    if(sx != undefined && sy != undefined && sWidth != undefined && sHeight != undefined) {\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if(degrees != undefined) {\n    ctx.restore();\n  }\n};\n\nGameUI.prototype.drawText = function(ctx, text, color, size, fontFamily, alignement, verticalAlignement, x, y, wrap, bold) {\n  var precFillStyle = ctx.fillStyle;\n  var precFont = ctx.font;\n  var precFilter = ctx.filter;\n\n  if(!Array.isArray(color)) {\n    ctx.fillStyle = color;\n  }\n\n  ctx.font = (bold ? \"bold \" : \"\") + size + \"px \" + fontFamily;\n  ctx.filter = \"none\";\n\n  if(wrap) {\n    text = this.wrapTextLines(ctx, text)[\"text\"];\n  }\n\n  var lines = text.split('\\n');\n\n  if(verticalAlignement == \"center\") {\n    y = (this.canvas.height / 2) - (size * lines.length / 2);\n  } else if(verticalAlignement == \"top\") {\n    y = 5;\n  } else if(verticalAlignement == \"bottom\") {\n    y = (this.canvas.height) - (size * lines.length) / 2 - size / 5;\n  }\n\n  for(var i = 0; i < lines.length; i++) {\n    var currentText = lines[i];\n\n    if(Array.isArray(color)) {\n      var colorIndex = i;\n\n      if(colorIndex > color.length - 1) {\n        colorIndex = color.length - 1;\n      }\n\n      ctx.fillStyle = color[colorIndex];\n    }\n\n    if(alignement == \"center\") {\n      ctx.fillText(currentText, Math.round((this.canvas.width / 2) - (ctx.measureText(currentText).width / 2)), Math.round(y + (size * i)));\n    } else if(alignement == \"right\") {\n      ctx.fillText(currentText, Math.round((this.canvas.width) - (ctx.measureText(currentText).width) - 15), Math.round(y + (size * i)));\n    } else if(alignement == \"left\") {\n      ctx.fillText(currentText, 5, Math.round(y + (size * i)));\n    } else {\n      ctx.fillText(currentText, Math.round(x), Math.round(y + (size * i)));\n    }\n  }\n\n  ctx.fillStyle = precFillStyle;\n  ctx.font = precFont;\n  ctx.filter = precFilter;\n\n  return {\n    x: x,\n    y: y,\n    height: size * lines.length\n  };\n};\n\nGameUI.prototype.drawTextBitmap = function(ctx, bitmapFontSet, text, size, x, y, wrap) {\n  if(bitmapFontSet == undefined || bitmapFontSet == null) {\n    this.preRenderedFont = {};\n    this.preRenderFont(GameConstants.Setting.CARS_TO_PRERENDER, GameConstants.Setting.FONT_SIZE * 2, \"white\", GameConstants.Setting.FONT_FAMILY);\n    bitmapFontSet = this.preRenderedFont;\n  }\n\n  if(wrap) {\n    var testCar = bitmapFontSet[\"A\"];\n    text = this.wrapTextLines(ctx, text, testCar.width * (size / testCar.height), size)[\"text\"];\n  }\n\n  var lines = text.split('\\n');\n  var currentY = y;\n\n  for(var i = 0; i < lines.length; i++) {\n    var currentText = lines[i];\n    var currentX = x;\n\n    for(var j = 0; j < currentText.length; j++) {\n      var currentCar = currentText.charAt(j);\n\n      if(bitmapFontSet[currentCar] == undefined || bitmapFontSet[currentCar] == null) {\n        var currentCarBitmap = bitmapFontSet[\"?\"];\n      } else {\n        var currentCarBitmap = bitmapFontSet[currentCar];\n      }\n\n      var widthBitmap = currentCarBitmap.width * (size / currentCarBitmap.height);\n      this.drawImageData(ctx, currentCarBitmap, currentX, currentY, widthBitmap, size, 0, 0, currentCarBitmap.width, currentCarBitmap.height);\n      currentX += widthBitmap;\n    }\n\n    if(currentText.length > 0) {\n      currentY += size;\n    }\n  }\n};\n\nGameUI.prototype.wrapText = function(text, limit) {\n  if(text.length > limit) {\n    var p = limit;\n\n    for(; p > 0 && text[p] != \" \"; p--);\n\n    if(p > 0) {\n      var left = text.substring(0, p);\n      var right = text.substring(p + 1);\n      return left + \"\\n\" + this.wrapText(right, limit);\n    }\n  }\n\n  return text;\n};\n\nGameUI.prototype.wrapTextLines = function(ctx, text, width, fontSize) {\n  var lines = text.split(\"\\n\");\n  var newText = \"\";\n  var widthCar = width || ctx.measureText(\"A\").width;\n  var nbCarLine = Math.round(this.canvas.width / widthCar);\n  var heightTotal = 0;\n\n  for(var i = 0; i < lines.length; i++) {\n    var lineWrap = this.wrapText(lines[i], nbCarLine);\n    newText += lineWrap;\n\n    if(i < lines.length - 1) {\n      newText += \"\\n\";\n    }\n\n    for(var j = 0; j < lineWrap.split(\"\\n\").length; j++) {\n      heightTotal += parseFloat(fontSize);\n    }\n  }\n\n  return {\n    text: newText,\n    height: heightTotal\n  };\n};\n\nGameUI.prototype.drawMenu = function(ctx, buttons, text, color, size, fontFamily, alignement, x, wrap, func) {\n  var self = this;\n  \n  ctx.fillStyle = \"rgba(44, 62, 80, 0.75)\";\n  ctx.fillRect(0, 0, self.canvas.width, self.canvas.height);\n\n  var heightText = self.wrapTextLines(ctx, text, null, size)[\"height\"];\n  var heightButtons = 0;\n\n  if(buttons != null) {\n    if(self.lastKeyMenu == GameConstants.Key.UP) {\n      self.selectedButton--;\n    } else if(self.lastKeyMenu == GameConstants.Key.BOTTOM) {\n      self.selectedButton++;\n    }\n\n    if(self.selectedButton >= buttons.length) {\n      self.selectedButton = 0;\n    } else if(self.selectedButton < 0) {\n      self.selectedButton = buttons.length - 1;\n    }\n\n    for(var i = 0; i < buttons.length; i++) {\n      if(buttons[i].autoHeight) {\n        heightButtons += self.wrapTextLines(ctx, buttons[i].text, null, buttons[i].getFontSize(ctx))[\"height\"] + 8;\n      } else {\n        heightButtons += buttons[i].height + 5;\n      }\n    }\n  }\n\n  var totalHeight = heightText + heightButtons;\n  var startY = self.canvas.height / 2 - totalHeight / 2 + 16;\n  var currentY = startY + heightText;\n\n  self.drawText(ctx, text, color, size, fontFamily, alignement, \"default\", x, startY, true);\n\n  var buttonEntered = false;\n\n  if(buttons != null) {\n    for(var i = 0; i < buttons.length; i++) {\n      buttons[i].y = currentY;\n\n      if(self.selectedButton == i) {\n        buttons[i].selected = true;\n      } else {\n        buttons[i].selected = false;\n      }\n\n      buttons[i].enable();\n      buttons[i].draw(self);\n\n      if(self.selectedButton == i && self.lastKeyMenu == GameConstants.Key.ENTER && buttons[i].triggerClick != null && !buttons[i].disabled) {\n        buttonEntered = true;\n        buttons[i].triggerClick();\n        break;\n      }\n\n      currentY += buttons[i].height + 8;\n    }\n  }\n\n  if(self.notificationMessage != undefined && self.notificationMessage != null && self.notificationMessage instanceof NotificationMessage && self.notificationMessage.foreGround && !buttonEntered) {\n    self.notificationMessage.draw(self);\n  }\n\n  if(func != null) {\n    func(true);\n  }\n\n  self.lastKeyMenu = -1;\n};\n\nGameUI.prototype.drawSnake = function(ctx, caseWidth, caseHeight, totalWidth, blur) {\n  var canvasTmp = document.createElement(\"canvas\");\n  canvasTmp.width = this.canvas.width;\n  canvasTmp.height = this.canvas.height;\n  var ctxTmp = canvasTmp.getContext(\"2d\");\n\n  if(this.snakes != null) {\n    for(var j = 0; j < this.snakes.length; j++) {\n      ctxTmp.clearRect(0, 0, canvasTmp.width, canvasTmp.height);\n\n      if(this.snakes[j].color != undefined) {\n        ctxTmp.filter = \"hue-rotate(\" + this.snakes[j].color + \"deg)\";\n      }\n\n      if(blur) {\n        ctxTmp.filter = ctxTmp.filter + \" blur(5px)\";\n      }\n\n      for(var i = this.snakes[j].length() - 1; (i >= -1 && this.snakes[j].length() > 1) || i >= 0; i--) { // -1 == tail\n        if(i == -1) {\n          var position = this.snakes[j].get(this.snakes[j].length() - 1);\n        } else {\n          var position = this.snakes[j].get(i);\n        }\n\n        var caseX = 0;\n        var caseY = 0;\n        var direction = position.direction;\n        var angle = 0;\n        var imageLoc = \"\";\n        var eraseBelow = true;\n\n        if(i == 0) {\n          direction = this.snakes[j].getHeadPosition().direction;\n        } else if(i == -1) {\n          if(!this.disableAnimation && !this.snakes[j].gameOver && !this.snakes[j].scoreMax && !this.gameFinished && this.snakes[j].lastTailMoved) {\n            direction = this.snakes[j].getTailPosition().direction;\n          } else {\n            direction = this.snakes[j].get(this.snakes[j].length() - 2).direction;\n          }\n        } else {\n          direction = this.snakes[j].getGraphicDirection(i);\n        }\n\n        // Animation\n        if(!this.disableAnimation && (i == 0 || (i == -1 && this.snakes[j].lastTailMoved)) && !this.snakes[j].gameOver && !this.snakes[j].scoreMax && !this.gameFinished) {\n          var offset = this.offsetFrame / (this.speed * GameConstants.Setting.TIME_MULTIPLIER); // percentage of the animation\n          var offset = (offset > 1 ? 1 : offset);\n          var offsetX = (caseWidth * offset) - caseWidth;\n          var offsetY = (caseHeight * offset) - caseHeight;\n\n          var currentPosition = position;\n\n          if(i == 0) {\n            if(this.snakes[j].length() > 1) {\n              var graphicDirection = this.snakes[j].getGraphicDirection(1);\n            } else {\n              var graphicDirection = this.snakes[j].getGraphicDirection(0);\n            }\n          } else if(i == -1) {\n            var graphicDirection = this.snakes[j].getGraphicDirectionFor(this.snakes[j].getTailPosition(), this.snakes[j].lastTail, this.snakes[j].get(this.snakes[j].length() - 2));\n          }\n\n          if(i == -1 && this.snakes[j].length() > 1) {\n            currentPosition = this.snakes[j].get(this.snakes[j].length() - 1);\n          }\n\n          if((i == 0 || i == -1) && (graphicDirection == GameConstants.Direction.ANGLE_1 || graphicDirection == GameConstants.Direction.ANGLE_2 || graphicDirection == GameConstants.Direction.ANGLE_3 || graphicDirection == GameConstants.Direction.ANGLE_4)) {\n            if(i == 0) {\n              angle = -90;\n            }\n\n            if(i == 0) {\n              angle += -128.073 * Math.pow(offset, 2) + 222.332 * offset - 5.47066;\n            } else if(i == -1) {\n              angle += 126.896 * Math.pow(offset, 2) + -33.6471 * offset + 1.65942;\n            }\n\n            if(i == 0 && ((graphicDirection == GameConstants.Direction.ANGLE_4 && direction == GameConstants.Direction.UP) || (graphicDirection == GameConstants.Direction.ANGLE_1 && direction == GameConstants.Direction.LEFT) || (graphicDirection == GameConstants.Direction.ANGLE_2 && direction == GameConstants.Direction.BOTTOM) || (graphicDirection == GameConstants.Direction.ANGLE_3 && direction == GameConstants.Direction.RIGHT))) {\n              angle = -angle;\n            } else if(i == -1 && ((graphicDirection == GameConstants.Direction.ANGLE_4 && direction == GameConstants.Direction.RIGHT) || (graphicDirection == GameConstants.Direction.ANGLE_3 && direction == GameConstants.Direction.BOTTOM) || (graphicDirection == GameConstants.Direction.ANGLE_1 && direction == GameConstants.Direction.UP) || (graphicDirection == GameConstants.Direction.ANGLE_2 && direction == GameConstants.Direction.LEFT))) {\n              angle = - angle;\n            }\n\n            eraseBelow = false;\n          }\n\n          switch(currentPosition.direction) {\n            case GameConstants.Direction.UP:\n              caseY -= offsetY;\n              break;\n            case GameConstants.Direction.BOTTOM:\n              caseY += offsetY;\n              break;\n            case GameConstants.Direction.RIGHT:\n              caseX += offsetX;\n              break;\n            case GameConstants.Direction.LEFT:\n              caseX -= offsetX;\n              break;\n          }\n        }\n\n        if(i == this.snakes[j].length() - 1) {\n          direction = this.snakes[j].getGraphicDirectionFor(position, this.snakes[j].get(i - 1), this.snakes[j].lastTail);\n        }\n\n        var posX = position.x;\n        var posY = position.y;\n        caseX += Math.floor(posX * caseWidth + ((this.canvas.width - totalWidth) / 2));\n        caseY += this.headerHeight + posY * caseHeight;\n\n        if(i == 0) {\n          if(this.snakes[j].gameOver && !this.snakes[j].scoreMax) {\n            switch(direction) {\n              case GameConstants.Direction.BOTTOM:\n                imageLoc = \"assets/images/snake_dead.png\";\n                break;\n              case GameConstants.Direction.RIGHT:\n                imageLoc = \"assets/images/snake_dead_2.png\";\n                break;\n              case GameConstants.Direction.UP:\n                imageLoc = \"assets/images/snake_dead_3.png\";\n                break;\n              case GameConstants.Direction.LEFT:\n                imageLoc = \"assets/images/snake_dead_4.png\";\n                break;\n            }\n          } else {\n            switch(direction) {\n              case GameConstants.Direction.BOTTOM:\n                imageLoc = \"assets/images/snake.png\";\n                break;\n              case GameConstants.Direction.RIGHT:\n                imageLoc = \"assets/images/snake_2.png\";\n                break;\n              case GameConstants.Direction.UP:\n                imageLoc = \"assets/images/snake_3.png\";\n                break;\n              case GameConstants.Direction.LEFT:\n                imageLoc = \"assets/images/snake_4.png\";\n                break;\n            }\n          }\n        } else if(i == -1) {\n          switch(direction) {\n            case GameConstants.Direction.BOTTOM:\n              imageLoc = \"assets/images/body_end.png\";\n              break;\n            case GameConstants.Direction.RIGHT:\n              imageLoc = \"assets/images/body_2_end.png\";\n              break;\n            case GameConstants.Direction.UP:\n              imageLoc = \"assets/images/body_3_end.png\";\n              break;\n            case GameConstants.Direction.LEFT:\n              imageLoc = \"assets/images/body_4_end.png\";\n              break;\n          }\n        } else {\n          switch(direction) {\n            case GameConstants.Direction.UP:\n              imageLoc = \"assets/images/body.png\";\n              break;\n            case GameConstants.Direction.BOTTOM:\n              imageLoc = \"assets/images/body.png\";\n              break;\n            case GameConstants.Direction.RIGHT:\n              imageLoc = \"assets/images/body_2.png\";\n              break;\n            case GameConstants.Direction.LEFT:\n              imageLoc = \"assets/images/body_2.png\";\n              break;\n            case GameConstants.Direction.ANGLE_1:\n              imageLoc = \"assets/images/body_angle_1.png\";\n              break;\n            case GameConstants.Direction.ANGLE_2:\n              imageLoc = \"assets/images/body_angle_2.png\";\n              break;\n            case GameConstants.Direction.ANGLE_3:\n              imageLoc = \"assets/images/body_angle_3.png\";\n              break;\n            case GameConstants.Direction.ANGLE_4:\n              imageLoc = \"assets/images/body_angle_4.png\";\n              break;\n          }\n        }\n\n        this.drawImage(ctxTmp, imageLoc, caseX, caseY, caseWidth, caseHeight, null, null, null, null, eraseBelow, angle);\n      }\n\n      this.drawImageData(ctx, canvasTmp, Math.floor((this.canvas.width - totalWidth) / 2), this.headerHeight, totalWidth, caseHeight * this.grid.height, Math.floor((this.canvas.width - totalWidth) / 2), this.headerHeight, totalWidth, caseHeight * this.grid.height);\n      ctxTmp.filter = \"none\";\n    }\n\n    if(this.snakes.length > 1) {\n      this.drawSnakeInfos(ctx, totalWidth, caseWidth, caseHeight);\n    }\n  }\n};\n\nGameUI.prototype.drawArrow = function(ctx, fromx, fromy, tox, toy) {\n  var lineCap = ctx.lineCap;\n  var lineWidth = ctx.lineWidth;\n  var strokeStyle = ctx.strokeStyle;\n  var filter = ctx.filter;\n  ctx.lineCap = 'round';\n  ctx.lineWidth = 8;\n  ctx.strokeStyle = \"#FF0000\";\n  ctx.filter = \"\";\n\n  ctx.beginPath();\n  var headlen = 20;\n  var dx = tox - fromx;\n  var dy = toy - fromy;\n  var angle = Math.atan2(dy, dx);\n  ctx.moveTo(fromx, fromy);\n  ctx.lineTo(tox, toy);\n  ctx.moveTo(tox, toy);\n  ctx.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\n  ctx.moveTo(tox, toy);\n  ctx.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\n  ctx.stroke();\n\n  ctx.lineCap = lineCap;\n  ctx.lineWidth = lineWidth;\n  ctx.strokeStyle = strokeStyle;\n  ctx.filter = filter;\n};\n\nGameUI.prototype.drawSnakeInfos = function(ctx, totalWidth, caseWidth, caseHeight) {\n  var numPlayer = 0;\n  var numAI = 0;\n\n  for(var i = 0; i < this.snakes.length; i++) {\n    if(this.snakes[i].player == GameConstants.PlayerType.HUMAN || this.snakes[i].player == GameConstants.PlayerType.HYBRID_HUMAN_AI) {\n      numPlayer++;\n    } else {\n      numAI++;\n    }\n\n    var position = this.snakes[i].get(0);\n\n    if(position != null) {\n      var posX = position.x;\n      var posY = position.y;\n      var caseX = Math.floor(posX * caseWidth + ((this.canvas.width - totalWidth) / 2));\n      var caseY = this.headerHeight + posY * caseHeight;\n  \n      if(!this.disableAnimation && !this.snakes[i].gameOver) {\n        var offset = this.offsetFrame / (this.speed * GameConstants.Setting.TIME_MULTIPLIER);\n        var offset = (offset > 1 ? 1 : offset);\n        var offsetX = (caseWidth * offset) - caseWidth;\n        var offsetY = (caseHeight * offset) - caseHeight;\n  \n        switch(position.direction) {\n          case GameConstants.Direction.UP:\n            caseY -= offsetY;\n            break;\n          case GameConstants.Direction.BOTTOM:\n            caseY += offsetY;\n            break;\n          case GameConstants.Direction.RIGHT:\n            caseX += offsetX;\n            break;\n          case GameConstants.Direction.LEFT:\n            caseX -= offsetX;\n            break;\n        }\n      }\n  \n      this.drawText(ctx, ((this.snakes[i].player == GameConstants.PlayerType.HUMAN || this.snakes[i].player == GameConstants.PlayerType.HYBRID_HUMAN_AI) ? i18next.t(\"engine.playerMin\") + numPlayer : i18next.t(\"engine.aiMin\") + numAI) + \"\\n× \" + this.snakes[i].score, \"rgb(255, 255, 255)\", Math.round(caseHeight / 2), GameConstants.Setting.FONT_FAMILY, null, null, caseX, caseY - Math.round(caseHeight / 1.75), false, true);\n  \n      if((this.currentPlayer == null && (this.snakes[i].player == GameConstants.PlayerType.HUMAN || this.snakes[i].player == GameConstants.PlayerType.HYBRID_HUMAN_AI) || this.currentPlayer == (i + 1)) && this.countBeforePlay >= 0 && (this.currentPlayer != null || (GameUtils.isFilterHueAvailable() && this.snakes.length > 2) || (!GameUtils.isFilterHueAvailable() && this.snakes.length > 1))) {\n        this.drawArrow(ctx, caseX + (caseWidth / 2), caseY - caseHeight * 2, caseX + (caseWidth / 2), caseY - 5);\n      }\n    }\n  }\n};\n\n// Export module\nif(true) {\n  module.exports = GameUI;\n}\n\n//# sourceURL=webpack:///./src/gameUI.js?");

/***/ }),

/***/ "./src/gameUtils.js":
/*!**************************!*\
  !*** ./src/gameUtils.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var i18next = __webpack_require__(/*! ../libs/i18next.min */ \"./libs/i18next.min.js\");\n  var GameUtils = __webpack_require__(/*! ./gameUtils */ \"./src/gameUtils.js\");\n}\n\nvar GameUtils = {\n  randRange: function(min, max) { // Return an integer between min (inclusive) and max (inclusive)\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  },\n  addHue: function(hue, add) {\n    var res = hue + add;\n  \n    if(res > 360) {\n      res = (res - 360);\n    } else if(res < 0) {\n      res = (360 + res);\n    }\n  \n    return res;\n  },\n  hsvToRgb: function(h, s, v) {\n    var r, g, b, i, f, p, q, t;\n  \n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n  \n    switch(i % 6) {\n      case 0: r = v, g = t, b = p; break;\n      case 1: r = q, g = v, b = p; break;\n      case 2: r = p, g = v, b = t; break;\n      case 3: r = p, g = q, b = v; break;\n      case 4: r = t, g = p, b = v; break;\n      case 5: r = v, g = p, b = q; break;\n    }\n  \n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n  },\n  hslToName: function(h, s, l) {\n    if(s <= 10 && l >= 90) {\n      return i18next.t(\"engine.colors.white\");\n    } else if((s <= 10 && l <= 70) || s == 0) {\n      return i18next.t(\"engine.colors.gray\");\n    } else if(l <= 15) {\n      return i18next.t(\"engine.colors.black\");\n    } else if((h >= 0 && h <= 6) || h >= 350) {\n      return i18next.t(\"engine.colors.red\");\n    } else if(h >= 7 && h <= 42) {\n      return i18next.t(\"engine.colors.orange\");\n    } else if(h >= 43 && h <= 70) {\n      return i18next.t(\"engine.colors.yellow\");\n    } else if(h >= 71 && h <= 156) {\n      return i18next.t(\"engine.colors.green\");\n    } else if(h >= 157 && h <= 221) {\n      return i18next.t(\"engine.colors.blue\");\n    } else if(h >= 222 && h <= 290) {\n      return i18next.t(\"engine.colors.purple\");\n    } else if(h >= 291 && h <= 349) {\n      return i18next.t(\"engine.colors.pink\");\n    }\n  },\n  isFilterHueAvailable: function() {\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = 5;\n    canvas.height = 5;\n    var ctx = canvas.getContext(\"2d\");\n  \n    ctx.fillStyle = \"#FF0000\";\n    ctx.filter = \"hue-rotate(90deg)\";\n    ctx.fillRect(0, 0, 5, 5);\n    var color = ctx.getImageData(0, 0, 1, 1).data;\n  \n    if(color[0] == 255 && color[1] == 0 && color[2] == 0) {\n      return false;\n    }\n  \n    return true;\n  },\n  shuffle: function(a) {\n    var j, x;\n    \n    for(var i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      x = a[i];\n      a[i] = a[j];\n      a[j] = x;\n    }\n    \n    return a;\n  },\n  millisecondsFormat: function(milliseconds) {\n    milliseconds /= 1000;\n    return (\"0\" + Math.trunc(milliseconds / 60)).slice(-2) + \":\" + (\"0\" + Math.trunc(milliseconds % 60)).slice(-2);\n  },\n  secondsFormat: function(seconds) {\n    return this.millisecondsFormat(seconds * 1000);\n  }\n};\n\n// Export module\nif(true) {\n  module.exports = GameUtils;\n}\n\n//# sourceURL=webpack:///./src/gameUtils.js?");

/***/ }),

/***/ "./src/grid.js":
/*!*********************!*\
  !*** ./src/grid.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var Lowlight = __webpack_require__(/*! ../libs/lowlight.astar.min */ \"./libs/lowlight.astar.min.js\");\n  var GameUtils = __webpack_require__(/*! ./gameUtils */ \"./src/gameUtils.js\");\n  var GameConstants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n  var Position = __webpack_require__(/*! ./position */ \"./src/position.js\");\n}\n\nfunction Grid(width, height, generateWalls, borderWalls, maze, customGrid, mazeForceAuto) {\n  this.width = width == undefined ? 20 : width;\n  this.height = height == undefined ? 20 : height;\n  this.generateWalls = generateWalls == undefined ? false : generateWalls;\n  this.borderWalls = borderWalls == undefined ? false : borderWalls;\n  this.maze = maze == undefined ? false : maze;\n  this.mazeFirstPosition = new Position(1, 1, GameConstants.Direction.RIGHT);\n  this.mazeForceAuto = mazeForceAuto == undefined ? false : mazeForceAuto;\n  this.grid;\n  this.initialGrid;\n  this.fruitPos;\n\n  this.init(customGrid);\n}\n\nGrid.prototype.init = function(customGrid) {\n  if(customGrid != undefined || this.initialGrid != undefined) {\n    var gridToCopy;\n\n    if(this.initialGrid != undefined) {\n      gridToCopy = this.initialGrid;\n    } else {\n      gridToCopy = customGrid;\n    }\n\n    this.height = gridToCopy.length;\n    this.width = gridToCopy[0].length;\n\n    this.initialGrid = new Array(this.height);\n    this.grid = new Array(this.height);\n\n    for(var i = 0; i < this.height; i++) {\n      this.initialGrid[i] = gridToCopy[i].slice();\n      this.grid[i] = gridToCopy[i].slice();\n    }\n  } else {\n    this.grid = new Array(this.height);\n\n    for(var i = 0; i < this.height; i++) {\n      this.grid[i] = new Array(this.width);\n\n      for(var j = 0; j < this.width; j++) {\n        if((this.borderWalls && (i == 0 || i == this.height - 1 || j == 0 || j == this.width - 1)) || (this.generateWalls && Math.random() > 0.65) || this.maze) {\n          this.grid[i][j] = GameConstants.CaseType.WALL;\n        } else {\n          this.grid[i][j] = GameConstants.CaseType.EMPTY;\n        }\n      }\n    }\n\n    if(this.maze) {\n      this.generateMaze();\n    } else if(this.generateWalls) {\n      this.fixWalls(this.borderWalls);\n    }\n  }\n};\n\nGrid.prototype.fixWalls = function(borderWalls) {\n  if(borderWalls) {\n    var startY = 1; var endY = this.height - 1;\n    var startX = 1; var endX = this.width - 1;\n  } else {\n    var startY = 0; var endY = this.height;\n    var startX = 0; var endX = this.width;\n  }\n\n  for(var i = startY; i < endY; i++) {\n    for(var j = startX; j < endX; j++) {\n      var currentPos = new Position(j, i);\n      var upperCase = this.getNextPosition(currentPos, GameConstants.Direction.UP);\n      var upperLeftCase = this.getNextPosition(upperCase, GameConstants.Direction.LEFT);\n      var upperRightCase = this.getNextPosition(upperCase, GameConstants.Direction.RIGHT);\n      var downCase = this.getNextPosition(currentPos, GameConstants.Direction.BOTTOM);\n      var downLeftCase = this.getNextPosition(downCase, GameConstants.Direction.LEFT);\n      var downRightCase = this.getNextPosition(downCase, GameConstants.Direction.RIGHT);\n\n      if(this.get(upperLeftCase) == GameConstants.CaseType.WALL || this.get(upperRightCase) == GameConstants.CaseType.WALL || this.get(downLeftCase) == GameConstants.CaseType.WALL || this.get(downRightCase) == GameConstants.CaseType.WALL) {\n        this.set(GameConstants.CaseType.EMPTY, currentPos);\n      }\n    }\n  }\n};\n\nGrid.prototype.maze_recursion = function(r, c) {\n  var directions = GameUtils.shuffle([GameConstants.Direction.UP, GameConstants.Direction.RIGHT, GameConstants.Direction.BOTTOM, GameConstants.Direction.LEFT]);\n\n  for(var i = 0; i < directions.length; i++) {\n    switch(directions[i]) {\n      case GameConstants.Direction.UP:\n        if(r - 2 <= 0) continue;\n\n        if(this.get(new Position(c, r - 2)) != GameConstants.CaseType.EMPTY) {\n          this.set(GameConstants.CaseType.EMPTY, new Position(c, r - 2));\n          this.set(GameConstants.CaseType.EMPTY, new Position(c, r - 1));\n          this.maze_recursion(r - 2, c);\n        }\n\n        break;\n      case GameConstants.Direction.RIGHT:\n        if(c + 2 >= this.width - 1) continue;\n\n        if(this.get(new Position(c + 2, r)) != GameConstants.CaseType.EMPTY) {\n          this.set(GameConstants.CaseType.EMPTY, new Position(c + 2, r));\n          this.set(GameConstants.CaseType.EMPTY, new Position(c + 1, r));\n          this.maze_recursion(r, c + 2);\n        }\n\n        break;\n      case GameConstants.Direction.BOTTOM:\n        if(r + 2 >= this.height - 1) continue;\n\n        if(this.get(new Position(c, r + 2)) != GameConstants.CaseType.EMPTY) {\n          this.set(GameConstants.CaseType.EMPTY, new Position(c, r + 2));\n          this.set(GameConstants.CaseType.EMPTY, new Position(c, r + 1));\n          this.maze_recursion(r + 2, c);\n        }\n\n        break;\n      case GameConstants.Direction.LEFT:\n        if(c - 2 <= 0) continue;\n\n        if(this.get(new Position(c - 2, r)) != GameConstants.CaseType.EMPTY) {\n          this.set(GameConstants.CaseType.EMPTY, new Position(c - 2, r));\n          this.set(GameConstants.CaseType.EMPTY, new Position(c - 1, r));\n          this.maze_recursion(r, c - 2);\n        }\n\n        break;\n    }\n  }\n};\n\nGrid.prototype.generateMaze = function() {\n  this.mazeFirstPosition = new Position(1, 1, GameConstants.Direction.RIGHT);\n  this.set(GameConstants.CaseType.EMPTY, this.mazeFirstPosition);\n  this.maze_recursion(1, 1);\n};\n\nGrid.prototype.set = function(value, position) {\n  this.grid[position.y][position.x] = value;\n};\n\nGrid.prototype.get = function(position) {\n  return this.grid[position.y][position.x];\n};\n\nGrid.prototype.valToChar = function(value) {\n  switch(value) {\n    case GameConstants.CaseType.EMPTY:\n      return \"-\";\n    case GameConstants.CaseType.SNAKE:\n      return \"o\";\n    case GameConstants.CaseType.SNAKE_DEAD:\n      return \"O\";\n    case GameConstants.CaseType.FRUIT:\n      return \"x\";\n    case GameConstants.CaseType.WALL:\n      return \"#\";\n    case GameConstants.CaseType.SURROUNDED:\n      return \"/\";\n  }\n};\n\nGrid.prototype.getImageCase = function(position) {\n  var imageRes = \"\";\n\n  switch(this.get(position)) {\n    case GameConstants.CaseType.WALL:\n      imageRes = \"assets/images/wall.png\";\n      break;\n    case GameConstants.CaseType.FRUIT:\n      imageRes = \"assets/images/fruit.png\";\n      break;\n  }\n\n  return imageRes;\n};\n\nGrid.prototype.getGraph = function(ignoreSnakePos) {\n  var res = new Array(this.height);\n\n  for(var i = 0; i < this.height; i++) {\n    res[i] = new Array(this.width);\n\n    for(var j = 0; j < this.width; j++) {\n      var currentPos = new Position(j, i);\n\n      if(ignoreSnakePos && this.get(currentPos) == GameConstants.CaseType.SNAKE) {\n        res[i][j] = 0;\n      } else if(this.isDeadPosition(currentPos)) {\n        res[i][j] = 1;\n      } else {\n        res[i][j] = 0;\n      }\n    }\n  }\n\n  return res;\n};\n\nGrid.prototype.getRandomPosition = function() {\n  return new Position(GameUtils.randRange(0, this.width - 1), GameUtils.randRange(0, this.height - 1));\n};\n\nGrid.prototype.setFruit = function() {\n  var tried = [1];\n\n  if(this.fruitPos != null && this.get(this.fruitPos) == GameConstants.CaseType.FRUIT) {\n    this.set(GameConstants.CaseType.EMPTY, this.fruitPos);\n  }\n\n  if(this.getTotal(GameConstants.CaseType.EMPTY) > 0) {\n    var randomPos = this.getRandomPosition();\n\n    while(this.get(randomPos) != GameConstants.CaseType.EMPTY || this.isFruitSurrounded(randomPos, true) || (this.maze && !this.testFruitMaze(randomPos, tried))) {\n      if(this.getTotal(GameConstants.CaseType.EMPTY) <= 0) {\n        return false;\n      }\n\n      randomPos = this.getRandomPosition();\n    }\n\n    this.fruitPos = randomPos;\n    this.set(GameConstants.CaseType.FRUIT, randomPos);\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\nGrid.prototype.testFruitMaze = function(position, tried) { // Maze mode: avoid putting the fruit too close to the Snake\n  var grid = this.getGraph(true);\n  var graph = new Lowlight.Astar.Configuration(grid, {\n    order: \"yx\",\n    torus: false,\n    diagonals: false,\n    cutting: false,\n    cost(a, b) { return b == 1 ? null : 1 }\n  });\n  var path = graph.path({x: this.mazeFirstPosition.x, y: this.mazeFirstPosition.y}, {x: position.x, y: position.y});\n\n  if(path.length < Math.ceil(this.getTotal(GameConstants.CaseType.EMPTY) / (1 * Math.ceil(tried[0] / 4)))) {\n    tried[0]++;\n    return false;\n  } else {\n    tried[0]++;\n    return true;\n  }\n};\n\nGrid.prototype.isCaseSurrounded = function(position, fill, foundVals, forbiddenVals) {\n  if(position == null || position == undefined) {\n    return false;\n  }\n\n  var fill = fill == undefined ? false : fill;\n\n  var checkList = [position];\n  var complete = [];\n\n  while(checkList.length > 0) {\n    var currentPosition = checkList[0];\n    checkList.shift();\n\n    var directions = [this.getNextPosition(currentPosition, GameConstants.Direction.UP), this.getNextPosition(currentPosition, GameConstants.Direction.BOTTOM), this.getNextPosition(currentPosition, GameConstants.Direction.LEFT), this.getNextPosition(currentPosition, GameConstants.Direction.RIGHT)]; // UP, DOWN, LEFT, RIGHT\n\n    for(var i = 0; i < directions.length; i++) {\n      var alreadyCompleted = false;\n\n      if(directions[i].indexIn(complete) > -1 || directions[i].indexIn(checkList) > -1) {\n        alreadyCompleted = true;\n      }\n\n      if(!alreadyCompleted && (forbiddenVals.indexOf(this.get(directions[i])) > -1)) {\n        checkList.push(directions[i]);\n\n        if(foundVals.indexOf(this.get(directions[i])) > -1) {\n          return false;\n        }\n\n        if(fill && this.get(directions[i]) == GameConstants.CaseType.EMPTY) {\n          this.set(GameConstants.CaseType.SURROUNDED, directions[i]);\n        }\n      }\n    }\n\n    complete.push(currentPosition);\n  }\n\n  if(fill && (this.get(position) == GameConstants.CaseType.EMPTY || this.get(position) == GameConstants.CaseType.FRUIT)) {\n    this.set(GameConstants.CaseType.SURROUNDED, position);\n  }\n\n  return true;\n};\n\nGrid.prototype.isFruitSurrounded = function(position, fill) {\n  var surrounded = this.isCaseSurrounded(position, false, [GameConstants.CaseType.SNAKE], [GameConstants.CaseType.EMPTY, GameConstants.CaseType.SNAKE]);\n\n  if(surrounded && fill) {\n    this.isCaseSurrounded(position, true, [GameConstants.CaseType.SNAKE], [GameConstants.CaseType.EMPTY, GameConstants.CaseType.SNAKE]);\n  }\n\n  return surrounded;\n};\n\nGrid.prototype.getOnLine = function(type, line) {\n  var tot = 0;\n\n  for(var j = 0; j < this.width; j++) {\n    if(this.get(new Position(j, line)) == type) {\n      tot++;\n    }\n  }\n\n  return tot;\n};\n\nGrid.prototype.getTotal = function(type) {\n  var tot = 0;\n\n  for(var i = 0; i < this.height; i++) {\n    tot += this.getOnLine(type, i);\n  }\n\n  return tot;\n};\n\nGrid.prototype.getNextPosition = function(oldPos, newDirection) {\n  var position = new Position(oldPos.x, oldPos.y, newDirection);\n\n  switch(newDirection) {\n    case GameConstants.Direction.LEFT:\n      position.x--;\n      position.direction = GameConstants.Direction.LEFT;\n      break;\n    case GameConstants.Direction.UP:\n      position.y--;\n      position.direction = GameConstants.Direction.UP;\n      break;\n    case GameConstants.Direction.RIGHT:\n      position.x++;\n      position.direction = GameConstants.Direction.RIGHT;\n      break;\n    case GameConstants.Direction.BOTTOM:\n      position.y++;\n      position.direction = GameConstants.Direction.BOTTOM;\n      break;\n    case GameConstants.Key.LEFT:\n      position.x--;\n      position.direction = GameConstants.Key.LEFT;\n      break;\n    case GameConstants.Key.UP:\n      position.y--;\n      position.direction = GameConstants.Key.UP;\n      break;\n    case GameConstants.Key.RIGHT:\n      position.x++;\n      position.direction = GameConstants.Direction.RIGHT;\n      break;\n    case GameConstants.Key.BOTTOM:\n      position.y++;\n      position.direction = GameConstants.Direction.BOTTOM;\n      break;\n  }\n\n  if(position.x < 0) {\n    position.x = this.width - 1;\n  } else if(position.x >= this.width) {\n    position.x = 0;\n  }\n\n  if(position.y < 0) {\n    position.y = this.height - 1;\n  } else if(position.y >= this.height) {\n    position.y = 0;\n  }\n\n  return position;\n};\n\nGrid.prototype.getDirectionTo = function(position, otherPosition) {\n  if(this.getNextPosition(position, GameConstants.Direction.UP).equals(otherPosition)) {\n    return GameConstants.Direction.UP;\n  } else if(this.getNextPosition(position, GameConstants.Direction.BOTTOM).equals(otherPosition)) {\n    return GameConstants.Direction.BOTTOM;\n  } else if(this.getNextPosition(position, GameConstants.Direction.RIGHT).equals(otherPosition)) {\n    return GameConstants.Direction.RIGHT;\n  } else if(this.getNextPosition(position, GameConstants.Direction.LEFT).equals(otherPosition)) {\n    return GameConstants.Direction.LEFT;\n  }\n\n  return -1;\n};\n\nGrid.prototype.isDeadPosition = function(position) {\n  return this.get(position) == GameConstants.CaseType.SNAKE || this.get(position) == GameConstants.CaseType.WALL || this.get(position) == GameConstants.CaseType.SNAKE_DEAD;\n};\n\nGrid.prototype.toString = function() {\n  res = \"\";\n\n  for(var i = 0; i < this.height; i++) {\n    for(var j = 0; j < this.width; j++) {\n      res += this.valToChar(this.get(new Position(j, i))) + \" \";\n    }\n\n    res += \"\\n\";\n  }\n\n  return res;\n};\n\n// Export module\nif(true) {\n  module.exports = Grid;\n}\n\n//# sourceURL=webpack:///./src/grid.js?");

/***/ }),

/***/ "./src/imageLoader.js":
/*!****************************!*\
  !*** ./src/imageLoader.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nfunction ImageLoader() {\n  this.images = {};\n  this.triedLoading = 0;\n  this.hasError = false;\n  this.nbImagesToLoad = 1;\n  this.firstImage = true;\n}\n\nImageLoader.prototype.load = function(img, func, game) {\n  var self = this;\n\n  if(this.firstImage) {\n    this.nbImagesToLoad = img.length;\n    this.firstImage = false;\n  }\n\n  if(img.length > 0) {\n    this.loadImage(img[0], function(result) {\n      if(result == true) {\n        img.shift();\n        self.load(img, func, game);\n      } else {\n        self.hasError = true;\n        return func();\n      }\n    });\n  } else {\n    return func();\n  }\n};\n\nImageLoader.prototype.loadImage = function(src, func) {\n  var self = this;\n  \n  this.triedLoading++;\n\n  var image = new Image();\n  image.src = src;\n\n  image.onload = function() {\n    if(self.images != null) {\n      self.images[src] = image;\n    } else {\n      return func(false);\n    }\n\n    self.triedLoading = 0;\n    return func(true);\n  };\n\n  image.onerror = function() {\n    if(self.triedLoading >= 5) {\n      if(self.images != null) {\n        self.images[src] = image;\n      }\n\n      self.triedLoading = 0;\n      return func(false);\n    }\n\n    setTimeout(function() {\n      self.loadImage(src, func);\n    }, 250);\n  }\n};\n\nImageLoader.prototype.get = function(src) {\n  if(this.images != null) {\n    return this.images[src];\n  } else {\n    return null;\n  }\n};\n\nImageLoader.prototype.clear = function() {\n  this.images = null;\n};\n\n// Export module\nif(true) {\n  module.exports = ImageLoader;\n}\n\n//# sourceURL=webpack:///./src/imageLoader.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\n// Exports engine classes\nmodule.exports = {\n    LocalesInit: __webpack_require__(/*! ../assets/locales/init */ \"./assets/locales/init.js\"),\n    LocalesMenu: __webpack_require__(/*! ../assets/locales/menu */ \"./assets/locales/menu.js\"),\n    LocalesEngine: __webpack_require__(/*! ../assets/locales/engine */ \"./assets/locales/engine.js\"),\n    Main: __webpack_require__(/*! ../main */ \"./main.js\"),\n    GameConstants: __webpack_require__(/*! ./constants */ \"./src/constants.js\"),\n    Event: __webpack_require__(/*! ./event */ \"./src/event.js\"),\n    Reactor: __webpack_require__(/*! ./reactor */ \"./src/reactor.js\"),\n    Grid: __webpack_require__(/*! ./grid */ \"./src/grid.js\"),\n    Snake: __webpack_require__(/*! ./snake */ \"./src/snake.js\"),\n    GameGroup: __webpack_require__(/*! ./gameGroup */ \"./src/gameGroup.js\"),\n    GameUtils: __webpack_require__(/*! ./gameUtils */ \"./src/gameUtils.js\"),\n    Position: __webpack_require__(/*! ./position */ \"./src/position.js\"),\n    GameEngine: __webpack_require__(/*! ./gameEngine */ \"./src/gameEngine.js\"),\n    Game: __webpack_require__(/*! ./shim */ \"./src/shim.js\"),\n    Button: __webpack_require__(/*! ./button */ \"./src/button.js\"),\n    GameController: __webpack_require__(/*! ./gameController */ \"./src/gameController.js\"),\n    GameControllerWorker: __webpack_require__(/*! ./gameControllerWorker */ \"./src/gameControllerWorker.js\"),\n    GameControllerSocket: __webpack_require__(/*! ./gameControllerSocket */ \"./src/gameControllerSocket.js\"),\n    GameGroup: __webpack_require__(/*! ./gameGroup */ \"./src/gameGroup.js\"),\n    GameUI: __webpack_require__(/*! ./gameUI */ \"./src/gameUI.js\"),\n    ImageLoader: __webpack_require__(/*! ./imageLoader */ \"./src/imageLoader.js\"),\n    NotificationMessage: __webpack_require__(/*! ./notificationMessage */ \"./src/notificationMessage.js\"),\n    OnlineClient: __webpack_require__(/*! ./onlineClient */ \"./src/onlineClient.js\")\n};\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/notificationMessage.js":
/*!************************************!*\
  !*** ./src/notificationMessage.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var Button = __webpack_require__(/*! ./button */ \"./src/button.js\");\n  var GameConstants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n  var Buttons = __webpack_require__(/*! ./button */ \"./src/button.js\");\n  var Button = Buttons.Button;\n  var ButtonImage = Buttons.ButtonImage;\n}\n\nfunction NotificationMessage(text, textColor, backgroundColor, delayBeforeClosing, animationDelay, fontSize, fontFamily, foreGround, disableAnimation) {\n  this.text = text;\n  this.textColor = textColor == undefined ? \"rgba(255, 255, 255, 0.75)\" : textColor;\n  this.backgroundColor = backgroundColor == undefined ? \"rgba(46, 204, 113, 0.5)\" : backgroundColor;\n  this.delayBeforeClosing = delayBeforeClosing == undefined ? 5 : delayBeforeClosing; // second\n  this.fontSize = fontSize == undefined ? Math.floor(GameConstants.Setting.FONT_SIZE / 1.25) : fontSize;\n  this.fontFamily = fontFamily == undefined ? GameConstants.Setting.FONT_FAMILY : fontFamily;\n  this.animationDelay = animationDelay == undefined ? 500 : animationDelay;\n  this.foreGround = foreGround == undefined ? false : foreGround;\n  this.timeLastFrame = 0;\n  this.animationTime = 0;\n  this.init = false;\n  this.closed = false;\n  this.closing = false;\n  this.disableAnimation = disableAnimation == undefined ? false : disableAnimation;\n  this.closeButton;\n}\n\nNotificationMessage.prototype.draw = function(game) {\n  var self = this;\n\n  if(this.text != null) {\n    var canvas = game.canvas;\n\n    if(!this.init) {\n      this.timeLastFrame = Date.now();\n\n      this.closeButton = new ButtonImage(\"assets/images/close.png\", null, 5, \"right\", null, 32, 32, null, null, game.imageLoader);\n      \n      this.closeButton.addClickAction(canvas, function() {\n        self.close();\n      });\n    }\n\n    var offsetTime = Date.now() - this.timeLastFrame;\n    this.timeLastFrame = Date.now();\n\n    if(this.animationTime >= this.delayBeforeClosing * 1000 && !this.closing && !this.closed) {\n      this.close();\n    }\n\n    var ctx = canvas.getContext(\"2d\");\n    this.fontSize = this.getFontSize(ctx) * 1.25;\n\n    var heightText = game.wrapTextLines(ctx, this.text, null, this.fontSize)[\"height\"];\n    var height = heightText + this.fontSize / 2;\n    var width = canvas.width;\n    var offsetY = 1;\n\n    if(!this.closing) {\n      this.animationTime += offsetTime;\n    } else {\n      if(this.disableAnimation) {\n        this.animationTime = -1;\n      } else {\n        this.animationTime -= offsetTime;\n      }\n    }\n\n    if(this.animationTime < 0) {\n      this.closed = true;\n      this.closing = false;\n    }\n\n    if(!this.closed) {\n      if(!this.disableAnimation) {\n        offsetY = this.animationTime / this.animationDelay;\n      }\n\n      var y = canvas.height - (height * (offsetY <= 1 ? offsetY : 1));\n\n      ctx.fillStyle = this.backgroundColor;\n      ctx.fillRect(0, y, width, height);\n\n      game.drawText(ctx, this.text, this.textColor, this.fontSize, this.fontFamily, \"center\", \"default\", null, y + this.fontSize, true);\n\n      this.closeButton.y = y + 5;\n\n      if(!this.foreGround) {\n        this.closeButton.draw(game);\n      }\n\n      this.disableCloseButton();\n    } else {\n      this.disableCloseButton();\n    }\n\n    this.init = true;\n  }\n};\n\nNotificationMessage.prototype.close = function() {\n  this.disableCloseButton();\n\n  if(!this.closing) {\n    this.closing = true;\n    this.animationTime = this.animationDelay;\n  }\n};\n\nNotificationMessage.prototype.open = function() {\n  this.timeLastFrame = 0;\n  this.animationTime = 0;\n  this.init = false;\n  this.closed = false;\n  this.closing = false;\n};\n\nNotificationMessage.prototype.disableCloseButton = function() {\n  if(this.closeButton != undefined && this.closeButton != null && this.closeButton instanceof Button) {\n    this.closeButton.disable();\n  }\n};\n\nNotificationMessage.prototype.enableCloseButton = function() {\n  if(this.closeButton != undefined && this.closeButton != null && this.closeButton instanceof Button) {\n    this.closeButton.enable();\n  }\n};\n\nNotificationMessage.prototype.copy = function() {\n  return new NotificationMessage(this.text, this.textColor, this.backgroundColor, this.delayBeforeClosing, this.animationDelay, this.fontSize, this.fontFamily, this.foreGround);\n};\n\nNotificationMessage.prototype.getFontSize = function(ctx) {\n  return Math.floor(parseInt(ctx.font.match(/\\d+/), 10) / 1.25);\n};\n\n// Export module\nif(true) {\n  module.exports = NotificationMessage;\n}\n\n//# sourceURL=webpack:///./src/notificationMessage.js?");

/***/ }),

/***/ "./src/onlineClient.js":
/*!*****************************!*\
  !*** ./src/onlineClient.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var io = __webpack_require__(/*! ../libs/socket.io.js */ \"./libs/socket.io.js\");\n  var GameControllerSocket = __webpack_require__(/*! ./gameControllerSocket.js */ \"./src/gameControllerSocket.js\");\n}\n\nfunction OnlineClient() {\n  this.url;\n  this.port;\n  this.token;\n  this.socket;\n  this.currentRoom;\n  this.game;\n  this.creatingRoom = false;\n  this.joiningRoom = false;\n  this.loadingRooms = false;\n}\n\nOnlineClient.prototype.connect = function(url, port, callback) {\n  this.disconnect();\n\n  this.url = url;\n  this.port = port;\n\n  if(this.port != null) {\n    this.socket = new io(url + \":\" + port);\n  } else {\n    this.socket = new io(url);\n  }\n\n  var self = this;\n\n  this.socket.once(\"connect\", function() {\n    callback(true);\n    successConnect = true;\n  });\n\n  this.socket.on(\"error\", function() {\n    callback(false);\n    self.disconnect();\n  });\n\n  this.socket.on(\"connect_error\", function() {\n    callback(false);\n    self.disconnect();\n  });\n};\n\nOnlineClient.prototype.disconnect = function() {\n  if(this.socket != null) {\n    this.stopGame();\n    this.socket.close();\n    this.creatingRoom = false;\n    this.joiningRoom = false;\n    this.loadingRooms = false;\n  }\n};\n\nOnlineClient.prototype.stopGame = function() {\n  if(this.game != null && this.game.gameUI != null) {\n    this.game.kill();\n    this.game.gameUI.setKill();\n  }\n};\n\nOnlineClient.prototype.displayRooms = function(callback) {\n  if(!this.loadingRooms) {\n    this.loadingRooms = true;\n\n    var ioRooms;\n    var self = this;\n\n    if(this.port != null) {\n      ioRooms = new io(this.url + \":\" + this.port + \"/rooms\");\n    } else {\n      ioRooms = new io(this.url + \"/rooms\");\n    }\n  \n    ioRooms.once(\"rooms\", function(data) {\n      callback(data);\n      ioRooms.close();\n      self.loadingRooms = false;\n    });\n  \n    ioRooms.once(\"error\", function() {\n      callback({ error: true });\n      ioRooms.close();\n      self.loadingRooms = false;\n    });\n  \n    ioRooms.once(\"connect_error\", function() {\n      callback({ error: true });\n      ioRooms.close();\n      self.loadingRooms = false;\n    });\n  } else {\n    callback({ error: true });\n  }\n};\n\nOnlineClient.prototype.createRoom = function(data, callback) {\n  if(!this.creatingRoom) {\n    this.creatingRoom = true;\n    \n    var ioCreate;\n    var self = this;\n\n    if(this.port != null) {\n      ioCreate = new io(this.url + \":\" + this.port + \"/createRoom\");\n    } else {\n      ioCreate = new io(this.url + \"/createRoom\");\n    }\n\n    ioCreate.once(\"connect\", function() {\n      ioCreate.emit(\"create\", data);\n    });\n\n    ioCreate.once(\"process\", function(data) {\n      if(data.success != null) {\n        callback({\n          success: data.success,\n          connection_error: false,\n          code: data.code,\n          errorCode: data.errorCode\n        });\n      } else {\n        callback({\n          success: false,\n          connection_error: true,\n          code: null\n        });\n      }\n\n      ioCreate.close();\n      self.creatingRoom = false;\n    });\n\n    ioCreate.once(\"error\", function() {\n      callback({\n        success: false,\n        connection_error: true\n      });\n      ioCreate.close();\n      self.creatingRoom = false;\n    });\n\n    ioCreate.once(\"connect_error\", function() {\n      callback({\n        success: false,\n        connection_error: true\n      });\n      ioCreate.close();\n      self.creatingRoom = false;\n    });\n  } else {\n    callback({\n      success: false,\n      connection_error: false\n    });\n  }\n};\n\nOnlineClient.prototype.joinRoom = function(code, callback) {\n  if(!this.joiningRoom) {\n    this.joiningRoom = true;\n\n    if(this.socket != null) {\n      this.socket.emit(\"join-room\", code);\n\n      var self = this;\n\n      this.socket.once(\"join-room\", function(data) {\n        self.currentRoom = code;\n        successConnect = true;\n        callback(data);\n        self.joiningRoom = false;\n      });\n    }\n  } else {\n    callback({\n      success: false\n    });\n  }\n};\n\nOnlineClient.prototype.getGame = function(ui) {\n  if(this.socket != null && this.currentRoom && ui != null) {\n    this.game = null;\n    this.stopGame();\n    this.game = new GameControllerSocket(this.socket, ui);\n    ui.controller = this.game;\n    return this.game;\n  }\n};\n\n// Export module\nif(true) {\n  module.exports = OnlineClient;\n}\n\n//# sourceURL=webpack:///./src/onlineClient.js?");

/***/ }),

/***/ "./src/position.js":
/*!*************************!*\
  !*** ./src/position.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var GameConstants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n}\n\nfunction Position(x, y, direction) {\n  this.x = x;\n  this.y = y;\n  this.direction = direction;\n}\n\nPosition.prototype.copy = function() {\n  return new Position(this.x, this.y, this.direction);\n};\n\nPosition.prototype.convertToKeyDirection = function() {\n  switch(this.direction) {\n    case GameConstants.Direction.UP:\n      return GameConstants.Key.UP;\n    case GameConstants.Direction.RIGHT:\n      return GameConstants.Key.RIGHT;\n    case GameConstants.Direction.LEFT:\n      return GameConstants.Key.LEFT;\n    case GameConstants.Direction.BOTTOM:\n      return GameConstants.Key.BOTTOM;\n    default:\n      return this.direction;\n  }\n};\n\nPosition.prototype.convertToSimpleDirection = function() {\n  switch(this.direction) {\n    case GameConstants.Key.UP:\n      return GameConstants.Direction.UP;\n    case GameConstants.Key.RIGHT:\n      return GameConstants.Direction.RIGHT;\n    case GameConstants.Key.LEFT:\n      return GameConstants.Direction.LEFT;\n    case GameConstants.Key.BOTTOM:\n      return GameConstants.Direction.BOTTOM;\n    default:\n      return this.direction;\n  }\n};\n\nPosition.prototype.equals = function(otherPosition) {\n  if(otherPosition != null) {\n    return this.x == otherPosition.x && this.y == otherPosition.y;\n  } else {\n    return false;\n  }\n};\n\nPosition.prototype.indexIn = function(array) {\n  for(var i = 0; i < array.length; i++) {\n    if(this.equals(array[i])) {\n      return i;\n    }\n  }\n  \n  return -1;\n};\n\n// Export module\nif(true) {\n  module.exports = Position;\n}\n\n//# sourceURL=webpack:///./src/position.js?");

/***/ }),

/***/ "./src/reactor.js":
/*!************************!*\
  !*** ./src/reactor.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var Event = __webpack_require__(/*! ./event */ \"./src/event.js\");\n}\n\nfunction Reactor() {\n  this.events = {};\n}\n\nReactor.prototype.registerEvent = function(eventName) {\n  var event = new Event(eventName);\n  this.events[eventName] = event;\n};\n\nReactor.prototype.dispatchEvent = function(eventName, eventArgs) {\n  var callbacks = this.events[eventName].callbacks;\n  \n  for(var i = 0, l = callbacks.length; i < l; i++) {\n    callbacks[i](eventArgs);\n  }\n};\n\nReactor.prototype.addEventListener = function(eventName, callback) {\n  this.events[eventName].registerCallback(callback);\n};\n\n// Export module\nif(true) {\n  module.exports = Reactor;\n}\n\n//# sourceURL=webpack:///./src/reactor.js?");

/***/ }),

/***/ "./src/shim.js":
/*!*********************!*\
  !*** ./src/shim.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var GameConstants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n  var GameController = __webpack_require__(/*! ./gameController */ \"./src/gameController.js\");\n  var GameControllerWorker = __webpack_require__(/*! ./gameControllerWorker */ \"./src/gameControllerWorker.js\");\n  var GameControllerSocket = __webpack_require__(/*! ./gameControllerSocket */ \"./src/gameControllerSocket.js\");\n  var GameUI = __webpack_require__(/*! ./gameUI */ \"./src/gameUI.js\");\n  var GameEngine = __webpack_require__(/*! ./gameEngine */ \"./src/gameEngine.js\");\n}\n\n// Polyfills\nif(typeof(window) !== \"undefined\") {\n  window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;\n  window.cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.oCancelAnimationFrame || window.mozCancelRequestAnimationFrame || window.webkitCancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame;\n}\n\nif(typeof(document) !== \"undefined\" && typeof(document.fullscreenElement) === \"undefined\") {\n  Object.defineProperty(document, \"fullscreenElement\", {\n    get: function() {\n      return document.mozFullScreenElement || document.msFullscreenElement || document.webkitFullscreenElement || document.oFullscreenElement;\n    }\n  });\n}\n\nif(typeof(document) !== \"undefined\") {\n  document.exitFullscreen = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen || document.msExitFullscreen;\n}\n\nif(typeof(screen) !== \"undefined\") {\n  screen.orientation = screen.msOrientation || screen.mozOrientation || screen.orientation;\n}\n\nif(!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// Old game API\nfunction Game(grid, snake, speed, appendTo, enablePause, enableRetry, progressiveSpeed, canvasWidth, canvasHeight, displayFPS, outputType, disableAnimation) {\n  var controller;\n\n  var engine = new GameEngine(grid, snake, speed, enablePause, enableRetry, progressiveSpeed);\n  engine.init();\n  \n  try { // Test if Worker is supported\n    if(!window.Worker) throw \"Worker not supported\";\n    new Worker(\"src/gameEngineWorker.js\").terminate();\n    controller = new GameControllerWorker(engine);\n  } catch(e) {\n    controller = new GameController(engine);\n  }\n  \n  controller.gameUI = new GameUI(controller, appendTo, canvasWidth, canvasHeight, displayFPS, outputType, disableAnimation);\n  controller.init();\n  \n  return controller;\n}\n\n// Constants shim\n// Player type\nPLAYER_AI = GameConstants.PlayerType.AI;\nPLAYER_HUMAN = GameConstants.PlayerType.HUMAN;\nPLAYER_HYBRID_HUMAN_AI = GameConstants.PlayerType.HYBRID_HUMAN_AI;\n// AI level\nAI_LEVEL_RANDOM = GameConstants.AiLevel.RANDOM;\nAI_LEVEL_LOW = GameConstants.AiLevel.LOW;\nAI_LEVEL_DEFAULT = GameConstants.AiLevel.DEFAULT;\nAI_LEVEL_HIGH = GameConstants.AiLevel.HIGH;\nAI_LEVEL_ULTRA = GameConstants.AiLevel.ULTRA;\n// Directions\nUP = GameConstants.Direction.UP;\nRIGHT = GameConstants.Direction.RIGHT;\nBOTTOM = GameConstants.Direction.BOTTOM;\nLEFT = GameConstants.Direction.LEFT;\nANGLE_1 = GameConstants.Direction.ANGLE_1;\nANGLE_2 = GameConstants.Direction.ANGLE_2;\nANGLE_3 = GameConstants.Direction.ANGLE_3;\nANGLE_4 = GameConstants.Direction.ANGLE_4;\n// Infos\nAPP_VERSION = GameConstants.Setting.APP_VERSION;\nDATE_VERSION = GameConstants.Setting.DATE_VERSION;\n\n// Export module\nif(true) {\n  module.exports = Game;\n}\n\n//# sourceURL=webpack:///./src/shim.js?");

/***/ }),

/***/ "./src/snake.js":
/*!**********************!*\
  !*** ./src/snake.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n * Copyright (C) 2019-2020 Eliastik (eliastiksofts.com)\n *\n * This file is part of \"SnakeIA\".\n *\n * \"SnakeIA\" is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * \"SnakeIA\" is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with \"SnakeIA\".  If not, see <http://www.gnu.org/licenses/>.\n */\nif(true) {\n  var i18next = __webpack_require__(/*! ../libs/i18next.min */ \"./libs/i18next.min.js\");\n  var Lowlight = __webpack_require__(/*! ../libs/lowlight.astar.min */ \"./libs/lowlight.astar.min.js\");\n  var GameUtils = __webpack_require__(/*! ./gameUtils */ \"./src/gameUtils.js\");\n  var GameConstants = __webpack_require__(/*! ./constants */ \"./src/constants.js\");\n  var Position = __webpack_require__(/*! ./position */ \"./src/position.js\");\n  var Grid = __webpack_require__(/*! ./grid */ \"./src/grid.js\");\n}\n\nfunction Snake(direction, length, grid, player, aiLevel, autoRetry) {\n  this.direction = direction == undefined ? GameConstants.Direction.RIGHT : direction;\n  this.initialDirection = direction == undefined ? GameConstants.Direction.RIGHT : direction;\n  this.initialLength = length == undefined ? 3 : length;\n  this.initTriedDirections = [];\n  this.errorInit = false;\n  this.grid = grid || new Grid();\n  this.queue = [];\n  this.lastKey = -1;\n  this.lastTail;\n  this.lastTailMoved;\n  this.player = player == undefined ? GameConstants.PlayerType.HUMAN : player;\n  this.aiLevel = aiLevel == undefined ? GameConstants.AiLevel.DEFAULT : aiLevel;\n  this.autoRetry = autoRetry == undefined ? false : autoRetry;\n  this.score = 0;\n  this.gameOver = false;\n  this.scoreMax = false;\n  this.color;\n\n  this.init();\n}\n\nSnake.prototype.init = function() {\n  if(this.initialLength <= 0) {\n    this.errorInit = true;\n    return false;\n  }\n\n  if(this.grid.maze && this.initTriedDirections.length <= 0) {\n    this.initialDirection = this.grid.mazeFirstPosition.direction;\n    this.direction = this.initialDirection;\n  }\n\n  var spaceLineAvailable = 0;\n  var spaceColAvailable = 0;\n\n  if((this.initialDirection == GameConstants.Direction.RIGHT && this.initTriedDirections.indexOf(GameConstants.Direction.RIGHT) == -1) || (this.initialDirection == GameConstants.Direction.LEFT && this.initTriedDirections.indexOf(GameConstants.Direction.LEFT) == -1)) {\n    for(var i = 0; i < this.grid.height; i++) {\n      var emptyOnLine = 0;\n\n      for(var j = 0; j < this.grid.width; j++) {\n        if(this.grid.get(new Position(j, i)) == GameConstants.CaseType.EMPTY) {\n          emptyOnLine++;\n        } else {\n          emptyOnLine = 0;\n        }\n\n        if(emptyOnLine >= this.initialLength) {\n          spaceLineAvailable++;\n          break;\n        }\n      }\n    }\n  } else if((this.initialDirection == GameConstants.Direction.UP && this.initTriedDirections.indexOf(GameConstants.Direction.UP) == -1) || (this.initialDirection == GameConstants.Direction.BOTTOM && this.initTriedDirections.indexOf(GameConstants.Direction.BOTTOM) == -1)) {\n    for(var i = 0; i < this.grid.width; i++) {\n      var emptyOnCol = 0;\n\n      for(var j = 0; j < this.grid.height; j++) {\n        if(this.grid.get(new Position(i, j)) == GameConstants.CaseType.EMPTY) {\n          emptyOnCol++;\n        } else {\n          emptyOnCol = 0;\n        }\n\n        if(emptyOnCol >= this.initialLength) {\n          spaceColAvailable++;\n          break;\n        }\n      }\n    }\n  }\n\n  this.initTriedDirections.push(this.initialDirection);\n\n  if((spaceLineAvailable <= 0 && (this.initialDirection == GameConstants.Direction.RIGHT || this.initialDirection == GameConstants.Direction.LEFT)) || (spaceColAvailable <= 0 && (this.initialDirection == GameConstants.Direction.UP || this.initialDirection == GameConstants.Direction.BOTTOM))) {\n    if(this.initTriedDirections.indexOf(GameConstants.Direction.RIGHT) == -1) {\n      this.initialDirection = GameConstants.Direction.RIGHT;\n      this.direction = GameConstants.Direction.RIGHT;\n      return this.init();\n    } else if(this.initTriedDirections.indexOf(GameConstants.Direction.LEFT) == -1) {\n      this.initialDirection = GameConstants.Direction.LEFT;\n      this.direction = GameConstants.Direction.LEFT;\n      return this.init();\n    } else if(this.initTriedDirections.indexOf(GameConstants.Direction.UP) == -1) {\n      this.initialDirection = GameConstants.Direction.UP;\n      this.direction = GameConstants.Direction.UP;\n      return this.init();\n    } else if(this.initTriedDirections.indexOf(GameConstants.Direction.BOTTOM) == -1) {\n      this.initialDirection = GameConstants.Direction.BOTTOM;\n      this.direction = GameConstants.Direction.BOTTOM;\n      return this.init();\n    }\n\n    this.errorInit = true;\n    return false;\n  }\n\n  var posNotValidated = true;\n  var positionsToAdd = [];\n  var startPos, currentPos;\n\n  while(posNotValidated) {\n    posNotValidated = false;\n\n    if(this.grid.maze) {\n      startPos = this.grid.mazeFirstPosition;\n    } else {\n      startPos = this.grid.getRandomPosition();\n    }\n\n    currentPos = new Position(startPos.x, startPos.y, this.initialDirection);\n    positionsToAdd = [];\n\n    for(var i = this.initialLength - 1; i >= 0; i--) {\n      if(i < this.initialLength - 1) {\n        if(this.initialDirection == GameConstants.Direction.RIGHT) {\n          currentPos = this.grid.getNextPosition(new Position(currentPos.x, currentPos.y, this.initialDirection), GameConstants.Direction.RIGHT);\n        } else if(this.initialDirection == GameConstants.Direction.LEFT) {\n          currentPos = this.grid.getNextPosition(new Position(currentPos.x, currentPos.y, this.initialDirection), GameConstants.Direction.LEFT);\n        } else if(this.initialDirection == GameConstants.Direction.BOTTOM) {\n          currentPos = this.grid.getNextPosition(new Position(currentPos.x, currentPos.y, this.initialDirection), GameConstants.Direction.BOTTOM);\n        } else if(this.initialDirection == GameConstants.Direction.UP) {\n          currentPos = this.grid.getNextPosition(new Position(currentPos.x, currentPos.y, this.initialDirection), GameConstants.Direction.UP);\n        }\n      }\n\n      if(this.grid.get(currentPos) != GameConstants.CaseType.EMPTY) {\n        posNotValidated = true;\n      } else {\n        positionsToAdd.push(new Position(currentPos.x, currentPos.y, currentPos.direction));\n      }\n    }\n\n    if(this.grid.maze && posNotValidated) {\n      return this.init();\n    }\n  }\n\n  for(var i = 0; i < positionsToAdd.length; i++) {\n    this.insert(positionsToAdd[i]);\n  }\n\n  if(this.grid.maze && this.player == GameConstants.PlayerType.HYBRID_HUMAN_AI) {\n    this.player = GameConstants.PlayerType.HUMAN;\n  }\n\n  if(this.player == GameConstants.PlayerType.HYBRID_HUMAN_AI) {\n    this.aiLevel = GameConstants.AiLevel.HIGH;\n  }\n\n  this.lastTail = this.get(this.queue.length - 1);\n  return true;\n};\n\nSnake.prototype.reset = function() {\n  this.direction = this.initialDirection;\n  this.initTriedDirections = [];\n  this.queue = [];\n  this.score = 0;\n  this.gameOver = false;\n  this.scoreMax = false;\n  this.lastTailMoved = true;\n  this.lastKey = -1;\n  this.init();\n};\n\nSnake.prototype.insert = function(position) {\n  this.queue.unshift(position);\n  this.grid.set(GameConstants.CaseType.SNAKE, position);\n};\n\nSnake.prototype.remove = function() {\n  var last = this.queue.pop();\n  this.grid.set(GameConstants.CaseType.EMPTY, last);\n  this.lastTail = last;\n};\n\nSnake.prototype.length = function() {\n  return this.queue.length;\n};\n\nSnake.prototype.get = function(index) {\n  if(this.queue[index] != null) {\n    return this.queue[index].copy();\n  } else {\n    return null;\n  }\n};\n\nSnake.prototype.set = function(index, position) {\n  if(index >= 0 && index < this.length()) {\n    this.queue[index] = position;\n  }\n};\n\nSnake.prototype.getHeadPosition = function() {\n  return this.get(0);\n};\n\nSnake.prototype.getTailPosition = function() {\n  return this.get(this.length() - 1);\n};\n\nSnake.prototype.hasMaxScore = function() {\n  return this.grid.getTotal(GameConstants.CaseType.EMPTY) <= 0;\n};\n\nSnake.prototype.setGameOver = function() {\n  this.gameOver = true;\n\n  for(var i = 0; i < this.length(); i++) {\n    this.grid.set(GameConstants.CaseType.SNAKE_DEAD, this.get(i));\n  }\n};\n\nSnake.prototype.kill = function() {\n  this.autoRetry = false;\n  this.grid = null;\n  this.queue = null;\n};\n\nSnake.prototype.moveTo = function(direction) {\n  if(direction == GameConstants.Key.LEFT && this.direction != GameConstants.Direction.RIGHT && this.direction != GameConstants.Direction.LEFT) {\n    this.direction = GameConstants.Direction.LEFT;\n  }\n\n  if(direction == GameConstants.Key.UP && this.direction != GameConstants.Direction.BOTTOM && this.direction != GameConstants.Direction.UP) {\n    this.direction = GameConstants.Direction.UP;\n  }\n\n  if(direction == GameConstants.Key.RIGHT && this.direction != GameConstants.Direction.LEFT && this.direction != GameConstants.Direction.RIGHT) {\n    this.direction = GameConstants.Direction.RIGHT;\n  }\n\n  if(direction == GameConstants.Key.BOTTOM && this.direction != GameConstants.Direction.UP && this.direction != GameConstants.Direction.BOTTOM) {\n    this.direction = GameConstants.Direction.BOTTOM;\n  }\n};\n\nSnake.prototype.getNextPosition = function(oldPos, newDirection) {\n  return this.grid.getNextPosition(oldPos, newDirection);\n};\n\nSnake.prototype.getDirectionTo = function(position, otherPosition) {\n  return this.grid.getDirectionTo(position, otherPosition);\n};\n\nSnake.prototype.getGraphicDirectionFor = function(current, next, prec) {\n  if(next == undefined || prec == undefined) return current.direction;\n\n  var directionToPrec = this.getDirectionTo(current, prec);\n  var directionToNext = this.getDirectionTo(current, next);\n\n  var direction = GameConstants.Direction.UP;\n\n  if(directionToPrec == GameConstants.Direction.LEFT && directionToNext == GameConstants.Direction.BOTTOM || directionToPrec == GameConstants.Direction.BOTTOM && directionToNext == GameConstants.Direction.LEFT) {\n    direction = GameConstants.Direction.ANGLE_1;\n  } else if(directionToPrec == GameConstants.Direction.RIGHT && directionToNext == GameConstants.Direction.BOTTOM || directionToPrec == GameConstants.Direction.BOTTOM && directionToNext == GameConstants.Direction.RIGHT) {\n    direction = GameConstants.Direction.ANGLE_2;\n  } else if(directionToPrec == GameConstants.Direction.UP && directionToNext == GameConstants.Direction.RIGHT || directionToPrec == GameConstants.Direction.RIGHT && directionToNext == GameConstants.Direction.UP) {\n    direction = GameConstants.Direction.ANGLE_3;\n  } else if(directionToPrec == GameConstants.Direction.UP && directionToNext == GameConstants.Direction.LEFT || directionToPrec == GameConstants.Direction.LEFT && directionToNext == GameConstants.Direction.UP) {\n    direction = GameConstants.Direction.ANGLE_4;\n  } else {\n    direction = current.direction;\n  }\n\n  return direction;\n};\n\nSnake.prototype.getGraphicDirection = function(index) {\n  return this.getGraphicDirectionFor(this.get(index), this.get(index - 1), this.get(index + 1));\n};\n\nSnake.prototype.copy = function() {\n  var snake = new Snake(direction, 3, new Grid(this.grid.width, this.grid.height, false, false), this.player, this.aiLevel, false);\n\n  for(var i = 0; i < snake.grid.height; i++) {\n    for(var j = 0; j < snake.grid.width; j++) {\n      snake.grid.set(this.grid.get(new Position(j, i)), new Position(j, i));\n    }\n  }\n\n  snake.queue = [];\n\n  for(var i = 0; i < this.queue.length; i++) {\n    snake.queue.push(elem.copy());\n  }\n\n  return snake;\n};\n\nSnake.prototype.randomAI = function() {\n  var currentPosition = this.getHeadPosition();\n  var top = this.grid.isDeadPosition(this.getNextPosition(currentPosition, GameConstants.Key.UP));\n  var left = this.grid.isDeadPosition(this.getNextPosition(currentPosition, GameConstants.Key.LEFT));\n  var bottom = this.grid.isDeadPosition(this.getNextPosition(currentPosition, GameConstants.Key.BOTTOM));\n  var right = this.grid.isDeadPosition(this.getNextPosition(currentPosition, GameConstants.Key.RIGHT));\n\n  if(top && left && bottom && right) {\n    return GameConstants.Key.UP;\n  } else {\n    var direction = null;\n\n    while(direction == null || this.grid.isDeadPosition(this.getNextPosition(currentPosition, direction))) {\n      var r = GameUtils.randRange(1, 4);\n\n      switch(r) {\n        case 1:\n          direction = GameConstants.Key.UP;\n          break;\n        case 2:\n          direction = GameConstants.Key.LEFT;\n          break;\n        case 3:\n          direction = GameConstants.Key.BOTTOM;\n          break;\n        case 4:\n          direction = GameConstants.Key.RIGHT;\n          break;\n      }\n    }\n\n    return direction;\n  }\n};\n\nSnake.prototype.simpleAI = function() {\n  if(this.grid.fruitPos != null) {\n    var currentPosition = this.getHeadPosition();\n    var fruitPos = this.grid.fruitPos;\n    var directionNext = GameConstants.Key.RIGHT;\n\n    if(fruitPos.x > currentPosition.x) {\n      if(fruitPos.x - currentPosition.x > this.grid.width / 2) {\n        directionNext = GameConstants.Key.LEFT;\n      } else {\n        directionNext = GameConstants.Key.RIGHT;\n      }\n    } else if(fruitPos.x < currentPosition.x) {\n      if(currentPosition.x - fruitPos.x > this.grid.width / 2) {\n        directionNext = GameConstants.Key.RIGHT;\n      } else {\n        directionNext = GameConstants.Key.LEFT;\n      }\n    } else if(fruitPos.y < currentPosition.y) {\n      if(currentPosition.y - fruitPos.y > this.grid.height / 2) {\n        directionNext = GameConstants.Key.BOTTOM;\n      } else {\n        directionNext = GameConstants.Key.UP;\n      }\n    } else if(fruitPos.y > currentPosition.y) {\n      if(fruitPos.y - currentPosition.y > this.grid.height / 2) {\n        directionNext = GameConstants.Key.UP;\n      } else {\n        directionNext = GameConstants.Key.BOTTOM;\n      }\n    }\n\n    var nextPosition = this.getNextPosition(currentPosition, directionNext);\n\n    if(this.grid.isDeadPosition(nextPosition)) {\n      var currentDirection = this.direction;\n      var firstDifferentDirection = null;\n\n      for(var i = 1; i < this.queue.length; i++) {\n        if(this.get(i).direction != currentDirection) {\n          firstDifferentDirection = this.get(i).direction;\n          break;\n        }\n      }\n\n      nextPosition = this.getNextPosition(currentPosition, firstDifferentDirection);\n\n      if(this.grid.isDeadPosition(nextPosition)) {\n        if(!this.grid.isDeadPosition(this.getNextPosition(currentPosition, GameConstants.Key.UP))) {\n          directionNext = GameConstants.Key.UP;\n        } else if(!this.grid.isDeadPosition(this.getNextPosition(currentPosition, GameConstants.Key.RIGHT))) {\n          directionNext = GameConstants.Key.RIGHT;\n        } else if(!this.grid.isDeadPosition(this.getNextPosition(currentPosition, GameConstants.Key.BOTTOM))) {\n          directionNext = GameConstants.Key.BOTTOM;\n        } else if(!this.grid.isDeadPosition(this.getNextPosition(currentPosition, GameConstants.Key.LEFT))) {\n          directionNext = GameConstants.Key.LEFT;\n        }\n      } else {\n        directionNext = nextPosition.convertToKeyDirection();\n      }\n    }\n\n    return directionNext;\n  }\n};\n\nSnake.prototype.ai = function(bestFind) {\n  var bestFind = bestFind == undefined ? false : bestFind;\n  var res = GameConstants.Key.RIGHT;\n\n  if(this.aiLevel == GameConstants.AiLevel.RANDOM) {\n    res = this.randomAI();\n  } else if(this.aiLevel == GameConstants.AiLevel.LOW) {\n      res = this.simpleAI();\n  } else {\n    if(this.grid.fruitPos != null) {\n      var currentPosition = this.getHeadPosition();\n      var fruitPos = this.grid.fruitPos;\n\n      var grid = this.grid.getGraph(false);\n      var graph = new Lowlight.Astar.Configuration(grid, {\n        order: \"yx\",\n        torus: (this.aiLevel == GameConstants.AiLevel.HIGH || this.aiLevel == GameConstants.AiLevel.ULTRA) ? true : false,\n        diagonals: false,\n        cutting: false,\n        static: true,\n        cost(a, b) { return b == 1 ? null : 1 }\n      });\n      var path = graph.path({x: currentPosition.x, y: currentPosition.y}, {x: fruitPos.x, y: fruitPos.y});\n\n      if(path.length > 1) {\n        var nextPosition = new Position(path[1].x, path[1].y);\n        res = new Position(null, null, this.getDirectionTo(currentPosition, nextPosition)).convertToKeyDirection();\n      } else if(this.aiLevel == GameConstants.AiLevel.HIGH || this.aiLevel == GameConstants.AiLevel.ULTRA) {\n        res = this.simpleAI();\n      }\n\n      grid, graph, path = null;\n    }\n  }\n\n  return res;\n};\n\nSnake.prototype.getAILevelText = function() {\n  switch(this.aiLevel) {\n    case GameConstants.AiLevel.RANDOM:\n      return i18next.t(\"engine.aiLevelList.random\");\n    case GameConstants.AiLevel.LOW:\n      return i18next.t(\"engine.aiLevelList.low\");\n    case GameConstants.AiLevel.DEFAULT:\n      return i18next.t(\"engine.aiLevelList.normal\");\n    case GameConstants.AiLevel.HIGH:\n      return i18next.t(\"engine.aiLevelList.high\");\n    case GameConstants.AiLevel.ULTRA:\n      return i18next.t(\"engine.aiLevelList.ultra\");\n    default:\n      return i18next.t(\"engine.aiLevelList.normal\");\n  }\n};\n\n// Export module\nif(true) {\n  module.exports = Snake;\n}\n\n//# sourceURL=webpack:///./src/snake.js?");

/***/ })

/******/ });