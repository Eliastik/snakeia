/*! For license information please see GameEngineWorker.js.LICENSE.txt */
(()=>{var __webpack_modules__={293:function(module){(function(a){var b=Math.sign,c=Math.min,d=Math.abs;void 0===a.Lowlight&&(a.Lowlight={}),"object"==typeof module.exports&&(module.exports=a.Lowlight);class e{constructor(){this.nodes=new Map}id(e){return e}node(e,t=!1){return t?this.nodes.get(this.id(arguments[0])):this.nodes.get(e)}data(e,t){return 2===arguments.length&&(e.graph.get(this)._data=t),e.graph.get(this)._data}adjacent(e,t){return e.graph.get(this).has(t)}neighbors(e){return Array.from(e.graph.get(this).keys())}connected(e,t){return e.graph.get(this)._connectivity===t.graph.get(this)._connectivity}connect(){let e=Array.from(this.nodes.values()),t=0;for(let t=0;t<e.length;t++)e[t].graph.get(this)._connectivity=void 0;for(let n=0;n<e.length;n++){if(void 0!==e[n].graph.get(this)._connectivity)continue;let s=[e[n]];for(t++;s.length;){let e=s.shift();e.graph.get(this)._connectivity=t,this.neighbors(e).map((e=>{void 0===e.graph.get(this)._connectivity&&0>s.indexOf(e)&&s.push(e)}))}}}add(e){return 1<arguments.length?Array.from(arguments).map((e=>this.add(e))):(e.graph.set(this,new Map),this.nodes.set(e.id,e),e)}delete(e){return 1<arguments.length?Array.from(arguments).map((e=>this.delete(e))):(e.graph.delete(this),this.nodes.delete(e.id),e)}edge(e,t,n=1,s=1){if(!e.graph.has(this)||!t.graph.has(this))throw new Error("Nodes must be on the same graph");return null===n?e.graph.get(this).delete(t):e.graph.get(this).set(t,n),null===s?t.graph.get(this).delete(e):t.graph.get(this).set(e,s),this}cost(e,t){return this.adjacent(e,t)?e.graph.get(this).get(t):null}}e.fromArray=function(t,n={}){let s=e.fromArray.X(t,n.order),r=e.fromArray.Y(t,n.order),i=e.fromArray.at.bind(null,t,n.order),a=[],o=null;for(let t,l=1;l<Math.max(2,arguments.length);l++){t=new e,a.push(t),n=arguments[l]||{};let u=e.fromArray.id.bind(null,s,r,n.torus),c=n.cost||e.fromArray.cost,h=e.fromArray.edge.bind(null,t,c);for(let e=0;e<s;e++)for(let n,s=0;s<r;s++)n=t.add(o?o.get(u(e,s)):new f(u(e,s))),n.x=e,n.y=s,n.graph.get(t)._data=i(e,s),h(n,t.nodes.get(u(e-1,s))),h(n,t.nodes.get(u(e+1,s))),h(n,t.nodes.get(u(e,s-1))),h(n,t.nodes.get(u(e,s+1)));if(n.diagonals)for(let e=0;e<s;e++)for(let s=0;s<r;s++){let r=t.nodes.get(u(e,s)),i=t.adjacent(r,t.nodes.get(u(e-1,s))),a=t.adjacent(r,t.nodes.get(u(e+1,s))),o=t.adjacent(r,t.nodes.get(u(e,s-1))),l=t.adjacent(r,t.nodes.get(u(e,s+1)));"strict"===n.cutting?(i&&o&&h(r,t.nodes.get(u(e-1,s-1))),i&&l&&h(r,t.nodes.get(u(e-1,s+1))),a&&o&&h(r,t.nodes.get(u(e+1,s-1))),a&&l&&h(r,t.nodes.get(u(e+1,s+1)))):((i||o||n.cutting)&&h(r,t.nodes.get(u(e-1,s-1))),(i||l||n.cutting)&&h(r,t.nodes.get(u(e-1,s+1))),(a||o||n.cutting)&&h(r,t.nodes.get(u(e+1,s-1))),(a||l||n.cutting)&&h(r,t.nodes.get(u(e+1,s+1))))}Object.defineProperty(t,"id",{enumerable:!1,configurable:!1,writable:!0,value:e=>u(e.x,e.y)}),t.connect(),t.X=s,t.Y=r,t.TORUS=n.torus,o||(o=t.nodes)}return 1<a.length?a:a[0]},e.fromArray.X=function(e,t="yx"){return"xy"===t?e.length:"yx"===t?e[0].length:0},e.fromArray.Y=function(e,t="yx"){return"xy"===t?e[0].length:"yx"===t?e.length:0},e.fromArray.at=function(e,t="yx",n,s){return"xy"===t?e[n][s]:e[s][n]},e.fromArray.id=function(e=0,t=0,n=!1,s,r){return n?(r+t)%t*e+(s+e)%e:0<=s&&s<e&&0<=r&&r<t?r*e+s:null},e.fromArray.cost=function(){return 1},e.fromArray.edge=function(e,t,n,s){s&&e.edge(n,s,t(e.data(n),e.data(s)),t(e.data(s),e.data(n)))},e.fromArray.update=function(){console.warn("Graph.fromArray isn't implemented yet")};class f{constructor(e,t){for(let n in this.id=e,this.graph=new Map,t)"id"!=n&&"graph"!=n&&(this[n]=t[n])}}class g{constructor(e){this.nodes=[],this.score="function"==typeof e?e:e=>+e}get size(){return this.nodes.length}add(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return this.nodes.push(e),this.bubble(this.size-1)}set(e){let t=this.nodes.indexOf(e);return~t?this.score(e)<=this.score(this.nodes[t])?this.bubble(this.nodes.indexOf(e)):this.sink(this.nodes.indexOf(e)):this.add(e)}pop(){let e=this.nodes[0],t=this.nodes.pop();return 0<this.size&&(this.nodes[0]=t,this.sink(0)),e}top(){return this.nodes[0]}delete(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.delete(arguments[e]);return this}for(let t=0;t<this.size;t++){if(this.nodes[t]!=e)continue;let n=this.nodes.pop();return t==this.size-1?this:(this.nodes[t]=n,this.bubble(t).sink(t))}}bubble(e){let t=this.nodes[e],n=this.score(t);for(;0<e;){let s=Math.floor((e+1)/2)-1,r=this.nodes[s];if(n>=this.score(r))break;this.nodes[s]=t,this.nodes[e]=r,e=s}return this}sink(e){let t=this.nodes[e],n=this.score(t);for(;;){let s=2*(e+1),r=s-1,i=null;if(r<this.size&&this.score(this.nodes[r])<n&&(i=r),s<this.size&&this.score(this.nodes[s])<(i?this.score(this.nodes[i]):n)&&(i=s),null===i)break;this.nodes[e]=this.nodes[i],this.nodes[i]=t,e=i}return this}}let h={manhattan:function(e,t,n={}){let s=d(t.x-e.x),r=d(t.y-e.y);return(n.multiplier||1)*(s+r)},manhattanTorus:function(e,t,n={}){let s=c(d(t.x-e.x),t.x+(n.x||0)-e.x,e.x+(n.x||0)-t.x),r=c(d(t.y-e.y),t.y+(n.y||0)-e.y,e.y+(n.y||0)-t.y);return(n.multiplier||1)*(s+r)},diagonal:function(e,t,n={}){let s=d(t.x-e.x),r=d(t.y-e.y);return m*(s+r)+(dm-2*m)*c(s,r)},diagonalTorus:function(e,t,n={}){let s=c(d(t.x-e.x),t.x+(n.x||0)-e.x,e.x+(n.x||0)-t.x),r=c(d(t.y-e.y),t.y+(n.y||0)-e.y,e.y+(n.y||0)-t.y);return(n.multiplier||1)*(s+r)+((n.diagonalMultiplier||1.4)-2*(n.multiplier||1))*c(s,r)},euclidian:function(e,t,n={}){let s=d(t.x-e.x),r=d(t.y-e.y);return(n.multiplier||1)*Math.sqrt(s*s+r*r)},euclidianTorus:function(e,t,n={}){let s=c(d(t.x-e.x),t.x+(n.x||0)-e.x,e.x+(n.x||0)-t.x),r=c(d(t.y-e.y),t.y+(n.y||0)-e.y,e.y+(n.y||0)-t.y);return(n.multiplier||1)*(s+r)+((n.diagonalMultiplier||1.4)-2*(n.multiplier||1))*c(s,r)}};class i extends Error{constructor(e){super(e),this.name="WorkerError"}}class j{constructor(t,n={}){if(this.graphs=[],this.heuristic=n.heuristic||"manhattan",this.heuristicOptions=n.heuristicOptions||{},Array.isArray(t)&&(this.heuristic=n.heuristic in h?n.heuristic:n.diagonals?n.torus?"diagonalTorus":"diagonal":n.torus?"manhattanTorus":"manhattan",this.heuristicOptions.x=e.fromArray.X(t,n.order),this.heuristicOptions.y=e.fromArray.Y(t,n.order),this.graphs=e.fromArray.apply(this,arguments),!Array.isArray(this.graphs)&&(this.graphs=[this.graphs])),n.thread&&("undefined"==typeof WorkerGlobalScope||!(self instanceof WorkerGlobalScope))){this.worker=null;try{this.worker=new Worker(n.thread)}catch(t){throw"file:"===window.location.protocol&&console.warn("WebWorkers in local files may not be supported by your browser."),new i(`${n.thread} couldn't be opened.`)}"cost"in n&&(n.cost=n.cost.toString()),this.worker.postMessage(["constructor",t,n]),this.path=(e,t,n={})=>{this._worker_path_callback=n.callback,delete n.callback,this.worker.postMessage(["path",e,t,n])},this.worker.onmessage=e=>{let t=JSON.parse(e.data);"path"===t[0]&&this._worker_path_callback(t[1])}}}path(e,t,n={}){if(n.jps)return this.jps(e,t,n);let s=new g((e=>e.estimated)),r=new Map,i=this.graphs[n.layer||0];if(e=i.node(e,!0),t=i.node(t,!0),s.add({node:e,estimated:0}),r.set(e,{score:0,from:null}),!n.static||i.connected(e,t))for(;s.size;){let e=s.pop().node;if(e===t)break;i.neighbors(e).map((a=>{let o=(r.has(e)?r.get(e).score:0)+i.cost(e,a);o<(r.has(a)?r.get(a).score:1/0)&&(r.set(a,{score:o,from:e}),s.set({node:a,estimated:o+h[n.heuristic||this.heuristic](a,t,n.heuristicOptions||this.heuristicOptions)}))})),s.delete(e)}let a=[];if(r.has(t)){let e=t;for(a.push(t);null!==(e=r.get(e).from);)a.push(e);a=a.reverse()}return n.callback&&n.callback(a,r),a}}if(j.JPS=class{constructor(){}static access(e,t,n,s){return e.adjacent(t,s?e.node(n,!0):n)}static neighborhood(e,t,n,s){let r=[],i=n.get(s).from||null;if(null===i)return t.neighbors(s);{let n={x:b(s.x-i.x),y:b(s.y-i.y)};if(0!=n.x&&0!=n.y){let i=e(s,{x:s.x+n.x,y:s.y},!0),a=e(s,{x:s.x,y:s.y+n.y},!0);(i||a)&&(r.push(t.node({x:s.x+n.x,y:s.y+n.y},!0)),i&&(r.push(t.node({x:s.x+n.x,y:s.y},!0)),!e(s,{x:s.x,y:s.y-n.y},!0)&&r.push(t.node({x:s.x+n.x,y:s.y-n.y},!0))),a&&(r.push(t.node({x:s.x,y:s.y+n.y},!0)),!e(s,{x:s.x-n.x,y:s.y},!0)&&r.push(t.node({x:s.x-n.x,y:s.y+n.y},!0))))}else e(s,{x:s.x+n.x,y:s.y+n.y},!0)&&(r.push(t.node({x:s.x+n.x,y:s.y+n.y},!0)),0==n.x?0!=n.y&&(!e(s,{x:s.x-1,y:s.y},!0)&&r.push(t.node({x:s.x-1,y:s.y+n.y},!0)),!e(s,{x:s.x+1,y:s.y},!0)&&r.push(t.node({x:s.x+1,y:s.y+n.y},!0))):(!e(s,{x:s.x,y:s.y-1},!0)&&r.push(t.node({x:s.x+n.x,y:s.y-1},!0)),!e(s,{x:s.x,y:s.y+1},!0)&&r.push(t.node({x:s.x+n.x,y:s.y+1},!0))))}return r.filter((e=>e))}static jump(e,t,n,s,r,i){for(;;){if(!e(i,r))return null;if(r.x===s.x&&r.y===s.y)return r;let a={x:b(r.x-i.x),y:b(r.y-i.y)};if(0!=a.x&&0!=a.y){if(!e(r,{x:r.x-a.x,y:r.y},!0)&&e(r,{x:r.x-a.x,y:r.y+a.y},!0)||!e(r,{x:r.x,y:r.y-a.y},!0)&&e(r,{x:r.x+a.x,y:r.y-a.y},!0))return r;let i=j.JPS.jump.bind(this,e,t,n,s);if(null!==i(t.node({x:r.x+a.x,y:r.y},!0),r)||null!==i(t.node({x:r.x,y:r.y+a.y},!0),r))return r}else if(0!=a.x){if(!e(r,{x:r.x,y:r.y-1},!0)&&e(r,{x:r.x+a.x,y:r.y-1},!0)||!e(r,{x:r.x,y:r.y+1},!0)&&e(r,{x:r.x+a.x,y:r.y+1},!0))return r}else if(0!=a.y&&(!e(r,{x:r.x-1,y:r.y},!0)&&e(r,{x:r.x-1,y:r.y+a.y},!0)||!e(r,{x:r.x+1,y:r.y},!0)&&e(r,{x:r.x+1,y:r.y+a.y},!0)))return r;i=r,r=t.node({x:r.x+a.x,y:r.y+a.y},!0)}return null}},j.prototype.jps=function(e,t,n={}){if(this.graphs[n.layer||0].TORUS)return console.warn("Torus map aren't yet supported by JPS"),n.callback&&n.callback([],new Map),[];let s=new g((e=>e.estimated)),r=new Map,i=this.graphs[n.layer||0],a=null;e=i.node(e,!0),t=i.node(t,!0),s.add({node:e,estimated:0}),r.set(e,{score:0,from:null});let o=j.JPS.access.bind(this,i),l=j.JPS.neighborhood.bind(this,o,i,r),u=j.JPS.jump.bind(this,o,i,r,t);if(!n.static||i.connected(e,t))for(;s.size;){let e=s.pop().node;if(e===t)break;l(e).map((o=>{if(null!==(a=u(o,e))){let o=(r.has(e)?r.get(e).score:0)+i.cost(e,a);o<(r.has(a)?r.get(a).score:1/0)&&(r.set(a,{score:o,from:e,jumped:!0}),s.set({node:a,estimated:o+h[n.heuristic||this.heuristic](a,t,n.heuristicOptions||this.heuristicOptions)}))}})),s.delete(e)}let c=[];if(r.has(t)){let n=t;for(;n.x!=e.x||n.y!=e.y;)for(let e=r.get(n).from;n.x!=e.x||n.y!=e.y;)c.push(n),n=i.node({x:n.x+b(e.x-n.x),y:n.y+b(e.y-n.y)},!0);c.push(n),c.reverse()}return n.callback&&n.callback(c,r),c},"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope){let a;onmessage=function(b){let c=b.data;switch(c[0]){case"constructor":if("cost"in c[2]){let a=/^\((.*?)\)\s*=>\s*{/.test(c[2].cost),b=/^function /.test(c[2].cost);c[2].cost=eval(`(${a||b?"":"function "}${c[2].cost})`)}a=new j(c[1],c[2]);break;case"path":postMessage(JSON.stringify(["path",a.path(c[1],c[2],c[3])]))}}}a.Lowlight.Astar={Graph:e,Node:f,BinaryHeap:g,Heuristic:h,Configuration:j,WorkerError:i}})("undefined"==typeof window?this:window)},570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},i={};function a(e,t){var n,s,a;return t?(a=0<=(e>>>=0)&&e<256)&&(s=i[e])?s:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=l(e,e<0?-1:0,!1),a&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:m;if(t){if(e<0)return b;if(e>=p)return w}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,s){return new n(e,t,s)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),i=m,a=0;a<e.length;a+=8){var l=Math.min(8,e.length-a),h=parseInt(e.substring(a,a+l),n);if(l<8){var d=o(u(n,l));i=i.mul(d).add(o(h))}else i=(i=i.mul(r)).add(o(h))}return i.unsigned=t,i}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,g=a(1<<24),m=a(0);n.ZERO=m;var b=a(0,!0);n.UZERO=b;var y=a(1);n.ONE=y;var x=a(1,!0);n.UONE=x;var k=a(-1);n.NEG_ONE=k;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var w=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=w;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(u(e,6),this.unsigned),i=this,a="";;){var l=i.div(r),c=(i.sub(l.mul(r)).toInt()>>>0).toString(e);if((i=l).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return!(1&~this.low)},T.isEven=function(){return!(1&this.low)},T.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(y)},T.neg=T.negate,T.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,i=65535&this.low,a=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=i+(65535&e.low))>>>16,d+=(p+=r+u)>>>16,c+=(d+=n+o)>>>16,c+=t+a,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},T.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return m;if(s(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(I))return e.isOdd()?I:m;if(e.eq(I))return this.isOdd()?I:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,i=this.low>>>16,a=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,y=0,x=0;return y+=(x+=a*p)>>>16,b+=(y+=i*p)>>>16,y&=65535,b+=(y+=a*d)>>>16,f+=(b+=r*p)>>>16,b&=65535,f+=(b+=i*d)>>>16,b&=65535,f+=(b+=a*c)>>>16,f+=n*p+r*d+i*c+a*u,l((y&=65535)<<16|(x&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,i;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return x;i=b}else{if(this.eq(I))return e.eq(y)||e.eq(k)?I:e.eq(I)?y:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?y:k:(r=this.sub(e.mul(n)),i=n.add(r.div(e)));if(e.eq(I))return this.unsigned?b:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=m}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:u(2,a-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=y),i=i.add(d),r=r.sub(p)}return i},T.div=T.divide,T.modulo=function(e){return s(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return l(~this.low,~this.high,this.unsigned)},T.and=function(e){return s(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return s(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return s(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},391:(e,t,n)=>{var s=n(180),r=n(181),i=n(31),a=n(67),o=n(833),l=n(717),u=n(801);u.alea=s,u.xor128=r,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},180:function(e,t,n){var s;!function(e,r){function i(e){var t,n=this,s=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&a(s,n),r.state=function(){return a(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.alea=o}(0,e=n.nmd(e),n.amdD)},717:function(e,t,n){var s;!function(e,r){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&a(s,n),r.state=function(){return a(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.tychei=o}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var s;!function(e,r){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&a(s,n),r.state=function(){return a(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xor128=o}(0,e=n.nmd(e),n.amdD)},833:function(e,t,n){var s;!function(e,r){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,i=t.i;return t.w=s=s+1640531527|0,n=r[i+34&127],e=r[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[i]=n^e,t.i=i,n+(s^s>>>16)|0},function(e,t){var n,s,r,i,a,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,i=-32;i<l;++i)t&&(s^=t.charCodeAt((i+32)%t.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,r=0==(n=o[127&i]^=s+a)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=a,e.X=o,e.i=r}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&a(s,n),r.state=function(){return a(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},67:function(e,t,n){var s;!function(e,r){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&a(s,n),r.state=function(){return a(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},31:function(e,t,n){var s;!function(e,r){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&a(s,n),r.state=function(){return a(n,{})}),r}r&&r.exports?r.exports=o:n.amdD&&n.amdO?void 0===(s=function(){return o}.call(t,n,t,r))||(r.exports=s):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(r,i,a){var o,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var s=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(i)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,y(i)]}}():e,3),s),p=new f(s),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),i),(t.pass||n||function(e,t,n,s){return s&&(s.S&&g(s,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,i=s.i=s.j=0,a=s.S=[];for(n||(e=[n++]);r<l;)a[r]=r++;for(r=0;r<l;r++)a[r]=a[i=d&i+e[r%n]+(t=a[r])],a[i]=t;(s.g=function(e){for(var t,n=0,r=s.i,i=s.j,a=s.S;e--;)t=a[r=d&r+1],n=n*l+a[d&(a[r]=a[i=d&i+t])+(a[i]=t)];return s.i=r,s.j=i,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(m(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function b(e,t){for(var n,s=e+"",r=0;r<s.length;)t[d&r]=d&(n^=19*t[d&r])+s.charCodeAt(r++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(b(a.random(),i),e.exports){e.exports=p;try{o=n(234)}catch(e){}}else void 0===(s=function(){return p}.call(t,n,t,e))||(e.exports=s)}("undefined"!=typeof self?self:this,[],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},234:()=>{},633:(e,t,n)=>{var s=n(738).default;function r(){"use strict";e.exports=r=function(){return n},e.exports.__esModule=!0,e.exports.default=e.exports;var t,n={},i=Object.prototype,a=i.hasOwnProperty,o=Object.defineProperty||function(e,t,n){e[t]=n.value},l="function"==typeof Symbol?Symbol:{},u=l.iterator||"@@iterator",c=l.asyncIterator||"@@asyncIterator",h=l.toStringTag||"@@toStringTag";function d(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(t){d=function(e,t,n){return e[t]=n}}function p(e,t,n,s){var r=t&&t.prototype instanceof k?t:k,i=Object.create(r.prototype),a=new _(s||[]);return o(i,"_invoke",{value:E(e,n,a)}),i}function f(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}n.wrap=p;var g="suspendedStart",m="suspendedYield",b="executing",y="completed",x={};function k(){}function v(){}function w(){}var I={};d(I,u,(function(){return this}));var T=Object.getPrototypeOf,S=T&&T(T(F([])));S&&S!==i&&a.call(S,u)&&(I=S);var C=w.prototype=k.prototype=Object.create(I);function N(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function $(e,t){function n(r,i,o,l){var u=f(e[r],e,i);if("throw"!==u.type){var c=u.arg,h=c.value;return h&&"object"==s(h)&&a.call(h,"__await")?t.resolve(h.__await).then((function(e){n("next",e,o,l)}),(function(e){n("throw",e,o,l)})):t.resolve(h).then((function(e){c.value=e,o(c)}),(function(e){return n("throw",e,o,l)}))}l(u.arg)}var r;o(this,"_invoke",{value:function(e,s){function i(){return new t((function(t,r){n(e,s,t,r)}))}return r=r?r.then(i,i):i()}})}function E(e,n,s){var r=g;return function(i,a){if(r===b)throw Error("Generator is already running");if(r===y){if("throw"===i)throw a;return{value:t,done:!0}}for(s.method=i,s.arg=a;;){var o=s.delegate;if(o){var l=R(o,s);if(l){if(l===x)continue;return l}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if(r===g)throw r=y,s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);r=b;var u=f(e,n,s);if("normal"===u.type){if(r=s.done?y:m,u.arg===x)continue;return{value:u.arg,done:s.done}}"throw"===u.type&&(r=y,s.method="throw",s.arg=u.arg)}}}function R(e,n){var s=n.method,r=e.iterator[s];if(r===t)return n.delegate=null,"throw"===s&&e.iterator.return&&(n.method="return",n.arg=t,R(e,n),"throw"===n.method)||"return"!==s&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+s+"' method")),x;var i=f(r,e.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,x;var a=i.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,x):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,x)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function _(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function F(e){if(e||""===e){var n=e[u];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function n(){for(;++r<e.length;)if(a.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}throw new TypeError(s(e)+" is not iterable")}return v.prototype=w,o(C,"constructor",{value:w,configurable:!0}),o(w,"constructor",{value:v,configurable:!0}),v.displayName=d(w,h,"GeneratorFunction"),n.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},n.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,w):(e.__proto__=w,d(e,h,"GeneratorFunction")),e.prototype=Object.create(C),e},n.awrap=function(e){return{__await:e}},N($.prototype),d($.prototype,c,(function(){return this})),n.AsyncIterator=$,n.async=function(e,t,s,r,i){void 0===i&&(i=Promise);var a=new $(p(e,t,s,r),i);return n.isGeneratorFunction(t)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},N(C),d(C,h,"Generator"),d(C,u,(function(){return this})),d(C,"toString",(function(){return"[object Generator]"})),n.keys=function(e){var t=Object(e),n=[];for(var s in t)n.push(s);return n.reverse(),function e(){for(;n.length;){var s=n.pop();if(s in t)return e.value=s,e.done=!1,e}return e.done=!0,e}},n.values=F,_.prototype={constructor:_,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(D),!e)for(var n in this)"t"===n.charAt(0)&&a.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function s(s,r){return o.type="throw",o.arg=e,n.next=s,r&&(n.method="next",n.arg=t),!!r}for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=a.call(i,"catchLoc"),u=a.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&a.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var r=s;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var i=r?r.completion:{};return i.type=e,i.arg=t,r?(this.method="next",this.next=r.finallyLoc,x):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),x},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),D(n),x}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var s=n.completion;if("throw"===s.type){var r=s.arg;D(n)}return r}}throw Error("illegal catch attempt")},delegateYield:function(e,n,s){return this.delegate={iterator:F(e),resultName:n,nextLoc:s},"next"===this.method&&(this.arg=t),x}},n}e.exports=r,e.exports.__esModule=!0,e.exports.default=e.exports},738:e=>{function t(n){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},756:(e,t,n)=>{var s=n(633)();e.exports=s;try{regeneratorRuntime=s}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=s:Function("r","regeneratorRuntime = r")(s)}}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.loaded=!0,n.exports}__webpack_require__.amdD=function(){throw new Error("define cannot be used indirect")},__webpack_require__.amdO={},__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var __webpack_exports__={};(()=>{"use strict";var e={};__webpack_require__.r(e),__webpack_require__.d(e,{assertParamsValid:()=>Ua,computeFlatOffset:()=>to,computeOutShape:()=>Va,getNormalizedAxes:()=>qa,isSliceContinous:()=>eo,maskToAxes:()=>Ga,parseSliceParams:()=>no,sliceInfo:()=>so,startForAxis:()=>Za,startIndicesWithElidedDims:()=>Xa,stopForAxis:()=>Qa,stopIndicesWithElidedDims:()=>Ya,stridesForAxis:()=>Ja,stridesWithElidedDims:()=>Ha});var t={};__webpack_require__.r(t),__webpack_require__.d(t,{collectGatherOpShapeInfo:()=>yh,computeOutShape:()=>bh,segOpComputeOptimalWindowSize:()=>mh});var n={};__webpack_require__.r(n),__webpack_require__.d(n,{ERF_A1:()=>Fc,ERF_A2:()=>Oc,ERF_A3:()=>Lc,ERF_A4:()=>Mc,ERF_A5:()=>Pc,ERF_P:()=>_c,PARALLELIZE_THRESHOLD:()=>xc,RowPartitionType:()=>fc,SELU_SCALE:()=>Dc,SELU_SCALEALPHA:()=>Ac,applyActivation:()=>ku,assertAndGetBroadcastShape:()=>Sa,assertAxesAreInnerMostDims:()=>fl,assertParamsConsistent:()=>dc,assignToTypedArray:()=>Vc,axesAreInnerMostDims:()=>cl,calculateShapes:()=>Rc,checkEinsumDimSizes:()=>Qc,checkPadOnDimRoundingMode:()=>Io,combineLocations:()=>hl,combineRaggedTensorToTensorShapes:()=>gc,complexWithEvenIndex:()=>Wc,complexWithOddIndex:()=>Uc,computeConv2DInfo:()=>ho,computeConv3DInfo:()=>po,computeDefaultPad:()=>fo,computeDilation2DInfo:()=>lo,computeOptimalWindowSize:()=>kc,computeOutAndReduceShapes:()=>dl,computeOutShape:()=>pc,computePool2DInfo:()=>uo,computePool3DInfo:()=>co,convertConv2DDataFormat:()=>wo,decodeEinsumEquation:()=>Jc,eitherStridesOrDilationsAreOne:()=>ko,expandShapeToKeepDim:()=>pl,exponent:()=>jc,exponents:()=>Hc,fromStringArrayToUint8:()=>kh,fromUint8ToStringArray:()=>xh,getAxesPermutation:()=>gl,getBroadcastDims:()=>Ia,getComplexWithIndex:()=>Gc,getEinsumComputePath:()=>eh,getEinsumPermutation:()=>Zc,getFusedBiasGradient:()=>xu,getFusedDyActivation:()=>yu,getImageCenter:()=>vc,getInnerMostAxes:()=>bl,getPermuted:()=>Ic,getRaggedRank:()=>bc,getReductionAxes:()=>Ta,getReshaped:()=>wc,getReshapedPermuted:()=>Tc,getRowPartitionTypesHelper:()=>mc,getSliceBeginCoords:()=>Sc,getSliceSize:()=>Cc,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>rh,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>ih,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ah,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>uh,getSparseReshapeInputOutputMismatchErrorMessage:()=>hh,getSparseReshapeInputOutputMultipleErrorMessage:()=>ch,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>oh,getSparseReshapeNegativeOutputDimErrorMessage:()=>lh,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>gh,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>dh,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>ph,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>fh,getUndoAxesPermutation:()=>ml,isIdentityPermutation:()=>th,log:()=>Bs,mergeRealAndImagArrays:()=>zc,prepareAndValidate:()=>Nc,prepareSplitSize:()=>sh,segment_util:()=>t,shouldFuse:()=>vu,slice_util:()=>e,splitRealAndImagArrays:()=>Bc,stridesOrDilationsArePositive:()=>vo,tupleValuesAreOne:()=>xo,upcastType:()=>Pr,validateDefaultValueShape:()=>yc,validateInput:()=>Ec,validateUpdateShape:()=>$c,warn:()=>zs});var s={};function r(e,t,n,s,r,i,a){try{var o=e[i](a),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(s,r)}function i(e){return function(){var t=this,n=arguments;return new Promise((function(s,i){var a=e.apply(t,n);function o(e){r(a,s,i,o,l,"next",e)}function l(e){r(a,s,i,o,l,"throw",e)}o(void 0)}))}}__webpack_require__.r(s),__webpack_require__.d(s,{mx:()=>Jk,XI:()=>Gv,Nk:()=>Vv,f6:()=>jv,ct:()=>jk,YG:()=>Xv,hH:()=>tw,z3:()=>zw,sG:()=>Yw,uM:()=>tI,vS:()=>yI,qB:()=>CI,GG:()=>$I,lg:()=>_I,rq:()=>RI,cu:()=>jI,WR:()=>GI,GE:()=>XI,px:()=>JI,jC:()=>dT,He:()=>gT,hE:()=>ST,BF:()=>Aw,Dk:()=>OT,cl:()=>GT,_B:()=>nS,ub:()=>iS,_f:()=>lS,Ku:()=>fS,qy:()=>mS,Zy:()=>$S,bu:()=>AS,zv:()=>Mk,dH:()=>av,HS:()=>zv,yH:()=>JS,l3:()=>QS,z9:()=>tC,x6:()=>aC,_m:()=>pC,eW:()=>bC,GK:()=>kC,SP:()=>IC,yr:()=>SC,dl:()=>oI,Dw:()=>AC,xT:()=>OC,_X:()=>pv,wz:()=>UC});var a=__webpack_require__(756),o=__webpack_require__.n(a);const l={CaseType:{EMPTY:0,SNAKE:1,FRUIT:2,WALL:3,SNAKE_DEAD:4,SURROUNDED:5,FRUIT_GOLD:6,CROSSED:7},CaseTypeText:{0:"-",1:"o",2:"x",3:"#",4:"O",5:"/",6:"X",7:" "},CaseTypeAIValue:{0:0,1:1,2:.3,3:-1,4:-.5,5:0,6:.5,7:0},PlayerType:{AI:"PLAYER_AI",HUMAN:"PLAYER_HUMAN",HYBRID_HUMAN_AI:"PLAYER_HYBRID_HUMAN_AI"},AiLevel:{RANDOM:"AI_LEVEL_RANDOM",LOW:"AI_LEVEL_LOW",DEFAULT:"AI_LEVEL_DEFAULT",HIGH:"AI_LEVEL_HIGH",ULTRA:"AI_LEVEL_ULTRA",CUSTOM:"AI_LEVEL_CUSTOM",MOCK:"AI_LEVEL_MOCK"},OutputType:{TEXT:"OUTPUT_TEXT",GRAPHICAL:"OUTPUT_GRAPHICAL"},Setting:{CANVAS_WIDTH:800,CANVAS_HEIGHT:600,FONT_FAMILY:"Delius",FONT_SIZE:32,HEADER_HEIGHT_DEFAULT:75,TARGET_FPS:60,TIME_MULTIPLIER:15,IMAGE_SNAKE_HUE:75,IMAGE_SNAKE_SATURATION:50,IMAGE_SNAKE_VALUE:77,CARS_TO_PRERENDER:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","×"],APP_VERSION:"2.2",DATE_VERSION:"10/18/2020",PROB_GOLD_FRUIT_1_PLAYER:100,PROB_GOLD_FRUIT_MULTIPLE_PLAYERS:50,INFO_NOTIF_COLOR:"rgba(52, 152, 219, 0.5)",ERROR_NOTIF_COLOR:"rgba(231, 76, 60, 0.5)"},Direction:{UP:0,TOP:0,RIGHT:1,BOTTOM:2,DOWN:2,LEFT:3,ANGLE_1:4,ANGLE_2:5,ANGLE_3:6,ANGLE_4:7},Key:{UP:38,RIGHT:39,BOTTOM:40,LEFT:37,ENTER:13},ActionMapping:{38:0,39:1,40:2,37:3},ActionMappingInverse:{0:38,1:39,2:40,3:37},Error:{ROOM_NOT_FOUND:"ROOM_NOT_FOUND",ROOM_ALREADY_JOINED:"ROOM_ALREADY_JOINED",INVALID_SETTINGS:"INVALID_SETTINGS",MAX_ROOM_LIMIT_REACHED:"MAX_ROOM_LIMIT_REACHED",AUTHENTICATION_REQUIRED:"AUTHENTICATION_REQUIRED",ALREADY_CREATED_ROOM:"ALREADY_CREATED_ROOM",BANNED:"BANNED",DISCONNECTED:"DISCONNECTED"},GameState:{STARTING:"STARTING",STARTED:"STARTED",SEARCHING_PLAYERS:"SEARCHING_PLAYERS",AUTHENTICATION_SUCCESS:"AUTHENTICATION_SUCCESS"},AIModelLocation:"/models/model.json"};function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function h(e){var t=function(e){if("object"!=c(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}function d(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,h(s.key),s)}}function p(e,t,n){return t&&d(e.prototype,t),n&&d(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}var f=function(){function e(t,n,s){u(this,e),this.x=t,this.y=n,this.direction=s}return p(e,[{key:"copy",value:function(){return new e(this.x,this.y,this.direction)}},{key:"convertToKeyDirection",value:function(){switch(this.direction){case l.Direction.UP:return l.Key.UP;case l.Direction.RIGHT:return l.Key.RIGHT;case l.Direction.LEFT:return l.Key.LEFT;case l.Direction.BOTTOM:return l.Key.BOTTOM;default:return this.direction}}},{key:"convertToSimpleDirection",value:function(){switch(this.direction){case l.Key.UP:return l.Direction.UP;case l.Key.RIGHT:return l.Direction.RIGHT;case l.Key.LEFT:return l.Direction.LEFT;case l.Key.BOTTOM:return l.Direction.BOTTOM;default:return this.direction}}},{key:"equals",value:function(e){return null!=e&&this.x==e.x&&this.y==e.y}}])}();const g=function(e,t,n){return Math.floor((n?n():Math.random())*(t-e+1))+e},m=function(e,t){var n=e+t;return n>360?n-360:n<0?360+n:n};var b=__webpack_require__(391),y=__webpack_require__.n(b),x=__webpack_require__(293),k=function(){return p((function e(t,n,s,r,i,a,o,c,h,d){u(this,e),this.width=null==t?20:t,this.height=null==n?20:n,this.generateWalls=null!=s&&s,this.borderWalls=null!=r&&r,this.maze=null!=i&&i,this.mazeFirstPosition=new f(1,1,l.Direction.RIGHT),this.mazeForceAuto=null!=o&&o,this.grid,this.initialGrid,this.fruitPos,this.fruitPosGold,this.customGrid=a,this.seedGrid=c?""+parseInt(c):void 0,this.seedGame=c?""+parseInt(h):void 0,this.rngGrid,this.rngGame,this.probGoldFruitIncrease=null!=d&&d}),[{key:"init",value:function(){if(null!=this.customGrid||null!=this.initialGrid){var e;e=null!=this.initialGrid?this.initialGrid:this.customGrid,this.height=e.length,this.width=e[0].length,this.initialGrid=new Array(this.height),this.grid=new Array(this.height);for(var t=0;t<this.height;t++)this.initialGrid[t]=e[t].slice(),this.grid[t]=e[t].slice()}else{this.grid=new Array(this.height);for(var n=0;n<this.height;n++){this.grid[n]=new Array(this.width);for(var s=0;s<this.width;s++)this.borderWalls&&(0==n||n==this.height-1||0==s||s==this.width-1)||this.generateWalls&&this.rngGrid&&this.rngGrid()>.65||this.maze?this.grid[n][s]=l.CaseType.WALL:this.grid[n][s]=l.CaseType.EMPTY}this.maze?this.generateMaze():this.generateWalls&&this.fixWalls(this.borderWalls)}this.fruitPosGold=null}},{key:"reset",value:function(){this.grid=void 0,this.initialGrid=void 0,this.fruitPos=void 0,this.fruitPosGold=void 0,this.rngGrid=new(y())(this.seedGrid),this.rngGame=new(y())(this.seedGame)}},{key:"fixWalls",value:function(e){var t,n,s,r;e?(t=1,s=this.height-1,n=1,r=this.width-1):(t=0,s=this.height,n=0,r=this.width);for(var i=t;i<s;i++)for(var a=n;a<r;a++){var o=new f(a,i),u=this.getNextPosition(o,l.Direction.UP),c=this.getNextPosition(u,l.Direction.LEFT),h=this.getNextPosition(u,l.Direction.RIGHT),d=this.getNextPosition(o,l.Direction.BOTTOM),p=this.getNextPosition(d,l.Direction.LEFT),g=this.getNextPosition(d,l.Direction.RIGHT);this.get(c)!=l.CaseType.WALL&&this.get(h)!=l.CaseType.WALL&&this.get(p)!=l.CaseType.WALL&&this.get(g)!=l.CaseType.WALL||this.set(l.CaseType.EMPTY,o)}}},{key:"mazeRecursion",value:function(e,t){for(var n=function(e,t){for(var n,s,r=e.length-1;r>0;r--)n=Math.floor((t?t():Math.random())*(r+1)),s=e[r],e[r]=e[n],e[n]=s;return e}([l.Direction.UP,l.Direction.RIGHT,l.Direction.BOTTOM,l.Direction.LEFT],this.rngGrid),s=0;s<n.length;s++)switch(n[s]){case l.Direction.UP:if(e-2<=0)continue;this.get(new f(t,e-2))!=l.CaseType.EMPTY&&(this.set(l.CaseType.EMPTY,new f(t,e-2)),this.set(l.CaseType.EMPTY,new f(t,e-1)),this.mazeRecursion(e-2,t));break;case l.Direction.RIGHT:if(t+2>=this.width-1)continue;this.get(new f(t+2,e))!=l.CaseType.EMPTY&&(this.set(l.CaseType.EMPTY,new f(t+2,e)),this.set(l.CaseType.EMPTY,new f(t+1,e)),this.mazeRecursion(e,t+2));break;case l.Direction.BOTTOM:if(e+2>=this.height-1)continue;this.get(new f(t,e+2))!=l.CaseType.EMPTY&&(this.set(l.CaseType.EMPTY,new f(t,e+2)),this.set(l.CaseType.EMPTY,new f(t,e+1)),this.mazeRecursion(e+2,t));break;case l.Direction.LEFT:if(t-2<=0)continue;this.get(new f(t-2,e))!=l.CaseType.EMPTY&&(this.set(l.CaseType.EMPTY,new f(t-2,e)),this.set(l.CaseType.EMPTY,new f(t-1,e)),this.mazeRecursion(e,t-2))}}},{key:"generateMaze",value:function(){this.mazeFirstPosition=new f(1,1,l.Direction.RIGHT),this.set(l.CaseType.EMPTY,this.mazeFirstPosition),this.mazeRecursion(1,1)}},{key:"set",value:function(e,t){this.grid[t.y][t.x]=e}},{key:"get",value:function(e){return this.grid[e.y][e.x]}},{key:"valToChar",value:function(e){return l.CaseTypeText[e]}},{key:"getImageCase",value:function(e){switch(this.get(e)){case l.CaseType.WALL:return"wall.png";case l.CaseType.FRUIT:return"fruit.png";case l.CaseType.FRUIT_GOLD:return"fruit_gold.png";case l.CaseType.EMPTY:case l.CaseType.SNAKE:case l.CaseType.SNAKE_DEAD:case l.CaseType.SURROUNDED:case l.CaseType.CROSSED:return""}return"unknown.png"}},{key:"getGraph",value:function(e){for(var t=new Array(this.height),n=0;n<this.height;n++){t[n]=new Array(this.width);for(var s=0;s<this.width;s++){var r=new f(s,n);e&&this.get(r)==l.CaseType.SNAKE?t[n][s]=0:this.isDeadPosition(r)?t[n][s]=1:t[n][s]=0}}return t}},{key:"getRandomPosition",value:function(){return new f(g(0,this.width-1,this.rngGame),g(0,this.height-1,this.rngGame))}},{key:"setFruit",value:function(e,t){var n,s,r=[1];if(t||null==this.fruitPos||this.get(this.fruitPos)!=l.CaseType.FRUIT||this.set(l.CaseType.EMPTY,this.fruitPos),!(this.getTotal(l.CaseType.EMPTY)>0))return!!(this.getTotal(l.CaseType.EMPTY)<=0&&this.fruitPosGold);do{if(n=this.getRandomPosition(),(s=this.detectCorridor(n))&&this.get(n)==l.CaseType.EMPTY&&this.set(l.CaseType.SURROUNDED,n),this.getTotal(l.CaseType.EMPTY)<=0)return!!this.fruitPosGold}while(this.get(n)!=l.CaseType.EMPTY||this.isFruitSurrounded(n,!0)||this.maze&&!this.testFruitMaze(n,r)||s);return t?(this.fruitPosGold=n,this.set(l.CaseType.FRUIT_GOLD,n)):(this.fruitPos=n,this.set(l.CaseType.FRUIT,n)),this.maze||null!=this.fruitPosGold||1!=g(1,this.probGoldFruitIncrease?3:e>1?l.Setting.PROB_GOLD_FRUIT_MULTIPLE_PLAYERS:l.Setting.PROB_GOLD_FRUIT_1_PLAYER,this.rngGame)||this.setFruit(e,!0),!0}},{key:"testFruitMaze",value:function(e,t){var n=this.getGraph(!0);return new x.Astar.Configuration(n,{order:"yx",torus:!1,diagonals:!1,cutting:!1,cost:function(e,t){return 1==t?null:1}}).path({x:this.mazeFirstPosition.x,y:this.mazeFirstPosition.y},{x:e.x,y:e.y}).length<Math.ceil(this.getTotal(l.CaseType.EMPTY)/(1*Math.ceil(t[0]/4)))?(t[0]++,!1):(t[0]++,!0)}},{key:"isCaseSurrounded",value:function(e,t,n,s){if(!e)return!1;for(var r=JSON.parse(JSON.stringify(this.grid)),i=[e];i.length>0;){var a=i[0];i.shift();for(var o=[this.getNextPosition(a,l.Direction.UP),this.getNextPosition(a,l.Direction.BOTTOM),this.getNextPosition(a,l.Direction.LEFT),this.getNextPosition(a,l.Direction.RIGHT)],u=0;u<o.length;u++)if(r[o[u].y][o[u].x]!=l.CaseType.CROSSED&&s.indexOf(this.get(o[u]))>-1){if(i.push(o[u]),n.indexOf(this.get(o[u]))>-1)return!1;t&&this.get(o[u])==l.CaseType.EMPTY?(this.set(l.CaseType.SURROUNDED,o[u]),r[o[u].y][o[u].x]=l.CaseType.SURROUNDED):r[o[u].y][o[u].x]=l.CaseType.CROSSED}}return(t&&(this.get(e)==l.CaseType.EMPTY||this.get(e)==l.CaseType.FRUIT)||this.get(e)==l.CaseType.FRUIT_GOLD)&&this.set(l.CaseType.SURROUNDED,e),!0}},{key:"isFruitSurrounded",value:function(e,t){var n=this.isCaseSurrounded(e,!1,[l.CaseType.SNAKE],[l.CaseType.EMPTY,l.CaseType.SNAKE]);return n&&t&&this.isCaseSurrounded(e,!0,[l.CaseType.SNAKE],[l.CaseType.EMPTY,l.CaseType.SNAKE]),n}},{key:"detectCorridor",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.grid?JSON.parse(JSON.stringify(this.grid)):null;if(this.maze||!e||!t)return!1;var n=this.getNextPosition(e,l.Direction.TOP),s=this.getNextPosition(e,l.Direction.BOTTOM),r=this.getNextPosition(e,l.Direction.RIGHT),i=this.getNextPosition(e,l.Direction.LEFT),a=this.isDeadPosition(n,!0,!0)+this.isDeadPosition(s,!0,!0)+this.isDeadPosition(r,!0,!0)+this.isDeadPosition(i,!0,!0);if(a<=1||this.isDeadPosition(e,!0))return!1;if(a>=3)return!0;t[e.y][e.x]=l.CaseType.CROSSED;var o=t[n.y][n.x]!=l.CaseType.CROSSED&&this.detectCorridor(n,t),u=t[s.y][s.x]!=l.CaseType.CROSSED&&this.detectCorridor(s,t),c=t[i.y][i.x]!=l.CaseType.CROSSED&&this.detectCorridor(i,t),h=t[r.y][r.x]!=l.CaseType.CROSSED&&this.detectCorridor(r,t);return!!(u||o||c||h)}},{key:"getOnLine",value:function(e,t){for(var n=0,s=0;s<this.width;s++)this.get(new f(s,t))==e&&n++;return n}},{key:"getTotal",value:function(e){for(var t=0,n=0;n<this.height;n++)t+=this.getOnLine(e,n);return t}},{key:"getNextPosition",value:function(e,t){var n=new f(e.x,e.y,t);switch(t){case l.Direction.LEFT:n.x--,n.direction=l.Direction.LEFT;break;case l.Direction.UP:n.y--,n.direction=l.Direction.UP;break;case l.Direction.RIGHT:n.x++,n.direction=l.Direction.RIGHT;break;case l.Direction.BOTTOM:n.y++,n.direction=l.Direction.BOTTOM;break;case l.Key.LEFT:n.x--,n.direction=l.Key.LEFT;break;case l.Key.UP:n.y--,n.direction=l.Key.UP;break;case l.Key.RIGHT:n.x++,n.direction=l.Direction.RIGHT;break;case l.Key.BOTTOM:n.y++,n.direction=l.Direction.BOTTOM}return n.x<0?n.x=this.width-1:n.x>=this.width&&(n.x=0),n.y<0?n.y=this.height-1:n.y>=this.height&&(n.y=0),n}},{key:"getDirectionTo",value:function(e,t){return this.getNextPosition(e,l.Direction.UP).equals(t)?l.Direction.UP:this.getNextPosition(e,l.Direction.BOTTOM).equals(t)?l.Direction.BOTTOM:this.getNextPosition(e,l.Direction.RIGHT).equals(t)?l.Direction.RIGHT:this.getNextPosition(e,l.Direction.LEFT).equals(t)?l.Direction.LEFT:-1}},{key:"invertDirection",value:function(e){return e==l.Direction.UP?l.Direction.BOTTOM:e==l.Direction.BOTTOM?l.Direction.UP:e==l.Direction.RIGHT?l.Direction.LEFT:e==l.Direction.LEFT?l.Direction.RIGHT:null}},{key:"isDeadPosition",value:function(e,t,n){return!t&&this.get(e)==l.CaseType.SNAKE||this.get(e)==l.CaseType.WALL||this.get(e)==l.CaseType.SNAKE_DEAD||!!n&&this.get(e)==l.CaseType.SURROUNDED}},{key:"toString",value:function(){for(var e="",t=0;t<this.height;t++){for(var n=0;n<this.width;n++)e+=this.valToChar(this.get(new f(n,t)))+" ";e+="\n"}return e}}])}(),v=function(){return p((function e(){u(this,e),this.aiFruitGoal=l.CaseType.FRUIT,this._aiLevelText="custom"}),[{key:"ai",value:function(e){var t=e.getHeadPosition(),n=e.grid.fruitPos,s=e.grid.fruitPosGold;if(n&&e.grid.get(n)==l.CaseType.FRUIT){var r=Math.abs(n.x-t.x)+Math.abs(n.y-t.y),i=s?Math.abs(s.x-t.x)+Math.abs(s.y-t.y):-1;s&&e.grid.get(s)==l.CaseType.FRUIT_GOLD&&this.aiFruitGoal==l.CaseType.FRUIT?this.aiFruitGoal=i<=r?l.CaseType.FRUIT_GOLD:l.CaseType.FRUIT:s&&e.grid.get(s)==l.CaseType.FRUIT_GOLD||(this.aiFruitGoal=l.CaseType.FRUIT)}else n&&e.grid.get(n)==l.CaseType.FRUIT||!s||e.grid.get(s)!=l.CaseType.FRUIT_GOLD||(this.aiFruitGoal=l.CaseType.FRUIT_GOLD);return null}},{key:"aiLevelText",get:function(){return this._aiLevelText}}])}();function w(e,t){if(t&&("object"==c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var s=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(s){var r=Object.getOwnPropertyDescriptor(s,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},T.apply(null,arguments)}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function C(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}function N(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(N=function(){return!!e})()}var $=function(e){function t(){var e,n,s,r;return u(this,t),n=this,s=I(s=t),(e=w(n,N()?Reflect.construct(s,[],I(n).constructor):s.apply(n,r)))._aiLevelText="random",e}return C(t,e),p(t,[{key:"ai",value:function(e){!function(e,t,n){var s=T(I(e.prototype),"ai",n);return"function"==typeof s?function(e){return s.apply(n,e)}:s}(t,0,this)([e]);var n=e.getHeadPosition(),s=e.grid.isDeadPosition(e.getNextPosition(n,l.Key.UP)),r=e.grid.isDeadPosition(e.getNextPosition(n,l.Key.LEFT)),i=e.grid.isDeadPosition(e.getNextPosition(n,l.Key.BOTTOM)),a=e.grid.isDeadPosition(e.getNextPosition(n,l.Key.RIGHT));if(s&&r&&i&&a)return l.Key.UP;for(var o=null;null==o||e.grid.isDeadPosition(e.getNextPosition(n,o));)switch(g(1,4,e.grid?e.grid.rngGame:null)){case 1:o=l.Key.UP;break;case 2:o=l.Key.LEFT;break;case 3:o=l.Key.BOTTOM;break;case 4:o=l.Key.RIGHT}return o}}])}(v);function E(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(E=function(){return!!e})()}var R=function(e){function t(){var e,n,s,r;return u(this,t),n=this,s=I(s=t),(e=w(n,E()?Reflect.construct(s,[],I(n).constructor):s.apply(n,r)))._aiLevelText="low",e}return C(t,e),p(t,[{key:"ai",value:function(e){if(function(e,t,n){var s=T(I(e.prototype),"ai",n);return"function"==typeof s?function(e){return s.apply(n,e)}:s}(t,0,this)([e]),null!=e.grid.fruitPos){var n=e.getHeadPosition(),s=this.aiFruitGoal==l.CaseType.FRUIT_GOLD?e.grid.fruitPosGold:e.grid.fruitPos,r=l.Key.RIGHT;s.x>n.x?r=s.x-n.x>e.grid.width/2?l.Key.LEFT:l.Key.RIGHT:s.x<n.x?r=n.x-s.x>e.grid.width/2?l.Key.RIGHT:l.Key.LEFT:s.y<n.y?r=n.y-s.y>e.grid.height/2?l.Key.BOTTOM:l.Key.UP:s.y>n.y&&(r=s.y-n.y>e.grid.height/2?l.Key.UP:l.Key.BOTTOM);var i=e.getNextPosition(n,r);if(e.grid.isDeadPosition(i)){for(var a=this.direction,o=null,u=1;u<e.queue.length;u++)if(e.get(u).direction!=a){o=e.get(u).direction;break}i=e.getNextPosition(n,o),e.grid.isDeadPosition(i)?e.grid.isDeadPosition(e.getNextPosition(n,l.Key.UP))?e.grid.isDeadPosition(e.getNextPosition(n,l.Key.RIGHT))?e.grid.isDeadPosition(e.getNextPosition(n,l.Key.BOTTOM))?e.grid.isDeadPosition(e.getNextPosition(n,l.Key.LEFT))||(r=l.Key.LEFT):r=l.Key.BOTTOM:r=l.Key.RIGHT:r=l.Key.UP:r=i.convertToKeyDirection()}return r}}}])}(v);function A(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(A=function(){return!!e})()}var D=function(e){function t(e){var n,s,r,i;return u(this,t),s=this,r=I(r=t),(n=w(s,A()?Reflect.construct(r,[],I(s).constructor):r.apply(s,i))).enableTorus=e,n._aiLevelText="normal",n}return C(t,e),p(t,[{key:"ai",value:function(e){!function(e,t,n){var s=T(I(e.prototype),"ai",n);return"function"==typeof s?function(e){return s.apply(n,e)}:s}(t,0,this)([e]);var n=e.getHeadPosition(),s=e.grid.fruitPos,r=e.grid.fruitPosGold,i=s;if(n&&(s||r)){var a=e.grid.getGraph(!1),o=new x.Astar.Configuration(a,{order:"yx",torus:!!this.enableTorus,diagonals:!1,cutting:!1,static:!0,cost:function(e,t){return 1==t?null:1}});r&&this.aiFruitGoal==l.CaseType.FRUIT_GOLD&&(i=r);var u=o.path({x:n.x,y:n.y},{x:i?i.x:null,y:i?i.y:null});if(u.length<1&&(this.aiFruitGoal!=l.CaseType.FRUIT_GOLD&&r||(i=s),u=o.path({x:n.x,y:n.y},{x:i?i.x:null,y:i?i.y:null})),u.length>1){var c=new f(u[1].x,u[1].y);return new f(null,null,e.getDirectionTo(n,c)).convertToKeyDirection()}u=null}return null}}])}(v);function _(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(_=function(){return!!e})()}var F=function(e){function t(e){var n,s,r,i;return u(this,t),s=this,i=[!0],r=I(r=t),(n=w(s,_()?Reflect.construct(r,i||[],I(s).constructor):r.apply(s,i))).aiLow=new R(e),n._aiLevelText="high",n}return C(t,e),p(t,[{key:"ai",value:function(e){var n=function(e,t,n){var s=T(I(e.prototype),"ai",n);return"function"==typeof s?function(e){return s.apply(n,e)}:s}(t,0,this)([e]);return n||this.aiLow.ai(e)}}])}(D);function O(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,s=Array(t);n<t;n++)s[n]=e[n];return s}function L(e){return function(e){if(Array.isArray(e))return O(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return O(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?O(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}class M{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class P{refCount(e){return z("refCount")}incRef(e){return z("incRef")}timerAvailable(){return!0}time(e){return z("time")}read(e){return z("read")}readSync(e){return z("readSync")}readToGPU(e,t){return z("readToGPU")}numDataIds(){return z("numDataIds")}disposeData(e,t){return z("disposeData")}write(e,t,n){return z("write")}move(e,t,n,s,r){return z("move")}createTensorFromGPUData(e,t,n){return z("createTensorFromGPUData")}memory(){return z("memory")}floatPrecision(){return z("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return z("dispose")}}function z(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function B(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,G(e,t,n)}function W(e,t,n){return Math.max(e,Math.min(t,n))}function U(e){return e%2==0?e:e+1}function G(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function V(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function H(e,t,n=""){V(q(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function j(e){V(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function K(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function q(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function X(e){return e%1==0}function Y(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function J(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Z(e,t=e=>0,n,s){return new Promise(((r,i)=>{let a=0;const o=()=>{if(e())return void r();a++;const l=t(a);null!=n&&a>=n?i():null!=s?s(o,l):setTimeout(o,l)};o()}))}function Q(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function ee(e,t){const n=t.length;return V((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),V(e.every((e=>X(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function te(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||r?null:ee(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[a]||i[a]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),i[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function ne(e,t){return se(e,t)}function se(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function re(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ie(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ae(e){return"string"==typeof e||e instanceof String}function oe(e){return"number"==typeof e}function le(e){return Array.isArray(e)?le(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":oe(e)?"float32":ae(e)?"string":"boolean"==typeof e?"bool":"float32"}function ue(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ce(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function he(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function de(e,t,n,s=!1){const r=new Array;if(1===t.length){const i=t[0]*(s?2:1);for(let t=0;t<i;t++)r[t]=n[e+t]}else{const i=t[0],a=t.slice(1),o=a.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<i;t++)r[t]=de(e+t*o,a,n,s)}return r}function pe(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return de(0,e,t,n)}function fe(e,t){const n=ge(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ge(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function me(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return pe(e,new Float32Array(n));if("int32"===t)return pe(e,new Int32Array(n));if("bool"===t)return pe(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function be(e){e.forEach((t=>{V(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ye(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function xe(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function ke(e){return e&&e.then&&"function"==typeof e.then}const ve="tfjsflags";class we{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ie,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Te().getBool("IS_TEST")||Te().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Te().getBool("IS_TEST")||Te().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ke(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);ve in e&&e[ve].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function Ie(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Te(){return Ce}let Se,Ce=null;function Ne(){if(null==Se){let e;if("undefined"!=typeof window)e=window;else if(void 0!==__webpack_require__.g)e=__webpack_require__.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Se=e}return Se}function $e(e,t){const n=function(){const e=Ne();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const Ee="Abs",Re="Acos",Ae="Acosh",De="Add",_e="AddN",Fe="All",Oe="Any",Le="ArgMax",Me="ArgMin",Pe="Asin",ze="Asinh",Be="Atan",We="Atanh",Ue="Atan2",Ge="AvgPool",Ve="AvgPoolGrad",He="AvgPool3D",je="AvgPool3DGrad",Ke="BatchMatMul",qe="BatchToSpaceND",Xe="Bincount",Ye="BitwiseAnd",Je="BroadcastArgs",Ze="Cast",Qe="Ceil",et="ClipByValue",tt="Complex",nt="ComplexAbs",st="Concat",rt="Conv2D",it="Conv2DBackpropFilter",at="Conv2DBackpropInput",ot="Conv3D",lt="Conv3DBackpropFilterV2",ut="Conv3DBackpropInputV2",ct="Cos",ht="Cosh",dt="Cumprod",pt="Cumsum",ft="CropAndResize",gt="DenseBincount",mt="DepthToSpace",bt="DepthwiseConv2dNative",yt="DepthwiseConv2dNativeBackpropFilter",xt="DepthwiseConv2dNativeBackpropInput",kt="Diag",vt="Dilation2D",wt="Dilation2DBackpropInput",It="Dilation2DBackpropFilter",Tt="RealDiv",St="Einsum",Ct="Elu",Nt="EluGrad",$t="Erf",Et="Equal",Rt="Exp",At="ExpandDims",Dt="Expm1",_t="FFT",Ft="Fill",Ot="FlipLeftRight",Lt="Floor",Mt="FloorDiv",Pt="FusedBatchNorm",zt="GatherV2",Bt="GatherNd",Wt="Greater",Ut="GreaterEqual",Gt="Identity",Vt="IFFT",Ht="Imag",jt="IsFinite",Kt="IsInf",qt="IsNan",Xt="LeakyRelu",Yt="Less",Jt="LessEqual",Zt="LinSpace",Qt="Log",en="Log1p",tn="LogicalAnd",nn="LogicalNot",sn="LogicalOr",rn="LRN",an="LRNGrad",on="Max",ln="Maximum",un="MaxPool",cn="MaxPoolGrad",hn="MaxPool3D",dn="MaxPool3DGrad",pn="MaxPoolWithArgmax",fn="Mean",gn="Min",mn="Minimum",bn="MirrorPad",yn="Mod",xn="Multinomial",kn="Multiply",vn="Neg",wn="NotEqual",In="NonMaxSuppressionV3",Tn="NonMaxSuppressionV4",Sn="NonMaxSuppressionV5",Cn="OnesLike",Nn="OneHot",$n="Pack",En="PadV2",Rn="Pow",An="Prelu",Dn="Prod",_n="RaggedGather",Fn="RaggedRange",On="RaggedTensorToTensor",Ln="Range",Mn="Real",Pn="Reciprocal",zn="Relu",Bn="Reshape",Wn="ResizeNearestNeighbor",Un="ResizeNearestNeighborGrad",Gn="ResizeBilinear",Vn="ResizeBilinearGrad",Hn="Relu6",jn="Reverse",Kn="Round",qn="Rsqrt",Xn="ScatterNd",Yn="TensorScatterUpdate",Jn="SearchSorted",Zn="Select",Qn="Selu",es="Slice",ts="Sin",ns="Sinh",ss="Sign",rs="Sigmoid",is="Softplus",as="Sqrt",os="Sum",ls="SpaceToBatchND",us="SplitV",cs="Softmax",hs="SparseFillEmptyRows",ds="SparseReshape",ps="SparseSegmentMean",fs="SparseSegmentSum",gs="SparseToDense",ms="SquaredDifference",bs="Square",ys="StaticRegexReplace",xs="StridedSlice",ks="StringNGrams",vs="StringSplit",ws="StringToHashBucketFast",Is="Sub",Ts="Tan",Ss="Tanh",Cs="Tile",Ns="TopK",$s="Transform",Es="Transpose",Rs="Unique",As="Unpack",Ds="UnsortedSegmentSum",_s="ZerosLike",Fs="Step",Os="RotateWithOffset",Ls="_FusedMatMul",Ms="FusedConv2D",Ps="FusedDepthwiseConv2D";function zs(...e){Te().getBool("IS_TEST")||Te().getBool("PROD")||console.warn(...e)}function Bs(...e){Te().getBool("IS_TEST")||Te().getBool("PROD")||console.log(...e)}const Ws=$e("kernelRegistry",(()=>new Map)),Us=$e("gradRegistry",(()=>new Map));function Gs(e,t){const n=qs(e,t);return Ws.get(n)}function Vs(e){return Us.get(e)}function Hs(e){const t=Ws.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===e&&n.push(a)}return n}function js(e){const{kernelName:t,backendName:n}=e,s=qs(t,n);Ws.has(s)&&zs(`The kernel '${t}' for backend '${n}' is already registered`),Ws.set(s,e)}function Ks(e){const{kernelName:t}=e;Us.has(t)&&Te().getBool("DEBUG")&&zs(`Overriding the gradient for '${t}'`),Us.set(t,e)}function qs(e,t){return`${t}_${e}`}function Xs(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Ys=__webpack_require__(570);const Js=__webpack_require__.n(Ys)()||Ys;function Zs(e){return Js.fromString(e,!0,16)}const Qs=Zs("c3a5c85c97cb3127"),er=Zs("b492b66fbe98f273"),tr=Zs("9ae16a3b2f90404f");function nr(e){return e.xor(e.shru(47))}function sr(e,t,n){const s=e.slice(t,t+n);return Js.fromBytes(Array.from(s),!0,!0)}function rr(e,t){return sr(e,t,8)}function ir(e,t){return sr(e,t,4)}function ar(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function or(e,t,n=Zs("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function lr(e,t,n,s){return function(e,t,n,s,r,i){r=r.add(e),i=ar(i.add(r).add(s),21);const a=r;return r=(r=r.add(t)).add(n),i=i.add(ar(r,44)),[r.add(s),i.add(a)]}(rr(e,t),rr(e,t+8),rr(e,t+16),rr(e,t+24),n,s)}function ur(e,t=e.length){const n=Js.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=tr.add(2*t),s=rr(e,0).add(tr),r=rr(e,t-8);return or(ar(r,37).mul(n).add(s),ar(s,25).add(r).mul(n),n)}if(t>=4){const n=tr.add(2*t);return or(ir(e,0).shl(3).add(t),ir(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return nr(tr.mul(n).xor(Qs.mul(s))).mul(tr)}return tr}(e,t):function(e,t=e.length){const n=tr.add(2*t),s=rr(e,0).mul(er),r=rr(e,8),i=rr(e,t-8).mul(n),a=rr(e,t-16).mul(tr);return or(ar(s.add(r),43).add(ar(i,30)).add(a),s.add(ar(r.add(tr),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=tr.add(2*t),s=rr(e,0).mul(tr),r=rr(e,8),i=rr(e,t-8).mul(n),a=rr(e,t-16).mul(tr),o=ar(s.add(r),43).add(ar(i,30)).add(a),l=or(o,s.add(ar(r.add(tr),18)).add(i),n),u=rr(e,16).mul(n),c=rr(e,24),h=o.add(rr(e,t-32)).mul(n),d=l.add(rr(e,t-24)).mul(n);return or(ar(u.add(c),43).add(ar(h,30)).add(d),u.add(ar(c.add(s),18)).add(h),n)}(e,t);let s=n,r=n.mul(er).add(113),i=nr(r.mul(tr).add(113)).mul(tr),a=[Js.UZERO,Js.UZERO],o=[Js.UZERO,Js.UZERO];s=s.mul(tr).add(rr(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=ar(s.add(r).add(a[0]).add(rr(e,l+8)),37).mul(er),r=ar(r.add(a[1]).add(rr(e,l+48)),42).mul(er),s=s.xor(o[1]),r=r.add(a[0]).add(rr(e,l+40)),i=ar(i.add(o[0]),33).mul(er),a=lr(e,l,a[1].mul(er),s.add(o[0])),o=lr(e,l+32,i.add(o[1]),r.add(rr(e,l+16))),[i,s]=[s,i],l+=64}while(l!==u);const h=er.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),s=ar(s.add(r).add(a[0]).add(rr(e,l+8)),37).mul(h),r=ar(r.add(a[1]).add(rr(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(a[0].mul(9).add(rr(e,l+40))),i=ar(i.add(o[0]),33).mul(h),a=lr(e,l,a[1].mul(h),s.add(o[0])),o=lr(e,l+32,i.add(o[1]),r.add(rr(e,l+16))),[i,s]=[s,i],or(or(a[0],o[0],h).add(nr(r).mul(Qs)).add(i),or(a[1],o[1],h).add(s),h)}function cr(e,t){return"string"===t?pr(e):hr([e],t)}function hr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=mr(e)),Te().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function dr(){return Te().platform.now()}function pr(e,t="utf-8"){return t=t||"utf-8",Te().platform.encode(e,t)}function fr(e,t="utf-8"){return t=t||"utf-8",Te().platform.decode(e,t)}function gr(e){return null!=Te().platform.isTypedArray?Te().platform.isTypedArray(e):Xs(e)}function mr(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||ke(e)||null==e||gr(e)&&n)t.push(e);else if(Array.isArray(e)||gr(e))for(let s=0;s<e.length;++s)mr(e[s],t,n);else{let s=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(s=Math.max(s,Number(t)));for(let r=0;r<=s;r++)mr(e[r],t,n)}return t}class br{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new xr)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let i;const a=dr();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();i=Promise.resolve({kernelMs:dr()-a})}if(Te().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{yr(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),s,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function yr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class xr{logKernelProfile(e,t,n,s,r,i){const a="number"==typeof s?J(`${s}ms`,9):s.error,o=J(e,25),l=t.rank,u=t.size,c=J(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;h+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function kr(e,t,n,s){const r=he(t),i=function(e,t,n,s){const r=K(t),i=s[s.length-1],a=new Array(i).fill(0),o=t.length,l="complex64"===n?Tr(e):e;if(o>1)for(let e=0;e<r/i;e++){const t=e*i;for(let e=0;e<i;e++)a[e]=Math.max(a[e],vr(l[t+e],0,n).length)}return a}(e,t,n,r),a=t.length,o=Ir(e,t,n,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function vr(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ae(e)?`'${e}'`:"bool"===n?wr(e):parseFloat(e.toFixed(7)).toString(),J(s,t)}function wr(e){return 0===e?"false":"true"}function Ir(e,t,n,s,r,i=!0){const a="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[vr(Tr(e)[0],0,n)]:"bool"===n?[wr(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*a;let s=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-3)*a,o*a));return"complex64"===n&&(s=Tr(s),i=Tr(i)),["["+s.map(((e,t)=>vr(e,r[t],n))).join(", ")+", ..., "+i.map(((e,t)=>vr(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Tr(e):Array.from(e)).map(((e,t)=>vr(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*a,d=[];if(o>20){for(let t=0;t<3;t++){const s=t*h,i=s+h;d.push(...Ir(e.slice(s,i),u,n,c,r,!1))}d.push("...");for(let t=o-3;t<o;t++){const s=t*h,i=s+h;d.push(...Ir(e.slice(s,i),u,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const s=t*h,i=s+h;d.push(...Ir(e.slice(s,i),u,n,c,r,t===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Tr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Sr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=K(e),null!=n){const e=n.length;V(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||se(t,this.size),this.strides=he(e)}set(e,...t){0===t.length&&(t=[0]),V(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Cr().makeTensor(this.values,this.shape,this.dtype)}}let Cr=null,Nr=null,$r=null;class Er{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=K(e),this.strides=he(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Nr.buffer(this.shape,this.dtype,e)}bufferSync(){return Nr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return pe(this.shape,e,"complex64"===this.dtype)}arraySync(){return pe(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Cr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>fr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Cr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Cr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>fr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Cr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Cr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Nr.print(this,e)}clone(){return this.throwIfDisposed(),Nr.clone(this)}toString(e=!1){return kr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Nr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Cr().makeVariable(this,e,t,n)}}function Rr(){return $e("Tensor",(()=>Er))}Object.defineProperty(Er,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Rr();class Ar extends Er{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!q(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Cr().disposeTensor(this),this.dataId=e.dataId,Cr().incRef(this,null)}dispose(){Cr().disposeVariable(this),this.isDisposedInternal=!0}}var Dr,_r,Fr,Or,Lr;Object.defineProperty(Ar,Symbol.hasInstance,{value:e=>e instanceof Er&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Dr||(Dr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(_r||(_r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Fr||(Fr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Or||(Or={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Lr||(Lr={}));const Mr={float32:Or,int32:_r,bool:Fr,complex64:Lr};function Pr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Mr[e][t]}function zr(e){return Pr(e,"int32")}function Br(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Wr(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Ur(e,t){if(e.dtype===t.dtype)return[e,t];const n=Pr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Gr(e,t){return t.some((t=>t.id===e.id))}function Vr(e){const t=[];return Hr(e,t,new Set),t}function Hr(e,t,n){if(null==e)return;if(e instanceof Er)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=e;for(const e in r){const s=r[e];n.has(s)||(n.add(s),Hr(s,t,n))}}function jr(e){return null!=e.kernelName}class Kr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class qr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Kr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(zs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new br(this.backendInstance),!0}setupRegisteredKernels(){Hs(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Hs(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof P||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,zs(`Initialization of backend ${e} failed`),zs(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return zs(`Initialization of backend ${e} failed`),zs(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),i=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return qr.nextTensorId++}nextVariableId(){return qr.nextVariableId++}clone(e){const t=Yr.runKernel(Gt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Yr.runKernel(Ze,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Gs(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-t-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=jr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(jr(e)){const{kernelName:t,inputs:r,attrs:i}=e;null==this.backendName&&this.backend;const l=Gs(t,this.backendName);V(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const u=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=jr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=a()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=Vs(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let i;s.saveAllInputs?(V(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const a=n.filter(((e,t)=>r[t]));return i.concat(a)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&ae(e[0])&&(r=e.map((e=>pr(e))));const i=s.write(r,t,n),a=new Er(t,n,i,this.nextTensorId());if(this.trackTensor(a,s),"string"===n){const e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,s){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,i=new Er(s,r,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new Ar(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ie(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ar||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ie(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Vs(e);null!=o&&(s=o.gradFunc),null!=s&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=ge(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Vr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(V(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));V(r instanceof Er,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],a=i.inputs;for(const e in a){const n=a[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){i.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in s)i[s[e].id]=!0,a[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=fe(K(e),"float32");return Yr.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const i=t[r],a=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const a=i.inputs[t];if(!q(r.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=r;else{const t=e[a.id];e[a.id]=s(t,r),t.dispose()}}}}(e,i,(e=>this.tidy(e)),Jr);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return V(ue(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;V(t.every((e=>e instanceof Er)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),V(n.value instanceof Er,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),V(ue(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),i=Array.isArray(r)?r:[r];V(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),V(i.every((e=>e instanceof Er)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((e,t)=>{a[t]=()=>e})),a},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=dr(),n=await this.backend.time(e);return n.wallMs=dr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Kr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Xr(){const e=Ne();if(null==e._tfengine){const t=new we(e);e._tfengine=new qr(t)}var t;return t=e._tfengine.ENV,Ce=t,Cr=()=>e._tfengine,e._tfengine}qr.nextTensorId=0,qr.nextVariableId=0;const Yr=Xr();function Jr(e,t){const n={a:e,b:t};return Yr.runKernel(De,n)}function Zr(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Qr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ei=Te();function ti(e,t){let n=e;if(gr(e))return"string"===t?[]:[e.length];if(Br(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Wr(e))return[e.buffer.size/(null==t?4:ie(t))];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||gr(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&Te().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ni(e,s,[]),s}function ni(e,t,n){if(n=n||[],!Array.isArray(e)&&!gr(e))return void V(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));V(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),V(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)ni(e[t],s,n.concat(t))}function si(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function ri(e,t,n,s="numeric"){if(e instanceof Rr())return si(s,e.dtype,t,n),e;let r=le(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),si(s,r,t,n),null==e||!gr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const i=ti(e,r);gr(e)||Array.isArray(e)||(e=[e]);const a="string"!==r?hr(e,r):mr(e,[],!0);return Yr.makeTensor(a,i,r)}function ii(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>ri(e,`${t}[${r}]`,n,s)))}function ai(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...e)=>{Yr.startScope(n);try{const t=s(...e);return ke(t)&&console.error("Cannot return a Promise inside of tidy."),Yr.endScope(t),t}catch(e){throw Yr.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}ei.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ei.registerFlag("IS_BROWSER",(()=>Qr())),ei.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ei.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ei.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),ei.registerFlag("PROD",(()=>!1)),ei.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ei.getBool("DEBUG"))),ei.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ei.registerFlag("IS_TEST",(()=>!1)),ei.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>ei.getBool("DEBUG"))),ei.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ei.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ei.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const oi=ai({complex_:function(e,t){const n=ri(e,"real","complex"),s=ri(t,"imag","complex");H(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return Yr.runKernel(tt,r)}});function li(e,t,n,s){if(null==s)s=le(e);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Wr(e)||Br(e)){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return Yr.backend.createTensorFromGPUData(e,t||n,s)}if(!gr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){be(t);const e=K(t),s=K(n);V(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==K(t.slice(e));V(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return gr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?hr(e,s):mr(e,[],!0),Yr.makeTensor(e,t,s)}function ui(e,t,n){return li(e,t,ti(e,n),n)}const ci={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class hi{static join(e){return new hi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>gr(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const s=e[n];n!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+s.byteLength;this.shards.push({buffer:s,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const s=new ArrayBuffer(t-e),r=new Uint8Array(s);let i=0;for(let s=n;s<this.shards.length;s++){const n=this.shards[s],a=e+i-n.start,o=i,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,a,l-a);if(r.set(u,o),i+=u.length,t<n.end)break}return s}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,s=e.length;for(;n<=s;){const r=Math.floor((s-n)/2)+n,i=t(e[r]);if(0===i)return r;i<0?s=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function di(){return Yr}function pi(){return Yr.memory()}function fi(e,t){return Yr.tidy(e,t)}function gi(e){Vr(e).forEach((e=>e.dispose()))}function mi(e){return Yr.keep(e)}function bi(e,t,n=1){return Yr.registerBackend(e,t,n)}async function yi(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<r.length;++i){const a=r[i],o=Array.isArray(e)?e[i].tensor:e[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(i,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:vi(await Promise.all(s)),specs:n}}function xi(e,t){const n=K(e.shape);let s;if("quantization"in e){const t=e.quantization;s=ci[t.dtype]}else{if("string"===e.dtype){let e=0;for(let s=0;s<n;s++)e+=4+new Uint32Array(t(e,e+4))[0];return e}s=ci[e.dtype]}return n*s}function ki(e,t){const n=e.name,s=e.dtype,r=e.shape,i=K(r);let a,o=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${s}.`)}const l=ci[r.dtype],u="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===s)if("uint8"===r.dtype||"uint16"===r.dtype){a=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];a[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let r=0;r<s.length;r++){const a=s[r],o=e[n[a>>10]+(1023&a)]+t[a>>10];i[r]=o}return new Float32Array(r)}}();a=e(u)}}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${n}': ${s}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);a=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];a[e]=Math.round(t*r.scale+r.min)}}o+=i*l}else if("string"===s){const n=K(e.shape);a=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+4))[0];o+=4;const n=new Uint8Array(t.slice(o,o+e));a.push(n),o+=e}}else{const e=ci[s];if("float32"===s)a=new Float32Array(t);else if("int32"===s)a=new Int32Array(t);else{if("bool"!==s){if("complex64"===s){a=new Float32Array(t);const e=new Float32Array(a.length/2),n=new Float32Array(a.length/2);for(let t=0;t<e.length;t++)e[t]=a[2*t],n[t]=a[2*t+1];const s=ui(e,r,"float32"),i=ui(n,r,"float32"),o=oi(s,i);return s.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${s}`)}a=new Uint8Array(t)}o+=i*e}return ui(a,r,s)}function vi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}$r=function(e){Te().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const wi="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ii(e){return wi?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Ti(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Si(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ii(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ii(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new hi(e.weightData).byteLength}}function Ci(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Ni{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ni.instance&&(Ni.instance=new Ni),Ni.instance}static registerSaveRouter(e){Ni.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ni.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ni.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ni.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?Ni.getInstance().loadRouters:Ni.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const $i="tensorflowjs",Ei="models_store",Ri="model_info_store";function Ai(){if(!Te().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Di(e){const t=e.result;t.createObjectStore(Ei,{keyPath:"modelPath"}),t.createObjectStore(Ri,{keyPath:"modelPath"})}class _i{constructor(e){if(this.indexedDB=Ai(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open($i,1);s.onupgradeneeded=()=>Di(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(Ei,"readonly"),s=t.objectStore(Ei).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{t.weightData=hi.join(t.weightData);const s=Si(t),i=r.transaction(Ri,"readwrite");let a,o,l=i.objectStore(Ri);try{a=l.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(e){return n(e)}a.onsuccess=()=>{o=r.transaction(Ei,"readwrite");const a=o.objectStore(Ei);let u;try{u=a.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:s}),u.onerror=e=>{l=i.objectStore(Ri);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},a.onerror=e=>(r.close(),n(a.error)),i.oncomplete=()=>{null==o?r.close():o.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}_i.URL_SCHEME="indexeddb://";const Fi=e=>{return Te().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_i.URL_SCHEME)?(t=e.slice(_i.URL_SCHEME.length),new _i(t)):null;var t};Ni.registerSaveRouter(Fi),Ni.registerLoadRouter(Fi);class Oi{constructor(){this.indexedDB=Ai()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open($i,1);n.onupgradeneeded=()=>Di(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(Ri,"readonly"),i=r.objectStore(Ri).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(s.close(),t(i.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(_i.URL_SCHEME)?t.slice(_i.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open($i,1);s.onupgradeneeded=()=>Di(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Ri,"readwrite"),a=i.objectStore(Ri),o=a.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=a.delete(e),i=()=>{l=r.transaction(Ei,"readwrite");const s=l.objectStore(Ei).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=i,s.onerror=e=>(i(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const Li="/",Mi="tensorflowjs_models",Pi="info",zi="model_topology",Bi="weight_specs",Wi="weight_data",Ui="model_metadata";function Gi(e){return{info:[Mi,e,Pi].join(Li),topology:[Mi,e,zi].join(Li),weightSpecs:[Mi,e,Bi].join(Li),weightData:[Mi,e,Wi].join(Li),modelMetadata:[Mi,e,Ui].join(Li)}}function Vi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Hi(e){const t=e.split(Li);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Li)}class ji{constructor(e){if(!Te().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Gi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Si(e),r=hi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(wi)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(r));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:s}}catch(e){throw Vi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(wi){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}ji.URL_SCHEME="localstorage://";const Ki=e=>{return Te().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ji.URL_SCHEME)?(t=e.slice(ji.URL_SCHEME.length),new ji(t)):null;var t};Ni.registerSaveRouter(Ki),Ni.registerLoadRouter(Ki);class qi{constructor(){V(Te().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),V("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Mi+Li,n=Li+Pi;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[Hi(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=Gi(e=(t=e).startsWith(ji.URL_SCHEME)?t.slice(ji.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return Vi(n),s}}class Xi{constructor(){this.managers={}}static getInstance(){return null==Xi.instance&&(Xi.instance=new Xi),Xi.instance}static registerManager(e,t){V(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),V(e.length>0,(()=>"scheme must not be an empty string."));const n=Xi.getInstance();V(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Xi.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Xi.getInstance().managers)}}class Yi{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Te().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return Xs(e)}}if(Te().get("IS_BROWSER")){Te().setPlatform("browser",new Yi);try{Xi.registerManager(ji.URL_SCHEME,new qi)}catch(e){}try{Xi.registerManager(_i.URL_SCHEME,new Oi)}catch(e){}}let Ji;function Zi(e,t="float32",n){return t=t||"float32",be(e),new Sr(e,t,n)}Te().get("IS_NODE")&&!Te().get("IS_BROWSER")&&Te().setPlatform("node",new class{constructor(){this.util=__webpack_require__(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Te().global.fetch?Te().global.fetch(e,t):(null==Ji&&(Ji=__webpack_require__(817)),Ji(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const Qi=ai({cast_:function(e,t){const n=ri(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return Yr.runKernel(Ze,s,r)}}),ea=ai({clone_:function(e){const t={x:ri(e,"x","clone","string_or_numeric")};return Yr.runKernel(Gt,t)}});Xr(),Nr={buffer:Zi,cast:Qi,clone:ea,print:function(e,t=!1){console.log(e.toString(t))}};const ta=ai({add_:function(e,t){let n=ri(e,"a","add"),s=ri(t,"b","add");[n,s]=Ur(n,s);const r={a:n,b:s};return Yr.runKernel(De,r)}}),na=ai({floorDiv_:function(e,t){let n=ri(e,"a","floorDiv"),s=ri(t,"b","floorDiv");[n,s]=Ur(n,s);const r={a:n,b:s};return Yr.runKernel(Mt,r)}}),sa=ai({div_:function(e,t){let n=ri(e,"a","div"),s=ri(t,"b","div");if([n,s]=Ur(n,s),"int32"===n.dtype&&"int32"===s.dtype)return na(n,s);const r={a:n,b:s};return Yr.runKernel(Tt,r,{})}}),ra=ai({mul_:function(e,t){let n=ri(e,"a","mul"),s=ri(t,"b","mul");[n,s]=Ur(n,s);const r={a:n,b:s};return Yr.runKernel(kn,r)}}),ia=ai({sqrt_:function(e){const t={x:ri(e,"x","sqrt","float32")};return Yr.runKernel(as,t)}}),aa=ai({square_:function(e){const t=ri(e,"x","square");return Yr.runKernel("Square",{x:t},{})}}),oa=ai({zerosLike_:function(e){const t={x:ri(e,"x","zerosLike")};return Yr.runKernel(_s,t)}});function la(e){return Yr.customGrad(e)}function ua(e,t){if((gr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&gr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return li(e,[],[],t)}const ca=new Map,ha=new Map;class da{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class pa{constructor(){this.classNameMap={}}static getMap(){return null==pa.instance&&(pa.instance=new pa),pa.instance}static register(e){pa.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function fa(e,t,n){V(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),V("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),V(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const s=t+">"+n;return pa.register(e),ca.set(s,e),ha.set(e,s),e}class ga extends da{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return gi(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){V(ue(e),(()=>"The f passed in variableGrads(f) must be a function")),V(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ar)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Yr.registeredVariables)t.push(Yr.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;V((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:i,grads:a}=Yr.gradients(e,t,null,!0);V(a.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),V(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=a[t]&&(o[e.name]=a[t])})),null!=s&&s.forEach((e=>o[e.name]=null)),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&gi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ua(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ga,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class ma extends ga{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Yr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Yr.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:fi((()=>oa(s).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:fi((()=>oa(s).variable(r)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;fi((()=>{const e=ta(ra(a,this.rho),ra(aa(i),1-this.rho)),t=ra(sa(ia(ta(o,this.epsilon)),ia(ta(a,this.epsilon))),i),n=ta(ra(o,this.rho),ra(aa(t),1-this.rho));a.assign(e),o.assign(n);const r=ta(ra(t,-this.learningRate),s);s.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(gi(this.accumulatedGrads.map((e=>e.variable))),gi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function ba(e,t,n){be(e);const s={shape:e,value:t,dtype:n=n||le(t)};return Yr.runKernel(Ft,{},s)}class ya extends ga{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Yr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:fi((()=>ba(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedGrads[n].variable;fi((()=>{const e=ta(i,aa(r));i.assign(e);const t=ta(ra(sa(r,ia(ta(e,Yr.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&gi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const xa=ai({pow_:function(e,t){let n=ri(e,"base","pow"),s=ri(t,"exp","pow");[n,s]=Ur(n,s);const r={a:n,b:s};return Yr.runKernel(Rn,r)}}),ka=ai({sub_:function(e,t){let n=ri(e,"a","sub"),s=ri(t,"b","sub");[n,s]=Ur(n,s);const r={a:n,b:s};return Yr.runKernel(Is,r)}});class va extends ga{static get className(){return"Adam"}constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],fi((()=>{this.accBeta1=ua(t).variable(),this.accBeta2=ua(n).variable()})),null==s&&(this.epsilon=Yr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);fi((()=>{const n=ka(1,this.accBeta1),s=ka(1,this.accBeta2);t.forEach(((t,r)=>{const i=Yr.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:fi((()=>oa(i).variable(a)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:fi((()=>oa(i).variable(a)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,c=ta(ra(l,this.beta1),ra(o,1-this.beta1)),h=ta(ra(u,this.beta2),ra(aa(o),1-this.beta2)),d=sa(c,n),p=sa(h,s);l.assign(c),u.assign(h);const f=ta(ra(sa(d,ta(ia(p),this.epsilon)),-this.learningRate),i);i.assign(f)})),this.accBeta1.assign(ra(this.accBeta1,this.beta1)),this.accBeta2.assign(ra(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&gi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&gi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),fi((()=>{this.accBeta1.assign(xa(this.beta1,this.iterations_+1)),this.accBeta2.assign(xa(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const wa=ai({abs_:function(e){const t=ri(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Yr.runKernel(nt,e)}{const e={x:t};return Yr.runKernel(Ee,e)}}});function Ia(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,a=e[i]||1;(t[t.length-1-r]||1)>1&&1===a&&s.unshift(i)}return s}function Ta(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],i=t.length-s-1,a=t[i];(null==r||1===r&&a>1)&&n.unshift(i)}return n}function Sa(e,t){const n=Math.max(e.length,t.length),s=new Array(n);for(let r=0;r<n;r++){let i=e[e.length-r-1];null==i&&(i=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===i)s[n-r-1]=a;else if(1===a)s[n-r-1]=i;else{if(i!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);s[n-r-1]=i}}return s}const Ca=ai({maximum_:function(e,t){let n=ri(e,"a","maximum"),s=ri(t,"b","maximum");[n,s]=Ur(n,s),"bool"===n.dtype&&(n=Qi(n,"int32"),s=Qi(s,"int32")),Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(ln,r)}});class Na extends ga{static get className(){return"Adamax"}constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],fi((()=>{this.iteration=ua(0).variable(),this.accBeta1=ua(t).variable()})),null==s&&(this.epsilon=Yr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);fi((()=>{const n=ka(1,this.accBeta1),s=sa(-this.learningRate,ta(ra(this.iteration,this.decay),1));t.forEach(((t,r)=>{const i=Yr.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:oa(i).variable(a)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:oa(i).variable(a)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,c=ta(ra(l,this.beta1),ra(o,1-this.beta1)),h=ra(u,this.beta2),d=wa(o),p=Ca(h,d);l.assign(c),u.assign(p);const f=ta(ra(sa(s,n),sa(c,ta(p,this.epsilon))),i);i.assign(f)})),this.iteration.assign(ta(this.iteration,1)),this.accBeta1.assign(ra(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&gi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&gi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class $a extends ga{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=Yr.registeredVariables[t];fi((()=>{const e=ta(ra(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=mi(ua(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Ea extends $a{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ua(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Yr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:fi((()=>oa(s).variable(e)))}}const r=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&fi((()=>{let e;const t=ta(ra(this.m,r),i);e=this.useNesterov?ta(ra(this.c,ta(i,ra(t,this.m))),s):ta(ra(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&gi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Ra extends ga{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=Yr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Yr.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:fi((()=>oa(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:fi((()=>oa(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:fi((()=>oa(s).variable(r)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;fi((()=>{const e=ta(ra(a,this.decay),ra(aa(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=ta(ra(t,this.decay),ra(i,1-this.decay)),l=sa(ra(i,this.learningRate),ia(ka(e,ta(aa(r),this.epsilon)))),u=ta(ra(o,this.momentum),l);a.assign(e),t.assign(r),o.assign(u);const c=ka(s,u);s.assign(c)}else{const e=ta(ra(a,this.decay),ra(aa(i),1-this.decay)),t=ta(ra(o,this.momentum),sa(ra(i,this.learningRate),ia(ta(e,this.epsilon))));a.assign(e),o.assign(t);const n=ka(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&gi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&gi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&gi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Aa=[ma,ya,va,Na,Ea,Ra,$a];function Da(e){return new Promise((e=>setTimeout(e))).then(e)}class _a{constructor(e){if(!Te().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(_a.URL_SCHEME)&&(e=e.slice(_a.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=hi.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Ti(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Da((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Da((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Si(e)}}}}function Fa(e,t,n,s){!function(e){V(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){V(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),V(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),V(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((i=>(i.then((i=>{const a=n+ ++r/e.length*(s-n);return t(a),i})),i))))}async function Oa(e,t){null==t&&(t={});const n=null==t.fetchFunc?Te().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Fa(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Fa(r,t.onProgress,.5,1)}_a.URL_SCHEME="downloads://",Ni.registerSaveRouter((e=>Te().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_a.URL_SCHEME)?function(e="model"){return new _a(e)}(e.slice(_a.URL_SCHEME.length)):null));class La{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(V("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Te().platform.fetch,V(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&V(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Ti(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=hi.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Si(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():async function(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),function(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}(e,n,s)}(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Ci(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const s=null==t.fetchFunc?Te().platform.fetch:t.fetchFunc;let r,i=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var a;i<e.length;){if(!r){const n=(await s(e[i],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:o,value:l}=await r.read();if(!o)return void n.enqueue(l);i++,r=void 0,null===(a=t.onProgress)||void 0===a||a.call(t,i/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,i=[],a=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e);return[Ci(e),await Oa(t,this.loadOptions)]}}function Ma(e){return null!=e.match(La.URL_SCHEME_REGEX)}La.URL_SCHEME_REGEX=/^https?:\/\//;const Pa=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ma(e))):Ma(e),n)return za(e,t)}return null};function za(e,t){return new La(e,t)}Ni.registerSaveRouter(Pa),Ni.registerLoadRouter(Pa);const Ba=-2,Wa=-1;function Ua(e,t,n){const s=e.shape.length;V(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),V(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)V(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Ga(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Va(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Ha(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function ja(e,t,n){return n<=e?n:n-(t-1)}function Ka(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function qa(e,t,n,s,r,i,a,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Xa(a,l,u,s,e),h=Ya(o,l,u,r,e),d=Ha(i,l,u,e)}else for(let t=0;t<u;t++)c[t]=Za(a,s,i,e,t,l),h[t]=Qa(o,r,i,e,t,l),d[t]=Ja(i,t,l);return{begin:c,end:h,strides:d}}function Xa(e,t,n,s,r){const i=[...r],a=Ka(n,t);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=0;else{const a=ja(t,n,r);let o=s[a];e&1<<a&&(o=0),i[r]=o}return i}function Ya(e,t,n,s,r){const i=[...r],a=Ka(n,t);for(let r=0;r<i.length;r++)if(a.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=ja(t,n,r);let o=s[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){const t=r[e];i[e]<0&&(i[e]+=t),i[e]=W(0,i[e],r[e])}return i}function Ja(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function Za(e,t,n,s,r,i){let a=t[r];const o=n[r]||1;(e&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=W(0,a,l-1),a}function Qa(e,t,n,s,r,i){let a=t[r];const o=n[r]||1;(e&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=o>0?W(0,a,l):W(-1,a,l-1),a}function eo(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function to(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function no(e,t,n){let s;const r=e.shape.length;let i;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{V(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(V(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,i]}function so(e,t,n,s,r,i,a,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=a&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(Ba),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(Wa),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),s=e[t];if(-1===s){m.push(n?1:-1);continue}const r=[d.beginMask&1<<t,d.endMask&1<<t],i=[d.strides[t]>0?0:-1,d.strides[t]>0?s:s-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[t];const a=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?s+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=s)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=ro(d.begin[t],0,d.strides[t],s,r,i),d.end[t]=ro(d.end[t],1,d.strides[t],s,r,i);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===s;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&a,f=f&&(0===t&&1===d.strides[t]||a);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):a&&s>=0&&(o=d.strides[t]<0?-s:s,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),m.push(e)}else m.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(m[t]):t===Ba&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Ba)),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function ro(e,t,n,s,r,i){if(r[t])return n>0?i[t]:i[t+1&1];{const t=e<0?s+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}const io=ai({all_:function(e,t=null,n=!1){const s={x:ri(e,"x","all","bool")},r={axis:t,keepDims:n};return Yr.runKernel(Fe,s,r)}}),ao=ai({any_:function(e,t=null,n=!1){const s={x:ri(e,"x","any","bool")},r={axis:t,keepDims:n};return Yr.runKernel(Oe,s,r)}}),oo=ai({argMax_:function(e,t=0){const n={x:ri(e,"x","argMax")},s={axis:t};return Yr.runKernel(Le,n,s)}});function lo(e,t,n,s,r="NHWC",i){return ho(e,[...t,e[3]],n,i,s,null,null,wo(r))}function uo(e,t,n,s,r,i,a="channelsLast"){const[o,l]=go(t);let u;if("channelsLast"===a)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,e[1],e[1]]}return ho(e,u,n,s,r,i,!1,a)}function co(e,t,n,s,r,i,a="NDHWC"){const[o,l,u]=mo(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return po(e,c,n,s,r,!1,h,i)}function ho(e,t,n,s,r,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=go(n),[b,y]=go(s),x=bo(d,b),k=bo(p,y),{padInfo:v,outHeight:w,outWidth:I}=function(e,t,n,s,r,i,a,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=fo(e,t,n));const i=e[1];return[yo((e[0]-t+2*s)/n+1,r),yo((i-t+2*s)/n+1,r)]}([t,n],i,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+i-t),o=Math.max(0,(h-1)*r+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/s),h=Math.ceil((n-a+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=yo((t-i+d+p)/s+1,o),h=yo((n-a+f+g)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,g,m,x,k,i,o),T=a?f*h:f;let S;return"channelsFirst"===o?S=[l,T,w,I]:"channelsLast"===o&&(S=[l,w,I,T]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:w,outWidth:I,outChannels:T,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:y,inShape:e,outShape:S,filterShape:t}}function po(e,t,n,s,r,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,y,x]=mo(n),[k,v,w]=mo(s),I=bo(p,k),T=bo(f,v),S=bo(g,w),{padInfo:C,outDepth:N,outHeight:$,outWidth:E}=function(e,t,n,s,r,i,a,o,l,u,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const g=function(e,t,n,s,r,i){null==r&&(r=fo(e,t[0],s[0]));const a=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*r>=t[n]&&(a[n]=yo((e[n]-t[n]+2*r)/s[n]+1,i));return a}([t,n,s,1],[o,l,u],0,[r,i,a],e,c);d=g[0],p=g[1],f=g[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/r),p=Math.ceil(n/i),f=Math.ceil(s/a);const e=(d-1)*r+o-t,c=(p-1)*i+l-n,g=(f-1)*a+u-s,m=Math.floor(e/2),b=e-m,y=Math.floor(c/2),x=c-y,k=Math.floor(g/2);h={top:y,bottom:x,left:k,right:g-k,front:m,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,b,y,x,I,T,S,o),R=i?m*d:m;let A;return"channelsFirst"===a?A=[l,R,N,$,E]:"channelsLast"===a&&(A=[l,N,$,E,R]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:$,outWidth:E,outChannels:R,padInfo:C,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:T,effectiveFilterWidth:S,dilationDepth:k,dilationHeight:v,dilationWidth:w,inShape:e,outShape:A,filterShape:t}}function fo(e,t,n,s=1){const r=bo(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function go(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function mo(e){return"number"==typeof e?[e,e,e]:e}function bo(e,t){return t<=1?e:e+(e-1)*(t-1)}function yo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function xo(e){const[t,n,s]=go(e);return 1===t&&1===n&&1===s}function ko(e,t){return xo(e)||xo(t)}function vo(e){return go(e).every((e=>e>0))}function wo(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Io(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)V(X(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{V(X(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const To=ai({reshape_:function(e,t){const n={x:ri(e,"x","reshape","string_or_numeric")},s={shape:t};return Yr.runKernel(Bn,n,s)}}),So=ai({avgPool_:function(e,t,n,s,r){const i=ri(e,"x","avgPool","float32");V(ko(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=To(i,[1,i.shape[0],i.shape[1],i.shape[2]])),V(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),Io("avgPool",s,r);const l={x:a},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let c=Yr.runKernel(Ge,l,u);return c=Qi(c,i.dtype),o?To(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Co=ai({avgPool3d_:function(e,t,n,s,r,i="NDHWC"){const a=ri(e,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=To(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),V(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),V("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),V("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Io("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let h=Yr.runKernel(He,u,c);return h=Qi(h,o.dtype),l?To(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),No=ai({batchNorm_:function(e,t,n,s,r,i){null==i&&(i=.001);const a=ri(e,"x","batchNorm"),o=ri(t,"mean","batchNorm"),l=ri(n,"variance","batchNorm");let u,c;null!=r&&(u=ri(r,"scale","batchNorm")),null!=s&&(c=ri(s,"offset","batchNorm")),V(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),V(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),V(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?To(e,[1,1,1,e.size]):2===e.rank?To(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?To(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(a),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:i},p=Yr.runKernel(Pt,h,d);return To(p,a.shape)}}),$o=ai({batchNorm2d_:function(e,t,n,s,r,i){const a=ri(e,"x","batchNorm"),o=ri(t,"mean","batchNorm"),l=ri(n,"variance","batchNorm");let u,c;return null!=r&&(u=ri(r,"scale","batchNorm")),null!=s&&(c=ri(s,"offset","batchNorm")),V(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),V(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),V(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&V(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&V(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),No(a,o,l,c,u,i)}}),Eo=ai({batchNorm3d_:function(e,t,n,s,r,i){const a=ri(e,"x","batchNorm"),o=ri(t,"mean","batchNorm"),l=ri(n,"variance","batchNorm");let u,c;return null!=r&&(u=ri(r,"scale","batchNorm")),null!=s&&(c=ri(s,"offset","batchNorm")),V(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),V(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),V(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&V(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&V(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),No(a,o,l,c,u,i)}}),Ro=ai({batchNorm4d_:function(e,t,n,s,r,i){const a=ri(e,"x","batchNorm"),o=ri(t,"mean","batchNorm"),l=ri(n,"variance","batchNorm");let u,c;return null!=r&&(u=ri(r,"scale","batchNorm")),null!=s&&(c=ri(s,"offset","batchNorm")),V(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),V(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),V(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&V(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&V(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),No(a,o,l,c,u,i)}}),Ao=ai({broadcastTo_:function(e,t){let n=ri(e,"broadcastTo","x");const s=n.shape;if(be(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=To(n,e)}const r=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ea(n);const a={x:n},o={reps:i};return Yr.runKernel(Cs,a,o)}}),Do=ai({clipByValue_:function(e,t,n){const s=ri(e,"x","clipByValue");if(V(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return ba(s.shape,t,s.dtype);const r={x:s},i={clipValueMin:t,clipValueMax:n};return Yr.runKernel(et,r,i)}}),_o=ai({concat_:function(e,t=0){V(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ii(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return ea(n[0]);const s=n,r={axis:t};return Yr.runKernel(st,s,r)}}),Fo=ai({concat1d_:function(e){return _o(e,0)}}),Oo=ai({concat2d_:function(e,t){return _o(e,t)}}),Lo=ai({concat3d_:function(e,t){return _o(e,t)}}),Mo=ai({concat4d_:function(e,t){return _o(e,t)}}),Po=ai({conv2d_:function(e,t,n,s,r="NHWC",i=[1,1],a){const o=ri(e,"x","conv2d","float32"),l=ri(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=To(o,[1,o.shape[0],o.shape[1],o.shape[2]])),V(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),V(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Io("conv2d",s,a);const h="NHWC"===r?u.shape[3]:u.shape[1];V(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),V(ko(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),V(vo(i),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),V(vo(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=Yr.runKernel(rt,d,p);return c?To(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),zo=ai({conv1d_:function(e,t,n,s,r="NWC",i=1,a){const o=ri(e,"x","conv1d"),l=ri(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=To(o,[1,o.shape[0],o.shape[1]])),V(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),V(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Io("conv1d",s,a),V(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),V(ko(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),V(vo(i),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),V(vo(n),(()=>"Error in conv1D: Stride should be larger than 0.")),V("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=To(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=To(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Po(d,h,[1,n],s,"NHWC",[1,i],a);return To(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Bo=ai({conv2DBackpropInput_:function(e,t,n,s,r,i="NHWC",a){V(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=To(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),V(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),V(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),V(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];V(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),V(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Io("conv2dDerInput",r,a);const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},f=Yr.runKernel(at,d,p);return u?To(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Wo=ai({conv2dTranspose_:function(e,t,n,s,r,i){const a=ri(e,"x","conv2dTranspose"),o=ri(t,"filter","conv2dTranspose");return Bo(n,a,o,s,r,"NHWC",i)}}),Uo=ai({conv3d_:function(e,t,n,s,r="NDHWC",i=[1,1,1]){const a=ri(e,"x","conv3d"),o=ri(t,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=To(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),V(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),V(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),V(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),V(ko(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),V("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),V(vo(i),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),V(vo(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:i},d=Yr.runKernel(ot,c,h);return u?To(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Go=ai({conv3DBackpropInput_:function(e,t,n,s,r){V(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,a=t,o=!1;4===t.rank&&(o=!0,a=To(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const l=i[4],u=a.shape[4];V(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),V(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),V(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),V(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),V(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:r,strides:s,inputShape:i},d=Yr.runKernel(ut,c,h);return o?To(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Vo=ai({conv3dTranspose_:function(e,t,n,s,r){const i=ri(e,"x","conv3dTranspose"),a=ri(t,"filter","conv3dTranspose");return Go(n,i,a,s,r)}}),Ho=ai({denseBincount_:function(e,t,n,s=!1){const r=ri(e,"x","denseBincount"),i=ri(t,"weights","denseBincount");V("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),V(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),V(n>=0,(()=>`size must be non-negative, but got ${n}.`)),V(i.size===r.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`));const a={x:r,weights:i},o={size:n,binaryOutput:s};return Yr.runKernel(gt,a,o)}}),jo=ai({depthwiseConv2d_:function(e,t,n,s,r="NHWC",i=[1,1],a){const o=ri(e,"x","depthwiseConv2d","float32"),l=ri(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=To(o,[1,o.shape[0],o.shape[1],o.shape[2]])),V(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),V(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];V(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Io("depthwiseConv2d",s,a);const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=Yr.runKernel(bt,d,p);return c?To(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ko=ai({elu_:function(e){const t={x:ri(e,"x","elu","float32")};return Yr.runKernel(Ct,t)}}),qo=ai({equal_:function(e,t){let n=ri(e,"a","equal","string_or_numeric"),s=ri(t,"b","equal","string_or_numeric");[n,s]=Ur(n,s),Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(Et,r)}}),Xo=ai({erf_:function(e){let t=ri(e,"x","erf");V("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Qi(t,"float32"));const n={x:t};return Yr.runKernel($t,n)}}),Yo=ai({exp_:function(e){const t={x:ri(e,"x","exp")};return Yr.runKernel(Rt,t)}}),Jo=ai({expandDims_:function(e,t=0){const n=ri(e,"x","expandDims","string_or_numeric");V(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return Yr.runKernel(At,s,r)}}),Zo=ai({tile_:function(e,t){const n=ri(e,"x","tile","string_or_numeric");V(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return Yr.runKernel(Cs,s,r)}}),Qo=ai({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=Zi([e,t],s),i=e<=t?e:t;for(let e=0;e<i;++e)r.set(1,e,e);const a=To(r.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Zo(Jo(a,0),[n[0],1,1]);if(2===n.length)return Zo(Jo(Jo(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Zo(Jo(Jo(Jo(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),el=ai({floor_:function(e){const t={x:ri(e,"x","floor","float32")};return Yr.runKernel(Lt,t)}}),tl=ai({gather_:function(e,t,n=0,s=0){const r={x:ri(e,"x","gather"),indices:ri(t,"indices","gather","int32")},i={axis:n,batchDims:s};return Yr.runKernel(zt,r,i)}}),nl=ai({greater_:function(e,t){let n=ri(e,"a","greater","string_or_numeric"),s=ri(t,"b","greater","string_or_numeric");[n,s]=Ur(n,s),Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(Wt,r)}}),sl=ai({greaterEqual_:function(e,t){let n=ri(e,"a","greaterEqual","string_or_numeric"),s=ri(t,"b","greaterEqual","string_or_numeric");[n,s]=Ur(n,s),Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(Ut,r)}}),rl=ai({leakyRelu_:function(e,t=.2){const n={x:ri(e,"x","leakyRelu")},s={alpha:t};return Yr.runKernel(Xt,n,s)}}),il=ai({log_:function(e){const t={x:ri(e,"x","log","float32")};return Yr.runKernel(Qt,t)}}),al=ai({log1p_:function(e){const t={x:ri(e,"x","log1p")};return Yr.runKernel(en,t)}}),ol=ai({max_:function(e,t=null,n=!1){const s={x:ri(e,"x","max")},r={reductionIndices:t,keepDims:n};return Yr.runKernel(on,s,r)}}),ll=ai({sum_:function(e,t=null,n=!1){let s=ri(e,"x","sum");"bool"===s.dtype&&(s=Qi(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return Yr.runKernel(os,r,i)}}),ul=ai({logSoftmax_:function(e,t=-1){const n=ri(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=la(((e,n)=>{const s=ol(e,t,!0),r=ka(e,s),i=ka(Qi(r,"float32"),il(ll(Yo(r),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{const[s]=n,r=Yo(s);return ka(e,ra(ll(e,t,!0),r))}}}));return s(n)}});function cl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function hl(e,t,n){const s=e.length+t.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[i++]):r.push(t[a++]);return r}function dl(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function pl(e,t){return hl(e,t.map((e=>1)),t)}function fl(e,t,n){V(cl(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function gl(e,t){if(cl(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function ml(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function bl(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const yl=ai({logSumExp_:function(e,t=null,n=!1){const s=ri(e,"x","logSumExp"),r=ee(t,s.shape),i=ol(s,r,!0),a=ka(s,i),o=Yo(a),l=ll(o,r),u=il(l),c=ta(To(i,u.shape),u);if(n){const e=pl(c.shape,r);return To(c,e)}return c}}),xl=ai({logicalAnd_:function(e,t){const n=ri(e,"a","logicalAnd","bool"),s=ri(t,"b","logicalAnd","bool");Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(tn,r)}}),kl=ai({matMul_:function(e,t,n=!1,s=!1){let r=ri(e,"a","matMul"),i=ri(t,"b","matMul");[r,i]=Ur(r,i);const a={a:r,b:i},o={transposeA:n,transposeB:s};return Yr.runKernel(Ke,a,o)}}),vl=ai({maxPool_:function(e,t,n,s,r){const i=ri(e,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=To(i,[1,i.shape[0],i.shape[1],i.shape[2]])),V(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),V(ko(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Io("maxPool",s,r);const l={x:a},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},c=Yr.runKernel(un,l,u);return o?To(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),wl=ai({maxPool3d_:function(e,t=[1,1,1],n,s,r,i="NDHWC"){const a=ri(e,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=To(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),V(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),V("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Io("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},h=Yr.runKernel(hn,u,c);return l?To(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Il=ai({mean_:function(e,t=null,n=!1){const s={x:ri(e,"x","mean")},r={axis:t,keepDims:n};return Yr.runKernel(fn,s,r)}}),Tl=ai({min_:function(e,t=null,n=!1){const s={x:ri(e,"x","min")},r={axis:t,keepDims:n};return Yr.runKernel(gn,s,r)}}),Sl=ai({minimum_:function(e,t){let n=ri(e,"a","minimum"),s=ri(t,"b","minimum");[n,s]=Ur(n,s),"bool"===n.dtype&&(n=Qi(n,"int32"),s=Qi(s,"int32")),Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(mn,r)}}),Cl=ai({moments_:function(e,t=null,n=!1){const s=ee(t,(e=ri(e,"x","moments")).shape),r=Il(e,s,n);let i=r.shape;n||(i=pl(r.shape,s));const a=aa(ka(Qi(e,"float32"),To(r,i)));return{mean:r,variance:Il(a,s,n)}}}),Nl=ai({neg_:function(e){const t={x:ri(e,"x","neg")};return Yr.runKernel(vn,t)}}),$l=ai({notEqual_:function(e,t){let n=ri(e,"a","notEqual","string_or_numeric"),s=ri(t,"b","notEqual","string_or_numeric");[n,s]=Ur(n,s),Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(wn,r)}}),El=ai({oneHot_:function(e,t,n=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:ri(e,"indices","oneHot","int32")},a={dtype:r,depth:t,onValue:n,offValue:s};return Yr.runKernel(Nn,i,a)}});function Rl(e,t="float32"){if(be(e),"complex64"===t){const t=Rl(e,"float32"),n=Rl(e,"float32");return oi(t,n)}const n=ge(K(e),t);return Yr.makeTensor(n,e,t)}function Al(e,t="float32"){if(be(e),"complex64"===t){const t=Al(e,"float32"),n=Rl(e,"float32");return oi(t,n)}const n=fe(K(e),t);return Yr.makeTensor(n,e,t)}const Dl=ai({onesLike_:function(e){const t={x:ri(e,"x","onesLike")};return Yr.runKernel(Cn,t)}}),_l=ai({pad_:function(e,t,n=0){const s=ri(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},i={x:s};return Yr.runKernel(En,i,r)}}),Fl=ai({prelu_:function(e,t){const n={x:ri(e,"x","prelu"),alpha:ri(t,"alpha","prelu")};return Yr.runKernel(An,n)}});class Ol{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=r||Math.random();this.random=b.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,i;do{s=2*this.random()-1,r=2*this.random()-1,i=s*s+r*r}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*s*a,t=this.mean+this.stdDev*r*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ll{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=b.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ml=ai({randomNormal_:function(e,t=0,n=1,s,r){if(be(e),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const i=new Ol(t,n,s,!1,r),a=Zi(e,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Pl=ai({randomUniform_:function(e,t=0,n=1,s="float32",r){be(e);const i=Zi(e,s),a=new Ll(t,n,null,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});function zl(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return Yr.runKernel(Ln,{},r)}const Bl=ai({relu_:function(e){const t={x:ri(e,"x","relu")};return Yr.runKernel(zn,t)}}),Wl=ai({reverse_:function(e,t){const n={x:ri(e,"x","reverse")},s={dims:t};return Yr.runKernel(jn,n,s)}}),Ul=ai({selu_:function(e){const t={x:ri(e,"x","selu")};return Yr.runKernel(Qn,t)}}),Gl=ai({separableConv2d_:function(e,t,n,s,r,i=[1,1],a="NHWC"){const o=ri(e,"x","separableConv2d"),l=ri(t,"depthwiseFilter","separableConv2d"),u=ri(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=To(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");V(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),V(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),V(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),V(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),V(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];V(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=jo(c,l,s,r,a,i),g=Po(f,u,1,"valid",a);return h?To(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Vl=ai({sigmoid_:function(e){const t={x:ri(e,"x","sigmoid","float32")};return Yr.runKernel(rs,t)}}),Hl=ai({slice_:function(e,t,n){const s=ri(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:t,size:n};return Yr.runKernel(es,r,i)}}),jl=ai({slice1d_:function(e,t,n){const s=ri(e,"x","slice1d");return V(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Hl(s,[t],[n])}}),Kl=ai({slice2d_:function(e,t,n){const s=ri(e,"x","slice2d");return V(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Hl(s,t,n)}}),ql=ai({slice3d_:function(e,t,n){const s=ri(e,"x","slice3d");return V(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Hl(s,t,n)}}),Xl=ai({slice4d_:function(e,t,n){const s=ri(e,"x","slice4d");return V(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Hl(s,t,n)}}),Yl=ai({softmax_:function(e,t=-1){const n=ri(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return Yr.runKernel(cs,s,r)}}),Jl=ai({softplus_:function(e){const t={x:ri(e,"x","softplus")};return Yr.runKernel(is,t)}}),Zl=ai({split_:function(e,t,n=0){const s={x:ri(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Yr.runKernel(us,s,r)}}),Ql=ai({squeeze_:function(e,t){const n=ri(e,"x","squeeze","string_or_numeric");return To(n,te(n.shape,t).newShape)}}),eu=ai({stack_:function(e,t=0){const n=ii(e,"tensors","stack","string_or_numeric");V(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&V(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return Yr.runKernel($n,s,r)}}),tu=ai({tanh_:function(e){const t={x:ri(e,"x","tanh","float32")};return Yr.runKernel(Ss,t)}});function nu(e,t){j(e);const n=ti(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return li(e,null,n,t)}function su(e,t,n){if(j(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=ti(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return li(e,t,s,n)}const ru=ai({truncatedNormal_:function(e,t=0,n=1,s,r){if(be(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const i=new Ol(t,n,s,!0,r),a=Zi(e,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),iu=ai({unstack_:function(e,t=0){const n=ri(e,"x","unstack","string_or_numeric");V(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return Yr.runKernel(As,s,r)}}),au=ai({where_:function(e,t,n){const s=ri(t,"a","where"),r=ri(n,"b","where"),i=ri(e,"condition","where","bool"),a=Sa(Sa(i.shape,s.shape),r.shape),o={condition:Ao(i,a),t:Ao(s,a),e:Ao(r,a)};return Yr.runKernel(Zn,o)}}),ou=ai({imag_:function(e){const t={input:ri(e,"input","imag")};return Yr.runKernel(Ht,t)}}),lu=ai({real_:function(e){const t={input:ri(e,"input","real")};return Yr.runKernel(Mn,t)}}),uu=ai({transpose_:function(e,t,n){const s=ri(e,"x","transpose");if(null==t&&(t=s.shape.map(((e,t)=>t)).reverse()),V(s.rank===t.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`)),t.forEach((e=>{V(e>=0&&e<s.rank,(()=>"All entries in 'perm' must be between 0 and "+(s.rank-1)+` but got ${t}`))})),s.rank<=1)return s.clone();const r={x:s},i={perm:t};return"complex64"===s.dtype?fi((()=>{let e=lu(s),t=ou(s);return e=Yr.runKernel(Es,{x:e},i),t=Yr.runKernel(Es,{x:t},i),n&&(t=Nl(t)),oi(e,t)})):Yr.runKernel(Es,r,i)}}),cu=ai({dropout_:function(e,t,n,s){const r=ri(e,"x","dropout");if(V("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),V(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Er?r.clone():r;const i=function(e,t){if(null==t)return e.shape.slice();if(q(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),a=1-t,o=sa(el(ta(Pl(i,0,1,"float32",s),a)),a);return ra(r,o)}}),hu=ai({fft_:function(e){V("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Yr.runKernel(_t,t)}}),du=ai({rfft_:function(e,t){V("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,r=Hl(e,s,i),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=_o([e,Rl(s)],e.shape.length-1),n=t}else r=e;const i=oa(r),a=To(oi(r,i),[s,n]),o=hu(a),l=Math.floor(n/2)+1,u=lu(o),c=ou(o),h=Zl(u,[l,n-l],u.shape.length-1),d=Zl(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,To(oi(h[0],d[0]),p)}}),pu=ai({ifft_:function(e){V("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Yr.runKernel(Vt,t)}}),fu=ai({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=To(e,[n,t]);s=pu(r)}else{const r=[n,2*(t-1)],i=To(lu(e),[n,t]),a=To(ou(e),[n,t]),o=Wl(Hl(i,[0,1],[n,t-2]),1),l=ra(Wl(Hl(a,[0,1],[n,t-2]),1),ua(-1)),u=_o([i,o],1),c=_o([a,l],1),h=To(oi(u,c),[r[0],r[1]]);s=pu(h)}if(s=lu(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=To(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}}),gu=ai({conv2DBackpropFilter_:function(e,t,n,s,r,i="NHWC",a){let o=e;3===e.rank&&(o=To(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=To(t,[1,t.shape[0],t.shape[1],t.shape[2]])),V(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),V(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),V(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];V(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),V(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Io("conv2dDerFilter",r,a);const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:n};return Yr.runKernel(it,h,d)}}),mu=ai({relu6_:function(e){const t={x:ri(e,"x","relu6")};return Yr.runKernel(Hn,t)}}),bu=ai({step_:function(e,t=0){const n={x:ri(e,"x","step")},s={alpha:t};return Yr.runKernel(Fs,n,s)}});function yu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ra(e,bu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function xu(e,t){let n=t;const s=Ta(e.shape,t.shape);return s.length>0&&(n=ll(n,s)),To(n,e.shape)}function ku(e,t,n,s){if("linear"===t)return e;if("relu"===t)return Bl(e);if("elu"===t)return Ko(e);if("relu6"===t)return mu(e);if("prelu"===t)return Fl(e,n);if("leakyrelu"===t)return rl(e,s);if("sigmoid"===t)return Vl(e);throw new Error(`Unknown fused activation ${t}.`)}const vu=(e,t)=>!(e>0)||"linear"===t,wu=ai({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===vu(Yr.state.gradientDepth,l)){V("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Po(e,t,n,s,r,i,a);return null!=o&&(h=ta(h,o)),ku(h,l,u,c)}const h=ri(e,"x","conv2d","float32"),d=ri(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=To(h,[1,h.shape[0],h.shape[1],h.shape[2]])),V(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),V(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Io("fused conv2d",s,a);const g="NHWC"===r?p.shape[3]:p.shape[1];V(d.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),V(ko(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const m=ho(p.shape,d.shape,n,i,s,a);let b,y;if(null!=o&&(b=ri(o,"bias","fused conv2d"),[b]=Ur(b,h),"NHWC"===r?Sa(m.outShape,b.shape):(V(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),V(0===b.shape.length||b.shape[0]===m.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${m.outChannels})`)))),null!=u){const e=u.shape;if(V(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)V(1===e[0]||e[0]===m.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${m.outChannels}).`));else if(3===e.length)try{Sa(e,m.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(n)}y=ri(u,"prelu weights","fused conv2d")}const x=(e,t)=>{V("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[a,o,u,c]=t,h=yu(e,u,l);V(xo(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[Bo(o.shape,h,a,n,s),gu(o,h,a.shape,n,s)];if(null!=c){const e=xu(c,h);d.push(e)}return d},k={x:p,filter:d,bias:b,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=la(((e,t,n)=>{let s=Yr.runKernel(Ms,k,v);return n([t,e,s]),f&&(s=To(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(p,d)}{const e=la(((e,t,n,s)=>{let r=Yr.runKernel(Ms,k,v);return s([t,e,r,n]),f&&(r=To(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(p,d,b)}}}),Iu=ai({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,i=[1,1],a){let o=e;3===e.rank&&(o=To(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=To(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:n};return Yr.runKernel(yt,u,c)}}),Tu=ai({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,i=[1,1],a){let o=t,l=!1;3===t.rank&&(l=!0,o=To(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:e},h=Yr.runKernel(xt,u,c);return l?To(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Su=ai({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===vu(Yr.state.gradientDepth,i)){let l=kl(e,t,n,s);return null!=r&&(l=ta(l,r)),ku(l,i,a,o)}let l=ri(e,"a","fused matMul"),u=ri(t,"b","fused matMul");[l,u]=Ur(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=K(f),b=K(g);V(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const y=Sa(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),x=To(l,n?[m,c,d]:[m,d,c]),k=To(u,s?[b,p,h]:[b,h,p]);let v,w;null!=r&&(v=ri(r,"bias","fused matMul"),[v]=Ur(v,l),Sa(y,v.shape)),null!=a&&(w=ri(a,"prelu weights","fused matMul"));const I=(e,t)=>{const[a,o,l,u]=t,c=yu(To(e,l.shape),l,i);let h,d;return n||s?!n&&s?(h=kl(c,o,!1,!1),d=kl(c,a,!0,!1)):n&&!s?(h=kl(o,c,!1,!0),d=kl(a,c,!1,!1)):(h=kl(o,c,!0,!0),d=kl(c,a,!0,!0)):(h=kl(c,o,!1,!0),d=kl(a,c,!0,!1)),null!=r?[h,d,xu(u,c)]:[h,d]},T={a:x,b:k,bias:v,preluActivationWeights:w},S={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:o};if(null==r){const e=la(((e,t,n)=>{const s=Yr.runKernel(Ls,T,S);return n([e,t,s]),{value:To(s,y),gradFunc:I}}));return e(x,k)}{const e=la(((e,t,n,s)=>{const r=Yr.runKernel(Ls,T,S);return s([e,t,r,n]),{value:To(r,y),gradFunc:I}}));return e(x,k,v)}}}),Cu=ai({cropAndResize_:function(e,t,n,s,r="bilinear",i=0){const a=ri(e,"image","cropAndResize"),o=ri(t,"boxes","cropAndResize","float32"),l=ri(n,"boxInd","cropAndResize","int32"),u=o.shape[0];V(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),V(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),V(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),V(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),V(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),V("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:a,boxes:o,boxInd:l},h={method:r,extrapolationValue:i,cropSize:s};return Yr.runKernel(ft,c,h)}}),Nu=ai({flipLeftRight_:function(e){const t=ri(e,"image","flipLeftRight","float32");V(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Yr.runKernel(Ot,n,{})}}),$u=ai({grayscaleToRGB_:function(e){const t=ri(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];V(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),V(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Zo(t,r)}}),Eu=ai({einsum_:function(e,...t){const n=t.map(((e,t)=>ri(e,`tensors${t}`,"einsum"))),s={equation:e};return Yr.runKernel(St,n,s)}}),Ru=ai({rgbToGrayscale_:function(e){const t=ri(e,"image","RGBToGrayscale"),n=t.rank-1,s=t.shape[n];V(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),V(3===s,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`));const r=t.dtype,i=Qi(t,"float32"),a=nu([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Eu("ij,j->i",i,a);break;case 3:o=Eu("ijk,k->ij",i,a);break;case 4:o=Eu("ijkl,l->ijk",i,a);break;case 5:o=Eu("ijklm,m->ijkl",i,a);break;case 6:o=Eu("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=Jo(o,-1),Qi(o,r)}}),Au=ai({rotateWithOffset_:function(e,t,n=0,s=.5){const r=ri(e,"image","rotateWithOffset","float32");V(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const i={image:r},a={radians:t,fillValue:n,center:s};return Yr.runKernel(Os,i,a)}});function Du(e,t,n,s,r,i){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=e.shape[0];return n=Math.min(n,a),V(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),V(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),V(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),V(1===t.rank,(()=>"scores must be a 1D tensor")),V(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),V(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}const _u=ai({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=ri(e,"boxes","nonMaxSuppression","float32"),a=ri(t,"scores","nonMaxSuppression","float32"),o=Du(i,a,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Yr.runKernel(In,{boxes:i,scores:a},l)}});function Fu(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,i=0,a=!1;for(;s<r;){i=s+(r-s>>>1);const o=n(t,e[i]);o>0?s=i+1:(r=i,a=!o)}return a?s:-s-1}(e,t,n||Ou)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Ou(e,t){return e>t?1:e<t?-1:0}function Lu(e,t,n,s,r){return zu(e,t,n,s,r,0)}function Mu(e,t,n,s,r,i){return zu(e,t,n,s,r,0,!1,i,!0)}function Pu(e,t,n,s,r,i){return zu(e,t,n,s,r,i,!0)}function zu(e,t,n,s,r,i,a=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Uu);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=Bu(e,i,h[n]);if(a>=s){o=!0;break}if(t.score=t.score*Wu(s,c,a),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>r&&Fu(u,t,Uu))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function Bu(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(a,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-g,0)*Math.max(y-m,0);return x/(p+f-x)}function Wu(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Uu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Gu=ai({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=ri(e,"boxes","nonMaxSuppression"),o=ri(t,"scores","nonMaxSuppression"),l=Du(a,o,n,s,r,i),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=Yr.runKernel(Sn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Vu=ai({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=ri(e,"boxes","nonMaxSuppression"),o=ri(t,"scores","nonMaxSuppression"),l=Du(a,o,n,s,r,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=Yr.runKernel(Tn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Hu=ai({resizeBilinear_:function(e,t,n=!1,s=!1){const r=ri(e,"images","resizeBilinear");V(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),V(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),V(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=To(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:t},u=Yr.runKernel(Gn,o,l);return a?To(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),ju=ai({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=ri(e,"images","resizeNearestNeighbor");V(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),V(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),V("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),V(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=To(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:t},u=Yr.runKernel(Wn,o,l);return a?To(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Ku=ai({bincount_:function(e,t,n){const s=ri(e,"x","bincount"),r=ri(t,"weights","bincount");V("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),V(n>=0,(()=>`size must be non-negative, but got ${n}.`)),V(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const i={x:s,weights:r},a={size:n};return Yr.runKernel(Xe,i,a)}}),qu=ai({lessEqual_:function(e,t){let n=ri(e,"a","lessEqual","string_or_numeric"),s=ri(t,"b","lessEqual","string_or_numeric");[n,s]=Ur(n,s),Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(Jt,r)}}),Xu=ai({round_:function(e){const t={x:ri(e,"x","round")};return Yr.runKernel(Kn,t)}}),Yu=ai({threshold_:function(e,t="binary",n=!1,s=.5){const r=ri(e,"image","threshold"),i=r.shape[0]*r.shape[1];let a,o,l,u,c=ra(nu([s]),255);if(V(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),V(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),V("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),V("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[a,o,l]=Zl(r,[1,1,1],-1);const e=ra(a,.2989),t=ra(o,.587),n=ra(l,.114);u=ta(ta(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,s,r,i,a,o,l=nu([-1]),u=nu([0]),c=nu([0]);for(let h=0;h<e.size-1;h++){n=Hl(e,0,h+1),s=Hl(e,h+1),a=sa(ll(n),t),o=sa(ll(s),t);const d=ll(ra(n,zl(0,n.size)));r=sa(d,ll(n));const p=ba(s.shape,n.size),f=ta(zl(0,s.size),p),g=ra(s,f);i=sa(ll(g),ll(s));const m=ka(r,i),b=ka(r,i),y=ra(a,o);c=ra(ra(y,m),b);const x=nl(c,u);u=au(x,c,u),l=au(x,nu([h]),l)}return l}(Ku(Qi(Xu(u),"int32"),ui([]),256),i));const h=n?qu(u,c):nl(u,c);return Qi(ra(h,255),"int32")}}),Ju=ai({transform_:function(e,t,n="nearest",s="constant",r=0,i){const a=ri(e,"image","transform","float32"),o=ri(t,"transforms","transform","float32");V(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),V(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),V(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return Yr.runKernel($s,l,u)}}),Zu=ai({less_:function(e,t){let n=ri(e,"a","less","string_or_numeric"),s=ri(t,"b","less","string_or_numeric");[n,s]=Ur(n,s),Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(Yt,r)}}),Qu=ai({bandPart_:function(e,t,n){const s=ri(e,"a","bandPart");V(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[i,a]=s.shape.slice(-2);let o,l;"number"==typeof t?(V(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),V(t<=i,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`)),o=ri(t<0?i:t,"numLower","bandPart")):(V("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=au(Zu(t,0),i,Sl(t,i))),"number"==typeof n?(V(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),V(n<=a,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`)),l=ri(n<0?a:n,"numUpper","bandPart")):(V("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=au(Zu(n,0),a,Sl(n,a)));const u=To(zl(0,i,1,"int32"),[-1,1]),c=zl(0,a,1,"int32"),h=ka(u,c),d=xl(qu(h,o),sl(h,Nl(l))),p=Rl([i,a],s.dtype);return To(eu(iu(To(s,[-1,i,a])).map((e=>au(d,e,p)))),r)}});function ec(e,t,n=null){if(0===e.rank)return wa(e);if(1!==e.rank&&null===n)return ec(To(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ll(wa(e),n);if(t===1/0)return ol(wa(e),n);if(t===-1/0)return Tl(wa(e),n);if("euclidean"===t||2===t)return ia(ll(xa(wa(e),ua(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ol(ll(wa(e),n[0]),n[1]-1);if(t===1/0)return ol(ll(wa(e),n[1]),n[0]);if(t===-1/0)return Tl(ll(wa(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ia(ll(aa(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const tc=ai({norm_:function(e,t="euclidean",n=null,s=!1){const r=ec(e=ri(e,"x","norm"),t,n);let i=r.shape;if(s){const t=ee(n,e.shape);i=pl(r.shape,t)}return To(r,i)}}),nc=ai({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,V(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)V(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Zl(e,e.shape[0],0).map((e=>Ql(e,[0])));V(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(Yr.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=ra(ll(ra(n[s],e)),n[s]);e=ka(e,t)}return sa(e,tc(e,"euclidean"))})));return t?eu(n,0):n}});function sc(e,t=!1){return Yr.tidy((()=>{V(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=Qo(n),i=ea(e);const a=su([[1]],[1,1]);let o=ea(a);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=i,l=o,u=r;[o,i,r]=Yr.tidy((()=>{const t=Hl(i,[e,e],[n-e,1]),l=tc(t),u=Hl(i,[e,e],[1,1]),c=au(nl(u,0),su([[-1]]),su([[1]])),h=ka(u,ra(c,l)),d=sa(t,h);o=1===d.shape[0]?ea(a):_o([a,Hl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Nl(sa(kl(c,h),l)),f=Hl(i,[e,0],[n-e,s]),g=ra(p,o),m=uu(o);if(0===e)i=ka(f,kl(g,kl(m,f)));else{const t=ka(f,kl(g,kl(m,f)));i=_o([Hl(i,[0,0],[e,s]),t],0)}const b=uu(g),y=Hl(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=ka(y,kl(kl(y,o),b));else{const t=ka(y,kl(kl(y,o),b));r=_o([Hl(r,[0,0],[n,e]),t],1)}return[o,i,r]})),gi([t,l,u])}return!t&&n>s&&(r=Hl(r,[0,0],[n,s]),i=Hl(i,[0,0],[s,s])),[r,i]}))}const rc=ai({qr_:function(e,t=!1){if(V(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return sc(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=iu(To(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],i=[];return s.forEach((e=>{const[n,s]=sc(e,t);r.push(n),i.push(s)})),[To(eu(r,0),e.shape),To(eu(i,0),e.shape)]}}});var ic;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ic||(ic={}));const ac=ai({squaredDifference_:function(e,t){let n=ri(e,"a","squaredDifference"),s=ri(t,"b","squaredDifference");[n,s]=Ur(n,s),Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(ms,r,{})}}),oc={flipLeftRight:Nu,grayscaleToRGB:$u,resizeNearestNeighbor:ju,resizeBilinear:Hu,rgbToGrayscale:Ru,rotateWithOffset:Au,cropAndResize:Cu,nonMaxSuppression:_u,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=ri(e,"boxes","nonMaxSuppressionAsync"),a=ri(t,"scores","nonMaxSuppressionAsync"),o=Du(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=Lu(u,c,n,s,r);return i!==e&&i.dispose(),a!==t&&a.dispose(),nu(h,"int32")},nonMaxSuppressionWithScore:Gu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=ri(e,"boxes","nonMaxSuppressionAsync"),o=ri(t,"scores","nonMaxSuppressionAsync"),l=Du(a,o,n,s,r,i);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Pu(c,h,n,s,r,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:nu(d,"int32"),selectedScores:nu(p)}},nonMaxSuppressionPadded:Vu,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=ri(e,"boxes","nonMaxSuppressionAsync"),o=ri(t,"scores","nonMaxSuppressionAsync"),l=Du(a,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:g}=Mu(d,p,u,c,h,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:nu(f,"int32"),validOutputs:ua(g,"int32")}},threshold:Yu,transform:Ju},lc={bandPart:Qu,gramSchmidt:nc,qr:rc},uc=class{static sgd(e){return new $a(e)}static momentum(e,t,n=!1){return new Ea(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Ra(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new va(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new ma(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Na(e,t,n,s,r)}static adagrad(e,t=.1){return new ya(e,t)}},cc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function hc(){return new Promise((e=>cc((()=>e()))))}function dc(e,t){const n=e[0].length;e.forEach(((e,t)=>{V(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),V(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let i=0;i<n;i++)V(i===t||e[i]===s[i],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function pc(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var fc;function gc(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const i=n[r],a=s[s.length-n.length+r],o=s[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${i} but shape[${r+e}] = ${o}`)}else s[a]=i}return s}function mc(e){const t={FIRST_DIM_SIZE:fc.FIRST_DIM_SIZE,VALUE_ROWIDS:fc.VALUE_ROWIDS,ROW_LENGTHS:fc.ROW_LENGTHS,ROW_SPLITS:fc.ROW_SPLITS,ROW_LIMITS:fc.ROW_LIMITS,ROW_STARTS:fc.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function bc(e){return 0===e.length?0:e[0]===fc.FIRST_DIM_SIZE?e.length-1:e.length}function yc(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=e[r],s=t[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${s}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(fc||(fc={}));const xc=30;function kc(e){return e<=xc?e:ce(e,Math.floor(Math.sqrt(e)))}function vc(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function wc(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Ic(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Tc(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Sc(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Cc(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function Nc(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===K(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,i=r[r.length-1];let a=1;for(let e=0;e<r.length-1;++e)a*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=i;e<n;++e)u*=o[e],l.push(o[e]);const c=[...he(e.shape).map((e=>e/u)),1].slice(0,i);return[l,a,u,c]}function $c(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(i+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(i+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function Ec(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}$c(n,t,e)}function Rc(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,i=n.length;let a=1;for(let e=r;e<i;++e)a*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:K(t.shape)/o,sliceSize:a,strides:[...he(n.slice(0,r)),1],outputSize:K(n)}}const Ac=1.7580993408473768,Dc=1.0507009873554805,_c=.3275911,Fc=.254829592,Oc=-.284496736,Lc=1.421413741,Mc=-1.453152027,Pc=1.061405429;function zc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Bc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Wc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Uc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Gc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Vc(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function Hc(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const i=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function jc(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const Kc="->",qc=/->/g,Xc=",",Yc="...";function Jc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(qc,"").length)/Kc.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Kc}").`);const[s,r]=e.split(Kc);V(-1===s.indexOf(Yc),(()=>`The ellipsis notation ("${Yc}") is not supported yet.`));const i=s.split(Xc),a=i.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!i.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&t!==Xc&&o.push(t)}const l=new Array(i.length);for(let e=0;e<a;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<i[e].length;++t)l[e].push(o.indexOf(i[e][t]))}const u=o.length,c=[];for(let e=r.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Zc(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Qc(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:V(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function eh(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const i=[];for(let e=0;e<n.length;++e){const r=nh(t,n[e]);for(const t of r)-1===i.indexOf(t)&&(s[e].push(t),i.push(t))}return{path:n,steps:s}}function th(e){return e.every(((e,t)=>e===t))}function nh(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function sh(e,t,n=0){let s=[];if("number"==typeof t)V(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);V(r<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const s=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-s}V(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function rh(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function ih(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function ah(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function oh(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function lh(e,t){return`size ${e} must be non-negative, not ${t}`}function uh(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ch(e,t){return`Input to reshape is a SparseTensor with ${K(e)}\n  dense values, but the requested shape requires a multiple of ${K(t)}. inputShape=${e} outputShape= ${t}`}function hh(e,t){return`Input to reshape is a tensor with ${K(e)} dense values, but the requested shape has ${K(t)}. inputShape=${e} outputShape=${t}`}function dh(){return"segment ids must be >= 0"}function ph(){return"segment ids are not increasing"}function fh(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function gh(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function mh(e,t){let n,s=!1;for(e<=xc?(n=e,s=!0):n=ce(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=ce(e,n+1);return n}function bh(e,t,n){const s=[],r=e.length;for(let i=0;i<r;i++)i!==t?s.push(e[i]):s.push(n);return s}function yh(e,t,n,s){const r=t.shape.length,i=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${i}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function xh(e){try{return e.map((e=>fr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function kh(e){return e.map((e=>pr(e)))}function vh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=Zi(e,"int32"),r=Zi([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=s.indexToLoc(n[t]),a=t*e.length;r.values.set(i,a)}return r.toTensor()}!function(){for(const e of Aa)fa(e)}();const wh={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(e,bu(Qi(n,"float32"),-1))}}},Ih={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=aa(Qi(n,"float32")),s=ia(ka(ua(1),t));return Nl(sa(e,s))}}}},Th={kernelName:Ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ia(ka(aa(Qi(n,"float32")),1));return sa(e,t)}}}},Sh={kernelName:De,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Sa(n.shape,s.shape);return{a:()=>{let t=e;const s=Ta(n.shape,r);return s.length>0&&(t=ll(t,s)),To(t,n.shape)},b:()=>{let t=e;const n=Ta(s.shape,r);return n.length>0&&(t=ll(t,n)),To(t,s.shape)}}}},Ch={kernelName:_e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},Nh={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(n)}}},$h={kernelName:Me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(n)}}},Eh={kernelName:Pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sa(e,ia(ka(ua(1),aa(Qi(n,"float32")))))}}},Rh={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ia(ta(ua(1),aa(Qi(n,"float32"))));return sa(e,t)}}}},Ah={kernelName:Ue,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Sa(n.shape,s.shape);return{a:()=>{const t=ta(aa(n),aa(s));let i=ra(e,sa(s,t));const a=Ta(n.shape,r);return a.length>0&&(i=ll(i,a)),To(i,n.shape)},b:()=>{const t=ta(aa(n),aa(s));let i=Nl(ra(e,sa(n,t)));const a=Ta(s.shape,r);return a.length>0&&(i=ll(i,a)),To(i,s.shape)}}}},Dh={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sa(e,ta(aa(Qi(n,"float32")),1))}}},_h={kernelName:We,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sa(e,ka(ua(1),aa(Qi(n,"float32"))))}}},Fh=ai({avgPool3dGrad_:function(e,t,n,s,r,i){const a=ri(e,"dy","avgPool3dGrad"),o=ri(t,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=To(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=To(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),V(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),V(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Io("avgPool3dGrad",r,i);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:i},p=Yr.runKernel(je,h,d);return c?To(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Oh={kernelName:He,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Fh(e,s,r,i,a,o)}}},Lh=ai({avgPoolGrad_:function(e,t,n,s,r){const i=ri(e,"dy","avgPoolGrad"),a=ri(t,"input","avgPoolGrad");V(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=To(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=To(i,[1,i.shape[0],i.shape[1],i.shape[2]])),V(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),V(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=Yr.runKernel(Ve,c,h);return u?To(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Mh={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:a}=n;return{x:()=>Lh(e,s,r,i,a)}}},Ph={kernelName:Ke,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>kl(e,r,!1,!1),b:()=>kl(e,s,!0,!1)}:i&&!a?{a:()=>kl(r,e,!1,!0),b:()=>kl(s,e,!1,!1)}:{a:()=>kl(r,e,!0,!0),b:()=>kl(e,s,!0,!0)}:{a:()=>kl(e,r,!1,!0),b:()=>kl(s,e,!0,!1)}}},zh=ai({spaceToBatchND_:function(e,t,n){const s=ri(e,"x","spaceToBatchND");V(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),V(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),V(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},i={blockShape:t,paddings:n};return Yr.runKernel(ls,r,i)}}),Bh={kernelName:qe,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>zh(e,s,r)}}},Wh={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,i=s.shape,a=Array.from(i);for(let e=r.length-1;e>=0;e--)if(r[e]===i[e])a[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let e=0;e<a.length;e++)a[e]>1&&o.push(e);return{x:()=>ll(e,o,!0)}}},Uh={kernelName:Ze,gradFunc:e=>({x:()=>e.clone()})},Gh={kernelName:Qe,gradFunc:e=>({x:()=>oa(e)})},Vh={kernelName:et,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>au(xl(sl(s,r),qu(s,i)),e,oa(e))}}},Hh={kernelName:nt,inputsToSave:["x"],gradFunc:wh.gradFunc},jh={kernelName:st,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,i=ee(r,t[0].shape)[0],a=s.map((e=>e[i]));return Zl(e,a,i).map((e=>()=>e))}},Kh={kernelName:rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return V(xo(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Bo(s.shape,e,r,a,o,l),filter:()=>gu(s,e,r.shape,a,o,l)}}},qh={kernelName:at,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Po(e,r,i,a,o,1,l),filter:()=>gu(e,s,r.shape,i,a,o,l)}}},Xh=ai({conv3DBackpropFilter_:function(e,t,n,s,r){let i=e;4===e.rank&&(i=To(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=To(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),V(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),V(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),V(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),V(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),V(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:s,pad:r,filterShape:n};return Yr.runKernel(lt,o,l)}}),Yh={kernelName:ot,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i}=n;V(xo(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[a,o]=t;return{x:()=>Go(a.shape,e,o,r,i),filter:()=>Xh(a,e,o.shape,r,i)}}},Jh=ai({sin_:function(e){const t={x:ri(e,"x","sin","float32")};return Yr.runKernel(ts,t)}}),Zh={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(Nl(Jh(Qi(n,"float32"))),e)}}},Qh=ai({sinh_:function(e){const t={x:ri(e,"x","sinh")};return Yr.runKernel(ns,t)}}),ed={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(Qh(Qi(n,"float32")),e)}}},td=ai({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:ri(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:s};return Yr.runKernel(pt,r,i)}}),nd={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:i,reverse:a}=n;return{x:()=>{const t=gl([r],s.rank);let n=td(e,r,i,!a);return null!=t&&(n=uu(n,t)),n}}}},sd={kernelName:bt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=n,o=null==s?[1,1]:s;V(xo(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return V(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),V(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),V(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),V(ko(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),Io("depthwiseConv2d",i,a),{x:()=>Tu(l.shape,e,u,r,i,o,a),filter:()=>Iu(l,e,u.shape,r,i,o,a)}}},rd={kernelName:vt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,i={x:s,filter:r,dy:e},a={x:s,filter:r,dy:e};return{x:()=>Yr.runKernel(wt,i,n),filter:()=>Yr.runKernel(It,a,n)}}},id={kernelName:Ct,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>Yr.runKernel(Nt,s)}}},ad={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=ra(Yo(Nl(aa(n))),2/Math.sqrt(Math.PI));return{x:()=>ra(e,s)}}},od={kernelName:Rt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(e,n)}}},ld={kernelName:At,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>To(e,n.shape)}}},ud={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(e,Yo(n))}}},cd={kernelName:Lt,gradFunc:e=>({x:()=>oa(e)})},hd={kernelName:Mt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Sa(n.shape,s.shape);return{a:()=>{const t=sa(e,Qi(s,"float32")),i=Ta(n.shape,r);return i.length>0?To(ll(t,i),n.shape):t},b:()=>{let t=ra(e,Qi(n,"float32"));const i=Ta(s.shape,r);i.length>0&&(t=To(ll(t,i),s.shape));const a=aa(s);return Nl(sa(t,Qi(a,"float32")))}}}},dd=ai({rsqrt_:function(e){const t={x:ri(e,"x","rsqrt","float32")};return Yr.runKernel(qn,t)}}),pd={kernelName:Pt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,i,a,o]=t,l=null==o?ua(1):o,u=Ta(i.shape,r.shape),c=[];if(1===i.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=ka(r,i),d=ra(e,l),p=dd(ta(a,ua(s))),f=ra(ra(ra(p,p),p),ua(-.5));return{x:()=>1===i.rank?To(ra(ra(e,Zo(To(p,[1,1,1,i.shape[0]]),c)),l),r.shape):To(ra(ra(e,p),l),r.shape),mean:()=>{let e=ra(ra(p,ua(-1)),d);return 1===i.rank&&(e=ll(e,u)),To(e,i.shape)},variance:()=>{let e=ra(ra(f,h),d);return 1===i.rank&&(e=ll(e,u)),To(e,i.shape)},scale:()=>{const t=ra(h,p);let n=ra(e,t);return 1===i.rank&&(n=ll(n,u)),To(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=ll(t,u)),To(t,i.shape)}}}},fd=ai({unsortedSegmentSum_:function(e,t,n){const s=ri(e,"x","unsortedSegmentSum"),r=ri(t,"segmentIds","unsortedSegmentSum","int32");V(X(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},a={numSegments:n};return Yr.runKernel(Ds,i,a)}}),gd={kernelName:zt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:i,batchDims:a}=n,o=ee(i,s.shape)[0],l=(e,t,n)=>()=>{const s=e.shape,r=t.size,a=s.slice(0,o),l=a.length,u=s.slice(i,s.length).slice(1),c=u.length,h=md(0,l),d=md(l+1,l+1+c),p=bd([a,[r],u]),f=To(n,p),g=To(t,[r]),m=bd([[l],h,d]),b=uu(f,m);let y=fd(b,g,e.shape[o]);const x=ml(m);return y=uu(y,x),y};if(1===a){const t=s.shape[0],n=s.split(t,0);return{x:()=>{const t=eu(n.map(((t,n)=>l(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(s.shape)},indices:()=>r}}return{x:l(s,r,e),indices:()=>r}}};function md(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function bd(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const yd={kernelName:Ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>oa(n),b:()=>oa(s)}}},xd={kernelName:Gt,gradFunc:e=>({x:()=>Qi(e,"float32")})},kd={kernelName:jt,gradFunc:e=>({x:()=>oa(e)})},vd={kernelName:Kt,gradFunc:e=>({x:()=>oa(e)})},wd={kernelName:qt,gradFunc:e=>({x:()=>oa(e)})},Id={kernelName:Xt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,i=nl(s,0);return{x:()=>au(i,e,ra(e,r))}}},Td={kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sa(e,ta(n,1))}}},Sd={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sa(e,Qi(n,"float32"))}}},Cd={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=Yo(s);return ka(e,ra(ll(e,r,!0),t))}}}},Nd=ai({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,i=1,a=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:a};return Yr.runKernel(an,o,l)}}),$d={kernelName:rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Nd(s,r,e,i,a,o,l)}}};function Ed(e,t,n,s){return t.rank<n.rank&&(t=To(t,pl(t.shape,s))),e.rank<n.rank&&(e=To(e,pl(e.shape,s))),{x:()=>ra(e,Qi(qo(n,t),e.dtype))}}const Rd={kernelName:on,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,i=t[0],a=Ed(e,t[1],i,ee(r,i.shape));return{x:()=>a.x()}}},Ad={kernelName:ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>ra(e,Qi(sl(n,s),"float32")),b:()=>ra(e,Qi(Zu(n,s),"float32"))}}},Dd=ai({maxPool3dGrad_:function(e,t,n,s,r,i,a){const o=ri(e,"dy","maxPool3dGrad"),l=ri(t,"input","maxPool3dGrad"),u=ri(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=To(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=To(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=To(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),V(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),V(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),V(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Io("maxPool3dGrad",i,a);const f={dy:c,input:h,output:d},g={filterSize:s,strides:r,pad:i,dimRoundingMode:a},m=Yr.runKernel(dn,f,g);return p?To(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),_d={kernelName:hn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>Dd(e,s,r,i,a,o,l)}}},Fd=ai({maxPoolGrad_:function(e,t,n,s,r,i,a){const o=ri(e,"dy","maxPoolGrad"),l=ri(t,"input","maxPoolGrad"),u=ri(n,"output","maxPoolGrad");V(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),V(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),V(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Io("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return Yr.runKernel(cn,c,h)}}),Od={kernelName:un,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Fd(e,s,r,i,a,o)}}},Ld={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,i=ee(r,s.shape),a=K(dl(s.shape,i)[1]);return{x:()=>{const t=s.shape.slice();i.forEach((e=>{t[e]=1}));const n=To(e,t);return sa(ra(n,Al(s.shape,"float32")),a)}}}},Md={kernelName:gn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[i,a]=t,o=Ed(e,a,i,ee(r,i.shape));return{x:()=>o.x()}}},Pd={kernelName:mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>ra(e,Qi(qu(n,s),"float32")),b:()=>ra(e,Qi(nl(n,s),"float32"))}}},zd={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map((e=>e[0]));return{x:()=>Hl(e,i,s.shape)}}},Bd={kernelName:yn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Sa(n.shape,s.shape);return{a:()=>{const t=Ta(n.shape,r);return t.length>0?To(ll(e,t),n.shape):e},b:()=>{const t=ra(e,Nl(el(sa(n,s)))),i=Ta(s.shape,r);return i.length>0?To(ll(t,i),s.shape):t}}}},Wd={kernelName:kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Sa(n.shape,s.shape);return{a:()=>{const t=ra(e,Qi(s,"float32")),i=Ta(n.shape,r);return i.length>0?To(ll(t,i),n.shape):t},b:()=>{const t=ra(e,Qi(n,"float32")),i=Ta(s.shape,r);return i.length>0?To(ll(t,i),s.shape):t}}}},Ud={kernelName:vn,gradFunc:e=>({x:()=>Nl(e)})},Gd={kernelName:Nn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Rl(n.shape,"float32")}}},Vd={kernelName:Cn,gradFunc:e=>({x:()=>oa(e)})},Hd={kernelName:$n,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return iu(e,s).map((e=>()=>e))}},jd={kernelName:En,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map((e=>e[0]));return{x:()=>Hl(e,i,s.shape)}}},Kd={kernelName:Rn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,i=n,a=s,o=Sa(i.shape,a.shape);return{a:()=>{const t=Qi(a,"float32");let n=ra(e,ra(t,xa(i,ka(t,ua(1)))));const s=Ta(i.shape,o);return s.length>0&&(n=ll(n,s)),To(n,i.shape)},b:()=>{const t=nl(i,0),n=au(t,il(i),oa(i));let s=ra(e,ra(r,n));const l=Ta(a.shape,o);return l.length>0&&(s=ll(s,l)),To(s,a.shape)}}}},qd={kernelName:An,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=nl(n,0);return{x:()=>au(r,e,ra(e,s)),alpha:()=>{let t=au(r,oa(e),ra(e,n));const i=Ta(s.shape,e.shape);return i.length>0&&(t=ll(t,i)),To(t,s.shape)}}}},Xd=ai({cumprod_:function(e,t=0,n=!1,s=!1){const r={x:ri(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:s};return Yr.runKernel(dt,r,i)}});const Yd={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let i=[];return i=null==r?s.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>function(e,t,n){const s=e.shape.length,r=s-n.length,i=gl(n,s);let a=e;null!=i&&(a=uu(e,i));const o=a.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const s=e.shape.slice();s[n]=1;const r=To(t,s),i=Xd(e,n,!0,!1),a=Xd(e,n,!0,!0),o=ra(i,a);return ra(r,o)}(a.reshape(o),t,r);if(u=u.reshape(a.shape),null!=i){const e=ml(i);u=uu(u,e)}return u}(s,e,i)}}},Jd={kernelName:Tt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Sa(n.shape,s.shape);return{a:()=>{const t=sa(e,Qi(s,"float32")),i=Ta(n.shape,r);return i.length>0?To(ll(t,i),n.shape):t},b:()=>{let t=ra(e,Qi(n,"float32"));const i=Ta(s.shape,r);i.length>0&&(t=To(ll(t,i),s.shape));const a=aa(s);return Nl(sa(t,Qi(a,"float32")))}}}},Zd={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sa(e,Nl(aa(n)))}}},Qd={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=ra(qu(n,6),bu(n));return{x:()=>ra(e,Qi(s,"float32"))}}},ep={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(e,Qi(bu(n),"float32"))}}},tp={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,n.shape)}}},np={kernelName:Gn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Yr.runKernel(Vn,r,n)}}},sp={kernelName:Wn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Yr.runKernel(Un,r,n)}}},rp={kernelName:jn,gradFunc:(e,t,n)=>{const{dims:s}=n,r=ee(s,e.shape);return{x:()=>Wl(e,r)}}},ip={kernelName:Kn,gradFunc:e=>({x:()=>oa(e)})},ap={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nl(sa(e,ra(xa(n,1.5),2)))}}},op=ai({logicalNot_:function(e){const t={x:ri(e,"x","logicalNot","bool")};return Yr.runKernel(nn,t)}}),lp={kernelName:Zn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Qi(oa(n),"float32"),t:()=>ra(e,Qi(n,e.dtype)),e:()=>ra(e,Qi(op(n),e.dtype))}}},up={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=nl(n,ua(0)),s=ua(Ac),r=ua(Dc),i=ra(e,r),a=ra(ra(e,s),Yo(Qi(n,"float32")));return au(t,i,a)}}}},cp={kernelName:rs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(e,ra(n,ka(ua(1),n)))}}},hp={kernelName:ss,gradFunc:e=>({x:()=>oa(e)})},dp=ai({cos_:function(e){const t={x:ri(e,"x","cos","float32")};return Yr.runKernel(ct,t)}}),pp={kernelName:ts,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(dp(Qi(n,"float32")),e)}}},fp=ai({cosh_:function(e){const t={x:ri(e,"x","cosh","float32")};return Yr.runKernel(ht,t)}}),gp={kernelName:ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(fp(Qi(n,"float32")),e)}}},mp={kernelName:es,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:i}=n,a=s.shape,[o,l]=no(s,r,i),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],a[t]-o[t]-l[t]]);return{x:()=>_l(e,u)}}},bp={kernelName:cs,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,i=ra(e,s);return{logits:()=>ka(i,ra(ll(i,[r],!0),s))}}},yp={kernelName:is,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(e,Vl(n))}}},xp=ai({batchToSpaceND_:function(e,t,n){const s=ri(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));V(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),V(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),V(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const i={x:s},a={blockShape:t,crops:n};return Yr.runKernel(qe,i,a)}}),kp={kernelName:ls,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>xp(e,s,r)}}},vp={kernelName:us,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>_o(e,s)}}},wp=[wh,Ih,Th,Sh,Ch,Nh,$h,Eh,Rh,Ah,Dh,_h,Oh,Mh,Ph,Bh,Wh,Uh,Gh,Vh,Hh,jh,qh,Kh,Yh,Zh,ed,nd,sd,rd,Jd,id,ad,od,ld,ud,hd,cd,pd,gd,yd,xd,kd,vd,wd,Id,Td,Sd,Cd,$d,Rd,Rd,Ad,_d,Od,Ld,Md,Pd,zd,Bd,Wd,Ud,Gd,Vd,Hd,jd,jd,Kd,qd,Yd,Zd,Qd,ep,tp,np,sp,rp,ip,ap,lp,up,cp,hp,pp,gp,mp,bp,yp,kp,kp,vp,vp,{kernelName:as,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sa(e,ra(ia(Qi(n,"float32")),2))}}},{kernelName:ms,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ua(2);return{a:()=>ra(e,ra(r,ka(n,s))),b:()=>ra(e,ra(r,ka(s,n)))}}},{kernelName:bs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(e,ra(Qi(n,"float32"),2))}}},{kernelName:Fs,gradFunc:e=>({x:()=>oa(e)})},{kernelName:Is,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Sa(n.shape,s.shape);return{a:()=>{let t=e;const s=Ta(n.shape,r);return s.length>0&&(t=ll(t,s)),To(t,n.shape)},b:()=>{let t=e;const n=Ta(s.shape,r);return n.length>0&&(t=ll(t,n)),To(Nl(t),s.shape)}}}},{kernelName:os,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:i}=n;ee(i,s.shape).forEach((e=>{r[e]=1}));const a=To(e,r),o=ra(a,Al(s.shape,"float32"));return{x:()=>o}}},{kernelName:Ts,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sa(e,aa(dp(n)))}}},{kernelName:Ss,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ra(ka(ua(1),aa(n)),e)}}},{kernelName:Cs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=oa(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=ta(t,Hl(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)t=ta(t,Hl(e,[n*s.shape[0],i*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)t=ta(t,Hl(e,[n*s.shape[0],i*s.shape[1],a*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)for(let o=0;o<r[3];++o)t=ta(t,Hl(e,[n*s.shape[0],i*s.shape[1],a*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:Es,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,i=ml(r);return{x:()=>uu(e,i)}}},{kernelName:As,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>eu(e,r)}}},{kernelName:Ds,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ca(t,oa(t)),s=tl(e,n);let r=sl(t,ua(0,"int32"));const i=s.rank-r.rank;for(let e=0;e<i;++e)r=Jo(r,e+1);r=xl(r,Al(s.shape,"bool"));const a=oa(s);return au(r,s,a)}(e,n)}}},{kernelName:_s,gradFunc:e=>({x:()=>oa(e)})}];for(const e of wp)Ks(e);Rr().prototype.abs=function(){return this.throwIfDisposed(),wa(this)};const Ip=ai({acos_:function(e){const t={x:ri(e,"x","acos")};return Yr.runKernel(Re,t)}});Rr().prototype.acos=function(){return this.throwIfDisposed(),Ip(this)};const Tp=ai({acosh_:function(e){const t={x:ri(e,"x","acosh")};return Yr.runKernel(Ae,t)}});Rr().prototype.acosh=function(){return this.throwIfDisposed(),Tp(this)},Rr().prototype.add=function(e){return this.throwIfDisposed(),ta(this,e)},Rr().prototype.all=function(e,t){return this.throwIfDisposed(),io(this,e,t)},Rr().prototype.any=function(e,t){return this.throwIfDisposed(),ao(this,e,t)},Rr().prototype.argMax=function(e){return this.throwIfDisposed(),oo(this,e)};const Sp=ai({argMin_:function(e,t=0){const n={x:ri(e,"x","argMin")},s={axis:t};return Yr.runKernel(Me,n,s)}});Rr().prototype.argMin=function(e){return this.throwIfDisposed(),Sp(this,e)},Rr().prototype.asScalar=function(){return this.throwIfDisposed(),V(1===this.size,(()=>"The array must have only 1 element.")),To(this,[])},Rr().prototype.asType=function(e){return this.throwIfDisposed(),Qi(this,e)},Rr().prototype.as1D=function(){return this.throwIfDisposed(),To(this,[this.size])},Rr().prototype.as2D=function(e,t){return this.throwIfDisposed(),To(this,[e,t])},Rr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),To(this,[e,t,n])},Rr().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),To(this,[e,t,n,s])},Rr().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),To(this,[e,t,n,s,r])};const Cp=ai({asin_:function(e){const t={x:ri(e,"x","asin")};return Yr.runKernel(Pe,t)}});Rr().prototype.asin=function(){return this.throwIfDisposed(),Cp(this)};const Np=ai({asinh_:function(e){const t={x:ri(e,"x","asinh")};return Yr.runKernel(ze,t)}});Rr().prototype.asinh=function(){return this.throwIfDisposed(),Np(this)};const $p=ai({atan_:function(e){const t={x:ri(e,"x","atan")};return Yr.runKernel(Be,t)}});Rr().prototype.atan=function(){return this.throwIfDisposed(),$p(this)};const Ep=ai({atan2_:function(e,t){let n=ri(e,"a","atan2"),s=ri(t,"b","atan2");[n,s]=Ur(n,s);const r={a:n,b:s};return Yr.runKernel(Ue,r)}});Rr().prototype.atan2=function(e){return this.throwIfDisposed(),Ep(this,e)};const Rp=ai({atanh_:function(e){const t={x:ri(e,"x","atanh")};return Yr.runKernel(We,t)}});Rr().prototype.atanh=function(){return this.throwIfDisposed(),Rp(this)},Rr().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),So(this,e,t,n,s)},Rr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),xp(this,e,t)},Rr().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),No(this,e,t,n,s,r)},Rr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ao(this,e)},Rr().prototype.cast=function(e){return this.throwIfDisposed(),Qi(this,e)};const Ap=ai({ceil_:function(e){const t={x:ri(e,"x","ceil","float32")};return Yr.runKernel(Qe,t)}});Rr().prototype.ceil=function(){return this.throwIfDisposed(),Ap(this)},Rr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Do(this,e,t)},Rr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Er&&(e=[e]),_o([this,...e],t)},Rr().prototype.conv1d=function(e,t,n,s,r,i){return this.throwIfDisposed(),zo(this,e,t,n,s,r,i)},Rr().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),Wo(this,e,t,n,s,r)},Rr().prototype.conv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),Po(this,e,t,n,s,r,i)},Rr().prototype.cos=function(){return this.throwIfDisposed(),dp(this)},Rr().prototype.cosh=function(){return this.throwIfDisposed(),fp(this)},Rr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Xd(this,e,t,n)},Rr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),td(this,e,t,n)};const Dp=ai({depthToSpace_:function(e,t,n="NHWC"){const s=ri(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],i="NHWC"===n?s.shape[2]:s.shape[3],a="NHWC"===n?s.shape[3]:s.shape[1];V(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),V(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),V(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),V(a%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return Yr.runKernel(mt,o,l)}});Rr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Dp(this,e,t)},Rr().prototype.depthwiseConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),jo(this,e,t,n,s,r,i)};const _p=ai({dilation2d_:function(e,t,n,s,r=[1,1],i="NHWC"){const a=ri(e,"x","dilation2d"),o=ri(t,"filter","dilation2d");V(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),V(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),V("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=To(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),V(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=Yr.runKernel(vt,c,h);return u?To(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Rr().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),_p(this,e,t,n,s,r)};const Fp=ai({divNoNan_:function(e,t){let n=ri(e,"a","div"),s=ri(t,"b","div");[n,s]=Ur(n,s);const r=sa(n,s),i=oa(r),a=qo(s,i);return au(a,i,r)}});Rr().prototype.divNoNan=function(e){return this.throwIfDisposed(),Fp(this,e)},Rr().prototype.div=function(e){return this.throwIfDisposed(),sa(this,e)};const Op=ai({dot_:function(e,t){const n=ri(e,"t1","dot"),s=ri(t,"t2","dot");V(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],i=1===s.rank?s.size:s.shape[0];if(V(r===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`)),1===n.rank&&1===s.rank){const e=To(n,[1,-1]),t=To(s,[-1,1]),r=kl(e,t);return To(r,[])}if(1===n.rank&&2===s.rank){const e=To(n,[1,-1]),t=To(s,[s.shape[0],s.shape[1]]),r=kl(e,t);return To(r,[r.size])}if(2===n.rank&&1===s.rank){const e=To(s,[-1,1]),t=kl(n,e);return To(t,[t.size])}{const e=To(s,[s.shape[0],s.shape[1]]);return kl(n,e)}}});Rr().prototype.dot=function(e){return this.throwIfDisposed(),Op(this,e)},Rr().prototype.elu=function(){return this.throwIfDisposed(),Ko(this)},Rr().prototype.equal=function(e){return this.throwIfDisposed(),qo(this,e)},Rr().prototype.erf=function(){return this.throwIfDisposed(),Xo(this)};const Lp=ai({euclideanNorm_:function(e,t=null,n=!1){return tc(e,"euclidean",t,n)}});Rr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Lp(this,e,t)},Rr().prototype.exp=function(){return this.throwIfDisposed(),Yo(this)},Rr().prototype.expandDims=function(e){return this.throwIfDisposed(),Jo(this,e)};const Mp=ai({expm1_:function(e){const t={x:ri(e,"x","expm1")};return Yr.runKernel(Dt,t)}});Rr().prototype.expm1=function(){return this.throwIfDisposed(),Mp(this)},Rr().prototype.fft=function(){return this.throwIfDisposed(),hu(this)},Rr().prototype.flatten=function(){return this.throwIfDisposed(),To(this,[this.size])},Rr().prototype.floor=function(){return this.throwIfDisposed(),el(this)},Rr().prototype.floorDiv=function(e){return this.throwIfDisposed(),na(this,e)},Rr().prototype.gather=function(e,t,n){return this.throwIfDisposed(),tl(this,e,t,n)},Rr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),sl(this,e)},Rr().prototype.greater=function(e){return this.throwIfDisposed(),nl(this,e)},Rr().prototype.ifft=function(){return this.throwIfDisposed(),pu(this)},Rr().prototype.irfft=function(){return this.throwIfDisposed(),fu(this)};const Pp=ai({isFinite_:function(e){const t={x:ri(e,"x","isFinite")};return Yr.runKernel(jt,t)}});Rr().prototype.isFinite=function(){return this.throwIfDisposed(),Pp(this)};const zp=ai({isInf_:function(e){const t={x:ri(e,"x","isInf")};return Yr.runKernel(Kt,t)}});Rr().prototype.isInf=function(){return this.throwIfDisposed(),zp(this)};const Bp=ai({isNaN_:function(e){const t={x:ri(e,"x","isNaN")};return Yr.runKernel(qt,t)}});Rr().prototype.isNaN=function(){return this.throwIfDisposed(),Bp(this)},Rr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),rl(this,e)},Rr().prototype.lessEqual=function(e){return this.throwIfDisposed(),qu(this,e)},Rr().prototype.less=function(e){return this.throwIfDisposed(),Zu(this,e)};const Wp=ai({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const i=ri(e,"x","localResponseNormalization");V(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),V(X(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=To(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:t,bias:n,alpha:s,beta:r},c=Yr.runKernel(rn,l,u);return o?To(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Rr().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Wp(this,e,t,n,s)};const Up=ai({logSigmoid_:function(e){const t=ri(e,"x","logSigmoid");return la((e=>({value:Nl(Jl(Nl(e))),gradFunc:t=>ra(t,Vl(Nl(e)))})))(t)}});Rr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Up(this)},Rr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),ul(this,e)},Rr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),yl(this,e,t)},Rr().prototype.log=function(){return this.throwIfDisposed(),il(this)},Rr().prototype.log1p=function(){return this.throwIfDisposed(),al(this)},Rr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),xl(this,e)},Rr().prototype.logicalNot=function(){return this.throwIfDisposed(),op(this)};const Gp=ai({logicalOr_:function(e,t){const n=ri(e,"a","logicalOr","bool"),s=ri(t,"b","logicalOr","bool");Sa(n.shape,s.shape);const r={a:n,b:s};return Yr.runKernel(sn,r)}});Rr().prototype.logicalOr=function(e){return this.throwIfDisposed(),Gp(this,e)};const Vp=ai({logicalXor_:function(e,t){const n=ri(e,"a","logicalXor","bool"),s=ri(t,"b","logicalXor","bool");return Sa(n.shape,s.shape),xl(Gp(e,t),op(xl(e,t)))}});Rr().prototype.logicalXor=function(e){return this.throwIfDisposed(),Vp(this,e)},Rr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),kl(this,e,t,n)},Rr().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),vl(this,e,t,n,s)},Rr().prototype.max=function(e,t){return this.throwIfDisposed(),ol(this,e,t)},Rr().prototype.maximum=function(e){return this.throwIfDisposed(),Ca(this,e)},Rr().prototype.mean=function(e,t){return this.throwIfDisposed(),Il(this,e,t)},Rr().prototype.min=function(e,t){return this.throwIfDisposed(),Tl(this,e,t)},Rr().prototype.minimum=function(e){return this.throwIfDisposed(),Sl(this,e)};const Hp=ai({mirrorPad_:function(e,t,n){V("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=ri(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");V(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)V(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),V(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const i={paddings:t,mode:n},a={x:s};return Yr.runKernel(bn,a,i)}});Rr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Hp(this,e,t)};const jp=ai({mod_:function(e,t){let n=ri(e,"a","mod"),s=ri(t,"b","mod");[n,s]=Ur(n,s);const r={a:n,b:s};return Yr.runKernel(yn,r)}});Rr().prototype.mod=function(e){return this.throwIfDisposed(),jp(this,e)},Rr().prototype.mul=function(e){return this.throwIfDisposed(),ra(this,e)},Rr().prototype.neg=function(){return this.throwIfDisposed(),Nl(this)},Rr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),tc(this,e,t,n)},Rr().prototype.notEqual=function(e){return this.throwIfDisposed(),$l(this,e)},Rr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),El(this,e,t,n)},Rr().prototype.onesLike=function(){return this.throwIfDisposed(),Dl(this)},Rr().prototype.pad=function(e,t){return this.throwIfDisposed(),_l(this,e,t)};const Kp=ai({pool_:function(e,t,n,s,r,i,a){null==r&&(r=[1,1]),null==i&&(i=1),0===s&&(s="valid");const o=ri(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=To(o,[1,o.shape[0],o.shape[1],o.shape[2]])),V(ko(i,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`));const c=uo(l.shape,t,i,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),i=e.concat(s,r),a=t.map(((e,t)=>(e-i[t]%e)%e)),o=r.map(((e,t)=>e+a[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,a[t]]))]}([c.inHeight,c.inWidth],h,d),m=p?s:"valid",b=p?l:zh(l,h,f),y=("avg"===n?()=>So(b,t,i,m,a):()=>vl(b,t,i,m,a))(),x=p?y:xp(y,h,g);return u?To(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});Rr().prototype.pool=function(e,t,n,s,r,i){return this.throwIfDisposed(),Kp(this,e,t,n,s,r,i)},Rr().prototype.pow=function(e){return this.throwIfDisposed(),xa(this,e)},Rr().prototype.prelu=function(e){return this.throwIfDisposed(),Fl(this,e)};const qp=ai({prod_:function(e,t=null,n=!1){let s=ri(e,"x","prod");"bool"===s.dtype&&(s=Qi(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return Yr.runKernel(Dn,r,i)}});Rr().prototype.prod=function(e,t){return this.throwIfDisposed(),qp(this,e,t)};const Xp=ai({reciprocal_:function(e){const t={x:ri(e,"x","reciprocal")};return Yr.runKernel(Pn,t)}});Rr().prototype.reciprocal=function(){return this.throwIfDisposed(),Xp(this)},Rr().prototype.relu=function(){return this.throwIfDisposed(),Bl(this)},Rr().prototype.relu6=function(){return this.throwIfDisposed(),mu(this)},Rr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),To(this,e.shape)},Rr().prototype.reshape=function(e){return this.throwIfDisposed(),To(this,e)},Rr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Hu(this,e,t,n)},Rr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),ju(this,e,t,n)},Rr().prototype.reverse=function(e){return this.throwIfDisposed(),Wl(this,e)},Rr().prototype.rfft=function(){return this.throwIfDisposed(),du(this)},Rr().prototype.round=function(){return this.throwIfDisposed(),Xu(this)},Rr().prototype.rsqrt=function(){return this.throwIfDisposed(),dd(this)},Rr().prototype.selu=function(){return this.throwIfDisposed(),Ul(this)},Rr().prototype.separableConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),Gl(this,e,t,n,s,r,i)},Rr().prototype.sigmoid=function(){return this.throwIfDisposed(),Vl(this)};const Yp=ai({sign_:function(e){const t={x:ri(e,"x","sign")};return Yr.runKernel(ss,t)}});Rr().prototype.sign=function(){return this.throwIfDisposed(),Yp(this)},Rr().prototype.sin=function(){return this.throwIfDisposed(),Jh(this)},Rr().prototype.sinh=function(){return this.throwIfDisposed(),Qh(this)},Rr().prototype.slice=function(e,t){return this.throwIfDisposed(),Hl(this,e,t)},Rr().prototype.softmax=function(e){return this.throwIfDisposed(),Yl(this,e)},Rr().prototype.softplus=function(){return this.throwIfDisposed(),Jl(this)},Rr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),zh(this,e,t)},Rr().prototype.split=function(e,t){return this.throwIfDisposed(),Zl(this,e,t)},Rr().prototype.sqrt=function(){return this.throwIfDisposed(),ia(this)},Rr().prototype.square=function(){return this.throwIfDisposed(),aa(this)},Rr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),ac(this,e)},Rr().prototype.squeeze=function(e){return this.throwIfDisposed(),Ql(this,e)},Rr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Er?[this,e]:[this,...e];return eu(n,t)},Rr().prototype.step=function(e){return this.throwIfDisposed(),bu(this,e)};const Jp=ai({stridedSlice_:function(e,t,n,s,r=0,i=0,a=0,o=0,l=0){const u={x:ri(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return Yr.runKernel(xs,u,c)}});Rr().prototype.stridedSlice=function(e,t,n,s,r,i,a,o){return this.throwIfDisposed(),Jp(this,e,t,n,s,r,i,a,o)},Rr().prototype.sub=function(e){return this.throwIfDisposed(),ka(this,e)},Rr().prototype.sum=function(e,t){return this.throwIfDisposed(),ll(this,e,t)};const Zp=ai({tan_:function(e){const t={x:ri(e,"x","tan","float32")};return Yr.runKernel(Ts,t)}});Rr().prototype.tan=function(){return this.throwIfDisposed(),Zp(this)},Rr().prototype.tanh=function(){return this.throwIfDisposed(),tu(this)},Rr().prototype.tile=function(e){return this.throwIfDisposed(),Zo(this,e)},Rr().prototype.toBool=function(){return this.throwIfDisposed(),Qi(this,"bool")},Rr().prototype.toFloat=function(){return this.throwIfDisposed(),Qi(this,"float32")},Rr().prototype.toInt=function(){return this.throwIfDisposed(),Qi(this,"int32")};const Qp=ai({topk_:function(e,t=1,n=!0){const s=ri(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const i={x:s},a={k:t,sorted:n},[o,l]=Yr.runKernel(Ns,i,a);return{values:o,indices:l}}});Rr().prototype.topk=function(e,t){return this.throwIfDisposed(),Qp(this,e,t)},Rr().prototype.transpose=function(e){return this.throwIfDisposed(),uu(this,e)};const ef=ai({unique_:function(e,t=0){const n=ri(e,"x","unique","string_or_numeric");V(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[i,a]=Yr.runKernel(Rs,s,r);return{values:i,indices:a}}});Rr().prototype.unique=function(e){return this.throwIfDisposed(),ef(this,e)},Rr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),fd(this,e,t)},Rr().prototype.unstack=function(e){return this.throwIfDisposed(),iu(this,e)},Rr().prototype.where=function(e,t){return this.throwIfDisposed(),au(e,this,t)},Rr().prototype.zerosLike=function(){return this.throwIfDisposed(),oa(this)};class tf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tf.prototype)}}class nf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nf.prototype)}}class sf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sf.prototype)}}class rf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rf.prototype)}}class af extends Error{constructor(e){super(e),Object.setPrototypeOf(this,af.prototype)}}Error;class of{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function lf(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function uf(e,t){if(!e)throw new af(t)}function cf(e,t){let n=0;for(const s of e)s===t&&n++;return n}function hf(e){return 1===e.length?e[0]:e}function df(e){return Array.isArray(e)?e:[e]}function pf(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ff(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let gf={};function mf(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function bf(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>bf(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?bf(t):e[n]=t.value)}}}function yf(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let i;if(r in n)i=n[r];else if(r in gf)i=gf[r];else if(i=t[r],null==i)throw new sf(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new sf(`${s}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in gf?[o,l]=gf.className:a in t&&([o,l]=t[a]),null==o)throw new sf(`Unknown ${s}: ${a}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(gf))e[t]=gf[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=Object.assign({},gf);for(const e of Object.keys(n))gf[e]=n[e];bf(i.config);const s=l(o,i.config,n,r);return gf=Object.assign({},t),s}{const e=Object.assign({},gf);for(const e of Object.keys(n))gf[e]=n[e];const t=new o(i.config);return gf=Object.assign({},e),t}}}function xf(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function kf(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function vf(e){if(null==e)throw new sf(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function wf(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new sf(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function If(e,t,n=0,s=1/0){return uf(n>=0),uf(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Tf(e,t){Array.isArray(e)?(V(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Tf(e,`element ${n+1} of ${t}`)))):V(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Sf(e)}.`))}function Sf(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Sf(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Cf(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Nf=0;function $f(){return Nf++}const Ef={};function Rf(e=""){return e in Ef||(Ef[e]=0),Ef[e]+=1,e+Ef[e].toString()}const Af=["channelsFirst","channelsLast"],Df=["nearest","bilinear"],_f=["valid","same","causal"],Ff=["max","avg"],Of=["sum","mul","concat","ave"],Lf=new Map;function Mf(e){wf(Af,"DataFormat",e)}function Pf(e){wf(_f,"PaddingMode",e)}function zf(e){wf(Ff,"PoolMode",e)}const Bf=[];function Wf(e,t){Bf.push(e);try{const e=t();return Bf.pop(),e}catch(e){throw Bf.pop(),e}}function Uf(e){if(!Hf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Bf.length?"":Bf.join("/")+"/")+e}function Gf(e){if(!Hf(e))throw new Error("Not a valid tensor name: '"+e+"'");Lf.has(e)||Lf.set(e,0);const t=Lf.get(e);if(Lf.set(e,Lf.get(e)+1),t>0){const n=`${e}_${t}`;return Lf.set(n,1),n}return e}const Vf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Hf(e){return!!e.match(Vf)}function jf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Kf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function qf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function Xf(e,t){if(t<e)throw new sf(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}let Yf;function Jf(){return null==Yf&&(Yf=Yr.backend.epsilon()),Yf}function Zf(e,t){return Qi(e,t)}function Qf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),To(e,n)}function eg(e,t,n){return fi((()=>{switch(e.rank){case 1:return jl(e,t,n);case 2:return Kl(e,[t,0],[n,e.shape[1]]);case 3:return ql(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Xl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Hl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Hl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new sf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function tg(e,t,n){return fi((()=>{switch(e.rank){case 1:return jl(e,t,n);case 2:return Kl(e,[0,t],[e.shape[0],n]);case 3:return ql(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Xl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new sf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ng(e,t,n,s){return fi((()=>{switch(e.rank){case 1:return jl(e,t,n);case 2:switch(s){case 1:return eg(e,t,n);case 2:return tg(e,t,n);default:throw new sf(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return eg(e,t,n);case 2:return ql(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return tg(e,t,n);default:throw new sf(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return eg(e,t,n);case 2:return Xl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Xl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return tg(e,t,n);default:throw new sf(`The axis is not within the rank of the tensor ${s}`)}default:throw new sf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),_o(e,t)}function rg(e,t){switch(e.rank){case 1:return Fo([e,t]);case 2:return Oo([e,t],0);case 3:return Lo([e,t],0);case 4:return Mo([e,t],0);default:throw new sf(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ig(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new sf(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Zo(e,t)}function ag(e,t=0,n=1,s,r){return Ml(e,t,n,s,r)}function og(e,t,n,s){if(e.rank<2||t.rank<2)throw new rf(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new rf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Su({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?cg(e.rank,s,"channelsLast"):null,activation:n});{const r=e.shape.slice(),i=r.pop();e=To(e,[-1,i]);const a=t.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=To(uu(t,c),[l,-1]);const h=[...r,...u];return To(Su({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?cg(e.rank,s,"channelsLast"):null,activation:n}),h)}}function lg(e,t,n){return fi((()=>(t=Array.isArray(t)?nu(t,"int32"):Qi(t,"int32"),tl(e,t,n))))}function ug(e){return ra(e,e)}function cg(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new sf(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?To(t,[1,s[0],1,1,1]):To(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?To(t,[1,1,1,1,s[0]]):To(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?To(t,[1,s[0],1,1]):To(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?To(t,[1,1,1,s[0]]):To(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?To(t,[1,s[0],1]):To(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?To(t,[1,1,s[0]]):To(t,[1].concat(s))}else if(e<3)return t;throw new sf(`Unsupported input rank by biasAdd: ${t.rank}`)}function hg(e,t,n){return fi((()=>(null==n&&(n="channelsLast"),Mf(n),ta(e,cg(e.rank,t,n)))))}function dg(e,t,n,s){return fi((()=>cu(e,t,n,s)))}function pg(e,t,n=!1){return n?e():t()}const fg=["fanIn","fanOut","fanAvg"],gg=["normal","uniform","truncatedNormal"];class mg extends da{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class bg extends mg{apply(e,t){return Rl(e,t)}}bg.className="Zeros",fa(bg);class yg extends mg{apply(e,t){return Al(e,t)}}yg.className="Ones",fa(yg);class xg extends mg{constructor(e){if(super(),"object"!=typeof e)throw new sf(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new sf(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return fi((()=>ra(ua(this.value),Al(e,t))))}getConfig(){return{value:this.value}}}xg.className="Constant",fa(xg);class kg extends mg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Pl(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}kg.className="RandomUniform",fa(kg);class vg extends mg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new rf(`randomNormal does not support dType ${t}.`);return ag(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}vg.className="RandomNormal",fa(vg);class wg extends mg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new rf(`truncatedNormal does not support dType ${t}.`);return ru(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}wg.className="TruncatedNormal",fa(wg);class Ig extends mg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return fi((()=>{if(2!==e.length||e[0]!==e[1])throw new sf("Identity matrix initializer can only be used for 2D square matrices.");return ra(this.gain,Qo(e[0]))}))}getConfig(){return{gain:this.gain}}}Ig.className="Identity",fa(Ig);class Tg extends mg{constructor(e){if(super(),e.scale<0)throw new sf(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,wf(fg,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){wf(gg,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(Mf(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=jf(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=jf(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=jf(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new rf(`${this.getClassName()} does not support dType ${t}.`);return ru(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return Pl(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Tg.className="VarianceScaling",fa(Tg);class Sg extends Tg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Tg.className}}Sg.className="GlorotUniform",fa(Sg);class Cg extends Tg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Tg.className}}Cg.className="GlorotNormal",fa(Cg);class Ng extends Tg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Tg.className}}Ng.className="HeNormal",fa(Ng);class $g extends Tg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Tg.className}}$g.className="HeUniform",fa($g);class Eg extends Tg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Tg.className}}Eg.className="LeCunNormal",fa(Eg);class Rg extends Tg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Tg.className}}Rg.className="LeCunUniform",fa(Rg);class Ag extends mg{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return fi((()=>{if(e.length<2)throw new rf("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=K(e.slice(0,-1)),s=e[e.length-1],r=n*s;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=ag([Math.max(s,n),Math.min(s,n)],0,1,t,this.seed),a=lc.qr(i,!1);let o=a[0];const l=a[1].flatten().stridedSlice([0],[Math.min(s,n)*Math.min(s,n)],[Math.min(s,n)+1]);return o=ra(o,l.sign()),n<s&&(o=o.transpose()),ra(ua(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ag.className="Orthogonal",fa(Ag);const Dg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function _g(e,t={}){return yf(e,pa.getMap().classNameMap,t,"initializer")}function Fg(e){return mf(e)}function Og(e){if("string"==typeof e){const t=e in Dg?Dg[e]:e;if("GlorotNormal"===t)return new Cg;if("GlorotUniform"===t)return new Sg;if("HeNormal"===t)return new Ng;if("HeUniform"===t)return new $g;if("LeCunNormal"===t)return new Eg;if("LeCunUniform"===t)return new Rg;{const e={};return e.className=t,e.config={},_g(e)}}return e instanceof mg?e:_g(e)}function Lg(e){return Array.isArray(e)&&Array.isArray(e[0])}function Mg(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Pg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new sf(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function zg(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new sf(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Bg(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Wg="Variable";class Ug{constructor(e,t="float32",n=Wg,s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=$f(),n=null==n?Wg:n,this.originalName=Uf(n),this.name=Gf(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(e,t=!0,n,s){return Yr.makeVariable(e,t,n,s)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Gg(e){return e.map((e=>e.read()))}function Vg(e){e.forEach((e=>{e[0].write(e[1])}))}class Hg{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class jg{constructor(e,t,n,s,r,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=a,this.id=$f(),null!=i&&(this.originalName=Uf(i),this.name=Gf(this.originalName)),this.rank=t.length}}let Kg=0;class qg{constructor(e,t){this.callArgs=t,this.id=Kg++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Xg=0;class Yg extends da{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Xg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=pf(e)+"_"+Rf(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new nf(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new sf(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return hf(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return hf(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new tf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new tf(`Layer ${this.name} is not connected, no input to return.`);return hf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new tf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new tf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return hf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=df(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=df(this.inputSpec);if(t.length!==n.length)throw new sf(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const s=t[e],r=n[e];if(null==r)continue;const i=s.rank;if(null!=r.ndim&&i!==r.ndim)throw new sf(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new sf(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new sf(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new sf(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const n in r.axes){const s=Number(n),i=r.axes[n],a=s>=0?t[s]:t[t.length+s];if(null!=i&&-1===[i,null].indexOf(a))throw new sf(`Input ${e} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],i=s.shape[t];if(null!=n&&null!=i&&n!==i)throw new sf(`Input ${e} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=df(e),s=function(e){let t=!0;for(const n of df(e))if(!(n instanceof jg)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of df(e))if(n instanceof jg){t=!1;break}return t}(e);if(s===r)throw new sf("Arguments to apply() must be all SymbolicTensors or all Tensors");return Wf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of df(e))t.push(n.shape);this.build(hf(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,s);const r=df(s),i=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(s=hf(i),null!=this.activityRegularizer)throw new rf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=df(e);const t=[];for(const n of e)t.push(n.shape);return hf(t)}(e),s=this.computeOutputShape(n);let r;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new jg(i,n,this,df(e),t,this.name,s))):new jg(i,s,this,df(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new rf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new tf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new tf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new nf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Bg(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Gg(e?this.trainableWeights:this.weights)}setWeights(e){fi((()=>{const t=this.weights;if(t.length!==e.length)throw new sf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=Gg(t);for(let r=0;r<s.length;++r){const i=s[r],a=t[r],o=e[r];if(!q(i.shape,o.shape))throw new sf(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}Vg(n)}))}addWeight(e,t,n,s,r,i,a,o){if(-1!==this._addedWeightNames.indexOf(e))throw new sf(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():Og("zeros"));const l=s.apply(t,n),u=new Ug(l,n,e,i,a);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=df(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const s=this.computeMask(e,n),r=df(t),i=df(s);if(r.length!==i.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let e=0;e<r.length;e++)r[e].kerasMask=i[e]}addInboundNode(e,t,n,s,r,i,a=null){const o=df(e);t=df(t),n=df(n),s=df(s),r=Mg(r),i=Mg(i);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new qg({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:i},a);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Jg(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Jg(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class Zg extends Yg{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Rf("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new sf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new sf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new sf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new jg(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new qg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new sf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Zg.className="InputLayer",fa(Zg);class Qg{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Qg)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new sf(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Qi(t,e.dtype)}catch(n){throw new sf(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof jg){if(null==this.id2Value[e.id])throw new sf(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new sf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof jg){if(null==this.id2Value[e.id])throw new sf(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new sf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&gi(this.id2Mask)}}const em=new of,tm=new of;function nm(e,t,n,s){const r=null!=n&&n.training,i=Array.isArray(e),a=i?e:[e],o=a.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=em.get(c);if(null==d){const e=function(e,t){V(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=rm(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of e){const{sorted:e,recipientMap:a}=rm(i,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in a)null==s[e]&&(s[e]=new Set),a[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:sm(s)}}(a,t);d=e.sorted,h=e.recipientCounts,em.put(c,d),tm.put(c,h)}h={},r||Object.assign(h,tm.get(c));const p=new Qg(t);for(let e=0;e<d.length;++e){if(null!=s){const e=pi().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const i=d[e],a=i.sourceLayer;if(a instanceof Zg)continue;const u=[],c=[],f=[];let g=!1;for(const e of i.inputs){const n=p.getValue(e),s=p.getMask(e);u.push(n),c.push(s),null!=s&&(g=!0),r||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=df(a.apply(u,n));let b=null;a.supportsMasking&&(b=a.computeMask(u,c));const y=im(i),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=m[e])}r||gi(f)}return p.disposeMasks(),i?l:l[0]}function sm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function rm(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const i=[],a=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=a[a.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),s.push(e),n.add(e.name),t&&a.pop();else{a.push(i.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:s,recipientMap:r}}function im(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function am(e,t){return fi((()=>ia(ll(ra(e,e),t,!0))))}Te().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=em&&em.setMaxEntries(e),null!=tm&&tm.setMaxEntries(e)}));class om extends da{getConfig(){return{}}}class lm extends om{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return fi((()=>{const t=am(e,this.axis),n=Do(t,0,this.maxValue);return ra(e,sa(n,ta(Jf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}lm.className="MaxNorm",fa(lm);class um extends om{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return fi((()=>sa(e,ta(Jf(),am(e,this.axis)))))}getConfig(){return{axis:this.axis}}}um.className="UnitNorm",fa(um);class cm extends om{apply(e){return Bl(e)}}cm.className="NonNeg",fa(cm);class hm extends om{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return fi((()=>{const t=am(e,this.axis),n=ta(ra(this.rate,Do(t,this.minValue,this.maxValue)),ra(1-this.rate,t));return ra(e,sa(n,ta(Jf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}hm.className="MinMaxNorm",fa(hm);const dm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function pm(e){return mf(e)}function fm(e,t={}){return yf(e,pa.getMap().classNameMap,t,"constraint")}function gm(e){return null==e?null:"string"==typeof e?fm({className:e in dm?dm[e]:e,config:{}}):e instanceof om?e:fm(e)}async function mm(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const i=e[r];if("number"!=typeof i){const e=i;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];gi(s)}}function bm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var ym;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ym||(ym={}));class xm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class km{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class vm extends xm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=fi((()=>ta(this.totals[e],ra(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:fi((()=>{const n=ra(sa(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),mi(t[e])})))}}class wm extends xm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!=typeof r[i]){const a=r[i];e.push(a.data()),t.push(s),n.push(i)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class Im extends xm{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||hc,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");oe(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():dr();return(...i)=>{const a=null!=n?n():dr();return a-r<t||(r=a,s=e(...i)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await mm(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await mm(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await mm(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await mm(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await mm(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):oe(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await mm(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await mm(e),await this.trainEnd(e))}}function Tm(e,t){return null==e&&(e={}),e instanceof xm?[e]:Array.isArray(e)&&e[0]instanceof xm?e:df(e).map((e=>new Im(e,t)))}class Sm{constructor(){}static registerCallbackConstructor(e,t){V(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Sm.checkForDuplicate(t),null==Sm.constructors[e]&&(Sm.constructors[e]=[]),Sm.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Sm.constructors)Sm.constructors[+t].forEach((t=>{if(t===e)throw new sf("Duplicate callback constructor.")}))}static clear(){Sm.constructors={}}static createCallbacks(e){const t=[];for(const n in Sm.constructors){const s=+n;e>=s&&t.push(...Sm.constructors[s])}return t.map((e=>new e))}}function Cm(e,t,n,s,r,i,a,o,l){const u=new wm,c=[new vm,...Sm.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new km(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Nm(e,t={},n=!1){return yf(e,pa.getMap().classNameMap,t,"layer",n)}function $m(e,t){return fi((()=>{"float32"!==e.dtype&&(e=Qi(e,"float32"));const n=ll(ug(e),t,!0),s=ba(n.shape,Jf()),r=ia(Ca(n,s));return sa(e,r)}))}function Em(e,t){return fi((()=>Il(ug(ka(t,e)),-1)))}function Rm(e,t){return fi((()=>Il(wa(ka(t,e)),-1)))}function Am(e,t){return fi((()=>{const n=ka(e,t),s=Do(wa(e),Jf(),Number.MAX_VALUE),r=wa(sa(n,s));return ra(100,Il(r,-1))}))}function Dm(e,t,n=!1){return fi((()=>{if(n)t=Yl(t);else{const e=ll(t,t.shape.length-1,!0);t=sa(t,e)}return t=Do(t,Jf(),1-Jf()),Nl(ll(ra(Qi(e,"float32"),il(t)),t.shape.length-1))}))}function _m(e,t,n=!1){return fi((()=>{const s=Qi(el(function(e){const t=[jf(e.shape)];return To(e,t)}(e)),"int32"),r=(t=Do(t,Jf(),1-Jf())).shape;return Dm(To(El(s,r[r.length-1]),r),t,n)}))}function Fm(e,t){return fi((()=>{let n;return n=Do(t,Jf(),1-Jf()),n=il(sa(n,ka(1,n))),Il(function(e,t){if(!q(e.shape,t.shape))throw new sf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return fi((()=>{const n=Bl(t),s=Nl(wa(t));return ta(ka(n,ra(t,e)),al(Yo(s)))}))}(e,n),-1)}))}function Om(e,t){return fi((()=>{const n=$m(e,-1),s=$m(t,-1),r=ra(n,s);return Nl(ll(r,-1))}))}Sm.constructors={};const Lm={meanSquaredError:Em,meanAbsoluteError:Rm,meanAbsolutePercentageError:Am,meanSquaredLogarithmicError:function(e,t){return fi((()=>{const n=Do(t,Jf(),Number.MAX_VALUE),s=il(ta(1,n)),r=Do(e,Jf(),Number.MAX_VALUE),i=il(ta(1,r));return Il(ug(ka(s,i)),-1)}))},squaredHinge:function(e,t){return fi((()=>{const n=Ca(0,ka(1,ra(e,t)));return Il(ug(n),-1)}))},hinge:function(e,t){return fi((()=>{const n=Ca(0,ka(1,ra(e,t)));return Il(n,-1)}))},categoricalHinge:function(e,t){return fi((()=>{const n=ll(ra(e,t),-1),s=ol(ra(ka(1,e),t),-1);return Ca(0,ta(1,ka(s,n)))}))},logcosh:function(e,t){return fi((()=>{const n=Math.log(2),s=ka(t,e),r=ka(ta(s,Jl(ra(-2,s))),n);return Il(r,-1)}))},categoricalCrossentropy:Dm,sparseCategoricalCrossentropy:_m,binaryCrossentropy:Fm,kullbackLeiblerDivergence:function(e,t){return fi((()=>{const n=Do(e,Jf(),1),s=Do(t,Jf(),1);return ll(ra(e,il(sa(n,s))),-1)}))},poisson:function(e,t){return fi((()=>{const n=il(ta(Jf(),t));return Il(ka(t,ra(e,n)),-1)}))},cosineProximity:Om};function Mm(e){if("string"==typeof e){if(e in Lm)return Lm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new sf(t)}return e}function Pm(e,t){return fi((()=>{const n=ra(.5,Dl(t)),s=Zf(nl(t,n),e.dtype);return Il(qo(e,s),-1)}))}function zm(e,t){return fi((()=>Zf(qo(oo(e,-1),oo(t,-1)),"float32")))}function Bm(e,t){return Fm(e,t)}function Wm(e,t){return e.rank===t.rank&&(e=Ql(e,[e.rank-1])),(t=oo(t,-1)).dtype!==e.dtype&&(t=Qi(t,e.dtype)),Qi(qo(e,t),"float32")}const Um=Dm,Gm=_m,Vm={binaryAccuracy:Pm,categoricalAccuracy:zm,precision:function(e,t){return fi((()=>{const n=function(e,t){return fi((()=>Qi(ll(xl(qo(e,1),qo(t,1))),"float32")))}(e,t),s=function(e,t){return fi((()=>Qi(ll(xl(qo(e,0),qo(t,1))),"float32")))}(e,t),r=ta(n,s);return Qi(au(nl(r,0),sa(n,r),0),"float32")}))},categoricalCrossentropy:Um,sparseCategoricalCrossentropy:Gm,mse:Em,MSE:Em,mae:Rm,MAE:Rm,mape:Am,MAPE:Am,cosine:Om};function Hm(e){if("string"==typeof e&&e in Vm)return Vm[e];if("string"!=typeof e&&null!=e)return e;throw new sf(`Unknown metric ${e}`)}function jm(e){if(uf(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Lm))if(Lm[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Vm))if(Vm[n]===e){t=n;break}return void 0!==t?t:e.name}}function Km(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!qm(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function qm(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!qm(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!qm(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Xm(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function Ym(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}Xm([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function Jm(e,t,n,s){let r,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){i="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];a.push(`${n}[${s}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===a.length?"":a[0];Xm([`${o} (${l})`,i,r,e.countParams().toString(),u],t,s);for(let e=1;e<a.length;++e)Xm(["","","","",a[e]],t,s)}function Zm(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Qm(e,t){if(null===e)return null;if("string"==typeof e)return ff(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Zm(t,r,s)?n.push(s):n.push(Qm(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=ff(n);t[e]=Qm(s,e)}}return t}}function eb(e,t){if(null==e)return null;if("string"==typeof e)return pf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];Zm(t,r,s)?n.push(s):n.push(eb(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[pf(n)]="name"!==n&&"className"!==n||"string"!=typeof s?eb(s,n):s}return t}}const tb="4.22.0";class nb extends Yg{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Rf(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],kf(this.inputs).length!==this.inputs.length)throw new sf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);kf(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;uf(0===n,"input layer has >1 nodes"),uf(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Zg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},i={},a=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new nf(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(nb.nodeKey(s,r)),s.id in i||(i[s.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],i=u.nodeIndices[e],a=u.tensorIndices[e];o(s,t,n,r,i,a)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=a.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];const a=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];i=Math.max(i,a),s[e.outboundLayer.id]=i,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],a=e.nodeIndices[s],o=r.inboundNodes[a],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const d={};for(const e in s){const t=s[e];t in d||(d[t]=[]),d[t].push(r[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(xf);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=i[e.id],s=i[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof nb&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(xf);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new nf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const e of m){const t=m.filter((t=>t===e)).length;if(1!==t)throw new nf(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new qg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new sf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const e of this.layers)for(const[t,i]of e.weights.entries()){const e=r?`${i.name.split("/").slice(0,-1).join("/")+"/"}${t}`:i.originalName;if(null!=n[e])throw new sf(`Duplicate weight name: ${e}`);n[e]=i,s++}const i=[];for(const s in e){let r=s;if(null==n[s]){const e=s.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])i.push([n[r],e[s]]);else if(t)throw new sf(`Provided weight data has no target variable: ${s}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new sf(`${e.length} of ${s} weights are not set: ${e}`)}Vg(i)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),s=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!s.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${tb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=eb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return fi((()=>{e=df(e);const n=new Qg;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return nm(this.outputs,n,t)}))}computeMask(e,t){return fi((()=>{let n;return e=df(e),n=null==t?lf(null,e.length):df(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Mg(e);if(t.length!==this.inputLayers.length)throw new sf(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xf);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],i=e.nodeIndices[t],a=e.tensorIndices[t],o=n[`${r.name}_${i}_${a}`];s.push(o)}const r=Mg(t.computeOutputShape(hf(s))),i=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${i}_${e}`]=r[e]}}const r=[],i=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;i.push(r)}for(let e=0;e<i.length;e++){const t=i[e];uf(t in n),r.push(n[t])}return hf(r)}runInternalGraph(e,t){null==t&&(t=lf(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],i=e[s],a=t[s];n[r.id]=[i,a]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(xf);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,i=new Array;for(const e of s)e.id in n&&i.push(n[e.id]);if(i.length===s.length){let s,a,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===i.length){const[e,n]=i[0];null==u.mask&&(u.mask=n),o=df(t.call(e,u)),l=df(t.computeMask(e,n)),s=[e],a=[n]}else s=i.map((e=>e[0])),a=i.map((e=>e[1])),null==u.mask&&(u.mask=a),o=df(t.call(s,u)),l=df(t.computeMask(s,a));if(t.activityRegularizer)throw new rf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],i=l[e];n[t.id]=[s,i]}}}}const r=[],i=[],a=[];for(const e of this.outputs){uf(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];a.push(t.shape),r.push(t),i.push(s)}return[r,i,a]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof nb?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=nb.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new sf("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new sf(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new sf(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return fi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=nb.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=nb.nodeKey(e,n);let a={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),a=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],i=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[nb.nodeKey(r,i)];null==l&&(l=0),e.push([r.name,l,o,a])}i.push(e)}}}const a={};a.name=e.name,a.className=s,a.config=r,a.inboundNodes=i,n.push(a)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],i=nb.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=t[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,a,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],i=nb.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=t[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,a,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},i={};function a(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let s;for(const i of t){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(hf(n),s)}function l(e){const n=e.name,i=Nm(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(s),r[n]=i,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new sf(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!vf(i);)for(const e of c){const t=r[e.name];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],s=e[2];uf(t in r);const i=r[t].inboundNodes[n].outputTensors;h.push(i[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];uf(t in r);const i=r[t].inboundNodes[n].outputTensors;d.push(i[s])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new sf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){fi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function sb(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function rb(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=fi((()=>{if(1===e.shape.length)return ea(e);if(2===e.shape.length){if(e.shape[1]>1)return oo(e,1);if(1===e.shape[1])return To(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());gi(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),nu(r,"float32")}return null}function ib(e,t){return ra(e,t)}function ab(e,t){let n,s;const r=t;n=r.xs,s=r.ys,V(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=ob("input",e.inputNames,n),a=ob("output",e.outputNames,s),o=i[0].shape[0];V(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),V(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)V(i[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<a.length;t++)V(a[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:a}}function ob(e,t,n){if(n instanceof Er)return[n];if(Array.isArray(n))return V(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new sf(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function lb(e){return"function"==typeof e.iterator}function ub(e){V(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function cb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>eg(e,t,n-t))):eg(e,t,n-t)}function hb(e,t){return fi((()=>null==e?null:Array.isArray(e)?e.map((e=>hb(e,t))):lg(e,"int32"===t.dtype?t:Qi(t,"int32"))))}function db(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function pb(e){const t=[];e instanceof Er&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(Qf(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function fb(e,t){if(null==e)return;const n=[];if(t instanceof Er)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof Er)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function gb(e){return Array.isArray(e)}function mb(e){return!function(e){return e instanceof Er}(e)&&!gb(e)}function bb(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(gb(e)&&e.length>0)t=!0;else if(mb(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new sf(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(mb(e)){i=[];for(const n of t){if(null==e[n])throw new sf(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(gb(e)){if(e.length!==t.length)throw new sf(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new sf(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=pb(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=i[e];if(a.shape.length!==n[e].length)throw new sf(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${a.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const i=a.shape[t],o=n[e][t];if(null!=o&&o>=0&&i!==o)throw new sf(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function yb(e,t,n,s=!0,r=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new sf(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new sf(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=i[e];if(a.shape.length!==n[e].length)throw new sf(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!s)continue;const o=a.shape[i],l=n[e][i];if(null!=l&&l!==o)throw new sf(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class xb extends nb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new sf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){i.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}s("_".repeat(t)),Xm(i,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?Ym(o[e],n,s):Jm(o[e],n,a,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Bg(e.collectedTrainableWeights):Bg(e.trainableWeights),t}(e),u=Bg(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>uc.adagrad(.01),Adadelta:()=>uc.adadelta(1,.95,Jf()),Adam:()=>uc.adam(.001,.9,.999,Jf()),Adamax:()=>uc.adamax(.002,.9,.999,Jf(),0),RMSProp:()=>uc.rmsprop(.001,.9,0,Jf()),SGD:()=>uc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new sf(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ga))throw new sf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new sf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Mm(e)))}else{const n=Mm(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new sf(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Mm(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Wf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Wf("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,i;for(const a of t){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Fm?-1!==["accuracy","acc"].indexOf(a)?s=Pm:-1!==["crossentropy","ce"].indexOf(a)&&(s=Bm):this.lossFunctions[e]===_m?-1!==["accuracy","acc"].indexOf(a)?s=Wm:-1!==["crossentropy","ce"].indexOf(a)&&(s=Gm):-1!==["accuracy","acc"].indexOf(a)?s=zm:-1!==["crossentropy","ce"].indexOf(a)&&(s=Um),-1!==["accuracy","acc"].indexOf(a)?r="acc":-1!==["crossentropy","ce"].indexOf(a)&&(r="ce"),i=s,n=""+r}else{const e=Hm(a);i=e,n=""+jm(a)}let t;Wf(n,(()=>{t=i})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;ub(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return hf(this.testLoop(t,e,s,n.verbose,n.steps))}finally{fb(r[0],e),fb(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let i=[];if(n.verbose>0)throw new rf("Verbose mode is not implemented yet.");V(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await a.next();if(i=fi((()=>{if(t.value){const{xs:n,ys:s}=ab(e,t.value),a=n.concat(s),u=fi((()=>r(a)));if(gi(a),0===l)for(let e=0;e<u.length;++e)i.push(ua(0));const c=a[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=i[e];i[e]=fi((()=>ta(i[e],ra(c,t)))),l>0&&gi(n)}gi(u),o+=c,++l}return i})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=sa(i[e],o),gi(t)}return hf(i)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new sf(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new sf(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new sf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),i=new Qg;if(e instanceof Er&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new sf(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new sf(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const a=nm(r,i);return n?a:a[0]}retrieveSymbolicTensors(e){const t=lf(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],i=r.map((e=>e.name));for(let s=0;s<e.length;++s){const a=i.indexOf(e[s]);if(-1!==a&&(t[s]=r[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new sf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return fi((()=>{const s=this.checkNumSamples(e);if(n)throw new rf("Verbose predictLoop() is not implemented yet.");const r=db(s,t),i=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)fi((()=>{const n=r[t][0],s=r[t][1],i=cb(e,n,s),a=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)a.push({key:this.inputs[e],value:i[e]});else a.push({key:this.inputs[0],value:i});const o=new Qg(a);return nm(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)));return hf(i.map((e=>_o(e,0))))}))}predict(e,t={}){const n=pb(e);yb(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return ub(e),this.predictLoop(n,e)}finally{fb(n,e)}}predictOnBatch(e){yb(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new nf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===_m?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t){const n=kf(e.map((e=>e.shape[0])));n.sort();const s=kf(t.map((e=>e.shape[0])));if(s.sort(),n.length>1)throw new sf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new sf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&s.length>0&&!q(n,s))throw new sf(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=bb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=bb(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[Em,Fm,Dm];for(let r=0;r<e.length;++r){const i=e[r],a=t[r],o=n[r];if(null!=a){if(a===Dm&&1===i.shape[i.shape.length-1])throw new sf(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(a)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new sf(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new sf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,i){const[a,o]=this.standardizeUserDataXY(e,t,r,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=sb(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await rb(o[t],null,e[t]))}return[a,o,l]}testLoop(e,t,n,s=0,r){return fi((()=>{const i=this.checkNumSamples(t,n,r,"steps"),a=[];if(s>0)throw new rf("Verbose mode is not implemented yet.");if(null!=r)throw new rf("steps mode in testLoop() is not implemented yet");{const s=db(i,n),r=nu(Xf(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],o=s[n][1],l=eg(r,i,o-i),u=hb(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)a.push(ua(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=ta(a[e],ra(o-i,t))}}for(let e=0;e<a.length;++e)a[e]=sa(a[e],i)}return a}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;cf(e,s)>1&&(r+=`_${cf(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new Qg(e),o=nm(this.outputs,a,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=ib(n,r[e]));const i=Il(n);t.push(i),l=0===e?n:ta(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=Il(t(s[r],o[r]))}mi(n),i.push(n)}return l=Il(l),this.calculateLosses().forEach((e=>{l=ta(l,e)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=e=>fi((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:s[e]});const a=new Qg(i),o=nm(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],i=Il(s(r[e],o[e]));n=0===e?i:ta(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],i=Il(n(r[s],o[s]));t.push(i)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,r,i,a,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;ub(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);s=f[0],r=f[1],h=f[2];let g,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new rf("validationData including sample weights is not supported yet."):new sf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],c=t[1],g=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-n.validationSplit)),t=s[0].shape[0];u=cb(s,e,t),i=s,s=cb(s,0,e),c=cb(r,e,t),a=r,r=cb(r,0,e),g=u.concat(c)}else null!=n.validationSteps&&(m=!0);const b=s.concat(r).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let k,v;m?(this.makeTestFunction(),k=this.testFunction,v=x.slice().concat(x.map((e=>"val_"+e)))):(k=null,g=[],v=x.slice());const w=Tm(n.callbacks,n.yieldEvery);return await this.fitLoop(y,b,x,d,n.epochs,n.verbose,w,k,g,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,fb(s,e),fb(r,t),fb(i,e),fb(a,t),fb(u,o),fb(c,l),null!=h&&gi(h)}}async fitLoop(e,t,n,s,r,i,a,o,l,u,c,h,d,p){null==s&&(s=32),null==r&&(r=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=p&&(f=!0,null==d))throw new sf("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,s,d,"steps_per_epoch");let m;null!=g&&(m=Xf(0,g)),null==i&&(i=1);const{callbackList:b,history:y}=Cm(a,i,r,h,g,d,s,f,c);b.setModel(this),this.history=y,await b.onTrainBegin(),this.stopTraining_=!1;for(let i=h;i<r;++i){await b.onEpochBegin(i);const r={};if(null!=d)throw new rf("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new rf("batch shuffling is not implemneted yet");u&&B(m);const i=nu(m),a=db(g,s);for(let u=0;u<a.length;++u){const c={};if(await b.onBatchBegin(u,c),fi((()=>{const h=a[u][0],d=a[u][1],p=eg(i,h,d-h);c.batch=u,c.size=d-h;const g=hb(t,p),m=e(g);for(let e=0;e<n.length;++e){const t=n[e],s=m[e];c[t]=s,mi(s)}if(u===a.length-1&&f){const e=this.testLoop(o,l,s);for(let t=0;t<n.length;++t){const s=n[t],i=e[t];mi(i),r["val_"+s]=i}}})),await b.onBatchEnd(u,c),bm(c),this.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,r),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(V(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),V(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),V(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),V(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),V(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let i,a;if(r)if(lb(n.validationData))V(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new rf("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,a=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Tm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Cm(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(s||(g=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=ab(e,t.value),i={};i.batch=h,i.size=s[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const t=sb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await rb(r[e],null,t[e]))}const u=s.concat(r).concat(a),p=o(u);gi(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];i[t]=n,mi(n)}await d.onBatchEnd(h,i),bm(i),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=lb(n.validationData)?df(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):df(e.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],i=this.makeTrainFunction()(s.concat(r)),a=[];for(const e of i){const t=await e.data();a.push(t[0])}return gi(i),fb(n[0],e),fb(n[1],t),hf(a)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=pi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-pi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=pf(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>pf(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=pf(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[pf(jm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>pf(jm(e))));{const e={};for(const t in this.metrics)e[t]=pf(jm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Nm(Qm(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=ff(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>ff(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ff(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>ff(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=ff(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Ni.getSaveHandlers(n));if(0===t.length)throw new sf(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new sf(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new sf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await yi(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${tb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await yi(await this.optimizer.getWeights(),e);s.specs.push(...n),s.data=(i=[s.data,t],hi.join(i))}var i;if(null!=this.userDefinedMetadata){const e=!0;Km(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=s.data,r.weightSpecs=s.specs,e.save(r)}setUserDefinedMetadata(e){Km(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}xb.className="Model",fa(xb);class kb extends xb{}async function vb(e,t){if(null==t&&(t={}),"string"==typeof e){const r=(n=e,s=t,Ni.getLoadHandlers(n,s));if(0===r.length)r.push(function(e,t){return za(e,t)}(e,t));else if(r.length>1)throw new sf(`Found more than one (${r.length}) load handlers for URL '${e}'`);e=r[0]}var n,s;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new sf("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const i=null==n.strict||n.strict,a=null!=s.weightData&&null!=s.weightSpecs&&i,o=Nm(Qm(r),void 0,a),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new sf("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n=new hi(e),s={};let r=0;for(const e of t){const t=xi(e,((e,t)=>n.slice(r+e,r+t)));s[e.name]=ki(e,n.slice(r,r+t)),r+=t}return s}(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),gi(e),gi(t.map((e=>e.tensor)))}return o}(e,0,t)}kb.className="Functional",fa(kb);class wb extends xb{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Rf("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new sf(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof wb||e instanceof xb;let n;if(t){if(n=e,1!==n.outputs.length)throw new sf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new sf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new sf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new sf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Zg({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new sf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new sf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Jg(this.outputs[0])}this.inboundNodes=[],new qg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:lf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(zg(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new xb({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new nf("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new nf("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new nf("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new nf("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new sf("Legacy serialization format not supported yet.");r=t}else V(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof wb))throw new rf(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const e of r){const t=Nm(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(e){if(null==this.model)throw new sf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new sf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}wb.className="Sequential",fa(wb);class Ib extends da{getConfig(){return{}}}class Tb extends Ib{apply(e,t=1){return function(e,t=1){if(1!==t)throw new rf(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ko(e)}(e,t)}}Tb.className="elu",fa(Tb);class Sb extends Ib{apply(e){return Ul(e)}}Sb.className="selu",fa(Sb);class Cb extends Ib{apply(e){return Bl(e)}}Cb.className="relu",fa(Cb);class Nb extends Ib{apply(e){return fi((()=>Sl(6,Bl(e))))}}Nb.className="relu6",fa(Nb);class $b extends Ib{apply(e){return e}}$b.className="linear",fa($b);class Eb extends Ib{apply(e){return Vl(e)}}Eb.className="sigmoid",fa(Eb);class Rb extends Ib{apply(e){return function(e){return fi((()=>{const t=ta(.5,ra(.2,e));return Do(t,0,1)}))}(e)}}Rb.className="hardSigmoid",fa(Rb);class Ab extends Ib{apply(e){return Jl(e)}}Ab.className="softplus",fa(Ab);class Db extends Ib{apply(e){return function(e){return fi((()=>sa(e,ta(wa(e),1))))}(e)}}Db.className="softsign",fa(Db);class _b extends Ib{apply(e){return tu(e)}}_b.className="tanh",fa(_b);class Fb extends Ib{apply(e,t=-1){return Yl(e,t)}}Fb.className="softmax",fa(Fb);class Ob extends Ib{apply(e,t=-1){return ul(e,t)}}Ob.className="logSoftmax",fa(Ob);class Lb extends Ib{apply(e){return fi((()=>fi((()=>{const t=Math.sqrt(2),n=ra(.5,ta(1,Xo(sa(e,t))));return ra(e,n)}))))}}Lb.className="gelu",fa(Lb);class Mb extends Ib{apply(e){return fi((()=>ra(.5,ra(e,ta(1,tu(ra(ia(sa(2,Math.PI)),ta(e,ra(.044715,xa(e,3))))))))))}}Mb.className="gelu_new",fa(Mb);class Pb extends Ib{apply(e){return fi((()=>ra(e,tu(Jl(e)))))}}Pb.className="mish",fa(Pb);class zb extends Ib{apply(e,t=1){return fi((()=>ra(Vl(ra(e,t)),e)))}}function Bb(e){return e.getClassName()}function Wb(e,t={}){return yf(e,pa.getMap().classNameMap,t,"activation")}function Ub(e){if(null==e){return Wb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Wb(t)}return e instanceof Ib?e:Wb(e)}zb.className="swish",fa(zb);class Gb extends da{}class Vb extends Gb{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return fi((()=>{let t=Rl([1]);return this.hasL1&&(t=ta(t,ll(ra(this.l1,wa(e))))),this.hasL2&&(t=ta(t,ll(ra(this.l2,ug(e))))),To(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Vb.className="L1L2",fa(Vb);const Hb={l1l2:"L1L2"};function jb(e){return mf(e)}function Kb(e,t={}){return yf(e,pa.getMap().classNameMap,t,"regularizer")}function qb(e){return null==e?null:"string"==typeof e?Kb({className:e in Hb?Hb[e]:e,config:{}}):e instanceof Gb?e:Kb(e)}class Xb extends Yg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Pg(e);let n=Bl(e);return null!=this.maxValue&&(n=Do(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Xb.className="ReLU",fa(Xb);class Yb extends Yg{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Pg(e);return rl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Yb.className="LeakyReLU",fa(Yb);class Jb extends Yg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Og(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=qb(e.alphaRegularizer),this.alphaConstraint=gm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new sf(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=zg(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Hg({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Pg(e),Fl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Fg(this.alphaInitializer),alphaRegularizer:jb(this.alphaRegularizer),alphaConstraint:pm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Jb.className="PReLU",fa(Jb);class Zb extends Yg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new rf(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Pg(e);return Ko(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Zb.className="ELU",fa(Zb);class Qb extends Yg{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Pg(e);return ra(n,Qi(nl(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Qb.className="ThresholdedReLU",fa(Qb);class ey extends Yg{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Fb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return fi((()=>{let n=Pg(e);const s=t.mask;if(null!=s){const e=ra(ka(Al(n.shape),Qi(s,n.dtype)),ua(-1e9));n=ta(n,e)}return this.axis instanceof Array?this.axis.length>1?Yo(ka(n,yl(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ty(e,t,n){if("number"==typeof e)return lf(e,t);if(e.length!==t)throw new sf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const i=e[r];if((s=i)!==parseInt(s.toString(),10))throw new sf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${i}`)}return e;var s}function ny(e,t,n,s,r=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((i+s-1)/s)}function sy(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+qf([n-t,0]);else{if("same"!==s)throw new sf(`Unsupport padding mode: ${s}.`);e*=t}return e}function ry(e,t){return fi((()=>(Mf(t),"channelsFirst"===t?uu(e,[0,2,3,1]):e)))}function iy(e,t){return fi((()=>(Mf(t),"channelsFirst"===t?uu(e,[0,2,3,4,1]):e)))}function ay(e,t,n,s=[1,1],r="valid",i,a,o=null){return fi((()=>{if(null==i&&(i="channelsLast"),Mf(i),3!==e.rank&&4!==e.rank)throw new sf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new sf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=ry(e,i);if("causal"===r)throw new rf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=wu({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=uu(l,[0,3,1,2])),l}))}ey.className="Softmax",fa(ey);class oy extends Yg{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",oy.verifyArgs(t),this.rank=e,Tf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new rf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ty(t.kernelSize,e,"kernelSize"),this.strides=ty(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Pf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Mf(this.dataFormat),this.activation=Ub(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Og(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gm(t.biasConstraint),this.biasRegularizer=qb(t.biasRegularizer),this.activityRegularizer=qb(t.activityRegularizer),this.dilationRate=ty(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new sf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new sf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new sf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(uf("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!If(e.kernelSize,"number",1,3))throw new sf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Bb(this.activation),useBias:this.useBias,biasInitializer:Fg(this.biasInitializer),biasRegularizer:jb(this.biasRegularizer),activityRegularizer:jb(this.activityRegularizer),biasConstraint:pm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class ly extends oy{constructor(e,t){super(e,t),this.kernel=null,ly.verifyArgs(t),this.filters=t.filters,Tf(this.filters,"filters"),this.kernelInitializer=Og(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gm(t.kernelConstraint),this.kernelRegularizer=qb(t.kernelRegularizer)}build(e){e=zg(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new sf(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return fi((()=>{let t;e=Pg(e);const n=null==this.bias?null:this.bias.read(),s=Cf(this.activation.getClassName());if(null!=s&&2===this.rank)t=ay(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",i,a=1){return fi((()=>{if(null==i&&(i="channelsLast"),Mf(i),3!==e.shape.length)throw new sf(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new sf(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new sf(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===i&&(e=uu(e,[0,2,1])),"causal"===r)throw new rf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=zo(e,t,s,"same"===r?"same":"valid","NWC",a);return null!=n&&(o=hg(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=ay(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new rf("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",i,a){return fi((()=>{if(null==i&&(i="channelsLast"),Mf(i),4!==e.rank&&5!==e.rank)throw new sf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new sf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=iy(e,i);if("causal"===r)throw new rf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Uo(o,t,s,"same"===r?"same":"valid","NDHWC",a),null!=n&&(o=hg(o,n)),"channelsFirst"===i&&(o=uu(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=zg(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=ny(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Fg(this.kernelInitializer),kernelRegularizer:jb(this.kernelRegularizer),kernelConstraint:pm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new sf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class uy extends ly{constructor(e){super(2,e),uy.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!If(e.kernelSize,"number",1,2))throw new sf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}uy.className="Conv2D",fa(uy);class cy extends ly{constructor(e){super(3,e),cy.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new sf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}cy.className="Conv3D",fa(cy);class hy extends uy{constructor(e){if(super(e),this.inputSpec=[new Hg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new sf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=zg(e)).length)throw new sf("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new sf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Hg({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return fi((()=>{let t=Pg(e);if(4!==t.shape.length)throw new sf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,i;"channelsFirst"===this.dataFormat?(r=2,i=3):(r=1,i=2);const a=n[r],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[s,sy(a,c,l,this.padding),sy(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=uu(t,[0,2,3,1]));let p=Wo(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=uu(p,[0,3,1,2])),null!=this.bias&&(p=hg(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=zg(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=sy(t[s],o,i,this.padding),t[r]=sy(t[r],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}hy.className="Conv2DTranspose",fa(hy);class dy extends cy{constructor(e){if(super(e),this.inputSpec=[new Hg({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new sf(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=zg(e)).length)throw new sf("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new sf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Hg({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return fi((()=>{let t=Pg(e);if(5!==t.shape.length)throw new sf(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,i,a;"channelsFirst"===this.dataFormat?(a=2,r=3,i=4):(a=1,r=2,i=3);const o=n[a],l=n[r],u=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[s,sy(o,p,c,this.padding),sy(l,f,h,this.padding),sy(u,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=uu(t,[0,2,3,4,1]));let b=Vo(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=uu(b,[0,4,1,2,3])),null!==this.bias&&(b=hg(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=zg(e)).slice();let n,s,r,i;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,i=4):(n=4,s=1,r=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=sy(t[s],u,a,this.padding),t[r]=sy(t[r],c,o,this.padding),t[i]=sy(t[i],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}dy.className="Conv3DTranspose",fa(dy);class py extends ly{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new sf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new sf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new sf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Og(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=qb(t.depthwiseRegularizer),this.depthwiseConstraint=gm(t.depthwiseConstraint),this.pointwiseInitializer=Og(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=qb(t.pointwiseRegularizer),this.pointwiseConstraint=gm(t.pointwiseConstraint)}build(e){if((e=zg(e)).length<this.rank+2)throw new sf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new sf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Hg({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return fi((()=>{let t;if(e=Pg(e),1===this.rank)throw new rf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=uu(e,[0,2,3,1])),t=Gl(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=hg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=uu(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Fg(this.depthwiseInitializer),e.pointwiseInitializer=Fg(this.pointwiseInitializer),e.depthwiseRegularizer=jb(this.depthwiseRegularizer),e.pointwiseRegularizer=jb(this.pointwiseRegularizer),e.depthwiseConstraint=pm(this.depthwiseConstraint),e.pointwiseConstraint=pm(this.pointwiseConstraint),e}}py.className="SeparableConv";class fy extends py{constructor(e){super(2,e)}}fy.className="SeparableConv2D",fa(fy);class gy extends ly{constructor(e){super(1,e),gy.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!If(e.kernelSize,"number",1,1))throw new sf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}gy.className="Conv1D",fa(gy);class my extends Yg{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return fi((()=>{if(e=Pg(e),"channelsLast"===this.dataFormat){const t=ng(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ng(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ng(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ng(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}my.className="Cropping2D",fa(my);class by extends Yg{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Mf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,wf(Df,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return fi((()=>{let t=Pg(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=uu(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?oc.resizeNearestNeighbor(t,[e,s]):oc.resizeBilinear(t,[e,s]);return uu(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?oc.resizeNearestNeighbor(t,[e,s]):oc.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}by.className="UpSampling2D",fa(by);class yy extends oy{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Og(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gm(e.depthwiseConstraint),this.depthwiseRegularizer=qb(e.depthwiseRegularizer)}build(e){if((e=zg(e)).length<4)throw new sf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new sf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return fi((()=>{let t=function(e,t,n=[1,1],s="valid",r,i){return fi((()=>{null==r&&(r="channelsLast"),Mf(r);let a=ry(e,r);if(4!==e.rank)throw new sf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new sf(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=jo(a,t,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===r&&(a=uu(a,[0,3,1,2])),a}))}(e=Pg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=hg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=zg(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=ny(t,this.kernelSize[0],this.padding,this.strides[0]),i=ny(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,i]:[e[0],r,i,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Fg(this.depthwiseInitializer),e.depthwiseRegularizer=jb(this.depthwiseRegularizer),e.depthwiseConstraint=pm(this.depthwiseRegularizer),e}}function xy(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new sf("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function ky(e,t,n,s=!1,r,i,a=!1,o=!1){return fi((()=>{const l=t.shape.length;if(l<3)throw new sf(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Xf(2,l));if(t=uu(t,u),null!=i)throw new rf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=Qi(Qi(r,"bool"),"float32")).rank===l-1&&(r=Jo(r,-1)),r=uu(r,u)),s&&(t=Wl(t,0),null!=r&&(r=Wl(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=iu(t);let g,m;null!=r&&(g=iu(r));for(let t=0;t<p;++t){const n=f[t],s=fi((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=fi((()=>{const e=g[t],n=ka(Dl(e),e);return{output:ta(ra(s[0],e),ra(d[0],n)),newStates:d.map(((t,r)=>ta(ra(s[1][r],e),ra(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=eu(c,1)),[h,m,d]}))}yy.className="DepthwiseConv2D",fa(yy);class vy extends Yg{constructor(e){let t;if(super(e),null==e.cell)throw new sf("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Ey({cells:e.cell}):e.cell,null==t.stateSize)throw new sf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Hg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Xf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Lg(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return fi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new rf("Constants support is not implemented in RNN yet.");Lg(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Hg({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!q(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new sf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Hg({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){fi((()=>{if(!this.stateful)throw new tf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new sf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Rl([n,e]))):this.states_=[Rl([n,this.cell.stateSize])];else if(null==e)gi(this.states_),null!=this.keptStates&&(gi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Rl([n,e]))):this.states_[0]=Rl([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new sf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):gi(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,r];if(!q(s.shape,i))throw new sf(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>mi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=xy(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let i=[],a=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Hg({shape:e.shape}));a=a.concat(this.stateSpec)}if(null!=s&&(t.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof jg){const n=[e].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return fi((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=Pg(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new sf(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:s},o=ky(((e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return fi((()=>{let t=Rl(e.shape);return t=ll(t,[1,2]),t=Qf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?ig(t,[1,e]):t)):this.cell.stateSize>1?[ig(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===vy.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const s=Nm(t.cell,n);return new e(Object.assign(t,{cell:s}))}}vy.className="RNN",fa(vy);class wy extends Yg{}class Iy extends wy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Tf(this.units,"units"),this.activation=Ub(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Og(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Og(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Og(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qb(e.kernelRegularizer),this.recurrentRegularizer=qb(e.recurrentRegularizer),this.biasRegularizer=qb(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Kf([1,qf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Kf([1,qf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=zg(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return fi((()=>{if(2!==e.length)throw new sf(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ry({ones:()=>Dl(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ry({ones:()=>Dl(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;r=og(null!=i?ra(e,i):e,this.kernel.read()),null!=this.bias&&(r=hg(r,this.bias.read())),null!=a&&(n=ra(n,a));let o=ta(r,og(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Bb(this.activation),useBias:this.useBias,kernelInitializer:Fg(this.kernelInitializer),recurrentInitializer:Fg(this.recurrentInitializer),biasInitializer:Fg(this.biasInitializer),kernelRegularizer:jb(this.kernelRegularizer),recurrentRegularizer:jb(this.recurrentRegularizer),biasRegularizer:jb(this.biasRegularizer),activityRegularizer:jb(this.activityRegularizer),kernelConstraint:pm(this.kernelConstraint),recurrentConstraint:pm(this.recurrentConstraint),biasConstraint:pm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Iy.className="SimpleRNNCell",fa(Iy);class Ty extends vy{constructor(e){e.cell=new Iy(e),super(e)}call(e,t){return fi((()=>{null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Ty.className="SimpleRNN",fa(Ty);class Sy extends wy{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new sf("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Tf(this.units,"units"),this.activation=Ub(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ub(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Og(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Og(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Og(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qb(e.kernelRegularizer),this.recurrentRegularizer=qb(e.recurrentRegularizer),this.biasRegularizer=qb(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Kf([1,qf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Kf([1,qf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=zg(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return fi((()=>{if(2!==e.length)throw new sf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ry({ones:()=>Dl(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ry({ones:()=>Dl(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(e=ra(e,r[0]));let u=og(e,this.kernel.read());this.useBias&&(u=hg(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ra(s,i[0]));const c=this.recurrentKernel.read(),[h,d]=Zl(c,[2*this.units,this.units],c.rank-1),p=og(s,h),[f,g,m]=Zl(u,3,u.rank-1),[b,y]=Zl(p,2,p.rank-1);a=this.recurrentActivation.apply(ta(f,b)),o=this.recurrentActivation.apply(ta(g,y));const x=og(ra(o,s),d);l=this.activation.apply(ta(m,x));const k=ta(ra(a,s),ra(ta(1,Nl(a)),l));return[k,k]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Bb(this.activation),recurrentActivation:Bb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fg(this.kernelInitializer),recurrentInitializer:Fg(this.recurrentInitializer),biasInitializer:Fg(this.biasInitializer),kernelRegularizer:jb(this.kernelRegularizer),recurrentRegularizer:jb(this.recurrentRegularizer),biasRegularizer:jb(this.biasRegularizer),activityRegularizer:jb(this.activityRegularizer),kernelConstraint:pm(this.kernelConstraint),recurrentConstraint:pm(this.recurrentConstraint),biasConstraint:pm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Sy.className="GRUCell",fa(Sy);class Cy extends vy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sy(e),super(e)}call(e,t){return fi((()=>{null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Cy.className="GRU",fa(Cy);class Ny extends wy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Tf(this.units,"units"),this.activation=Ub(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ub(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Og(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Og(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Og(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=qb(e.kernelRegularizer),this.recurrentRegularizer=qb(e.recurrentRegularizer),this.biasRegularizer=qb(e.biasRegularizer),this.kernelConstraint=gm(e.kernelConstraint),this.recurrentConstraint=gm(e.recurrentConstraint),this.biasConstraint=gm(e.biasConstraint),this.dropout=Kf([1,qf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Kf([1,qf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=zg(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends mg{apply(t,s){const r=e.apply([n]),i=(new yg).apply([n]),a=e.apply([2*n]);return rg(rg(r,i),a)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return fi((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new sf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ry({ones:()=>Dl(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ry({ones:()=>Dl(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=ra(e,i[0]));let h=og(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ra(s,a[0])),h=ta(h,og(s,this.recurrentKernel.read())),this.useBias&&(h=hg(h,this.bias.read()));const[d,p,f,g]=Zl(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=ta(ra(l,r),ra(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=ra(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Bb(this.activation),recurrentActivation:Bb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Fg(this.kernelInitializer),recurrentInitializer:Fg(this.recurrentInitializer),biasInitializer:Fg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:jb(this.kernelRegularizer),recurrentRegularizer:jb(this.recurrentRegularizer),biasRegularizer:jb(this.biasRegularizer),activityRegularizer:jb(this.activityRegularizer),kernelConstraint:pm(this.kernelConstraint),recurrentConstraint:pm(this.recurrentConstraint),biasConstraint:pm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Ny.className="LSTMCell",fa(Ny);class $y extends vy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ny(e),super(e)}call(e,t){return fi((()=>{null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}$y.className="LSTM",fa($y);class Ey extends wy{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return fi((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=s[a],i=0===a?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),r.push(i.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;Lg(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{Wf(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(Nm(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Gg(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Vg(t)}}function Ry(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:i}=e,a=()=>null!=i?i(t(),n):dg(t(),n),o=()=>pg(a,t,s);return!r||r<=1?mi(o().clone()):Array(r).fill(void 0).map(o).map((e=>mi(e.clone())))}Ey.className="StackedRNNCells",fa(Ey);class Ay extends vy{constructor(e){if(e.unroll)throw new rf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new rf("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Hg({ndim:5})]}call(e,t){return fi((()=>{if(null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new sf("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return fi((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=Rl([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){fi((()=>{if(!this.stateful)throw new tf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new sf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Rl(r))):this.states_=[Rl(r)];else if(null==e)gi(this.states_),null!=this.keptStates&&(gi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Rl(r))):this.states_[0]=Rl(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new sf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):gi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!q(n.shape,s))throw new sf(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>mi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=ny(l,s[0],r,i[0],a[0]),h=ny(u,s[1],r,i[1],a[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Ay.className="ConvRNN2D";class Dy extends Ny{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Tf(this.filters,"filters"),this.kernelSize=ty(n,2,"kernelSize"),this.kernelSize.forEach((e=>Tf(e,"kernelSize"))),this.strides=ty(s||1,2,"strides"),this.strides.forEach((e=>Tf(e,"strides"))),this.padding=r||"valid",Pf(this.padding),this.dataFormat=i||"channelsLast",Mf(this.dataFormat),this.dilationRate=ty(a||1,2,"dilationRate"),this.dilationRate.forEach((e=>Tf(e,"dilationRate")))}build(e){var t;e=zg(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new sf(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends mg{apply(e,t){return sg([n.apply([s]),Al([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return fi((()=>{if(3!==e.length)throw new sf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ry({ones:()=>Dl(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ra(t[n],e):e;let l=o(s,a,0),u=o(s,a,1),c=o(s,a,2),h=o(s,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ry({ones:()=>Dl(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),g=o(r,d,2),m=o(r,d,3);const[b,y,x,k]=Zl(this.kernel.read(),4,3),[v,w,I,T]=this.useBias?Zl(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,v,this.padding),u=this.inputConv(u,y,w,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,k,T,this.padding);const[S,C,N,$]=Zl(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,C),g=this.recurrentConv(g,N),m=this.recurrentConv(m,$);const E=this.recurrentActivation.apply(ta(l,p)),R=this.recurrentActivation.apply(ta(u,f)),A=ta(ra(R,i),ra(E,this.activation.apply(ta(c,g)))),D=ra(this.recurrentActivation.apply(ta(h,m)),this.activation.apply(A));return[D,D,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,t,n,s){const r=Po(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?hg(r,n,this.dataFormat):r}recurrentConv(e,t){return Po(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Dy.className="ConvLSTM2DCell",fa(Dy);class _y extends Ay{constructor(e){const t=new Dy(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}_y.className="ConvLSTM2D",fa(_y);class Fy extends Yg{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return fi((()=>{this.invokeCallHook(e,t);const n=Pg(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return pg((()=>dg(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Fy.className="Dropout",fa(Fy);class Oy extends Fy{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Oy.className="SpatialDropout1D",fa(Oy);class Ly extends Yg{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Tf(this.units,"units"),this.activation=Ub(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Og(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Og(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gm(e.kernelConstraint),this.biasConstraint=gm(e.biasConstraint),this.kernelRegularizer=qb(e.kernelRegularizer),this.biasRegularizer=qb(e.biasRegularizer),this.activityRegularizer=qb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=zg(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=zg(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return fi((()=>{this.invokeCallHook(e,t);const n=Pg(e),s=Cf(this.activation.getClassName());let r;return null!=s?r=og(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=og(n,this.kernel.read()),null!=this.bias&&(r=hg(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Bb(this.activation),useBias:this.useBias,kernelInitializer:Fg(this.kernelInitializer),biasInitializer:Fg(this.biasInitializer),kernelRegularizer:jb(this.kernelRegularizer),biasRegularizer:jb(this.biasRegularizer),activityRegularizer:jb(this.activityRegularizer),kernelConstraint:pm(this.kernelConstraint),biasConstraint:pm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ly.className="Dense",fa(Ly);class My extends Yg{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=zg(e);for(const t of e.slice(1))if(null==t)throw new sf(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],jf(e,1)]}call(e,t){return fi((()=>{this.invokeCallHook(e,t);let n=Pg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=uu(n,e)}return function(e){if(e.rank<=1)throw new sf(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],jf(e.shape,1)];return To(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}My.className="Flatten",fa(My);class Py extends Yg{constructor(e){super(e),this.supportsMasking=!0,this.activation=Ub(e.activation)}call(e,t){return fi((()=>{this.invokeCallHook(e,t);const n=Pg(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Bb(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Py.className="Activation",fa(Py);class zy extends Yg{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return fi((()=>{return e=Pg(e),t=e,n=this.n,fi((()=>{if(2!==t.shape.length)throw new sf(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return ig(Qf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}zy.className="RepeatVector",fa(zy);class By extends Yg{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,i=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==i)throw new sf("Can only specifiy one unknown dimension.");i=e}else r*=t}const a=jf(e);if(null!==i){if(0===r||a%r!=0)throw new sf(n);s[i]=a/r}else if(a!==r)throw new sf(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return fi((()=>{this.invokeCallHook(e,t);const n=Pg(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return To(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}By.className="Reshape",fa(By);class Wy extends Yg{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Xf(1,e.dims.length+1);if(!q(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Hg({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=zg(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return uu(Pg(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Wy.className="Permute",fa(Wy);class Uy extends Yg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Pg(e);return ao($l(n,this.maskValue),-1)}call(e,t){return fi((()=>{this.invokeCallHook(e,t);const n=Pg(e),s=ao($l(n,this.maskValue),-1,!0);return ra(n,Qi(s,n.dtype))}))}}Uy.className="Masking",fa(Uy);class Gy extends Yg{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(df(e.inputLength))}this.inputDim=e.inputDim,Tf(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Tf(this.outputDim,"outputDim"),this.embeddingsInitializer=Og(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=qb(e.embeddingsRegularizer),this.activityRegularizer=qb(e.activityRegularizer),this.embeddingsConstraint=gm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return fi((()=>this.maskZero?(e=Pg(e),$l(e,oa(e))):null))}computeOutputShape(e){if(e=zg(e),null==this.inputLength)return[...e,this.outputDim];const t=df(this.inputLength);if(t.length!==e.length-1)throw new sf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],i=e[s+1];if(null!=r&&null!=i&&r!==i)throw new sf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return fi((()=>{this.invokeCallHook(e,t);let n=Pg(e);"int32"!==n.dtype&&(n=Zf(n,"int32"));const s=lg(this.embeddings.read(),To(n,[n.size]));return To(s,zg(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Fg(this.embeddingsInitializer),embeddingsRegularizer:jb(this.embeddingsRegularizer),activityRegularizer:jb(this.activityRegularizer),embeddingsConstraint:pm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Gy.className="Embedding",fa(Gy);class Vy extends Yg{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new rf}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],i=t[s];if(null==r||null==i||r<0||i<0)n.push(null);else if(1===r)n.push(i);else if(1===i)n.push(r);else{if(r!==i)throw new sf("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[zg(e)]),e.length<2)throw new sf(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=kf(t),t.length>1)throw new sf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===kf(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return fi((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=qf(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=Qf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],i=e.slice(1).concat([r]);let a=To(s,[r].concat(jf(e.slice(1))));a=uu(a,[1,0]),a=To(a,i),t.push(a),n=!0}else if(e>1){const r=Xf(1,e).concat([0]);t.push(uu(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=To(uu(To(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Xf(0,r-1));s=uu(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=kf(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return fi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new sf("`mask` should be an Array");if(!Array.isArray(e))throw new sf("`inputs` should be an Array");if(t.length!==e.length)throw new sf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Jo(e,0))))[0];for(let e=1;e<t.length-1;++e)n=xl(n,t[e]);return n}))}}class Hy extends Vy{constructor(e){super(e)}mergeFunction(e){return fi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ta(t,e[n]);return t}))}}Hy.className="Add",fa(Hy);class jy extends Vy{constructor(e){super(e)}mergeFunction(e){return fi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ra(t,e[n]);return t}))}}jy.className="Multiply",fa(jy);class Ky extends Vy{constructor(e){super(e)}mergeFunction(e){return fi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ta(t,e[n]);return ra(1/e.length,t)}))}}Ky.className="Average",fa(Ky);class qy extends Vy{constructor(e){super(e)}mergeFunction(e){return fi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ca(t,e[n]);return t}))}}qy.className="Maximum",fa(qy);class Xy extends Vy{constructor(e){super(e)}mergeFunction(e){return fi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Sl(t,e[n]);return t}))}}Xy.className="Minimum",fa(Xy);class Yy extends Vy{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new sf("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(q(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new sf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return fi((()=>sg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new sf("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new sf("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new sf("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new sf(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return fi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(Qi(Dl(e[n]),"bool")):t[n].rank<e[n].rank?s.push(Jo(t[n],-1)):s.push(t[n]);const r=_o(s,this.axis);return io(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Jy(e,t){for(;e<0;)e+=t;return e}Yy.className="Concatenate",fa(Yy);class Zy extends Vy{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){V(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new rf("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new sf(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new sf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Jy(t,e[n].shape.length))):[Jy(this.axes,n.shape.length),Jy(this.axes,s.shape.length)],this.normalize&&(n=$m(n,t[0]),s=$m(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new rf("batchDot is not implemented for tensors of 4D or higher rank yet");if(V(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),V(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new rf("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const i=n;return fi((()=>{let n,a;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=To(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=To(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=i[0]===i[1]?ll(ra(e,t),i[0]):ll(ra(uu(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,s=i[1]===t.shape.length-1;a=kl(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);a=Ql(a,t)}return 1===a.shape.length&&(a=Jo(a,1)),a}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Jy(this.axes,e.length),Jy(this.axes,t.length)],n}computeOutputShape(e){V(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new rf("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Zy.className="Dot",fa(Zy);class Qy extends Yg{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return fi((()=>{this.invokeCallHook(e,t);const n=Pg(e);return pg((()=>ta(ag(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Qy.className="GaussianNoise",fa(Qy);class ex extends Yg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return fi((()=>{this.invokeCallHook(e,t);const n=Pg(e);return this.rate>0&&this.rate<1?pg((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return ra(n,ag(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}ex.className="GaussianDropout",fa(ex);class tx extends Yg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Pg(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return fi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return pg((()=>{const t=Pg(e),s=-1.7580993408473766;let r=sl(Pl(n),this.rate);r=Zf(r,"float32");const i=((1-this.rate)*(1+this.rate*s**2))**-.5,a=-i*s*this.rate,o=ta(ra(t,r),ra(ta(r,-1),s));return ta(ra(o,i),a)}),(()=>Pg(e)),t.training||!1)}return e}))}}function nx(e,t,n,s,r,i=.001){let a;if(2===e.rank)a=$o(e,t,n,s,r,i);else if(3===e.rank)a=Eo(e,t,n,s,r,i);else{if(4!==e.rank)throw new rf(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=Ro(e,t,n,s,r,i)}return a}tx.className="AlphaDropout",fa(tx);class sx extends Yg{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Og(e.betaInitializer||"zeros"),this.gammaInitializer=Og(e.gammaInitializer||"ones"),this.movingMeanInitializer=Og(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Og(e.movingVarianceInitializer||"ones"),this.betaConstraint=gm(e.betaConstraint),this.gammaConstraint=gm(e.gammaConstraint),this.betaRegularizer=qb(e.betaRegularizer),this.gammaRegularizer=qb(e.gammaRegularizer)}build(e){e=zg(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new sf(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Hg({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return fi((()=>{const n=null!=t.training&&t.training,s=Pg(e),r=s.shape,i=r.length,a=Xf(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=lf(1,i);l[o]=r[o];const u=a.slice();u.sort();const c=!q(u,Xf(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const e=To(this.movingMean.read(),l),t=To(this.movingVariance.read(),l),n=this.center?To(this.beta.read(),l):null,r=this.scale?To(this.gamma.read(),l):null;return nx(s,e,t,n,r,this.epsilon)}return nx(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,s,r=.001){return q(s.slice().sort(),Xf(0,e.rank-1))?function(e,t,n,s,r=.001){return fi((()=>{const i=Cl(e,s),a=i.mean,o=i.variance;return[nx(e,a,o,n,t,r),a,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return fi((()=>{const i=Cl(e,s),a=i.mean,o=i.variance,l=[];for(const t of Xf(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=To(a,l),c=To(o,l),h=null==t?null:To(t,l),d=null==n?null:To(n,l);return[nx(e,u,c,d,h,r),a,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(e,t,n)=>{fi((()=>{const s=1-n,r=e.read(),i=ra(ka(r,t),s);e.write(ka(r,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Fg(this.betaInitializer),gammaInitializer:Fg(this.gammaInitializer),movingMeanInitializer:Fg(this.movingMeanInitializer),movingVarianceInitializer:Fg(this.movingVarianceInitializer),betaRegularizer:jb(this.betaRegularizer),gammaRegularizer:jb(this.gammaRegularizer),betaConstraint:pm(this.betaConstraint),gammaConstraint:pm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}sx.className="BatchNormalization",fa(sx);class rx extends Yg{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Og(e.betaInitializer||"zeros"),this.gammaInitializer=Og(e.gammaInitializer||"ones"),this.betaRegularizer=qb(e.betaRegularizer),this.gammaRegularizer=qb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=zg(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==kf(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const n=Pg(e),s=n.shape,r=s.length;return fi((()=>{let{mean:e,variance:t}=Cl(n,this.axis,!0);const i=lf(1,r);for(const e of this.axis)i[e]=s[e];const a=e=>null!=e&&e.shape.length!==r?To(e,i):e;let o=this.scale?a(this.gamma.read()):null,l=this.center?a(this.beta.read()):null;const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=Zo(e,u),t=Zo(t,u),null!=o&&(o=Zo(o,c)),null!=l&&(l=Zo(l,c)),nx(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Fg(this.betaInitializer),gammaInitializer:Fg(this.gammaInitializer),betaRegularizer:jb(this.betaRegularizer),gammaRegularizer:jb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}rx.className="LayerNormalization",fa(rx);class ix extends Yg{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new sf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new sf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new sf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Hg({ndim:4})]}computeOutputShape(e){let t,n;return e=zg(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return fi((()=>{return t=Pg(e),n=this.padding,s=this.dataFormat,fi((()=>{if(4!==t.rank)throw new sf(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new sf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new sf(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],_l(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function ax(e,t,n,s,r,i){return fi((()=>{let a;Mf(r),zf(i),Pf(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),e=ry(e,r);const o="same"===s?"same":"valid";return a="max"===i?vl(e,t,n,o):So(e,t,n,o),"channelsFirst"===r&&(a=uu(a,[0,3,1,2])),a}))}function ox(e,t,n,s,r,i){return fi((()=>{let a;Mf(r),zf(i),Pf(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==i&&(i="max"),e=iy(e,r);const o="same"===s?"same":"valid";return a="max"===i?wl(e,t,n,o):Co(e,t,n,o),"channelsFirst"===r&&(a=uu(a,[0,4,1,2,3])),a}))}ix.className="ZeroPadding2D",fa(ix);class lx extends Yg{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new sf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Tf(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new sf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Tf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Pf(this.padding),this.inputSpec=[new Hg({ndim:3})]}computeOutputShape(e){const t=ny((e=zg(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return fi((()=>{this.invokeCallHook(e,t),e=Qf(Pg(e),2);const n=this.poolingFunction(Pg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ql(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class ux extends lx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Mf(r),Pf(s),ax(e,t,n,s,r,"max")}}ux.className="MaxPooling1D",fa(ux);class cx extends lx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Mf(r),Pf(s),ax(e,t,n,s,r,"avg")}}cx.className="AveragePooling1D",fa(cx);class hx extends Yg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new sf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Tf(this.poolSize,"poolSize"),Tf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Mf(this.dataFormat),Pf(this.padding),this.inputSpec=[new Hg({ndim:4})]}computeOutputShape(e){e=zg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=ny(t,this.poolSize[0],this.padding,this.strides[0]),n=ny(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return fi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Pg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class dx extends hx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Mf(r),Pf(s),ax(e,t,n,s,r,"max")}}dx.className="MaxPooling2D",fa(dx);class px extends hx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Mf(r),Pf(s),ax(e,t,n,s,r,"avg")}}px.className="AveragePooling2D",fa(px);class fx extends Yg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new sf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Tf(this.poolSize,"poolSize"),Tf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Mf(this.dataFormat),Pf(this.padding),this.inputSpec=[new Hg({ndim:5})]}computeOutputShape(e){e=zg(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=ny(t,this.poolSize[0],this.padding,this.strides[0]),n=ny(n,this.poolSize[1],this.padding,this.strides[1]),s=ny(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return fi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Pg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class gx extends fx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Mf(r),Pf(s),ox(e,t,n,s,r,"max")}}gx.className="MaxPooling3D",fa(gx);class mx extends fx{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Mf(r),Pf(s),ox(e,t,n,s,r,"avg")}}mx.className="AveragePooling3D",fa(mx);class bx extends Yg{constructor(e){super(e),this.inputSpec=[new Hg({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new rf}}class yx extends bx{constructor(e){super(e||{})}call(e,t){return fi((()=>{const t=Pg(e);return Il(t,1)}))}}yx.className="GlobalAveragePooling1D",fa(yx);class xx extends bx{constructor(e){super(e||{})}call(e,t){return fi((()=>{const t=Pg(e);return ol(t,1)}))}}xx.className="GlobalMaxPooling1D",fa(xx);class kx extends Yg{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Mf(this.dataFormat),this.inputSpec=[new Hg({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new rf}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class vx extends kx{call(e,t){return fi((()=>{const t=Pg(e);return"channelsLast"===this.dataFormat?Il(t,[1,2]):Il(t,[2,3])}))}}vx.className="GlobalAveragePooling2D",fa(vx);class wx extends kx{call(e,t){return fi((()=>{const t=Pg(e);return"channelsLast"===this.dataFormat?ol(t,[1,2]):ol(t,[2,3])}))}}wx.className="GlobalMaxPooling2D",fa(wx);class Ix extends Yg{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=Nm(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class Tx extends Ix{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=zg(e)).length<3)throw new sf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=zg(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return fi((()=>ky(((e,n)=>[Pg(this.layer.call(e,t)),[]]),e=Pg(e),[],!1,null,null,!1,!0)[1]))}}Tx.className="TimeDistributed",fa(Tx);class Sx extends Ix{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Nm(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Nm(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,wf(Of,"BidirectionalMergeMode",r),e.weights)throw new rf("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):hf(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=xy(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const i=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new sf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const s=n.map((e=>new Hg({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),a.push(...s)}if(null!=s)throw new rf("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof jg;for(const e of i)if(e instanceof jg!==o)throw new sf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return fi((()=>{const n=t.initialState;let s,r,i,a;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Wl(r,1)),"concat"===this.mergeMode?a=sg([s,r]):"sum"===this.mergeMode?a=ta(s,r):"ave"===this.mergeMode?a=ra(.5,ta(s,r)):"mul"===this.mergeMode?a=ra(s,r):null==this.mergeMode&&(a=[s,r]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Wf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Wf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Nm(t.layer);if(delete t.layer,null!=t.numConstants)throw new rf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}Sx.className="Bidirectional",fa(Sx);class Cx extends Yg{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return fi((()=>("float32"!==(e=Pg(e)).dtype&&(e=Zf(e,"float32")),ta(ra(e,this.scale),this.offset))))}}Cx.className="Rescaling",fa(Cx);const{resizeBilinear:Nx,cropAndResize:$x}=oc;class Ex extends Yg{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,r,i,a,o){return fi((()=>{let l,u=!1;const c=[t/i,n/a,(s+t)/i,(r+n)/a],h=[];3===e.rank?(u=!0,l=eu([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=ui(h,[h.length,4]),p=zl(0,h.length,1,"int32"),f=$x(l,d,p,[s,r],"nearest");return Zf(u?Pg(iu(f)):f,o)}))}upsize(e,t,n,s){return fi((()=>Zf(Nx(e,[t,n]),s)))}call(e,t){return fi((()=>{const t=Pg(e),n=t.dtype,s=t.shape,r=s[s.length-3],i=s[s.length-2];let a=0;r!==this.height&&(a=Math.floor((r-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),a>=0&&o>=0?this.centerCrop(t,a,o,this.height,this.width,r,i,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=zg(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Ex.className="CenterCrop",fa(Ex);class Rx extends Yg{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=zg(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return fi((()=>{let n;if("int32"!==(e=Pg(e)).dtype&&(e=Zf(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new sf(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Pg(t.countWeights)}const s=ol(e),r=Tl(e),i=nl(this.numTokens,s).bufferSync().get(0),a=sl(r,0).bufferSync().get(0);if(!i||!a)throw new sf(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,s){let r=Pg(e);if("int32"!==r.dtype&&(r=Zf(r,"int32")),"int"===t)return r;const i=r.shape;if(0===r.rank&&(r=Jo(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=Jo(r,-1)),r.rank>2)throw new sf(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(t);let o;if(o=Ho(r,void 0!==s&&"count"===t?s:[],n,a),"tfIdf"!==t)return o;if(s)return ra(o,s);throw new sf("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Rx.className="CategoryEncoding",fa(Rx);const Ax=new Set(["bilinear","nearest"]);class Dx extends Yg{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Ax.has(e.interpolation))throw new sf(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=zg(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return fi((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return oc.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return oc.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Ax]} are supported`)}))}}Dx.className="Resizing",fa(Dx);class _x{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}_x.className="RandomSeed";class Fx extends Yg{constructor(e){super(e),this.randomGenerator=new _x(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Fx.className="BaseRandomLayer";const Ox=new Set(["bilinear","nearest"]);class Lx extends Fx{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new sf(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new sf(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new sf(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Ox.has(n))throw new sf(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=zg(e))[2];return[this.imgHeight,-1,t]}call(e,t){return fi((()=>{const t=Pg(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Pl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);const r=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return oc.resizeBilinear(e,r);case"nearest":return oc.resizeNearestNeighbor(e,r);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Ox]} are supported`)}}))}}function Mx(e){return new uy(e)}function Px(e){return new Ly(e)}var zx,Bx,Wx,Ux;function Gx(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Kx(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const i in e){const a=Gx(e[i],t,n,s);r[i]=a}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function Vx(e,t=jx){return Hx(e,t)}function Hx(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Kx(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const i in s){const s=Hx(e.map((e=>e[i])),t,n);r[i]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function jx(e){return null===e?null:Kx(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Kx(e){let t=!1;if(Te().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=__webpack_require__(551);t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Er)&&!(e instanceof Promise)&&!t)}function qx(e){return Gx(e,Xx)}function Xx(e){return e instanceof Er?{value:e.clone(),recurse:!1}:Kx(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}Lx.className="RandomWidth",fa(Lx),Te().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(zx||(zx={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Bx||(Bx={})),Error,new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);class Yx{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Jx extends Yx{constructor(){super(Jx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Jx.INITIAL_CAPACITY=32;class Zx{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ok(this,e)}filter(e){return new ik(this,e)}map(e){return new ak(this,e)}mapAsync(e){return new lk(this,e)}serialMapAsync(e){return new lk(this,e).serial()}flatmap(e){return new ck(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new rk(this,e,t)}columnMajorBatch(e,t=!0,n=jx){return this.rowMajorBatch(e,t).map((e=>Vx(e,n)))}concatenate(e,t){return new hk(new Qx([this,e]),t)}take(e){return e<0||null==e?this:new sk(this,e)}skip(e){return e<0||null==e?this:new nk(this,e)}prefetch(e){return new dk(this,e)}shuffle(e,t){return new pk(this,e,t)}serial(){return new tk(this)}}class Qx extends Zx{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:qx(e),done:!1}}}class ek extends Zx{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class tk extends Zx{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class nk extends Zx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;gi(e.value)}return this.upstream.next()}}class sk extends Zx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class rk extends Zx{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class ik extends Zx{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;gi(e.value)}}}class ak extends Zx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Vr(e.value),n=this.transform(e.value),s=Vr(n);for(const e of t)Gr(e,s)||e.dispose();return{value:n,done:!1}}}class ok extends Zx{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class lk extends Zx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Vr(e.value),n=await this.transform(e.value),s=Vr(n);for(const e of t)Gr(e,s)||e.dispose();return{value:n,done:!1}}}class uk extends Zx{constructor(){super(),this.outputQueue=new Jx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class ck extends uk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Vr(e.value),n=this.transform(e.value),s=Vr(n);this.outputQueue.pushAll(n);for(const e of t)Gr(e,s)||e.dispose();return!0}}class hk extends Zx{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Ux=Wx||(Wx={}))[Ux.FAIL=0]="FAIL",Ux[Ux.SHORTEST=1]="SHORTEST",Ux[Ux.LONGEST=2]="LONGEST";class dk extends Zx{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Yx(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class pk extends dk{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=b.alea(n||dr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class fk{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return V(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),gk((async()=>(await n.iterator()).columnMajorBatch(e,t,mk)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,gk((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,gk((async()=>(await t.iterator()).filter((t=>fi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return gk((async()=>(await t.iterator()).map((t=>fi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return gk((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return gk((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,gk((async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new ek(r)).take(e),new hk(n,s);var n,s,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,gk((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=b.alea(t||dr().toString());return gk((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,gk((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function gk(e,t=null){return new class extends fk{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function mk(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Er||gr(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Er?eu(e):ui(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function bk(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&V("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}fk.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const yk=vh;class xk extends P{nextDataId(){return xk.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new M(this,di())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Te().get("IS_NODE")&&zs("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&ae(n[0])){const r=n.map((e=>pr(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?zc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>fr(e)));return Zi(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Zi(e.shape,e.dtype,t)}makeOutput(e,t,n){return di().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=dr();return e(),{kernelMs:dr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){bk([e],"where");const t=this.readSync(e.dataId);return yk(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function kk(e){return(t,n,s)=>{const r=se(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}function vk(e,t,n){return wk(e,kk(t),n)}function wk(e,t,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;bk(a,e);const o=i,l=o.data.get(a.dataId).values;let u;if("string"===a.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=xh(l)}else u=l;const c=n||a.dtype,h=t(u,c,r);return o.makeTensorInfo(a.shape,c,h)}}xk.nextDataId=0,bi("cpu",(()=>new xk),1);const Ik=vk(Ct,(e=>e>=0?e:Math.exp(e)-1)),Tk={kernelName:Ct,backendName:"cpu",kernelFunc:Ik};function Sk(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Ck={kernelName:Gt,backendName:"cpu",kernelFunc:Sk};function Nk(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s;bk([r],"leakyRelu");const a=K(r.shape),o=n.data.get(r.dataId).values,l=ne("float32",a);for(let e=0;e<o.length;e++)l[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const $k={kernelName:Xt,backendName:"cpu",kernelFunc:Nk};function Ek(e){return(t,n,s,r,i)=>{const a=Sa(t,n),o=a.length,l=he(a),u=ne(i,K(a)),c=t.length,h=n.length,d=he(t),p=he(n),f=Ia(t,a),g=Ia(n,a);if(f.length+g.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=xe(t,o,l),i=n.slice(-c);f.forEach((e=>i[e]=0));const a=ye(i,c,d),m=n.slice(-h);g.forEach((e=>m[e]=0));const b=ye(m,h,p);u[t]=e(s[a],r[b])}return[u,a]}}const Rk=Ek(((e,t)=>e<0?t*e:e));function Ak(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;bk([s,r],"prelu");const i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,[o,l]=Rk(s.shape,r.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const Dk={kernelName:An,backendName:"cpu",kernelFunc:Ak},_k=vk(zn,(e=>Math.max(0,e))),Fk={kernelName:zn,backendName:"cpu",kernelFunc:_k},Ok=vk(Hn,(e=>Math.min(Math.max(0,e),6))),Lk={kernelName:Hn,backendName:"cpu",kernelFunc:Ok},Mk=kk((e=>1/(1+Math.exp(-e)))),Pk=vk(rs,(e=>1/(1+Math.exp(-e)))),zk={kernelName:rs,backendName:"cpu",kernelFunc:Pk};function Bk(e,t,n,s,r){if("linear"===n)return Sk({inputs:{x:t},backend:e});if("relu"===n)return _k({inputs:{x:t},backend:e});if("elu"===n)return Ik({inputs:{x:t},backend:e});if("relu6"===n)return Ok({inputs:{x:t},backend:e});if("prelu"===n)return Ak({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return Nk({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Pk({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Wk(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",a)},o}const Uk={kernelName:tt,backendName:"cpu",kernelFunc:Wk};function Gk(e,t,n="float32"){if("complex64"===n)return Wk({inputs:{real:Gk(e,t,"float32"),imag:Gk(e,t,"float32")},backend:e});const s=ge(K(t),n);return e.makeTensorInfo(t,n,s)}function Vk(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const Hk={kernelName:Mn,backendName:"cpu",kernelFunc:Vk};function jk(e,t,n,s){if("int32"===s)return[t,"int32",Int32Array.from(e)];if("bool"===s){const s=hr([0],n),[r,i]=Ek(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function Kk(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return Sk({inputs:{x:r},backend:n});const e=Gk(n,r.shape,r.dtype),t=Kk({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=Wk({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=Vk({inputs:{input:r},backend:n}),t=Kk({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!re(r.dtype,i)){const e=Sk({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const a=n.data.get(r.dataId).values,[o,l,u]=jk(a,r.shape,r.dtype,i);return n.makeTensorInfo(o,l,u)}const qk={kernelName:Ze,backendName:"cpu",kernelFunc:Kk};function Xk(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a:i,b:a}=n,o=r;bk([i,a],e);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c="string"===i.dtype?xh(l):l,h="string"===i.dtype?xh(u):u,d=s||i.dtype,[p,f]=t(i.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:r})=>{const{a:i,b:a}=e,o=r;if("complex64"===i.dtype||"complex64"===a.dtype){const e=Kk({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=Kk({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,y]=n(i.shape,a.shape,l,u,f,g),x=o.makeTensorInfo(y,"float32",m),k=o.makeTensorInfo(y,"float32",b),v=Wk({inputs:{real:x,imag:k},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(k),v}{const e=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,r=s||i.dtype,[l,u]=t(i.shape,a.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function Yk(e){return(t,n,s,r,i,a)=>{const o=Sa(t,n),l=K(o),u=o.length,c=he(o),h=ne("float32",l),d=ne("float32",l),p=Ia(t,o),f=Ia(n,o),g=zc(s,r),m=zc(i,a),b=t.length,y=he(t),x=n.length,k=he(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,s=t%m.length,r=e(g[2*n],g[2*n+1],m[2*s],m[2*s+1]);h[t]=r.real,d[t]=r.imag}else for(let t=0;t<h.length;t++){const n=xe(t,u,c),s=n.slice(-b);p.forEach((e=>s[e]=0));const r=ye(s,b,y),i=n.slice(-x);f.forEach((e=>i[e]=0));const a=ye(i,x,k),o=e(g[2*r],g[2*r+1],m[2*a],m[2*a+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const Jk=Ek(((e,t)=>e+t)),Zk=Yk(((e,t,n,s)=>({real:e+n,imag:t+s}))),Qk=Xk(De,Jk,Zk),ev={kernelName:De,backendName:"cpu",kernelFunc:Qk};function tv(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,a=K(r.shape),o=Q(i,a),l=K(o);V(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const nv={kernelName:Bn,backendName:"cpu",kernelFunc:tv};function sv(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:a,transposeB:o}=s;bk([r,i],"matMul");const l=r.shape.length,u=i.shape.length,c=a?r.shape[l-2]:r.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],d=a?r.shape[l-1]:r.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],f=r.shape.slice(0,-2),g=i.shape.slice(0,-2),m=K(f),b=K(g),y=Sa(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);V(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const x=o?[b,p,h]:[b,h,p],k=tv({inputs:{x:r},backend:n,attrs:{shape:a?[m,c,d]:[m,d,c]}}),v=tv({inputs:{x:i},backend:n,attrs:{shape:x}}),w=a?k.shape[1]:k.shape[2],I=a?k.shape[2]:k.shape[1],T=o?v.shape[1]:v.shape[2],S=Math.max(m,b),C=n.data.get(k.dataId).values,N=n.data.get(v.dataId).values,$=he(k.shape),E=he(v.shape),[R,A,D]=a?[$[0],1,$[1]]:[$[0],$[1],1],[_,F,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],L=I*T,M=Zi([S,I,T],k.dtype),P=M.values,z=n.blockSize;for(let e=0;e<S;e++){const t=e%m,n=e%b;for(let s=0;s<I;s+=z){const r=Math.min(s+z,I);for(let i=0;i<T;i+=z){const a=Math.min(i+z,T);for(let o=0;o<w;o+=z){const l=Math.min(o+z,w);for(let u=s;u<r;u++)for(let s=i;s<a;s++){let r=0;for(let e=o;e<l;e++)r+=C[t*R+u*A+e*D]*N[e*_+s*F+n*O];P[e*L+(u*T+s)]+=r}}}}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(y,M.dtype,M.values)}const rv={kernelName:Ke,backendName:"cpu",kernelFunc:sv},iv={kernelName:Ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[];d=sv({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=Qk({inputs:{a:d,b:a},backend:n}),g.push(d),d=p),c&&(f=Bk(n,d,c,o,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};function av(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const ov={kernelName:Ee,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;bk(t,"abs");let s=new Float32Array(K(t.shape));return s=av(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},lv=vk(Re,(e=>Math.acos(e))),uv={kernelName:Re,backendName:"cpu",kernelFunc:lv},cv=vk(Ae,(e=>Math.acosh(e))),hv={kernelName:Ae,backendName:"cpu",kernelFunc:cv},dv={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;bk(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),i=Zi(s[0].shape,s[0].dtype),a=i.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<a.length;e++)a[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function pv(e,t,n,s,r){const i=t.length,a=K(t),o=he(t),l=he(r),u=ne(n,K(r));for(let t=0;t<a;++t){const n=xe(t,i,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[ye(r,i,l)]=e[t]}return u}function fv(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:i}=n;bk(r,"transpose");const a=r.shape.length,o=new Array(a);for(let e=0;e<o.length;e++)o[e]=r.shape[i[e]];const l=pv(s.data.get(r.dataId).values,r.shape,r.dtype,i,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const gv={kernelName:Es,backendName:"cpu",kernelFunc:fv},mv={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;bk(r,"all");const o=ee(i,r.shape);let l=o;const u=gl(l,r.shape.length);let c=r;null!=u&&(c=fv({inputs:{x:r},backend:n,attrs:{perm:u}}),l=bl(l.length,r.shape.length)),fl("all",l,c.shape.length);const[h,d]=dl(c.shape,l),p=K(d),f=ge(K(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const s=g[t+e];n=n&&s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=tv({inputs:{x:m},backend:n,attrs:{shape:pl(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},bv={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;bk(r,"any");const o=ee(i,r.shape);let l=o;const u=gl(l,r.shape.length);let c=r;null!=u&&(c=fv({inputs:{x:r},backend:n,attrs:{perm:u}}),l=bl(l.length,r.shape.length)),fl("any",l,c.shape.length);const[h,d]=dl(c.shape,l),p=K(d),f=ge(K(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const s=g[t+e];n=n||s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=tv({inputs:{x:m},backend:n,attrs:{shape:pl(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},yv={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;bk(r,"argMax");let a=ee(i,r.shape);const o=gl(a,r.shape.length);let l=r;const u=[];null!=o&&(l=fv({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=bl(a.length,l.shape.length)),a=[a[0]],fl("argMax",a,l.shape.length);const[c,h]=dl(l.shape,a),d=ge(K(c),"int32"),p=K(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r>n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},xv={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;bk(r,"argMin");let a=ee(i,r.shape);const o=gl(a,r.shape.length);let l=r;const u=[];null!=o&&(l=fv({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=bl(a.length,l.shape.length)),a=[a[0]],fl("argMin",a,l.shape.length);const[c,h]=dl(l.shape,a),d=ge(K(c),"int32"),p=K(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r<n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},kv=vk(Pe,(e=>Math.asin(e))),vv={kernelName:Pe,backendName:"cpu",kernelFunc:kv},wv=vk(ze,(e=>Math.asinh(e))),Iv={kernelName:ze,backendName:"cpu",kernelFunc:wv},Tv=vk(Be,(e=>Math.atan(e))),Sv={kernelName:Be,backendName:"cpu",kernelFunc:Tv},Cv=Ek(((e,t)=>Math.atan2(e,t))),Nv=Xk(Ue,Cv),$v={kernelName:Ue,backendName:"cpu",kernelFunc:Nv},Ev=vk(We,(e=>Math.atanh(e))),Rv={kernelName:We,backendName:"cpu",kernelFunc:Ev};function Av(e,t,n,s,r,i){const a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Zi(r.outShape,n),m=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*b,g=t*s[0];for(let t=0;t<r.inChannels;++t)for(let b=0;b<r.outHeight;++b){const k=b*a-d,v=Math.max(0,k),w=Math.min(r.inHeight,c+k),I=n+b*y;for(let n=0;n<r.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(r.inWidth,h+a);let b=f,y=0,k=0;for(let n=v;n<w;n+=l){const r=g+n*s[1];for(let n=c;n<d;n+=u){const a=e[r+n*s[2]+t];"max"===i&&a>b?b=a:"avg"===i&&(y+=a,k++)}if(isNaN(b))break}m[I+n*x+t]="avg"===i?y/k:b}}}return g}function Dv(e,t,n,s,r=!1,i=!1){const a=Zi(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=Zi(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const m=n*o-p;let b=m;for(;b<0;)b+=u;const y=Math.min(s.inHeight,h+m);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(s.inWidth,d+h);let k=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<y;n+=u){const a=n-m;for(let o=p;o<x;o+=c){const l=o-h,u=g.get(e,n,o,t);u>k&&(k=u,v=r?i?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:a*d+l)}}a.set(v,e,n,o,t)}}return a}function _v(e,t,n,s,r,i){const a=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,g=r.padInfo.front,m=r.padInfo.top,b=r.padInfo.left,y="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Zi(r.outShape,n),k=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],w=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],T=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*v,x=t*s[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outDepth;++v){const S=v*a-g;let C=S;for(;C<0;)C+=u;const N=Math.min(r.inDepth,d+S),$=n+v*w;for(let n=0;n<r.outHeight;++n){const a=n*o-m;let d=a;for(;d<0;)d+=c;const g=Math.min(r.inHeight,p+a),v=$+n*I;for(let n=0;n<r.outWidth;++n){const a=n*l-b;let o=a;for(;o<0;)o+=h;const p=Math.min(r.inWidth,f+a),m=v+n*T;let w=y,I=0,S=0;for(let n=C;n<N;n+=u){const r=x+n*s[1];for(let n=d;n<g;n+=c){const a=r+n*s[2];for(let n=o;n<p;n+=h){const r=e[a+n*s[3]+t];if("max"===i&&r>w?w=r:"avg"===i&&(I+=r,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}k[m+t]="avg"===i?I/Math.max(S,1):w}}}}return x}const Fv={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;bk(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;V(ko(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=uo(r.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&q(u.inShape,u.outShape))c=Sk({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=he(r.shape),s=Av(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},Ov={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;bk(r,"avgPool3d");const c=co(r.shape,i,a,1,o,l,u),h=_v(n.data.get(r.dataId).values,r.shape,r.dtype,he(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},Lv={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;bk([r,i],"avgPool3DGrad");const c=co(i.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,k=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,I=k-1-c.padInfo.front,T=w-1-c.padInfo.left,S=v-1-c.padInfo.top,C=Zi(i.shape,"float32"),N=1/(f*g*m),$=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const i=n-I,a=s-S,o=r-T;let l=0;for(let n=0;n<k;n+=b){const s=(i+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<v;n+=y){const r=(a+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<w;n+=x){const i=(o+n)/p;i<0||i>=c.outWidth||Math.floor(i)!==i||(l+=$.get(e,s,r,i,t))}}}C.set(l*N,e,n,s,r,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},Mv={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i;bk([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=uo(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,k=b-1-c.padInfo.top,v=Zi(a.shape,"float32"),w=1/(p*f),I=n.data.get(r.dataId).values,T=Zi(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-k,i=s-x;let a=0;for(let n=0;n<b;n+=g){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<y;n+=m){const r=(i+n)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(a+=T.get(e,s,r,t))}}v.set(a*w,e,n,s,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Pv={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:i,offset:a,mean:o,variance:l}=t;V(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),V(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),V(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),bk([r,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,b=p.length,y=d.length,x=h.length;let k=0,v=0,w=0,I=0;for(let e=0;e<c.length;++e)g[e]=f[k++]+(c[e]-h[v++])*p[w++]/Math.sqrt(d[I++]+u),k>=m&&(k=0),v>=x&&(v=0),w>=b&&(w=0),I>=y&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};function zv(e,t,n,s,r){const i=eo(s,t,n),a=K(n),o=he(s);if(i){const n=to(t,o);return"string"===r?e.slice(n,n+a):e.subarray(n,n+a)}const l=Zi(s,r,"string"===r?xh(e):e),u=Zi(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?kh(u.values):u.values}function Bv(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:a}=s;bk(r,"slice");const[o,l]=no(r,i,a);Ua(r,o,l);const u=zv(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const Wv={kernelName:es,backendName:"cpu",kernelFunc:Bv},Uv={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:a}=s;bk([r],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),l=wc(r.shape,i,o),u=Ic(l.length,i.length),c=Tc(r.shape,i,o),h=Sc(a,i.length),d=Cc(c,a,i.length),p=tv({inputs:{x:r},backend:n,attrs:{shape:l}}),f=fv({inputs:{x:p},backend:n,attrs:{perm:u}}),g=tv({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Bv({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function Gv(e,t,n,s,r){const i=K(s),a=ge(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(a[s]+=i>0?t[n]:1)}return a}function Vv(e,t,n,s=!1){const r=e.shape[0],i=e.shape[1],a=Zi([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<i;r++){const i=e.get(o,r);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(s?a.set(1,o,i):t.size>0?a.set(a.get(o,i)+t.get(o,r),o,i):a.set(a.get(o,i)+1,o,i))}return a}const Hv={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a}=s,o=Gv(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}},jv=Ek(((e,t)=>e&t)),Kv={kernelName:Ye,backendName:"cpu",kernelFunc:Xk(Ye,jv)},qv={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=Sa(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Xv=kk((e=>Math.ceil(e))),Yv=wk(Qe,Xv),Jv={kernelName:Qe,backendName:"cpu",kernelFunc:Yv},Zv=vk(et,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Qv={kernelName:et,backendName:"cpu",kernelFunc:Zv},ew={kernelName:nt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(K(t.shape)),r=n.data.get(t.dataId),i=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function tw(e,t,n,s){const r=se(n,K(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=K(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const i="string"===n?xh(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=i[a++]}s+=e.shape[1]}))}return r}function nw(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const sw={kernelName:Ht,backendName:"cpu",kernelFunc:nw};function rw(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=ee(r,t[0].shape)[0];dc(t.map((e=>e.shape)),i);let a=pc(t.map((e=>e.shape)),i);if(0===K(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter((e=>K(e.shape)>0));if(1===o.length)return Sk({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>Vk({inputs:{input:e},backend:n}))),t=o.map((e=>nw({inputs:{input:e},backend:n}))),s=rw({inputs:e,backend:n,attrs:{axis:i}}),r=rw({inputs:t,backend:n,attrs:{axis:i}}),a=Wk({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),a}const l=o.map((e=>{const t=K(e.shape.slice(i));return tv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));a=pc(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=tw(u,a,t[0].dtype,c),d=pc(o.map((e=>e.shape)),i),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const iw={kernelName:st,backendName:"cpu",kernelFunc:rw};function aw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;bk([r,i],"conv2d");const h=wo(l),d=ho(r.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,k=new Sr(d.outShape,r.dtype),v=he(r.shape),w=he(i.shape),I=v[0],T=x?v[1]:v[2],S=x?v[2]:1,C=x?1:v[1],N=k.strides[0],$=x?k.strides[1]:k.strides[2],E=x?k.strides[2]:1,R=x?1:k.strides[1],A=n.data.get(r.dataId).values,D=n.data.get(i.dataId).values,_=k.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*N;for(let e=0;e<d.outHeight;++e){const s=n+e*$,r=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=r+e*g;if(n<0||n>=d.inHeight)continue;const i=e*w[0],a=t+n*T;for(let e=0;e<d.outWidth;++e){const t=s+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const s=n+e*m;if(s<0||s>=d.inWidth)continue;const r=a+s*S;let o=i+e*w[1];for(let e=0;e<d.inChannels;++e){const n=A[r+e*C];for(let e=0;e<d.outChannels;++e)_[t+e*R]+=n*D[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,_)}const ow={kernelName:rt,backendName:"cpu",kernelFunc:aw},lw={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;bk([r,i],"conv2dBackpropFilter");const h=wo(l),d=ho(r.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,y=new Sr(d.filterShape,"float32"),x=d.padInfo.left,k=d.padInfo.top,v=n.data.get(r.dataId).values,w=n.data.get(i.dataId).values,I=new Sr(r.shape,r.dtype,v),T=new Sr(i.shape,i.dtype,w);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((k-e)/p)),n=Math.min(d.outHeight,(d.inHeight+k-e)/p);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((x-s)/f)),i=Math.min(d.outWidth,(d.inWidth+x-s)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-k;for(let e=r;e<i;++e){const n=s+e*f-x;l+=b?I.get(u,t,n,a)*T.get(u,c,e,o):I.get(u,a,t,n)*T.get(u,o,c,e)}}y.set(l,e,s,a,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},uw={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;bk([r,i],"conv2dBackpropInput");const h=he(i.shape),d=he(r.shape);let p=wo(u);const f=ho(a,i.shape,o,1,l,c,!1,p),g=new Sr(f.inShape,"float32"),m=g.values,b=n.data.get(r.dataId).values,y=n.data.get(i.dataId).values,[x,k,v]=h,{batchSize:w,filterHeight:I,filterWidth:T,inChannels:S,inHeight:C,inWidth:N,outChannels:$,outHeight:E,outWidth:R,strideHeight:A,strideWidth:D}=f;p=f.dataFormat;const _=I-1-f.padInfo.top,F=T-1-f.padInfo.left,O="channelsLast"===p,L=g.strides[0],M=O?g.strides[1]:g.strides[2],P=O?g.strides[2]:1,z=O?1:g.strides[1],B=d[0],W=O?d[1]:d[2],U=O?d[2]:1,G=O?1:d[1];for(let e=0;e<w;++e)for(let t=0;t<S;++t)for(let n=0;n<C;++n){const s=n-_,r=Math.max(0,Math.ceil(s/A)),i=Math.min(E,(I+s)/A);for(let a=0;a<N;++a){const o=a-F,l=Math.max(0,Math.ceil(o/D)),u=Math.min(R,(T+o)/D);let c=0;for(let n=r;n<i;++n){const r=n*A-s;for(let s=l;s<u;++s){const i=B*e+W*n+U*s,a=x*(I-1-r)+k*(T-1-(s*D-o))+v*t;for(let e=0;e<$;++e)c+=b[i+G*e]*y[a+e]}}m[L*e+M*n+P*a+z*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},cw={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l}=s;bk([r,i],"conv3d");const u=po(r.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,y=m.left,x=m.top,k=new Sr(u.outShape,r.dtype),v=n.data.get(r.dataId).values,w=n.data.get(i.dataId).values,I=k.values,T=he(r.shape),S=he(i.shape);for(let e=0;e<u.batchSize;++e){const t=e*T[0],n=e*k.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*k.strides[1],r=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=r+e*p;if(n<0||n>=u.inDepth)continue;const i=e*S[0],a=t+n*T[1];for(let e=0;e<u.outHeight;++e){const t=s+e*k.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=i+e*S[1],o=a+s*T[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-y;for(let e=0;e<d;++e){const t=s+e*g;if(t<0||t>=u.inWidth)continue;const i=r+e*S[2],a=o+t*u.inChannels;let l=i;for(let e=0;e<u.inChannels;++e){const t=v[a+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*w[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},hw={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,filterShape:l}=s;bk([r,i],"conv3dBackpropFilterV2");const u=he(r.shape),c=he(i.shape),h=po(r.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,y=new Sr(h.filterShape,"float32"),x=y.values,[k,v,w,I]=y.strides,T=n.data.get(i.dataId).values,[S,C,N,$]=c,E=n.data.get(r.dataId).values,[R,A,D,_]=u,F=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((F-e)/d)),n=Math.min(h.outDepth,(h.inDepth+F-e)/d),s=e*k;for(let r=0;r<m;++r){const i=Math.max(0,Math.ceil((L-r)/p)),a=Math.min(h.outHeight,(h.inHeight+L-r)/p),o=r*v+s;for(let s=0;s<b;++s){const l=Math.max(0,Math.ceil((O-s)/f)),u=Math.min(h.outWidth,(h.inWidth+O-s)/f),c=s*w+o;for(let o=0;o<h.inChannels;++o){const g=o*I+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*R,b=g*S;for(let g=t;g<n;++g){const t=(e+g*d-F)*A+h,n=g*C+b;for(let e=i;e<a;++e){const i=(r+e*p-L)*D+t,a=e*N+n;for(let e=l;e<u;++e){const t=e*$+a;m+=E[(s+e*f-O)*_+i+o]*T[t+c]}}}}x[g+c]=m}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},dw={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:a,strides:o,inputShape:l}=s;bk([r],"conv3dBackpropInputV2");const u=he(r.shape),c=he(i.shape),h=po(l,i.shape,o,1,a),d=new Sr(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,y=n.data.get(r.dataId).values,[x,k,v,w]=u,I=n.data.get(i.dataId).values,[T,S,C,N]=c,{batchSize:$,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:D,inDepth:_,inHeight:F,inWidth:O,outChannels:L,outDepth:M,outHeight:P,outWidth:z,strideDepth:B,strideHeight:W,strideWidth:U}=h,G=E-1-h.padInfo.front,V=R-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<D;++t)for(let n=0;n<_;++n){const s=n-G,r=Math.max(0,Math.ceil(s/B)),i=Math.min(M,(E+s)/B);for(let a=0;a<F;++a){const o=a-V,l=Math.max(0,Math.ceil(o/W)),u=Math.min(P,(R+o)/W);for(let c=0;c<O;++c){const h=c-H,d=Math.max(0,Math.ceil(h/U)),$=Math.min(z,(A+h)/U);let D=0;for(let n=r;n<i;++n){const r=n*B-s;for(let s=l;s<u;++s){const i=s*W-o;for(let a=d;a<$;++a){const o=x*e+k*n+v*s+w*a,l=T*(E-1-r)+S*(R-1-i)+C*(A-1-(a*U-h))+N*t;for(let e=0;e<L;++e)D+=y[o+e]*I[l+e]}}}p[f*e+g*n+m*a+b*c+t]=D}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},pw=vk(ct,(e=>Math.cos(e))),fw={kernelName:ct,backendName:"cpu",kernelFunc:pw},gw=vk(ht,(e=>Math.cosh(e))),mw={kernelName:ht,backendName:"cpu",kernelFunc:gw},bw={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=i.shape[0],[g,m]=o,b=Zi([f,g,m,p],"float32"),y=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,k=n.data.get(r.dataId).values,v=he(r.shape),w=he(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],s=y[t+1],r=y[t+2],i=y[t+3],a=x[e];if(a>=c)continue;const o=g>1?(r-n)*(h-1)/(g-1):0,f=m>1?(i-s)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let s=0;s<p;s++){const r=s+n*w[2]+t*w[1]+e*w[0];b.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<m;l++){const c=m>1?s*(d-1)+l*f:.5*(s+i)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const s=n+l*w[2]+t*w[1]+e*w[0];b.values[s]=u}continue}const h=Math.floor(c),g=Math.ceil(c),y=c-h;for(let s=0;s<p;s++){let i=s+h*v[2]+n*v[1]+a*v[0];const u=k[i];i=s+g*v[2]+n*v[1]+a*v[0];const c=k[i];i=s+h*v[2]+r*v[1]+a*v[0];const d=k[i];i=s+g*v[2]+r*v[1]+a*v[0];const p=u+(c-u)*y,f=d+(k[i]-d)*y;i=s+l*w[2]+t*w[1]+e*w[0],b.values[i]=p+(f-p)*o}}}else for(let n=0;n<m;++n){const r=m>1?s*(d-1)+n*f:.5*(s+i)*(d-1);if(r<0||r>d-1){for(let s=0;s<p;s++){const r=s+n*w[2]+t*w[1]+e*w[0];b.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<p;s++){const r=s+o*v[2]+l*v[1]+a*v[0],i=s+n*w[2]+t*w[1]+e*w[0];b.values[i]=k[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},yw={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;bk(r,"cumprod");const l=gl([i],r.shape.length);let u=r;null!=l&&(u=fv({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=bl(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Pr(u.dtype,"int32"),d=fe(K(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=a?1:p[n];else{const s=g(e,t-1);d[n]=a?p[s]*d[s]:p[n]*d[s]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=fv({inputs:{x:m},backend:n,attrs:{perm:ml(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}},xw={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;bk(r,"cumsum");const l=gl([i],r.shape.length);let u=r;null!=l&&(u=fv({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=bl(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Pr(u.dtype,"int32"),d=ge(K(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=a?0:p[n];else{const s=g(e,t-1);d[n]=a?p[s]+d[s]:p[n]+d[s]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=fv({inputs:{x:m},backend:n,attrs:{perm:ml(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}},kw={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const e=Gv(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,e)}if(2===r.shape.length){const e=Vv(n.bufferSync(r),n.bufferSync(i),a,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},vw={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:a}=s;V("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*i,d=u*i,p=c/(i*i),f=n.data.get(r.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/i),s=t%i;for(let t=0;t<d;++t){const r=Math.floor(t/i),a=(s*i+t%i)*p;for(let t=0;t<p;++t){const s=t+a+c*(r+u*(n+l*e));g[m++]=f[s]}}}return n.makeTensorInfo([o,h,d,p],r.dtype,g)}};function ww(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;bk([r,i],"depthwiseConv2DNative");const c=he(r.shape),h=he(i.shape);let d=l;null==d&&(d=[1,1]),V(ko(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=ho(r.shape,i.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:b,padInfo:y}=p,x=y.left,k=y.top,v=p.outChannels/p.inChannels,w=new Sr(p.outShape,r.dtype),I=n.data.get(r.dataId).values,T=n.data.get(i.dataId).values,S=w.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*w.strides[0];for(let e=0;e<p.outHeight;++e){const s=n+e*w.strides[1],r=e*p.strideHeight-k;for(let e=0;e<f;++e){const n=r+e*m;if(n<0||n>=p.inHeight)continue;const i=e*h[0],a=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=s+e*w.strides[2],n=e*p.strideWidth-x;for(let e=0;e<g;++e){const s=n+e*b;if(s<0||s>=p.inWidth)continue;const r=i+e*h[1],o=a+s*p.inChannels;let l=t,u=r;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)S[l+e]+=t*T[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const Iw={kernelName:bt,backendName:"cpu",kernelFunc:ww},Tw={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;bk([r,i],"depthwiseConv2dNativeBackpropFilter");const h=ho(r.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new Sr(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,k=n.data.get(r.dataId).values,v=new Sr(r.shape,r.dtype,k),w=n.data.get(i.dataId).values,I=new Sr(i.shape,i.dtype,w);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((b-s)/p)),i=Math.min(h.outWidth,(h.inWidth+b-s)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/x),l=a%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=r;e<i;++e){const n=s+e*p-b;u+=v.get(l,t,n,o)*I.get(l,c,e,a)}}m.set(u,e,s,o,l)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Sw={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;bk([r,i],"depthwiseConv2DNativeBackpropInput");const h=he(r.shape),d=he(i.shape),p=ho(c,i.shape,a,o,l,u,!0),f=new Sr(p.inShape,"float32"),g=f.values,[m,b,y]=f.strides,x=n.data.get(r.dataId).values,[k,v,w]=h,I=n.data.get(i.dataId).values,[T,S,C]=d,{batchSize:N,filterHeight:$,filterWidth:E,inChannels:R,inHeight:A,inWidth:D,outChannels:_,outHeight:F,outWidth:O,strideHeight:L,strideWidth:M}=p,P=$-1-p.padInfo.top,z=E-1-p.padInfo.left,B=_/R;for(let e=0;e<N;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const s=n-P,r=Math.max(0,Math.ceil(s/L)),i=Math.min(F,($+s)/L);for(let a=0;a<D;++a){const o=a-z,l=Math.max(0,Math.ceil(o/M)),u=Math.min(O,(E+o)/M);let c=0;for(let n=r;n<i;++n){const r=n*L-s;for(let s=l;s<u;++s){const i=k*e+v*n+w*s,a=T*($-1-r)+S*(E-1-(s*M-o))+C*t;for(let e=0;e<B;++e)c+=x[i+(t*B+e)]*I[a+e]}}g[m*e+b*n+y*a+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Cw={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=K(s.shape),i=n.data.get(s.dataId).values,a=Zi([r,r],s.dtype),o=a.values;for(let e=0;e<i.length;e++)o[e*r+e]=i[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},Nw={kernelName:vt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:i,pad:a,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:k,strideWidth:v,filterHeight:w,filterWidth:I,dilationHeight:T,dilationWidth:S,outShape:C}=lo(s.shape,r.shape,i,a,"NHWC",o),N=K(C),$=C.length,E=se(s.dtype,N);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*k-x.top;for(let i=0;i<y;++i){const a=i*v-x.left;for(let o=0;o<m;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<w;++t){const i=n+t*T;if(i>=0&&i<f)for(let n=0;n<I;++n){const p=a+n*S;if(p>=0&&p<g){const a=ye([e,i,p,o],c,he(s.shape)),f=ye([t,n,o],d,he(r.shape)),g=u[a]+h[f];g>l&&(l=g)}}}E[ye([e,t,i,o],$,he(C))]=l}}}return{dataId:l.write(hr(E,s.dtype),C,s.dtype),shape:C,dtype:s.dtype}}},$w={kernelName:It,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=pe(s.shape,u.data.get(s.dataId).values),h=pe(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:x,strideWidth:k,filterHeight:v,filterWidth:w,dilationHeight:I,dilationWidth:T,outShape:S}=lo(s.shape,r.shape,a,o,"NHWC",l);V(i.rank===S.length,(()=>`Error in ${It}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const C=pe(S,u.data.get(i.dataId).values),N=me(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*x-y.top;for(let s=0;s<b;++s){const r=s*k-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<p)for(let n=0;n<w;++n){const u=r+n*T;if(u>=0&&u<f){const r=c[e][s][u][i]+h[t][n][i];r>a&&(a=r,o=t,l=n)}}}N[o][l][i]+=C[e][t][s][i]}}}return{dataId:u.write(hr(N,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Ew={kernelName:wt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=pe(s.shape,u.data.get(s.dataId).values),h=pe(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:x,strideWidth:k,filterHeight:v,filterWidth:w,dilationHeight:I,dilationWidth:T,outShape:S}=lo(s.shape,r.shape,a,o,"NHWC",l);V(i.rank===S.length,(()=>`Error in ${wt}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const C=pe(S,u.data.get(i.dataId).values),N=me(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*x-y.top;for(let s=0;s<b;++s){const r=s*k-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<p)for(let n=0;n<w;++n){const u=r+n*T;if(u>=0&&u<f){const r=c[e][s][u][i]+h[t][n][i];r>a&&(a=r,o=s,l=u)}}}N[e][o][l][i]+=C[e][t][s][i]}}}return{dataId:u.write(hr(N,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Rw={kernelName:"Draw",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{canvas:i,options:a}=s,{contextOptions:o,imageOptions:l}=a||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],g=n.data.get(r.dataId).values,m="float32"===r.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*u];for(let n=0;n<f;n++){const s=g[e*f+n];if("float32"===r.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===r.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===f?(t[0]=s*m,t[1]=s*m,t[2]=s*m):t[n]=s*m}const n=4*e;b[n+0]=Math.round(t[0]),b[n+1]=Math.round(t[1]),b[n+2]=Math.round(t[2]),b[n+3]=Math.round(t[3])}i.width=p,i.height=d;const y=new ImageData(b,p,d);return h.putImageData(y,0,0),r}},Aw=Ek(((e,t)=>e*t)),Dw=Yk(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),_w=Xk(kn,Aw,Dw),Fw={kernelName:kn,backendName:"cpu",kernelFunc:_w};function Ow(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;let o;bk(r,"sum"),o="bool"===r.dtype?Kk({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Sk({inputs:{x:r},backend:n});const l=o.shape.length,u=ee(i,o.shape),c=gl(u,l);let h=u,d=o;null!=c&&(d=fv({inputs:{x:o},backend:n,attrs:{perm:c}}),h=bl(h.length,l)),fl("sum",h,d.shape.length);const[p,f]=dl(d.shape,h);let g=Gk(n,p,Pr(d.dtype,"int32"));const m=K(f),b=n.data.get(g.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=0;for(let e=0;e<m;++e)n+=y[t+e];b[e]=n}if(a){const e=g;g=tv({inputs:{x:g},backend:n,attrs:{shape:pl(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const Lw={kernelName:os,backendName:"cpu",kernelFunc:Ow},Mw={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:a,summedDims:o,idDims:l}=Jc(r,i.length);Qc(a.length,l,i);const{path:u,steps:c}=eh(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=Zc(p,l[t]);let r;th(e)?r=i[t]:(r=fv({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(r));const a=r.shape.slice();for(let e=0;e<s.length;++e)a.splice(s[e],0,1);q(r.shape,a)||(r=tv({inputs:{x:r},backend:n,attrs:{shape:a}}),f.push(r)),null===d?d=r:(d=_w({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=Ow({inputs:{x:d},backend:n,attrs:{axis:u[e]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Pw={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;bk([s,r],"eluGrad");const i=new Float32Array(K(r.shape)),a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<a.length;++e){const t=a[e];i[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",i)}},zw=Ek(((e,t)=>e===t?1:0)),Bw=Xk(Et,zw,null,"bool"),Ww={kernelName:Et,backendName:"cpu",kernelFunc:Bw},Uw=_c,Gw=Fc,Vw=Oc,Hw=Lc,jw=Mc,Kw=Pc,qw=vk($t,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+Uw*n);return t*(1-((((Kw*s+jw)*s+Hw)*s+Vw)*s+Gw)*s*Math.exp(-n*n))})),Xw={kernelName:$t,backendName:"cpu",kernelFunc:qw},Yw=kk((e=>Math.exp(e))),Jw=wk(Rt,Yw,"float32"),Zw={kernelName:Rt,backendName:"cpu",kernelFunc:Jw};function Qw(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:i}=s,a=r.shape.length,o=r.shape.slice();let l=i;return i<0&&(V(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),tv({inputs:{x:r},backend:n,attrs:{shape:o}})}const eI={kernelName:At,backendName:"cpu",kernelFunc:Qw},tI=kk((e=>Math.expm1(e))),nI=wk(Dt,tI),sI={kernelName:Dt,backendName:"cpu",kernelFunc:nI},rI=Ek(((e,t)=>e/t)),iI=Xk(Tt,rI),aI={kernelName:Tt,backendName:"cpu",kernelFunc:iI},oI=Ek(((e,t)=>e-t)),lI=Yk(((e,t,n,s)=>({real:e-n,imag:t-s}))),uI=Xk(Is,oI,lI),cI={kernelName:Is,backendName:"cpu",kernelFunc:uI};function hI(e,t,n){const s=e.shape,r=s[0],i=s[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[r,i],c=K(u),h=ne("float32",c),d=ne("float32",c);for(let e=0;e<r;e++){const s=Bv({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),r=Bv({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,i]}}),a=Wk({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=dI(a,t,n),p=zc(u,c);for(let t=0;t<i;t++){const n=Gc(p,t);h[e*i+t]=n.real,d[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=Wk({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function dI(e,t,n){const s=K(e.shape),r=n.data.get(e.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,a=n.data.get(r.complexTensorInfos.imag.dataId).values;if((o=s)&o-1){const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let i=0,a=0;for(let s=0;s<t;s++){const o=jc(r*s,t,n),l=Gc(e,s);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=t,a/=t),Vc(s,i,a,r)}return s}(zc(i,a),s,t);return Bc(e)}{const r=pI(i,a,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),i=n.makeTensorInfo([],"float32",cr(s,"float32")),a=Sk({inputs:{x:i},backend:n}),l=aI.kernelFunc({inputs:{a:e,b:i},backend:n}),u=aI.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}var o}function pI(e,t,n,s,r){if(1===n)return{real:e,imag:t};const i=zc(e,t),a=n/2,o=Wc(i),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=Wk({inputs:{real:h,imag:d},backend:r}),f=Uc(i),g=f.real,m=f.imag,b=[g.length],y=r.makeTensorInfo(b,"float32",g),x=r.makeTensorInfo(b,"float32",m),k=Wk({inputs:{real:y,imag:x},backend:r}),v=pI(l,u,a,s,r),w=v.real,I=v.imag,T=[w.length],S=r.makeTensorInfo(T,"float32",w),C=r.makeTensorInfo(T,"float32",I),N=Wk({inputs:{real:S,imag:C},backend:r}),$=pI(g,m,a,s,r),E=$.real,R=$.imag,A=[E.length],D=r.makeTensorInfo(A,"float32",E),_=r.makeTensorInfo(A,"float32",R),F=Wk({inputs:{real:D,imag:_},backend:r}),O=Hc(n,s),L=[O.real.length],M=r.makeTensorInfo(L,"float32",O.real),P=r.makeTensorInfo(L,"float32",O.imag),z=Wk({inputs:{real:M,imag:P},backend:r}),B=_w({inputs:{a:z,b:F},backend:r}),W=Qk({inputs:{a:N,b:B},backend:r}),U=uI({inputs:{a:N,b:B},backend:r}),G=Vk({inputs:{input:W},backend:r}),V=Vk({inputs:{input:U},backend:r}),H=nw({inputs:{input:W},backend:r}),j=nw({inputs:{input:U},backend:r}),K=rw({inputs:[G,V],backend:r,attrs:{axis:0}}),q=rw({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(K.dataId).values,Y=r.data.get(q.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}const fI={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=K(s.shape),i=s.shape[s.shape.length-1],a=tv({inputs:{x:s},backend:n,attrs:{shape:[r/i,i]}}),o=hI(a,!1,n),l=tv({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function gI(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:i}=n,a=i||le(r),o=se(a,K(s));return function(e,t){e.fill(t)}(o,r),t.makeTensorInfo(s,a,o)}const mI={kernelName:Ft,backendName:"cpu",kernelFunc:gI},bI={kernelName:Ot,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,i=ne(s.dtype,K(s.shape)),[a,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<a;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const s=e*u;for(let r=0;r<u;r++){const a=Math.round(l-e-1),o=t+n+s+r;let h=c[o];a>=0&&a<l&&(h=c[t+n+a*u+r]),i[o]=h}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},yI=kk((e=>Math.floor(e))),xI=wk(Lt,yI),kI={kernelName:Lt,backendName:"cpu",kernelFunc:xI},vI=Ek(((e,t)=>Math.floor(e/t))),wI=Xk(Mt,vI,null,"int32"),II={kernelName:Mt,backendName:"cpu",kernelFunc:wI},TI={kernelName:Ms,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=aw({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const e=tv({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});g=Qk({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=Qk({inputs:{a:g,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=tv({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=Bk(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=Bk(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}},SI={kernelName:Ps,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=ww({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;g=Qk({inputs:{a:g,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=Bk(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}};function CI(e,t,n,s,r,i,a,o,l){const u=Zi([s,i],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const i=e[n*r+t];c+=i*a[t],s.push(i)}if(c<0||c>=l/i)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<i;e++)u.values[n*i+e]=t.get(...t.indexToLoc(c*i+e))}return u}const NI={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=K(s.shape),a=r.shape,o=a[a.length-1],[l,u,c,h]=Nc(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const d=CI(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,c,h,s.shape,i);return n.makeTensorInfo(l,s.dtype,d.values)}};function $I(e,t,n){const s=Zi(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),i=r[0],a=r[2],o=t.locToIndex([i,a]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s}const EI={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:a,batchDims:o}=s;bk([r,i],"gatherV2");const l=ee(a,r.shape)[0],u=n.data.get(i.dataId).values,c=r.shape[l];for(let e=0;e<u.length;++e){const t=u[e];V(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=K(i.shape),p=yh(r,i,l,h),f=tv({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=tv({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(g),y=$I(n.bufferSync(f),b,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}},RI=Ek(((e,t)=>e>t?1:0)),AI=Xk(Wt,RI,null,"bool"),DI={kernelName:Wt,backendName:"cpu",kernelFunc:AI},_I=Ek(((e,t)=>e>=t?1:0)),FI=Xk(Ut,_I,null,"bool"),OI={kernelName:Ut,backendName:"cpu",kernelFunc:FI},LI={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=K(s.shape),i=s.shape[s.shape.length-1],a=tv({inputs:{x:s},backend:n,attrs:{shape:[r/i,i]}}),o=hI(a,!0,n),l=tv({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},MI=vk(jt,(e=>Number.isFinite(e)?1:0),"bool"),PI={kernelName:jt,backendName:"cpu",kernelFunc:MI},zI=vk(Kt,(e=>Math.abs(e)===1/0?1:0),"bool"),BI={kernelName:Kt,backendName:"cpu",kernelFunc:zI},WI=vk(qt,(e=>Number.isNaN(e)?1:0),"bool"),UI={kernelName:qt,backendName:"cpu",kernelFunc:WI},GI=Ek(((e,t)=>e<t?1:0)),VI=Xk(Yt,GI,null,"bool"),HI={kernelName:Yt,backendName:"cpu",kernelFunc:VI},jI=Ek(((e,t)=>e<=t?1:0)),KI=Xk(Jt,jI,null,"bool"),qI={kernelName:Jt,backendName:"cpu",kernelFunc:KI};function XI(e,t,n){const s=(t-e)/(n-1),r=ge(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const YI={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,a=XI(s,r,i);return t.makeTensorInfo([a.length],"float32",a)}},JI=kk((e=>Math.log(e))),ZI=wk(Qt,JI),QI={kernelName:Qt,backendName:"cpu",kernelFunc:ZI},eT=vk(en,(e=>Math.log1p(e))),tT={kernelName:en,backendName:"cpu",kernelFunc:eT},nT=Ek(((e,t)=>e&&t)),sT=Xk(tn,nT,null,"bool"),rT={kernelName:tn,backendName:"cpu",kernelFunc:sT},iT=vk(nn,(e=>e?0:1),"bool"),aT={kernelName:nn,backendName:"cpu",kernelFunc:iT},oT=Ek(((e,t)=>e||t)),lT=Xk(sn,oT,null,"bool"),uT={kernelName:sn,backendName:"cpu",kernelFunc:lT},cT={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=s;bk(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=K(r.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-i);const s=e-t+Math.min(t+i,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(a+o*t,-l);p[e]=n}return n.makeTensorInfo(r.shape,r.dtype,p)}},hT={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;bk(a,"LRNGrad");const h=K(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values,g=n.data.get(i.dataId).values,m=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),s=e-t+Math.min(d,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*f[t]*g[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=p[e],m[t]+=n}}return n.makeTensorInfo(a.shape,r.dtype,m)}};function dT(e,t,n,s){const r=ne(s,K(n));for(let n=0;n<r.length;++n){const s=n*t;let i=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>i)&&(i=t)}r[n]=i}return r}function pT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:a}=s,o=n;let l=r.shape;const u=l.length,c=ee(i,l);let h=c;const d=gl(h,u);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=pv(p,l,r.dtype,d,e),h=bl(h.length,u),l=e}bk(r,"max"),fl("max",h,u);const[f,g]=dl(l,h),m=dT(p,K(g),f,r.dtype),b=o.write(m,f,r.dtype);let y=f;return a&&(y=pl(f,c)),{dataId:b,shape:y,dtype:r.dtype}}const fT={kernelName:on,backendName:"cpu",kernelFunc:pT},gT=Ek(((e,t)=>Math.max(e,t))),mT=Xk(ln,gT),bT={kernelName:ln,backendName:"cpu",kernelFunc:mT},yT={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;bk(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;V(ko(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=uo(r.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&q(u.inShape,u.outShape))c=Sk({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=he(r.shape),s=Av(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},xT={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;bk(r,"maxPool3d");const c=co(r.shape,i,a,1,o,l,u),h=_v(n.data.get(r.dataId).values,r.shape,r.dtype,he(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},kT={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;bk([r,i],"maxPool3DGrad");const c=co(i.shape,a,o,1,l,u),h=function(e,t){const n=Zi(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,i=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const y=b*s-d;let x=y;for(;x<0;)x+=a;const k=Math.min(t.inDepth,u+y);for(let s=0;s<t.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const p=r*i-f;let w=p;for(;w<0;)w+=l;const I=Math.min(t.inWidth,h+p);let T=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<k;t+=a){const n=t-y;for(let s=d;s<v;s+=o){const r=s-u;for(let i=w;i<I;i+=l){const a=i-p,o=e.get(g,t,s,i,m);o>=T&&(T=o,S=n*c*h+r*c+a)}}}n.set(S,g,b,s,r,m)}}}return n}(n.bufferSync(i),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,m=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,k=c.effectiveFilterWidth,v=y-1-c.padInfo.front,w=k-1-c.padInfo.left,I=x-1-c.padInfo.top,T=Zi(i.shape,"float32"),S=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const i=n-v,a=s-I,o=r-w;let l=0;for(let n=0;n<y;n+=g){const s=(i+n)/d;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=m){const i=(a+r)/p;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let a=0;a<k;a+=b){const u=(o+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*x*k-1-h.get(e,s,i,u,t)===n*x*k+r*k+a?1:0;0!==d&&(l+=S.get(e,s,i,u,t)*d)}}}T.set(l,e,n,s,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},vT={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:a}=t,o=i;bk([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=uo(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Zi(d.outShape,o.dtype,Dv(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,k=d.effectiveFilterWidth,v=k-1-d.padInfo.left,w=x-1-d.padInfo.top,I=Zi(o.shape,"float32"),T=n.data.get(r.dataId).values,S=Zi(r.shape,"float32",T);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-w,i=s-v;let a=0;for(let n=0;n<x;n+=b){const s=(r+n)/g;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<k;r+=y){const o=(i+r)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*k-1-f.get(e,s,o,t)===n*k+r?1:0;0!==l&&(a+=S.get(e,s,o,t)*l)}}I.set(a,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},wT={kernelName:pn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;bk(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=uo(s.shape,r,i,[1,1],a),[h,d]=function(e,t,n,s,r){const i=Av(e,0,n,he(t),r,"max"),a=Dv(e,t,n,r,!0,s);return[i.values,a.values]}(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},IT={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=ee(i,r.shape),l=K(dl(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=Kk({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=iI({inputs:{a:h,b:c},backend:n});u.push(d);const p=Ow({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},TT={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;bk(r,"min");const o=ee(i,r.shape);let l=o;const u=gl(l,r.shape.length);let c=r;null!=u&&(c=fv({inputs:{x:r},backend:n,attrs:{perm:u}}),l=bl(l.length,r.shape.length)),fl("min",l,c.shape.length);const[h,d]=dl(c.shape,l),p=K(d),f=ge(K(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const s=g[t+e];(Number.isNaN(s)||s<n)&&(n=s)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=tv({inputs:{x:m},backend:n,attrs:{shape:pl(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},ST=Ek(((e,t)=>Math.min(e,t))),CT=Xk(mn,ST),NT={kernelName:mn,backendName:"cpu",kernelFunc:CT},$T={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,mode:a}=s;bk(r,"mirrorPad");const o=i.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=i.map((e=>e[0])),u=i.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===a?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=he(r.shape),f=K(o),g=o.length,m=he(o),b=ne(r.dtype,f);for(let e=0;e<f;e++){let t=xe(e,g,m);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=ye(t,d,p);b[e]=h[n]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}},ET=Ek(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),RT=Xk(yn,ET),AT={kernelName:yn,backendName:"cpu",kernelFunc:RT};function DT(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,a=r.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=ee([o],r.shape),u=pT({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=pl(u.shape,l),h=tv({inputs:{x:u},backend:n,attrs:{shape:c}}),d=uI({inputs:{a:r,b:h},backend:n}),p=Jw({inputs:{x:d},backend:n}),f=Ow({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=tv({inputs:{x:f},backend:n,attrs:{shape:c}}),m=iI({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const _T={kernelName:cs,backendName:"cpu",kernelFunc:DT},FT={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:a,normalized:o}=s;bk(r,"multinomial");const l=o?r:DT({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],p=ge(K(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=b.alea(a.toString()),r=e*i;for(let e=0;e<i;++e){const t=s();p[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){p[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function OT(e,t,n){const s=cr(-1,n);return Aw([],t,s,e,n)}const LT={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;bk(s,"neg");const r=n.data.get(s.dataId).values,[i,a]=OT(r,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,i)}},MT=Lu,PT={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s;bk(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=MT(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},zT=Mu,BT={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;bk(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=zT(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},WT=Pu,UT={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;bk(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=WT(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},GT=Ek(((e,t)=>e!==t?1:0)),VT=Xk(wn,GT,null,"bool"),HT={kernelName:wn,backendName:"cpu",kernelFunc:VT},jT={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:a,onValue:o,offValue:l}=s;bk(r,"oneHot");const u=K(r.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(r.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<a&&(c[e*a+h[e]]=o);return n.makeTensorInfo([...r.shape,a],i,c)}};function KT(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=Vk({inputs:{input:s},backend:n}),t=KT({inputs:{x:e},backend:n}),r=nw({inputs:{input:s},backend:n}),i=KT({inputs:{x:r},backend:n}),a=Wk({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return gI({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const qT={kernelName:_s,backendName:"cpu",kernelFunc:KT},XT={kernelName:Cn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=Vk({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),i=nw({inputs:{input:r},backend:s}),a=KT({inputs:{x:i},backend:s}),o=Wk({inputs:{real:n,imag:a},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}return gI({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function YT(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return Qw({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{H(i,e.shape,"All tensors passed to stack must have matching shapes"),V(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=rw({inputs:t.map((e=>{const t=Qw({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const JT={kernelName:$n,backendName:"cpu",kernelFunc:YT},ZT={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:a}=s;bk(r,"pad");const o=i.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=i.map((e=>e[0])),u=n.data.get(r.dataId).values,c=K(r.shape),h=r.shape.length,d=he(r.shape),p=K(o),f=o.length,g=he(o),m=ne(r.dtype,p);0!==a&&m.fill(a);for(let e=0;e<c;e++)m[ye(xe(e,h,d).map(((e,t)=>e+l[t])),f,g)]=u[e];return{dataId:n.write(m,o,r.dtype),shape:o,dtype:r.dtype}}},QT=Ek(((e,t)=>Math.pow(e,t))),eS=Xk(Rn,QT),tS={kernelName:Rn,backendName:"cpu",kernelFunc:eS};function nS(e,t,n,s){const[r,i]=dl(e,s),a=Pr(t,"int32"),o=ge(K(r),a),l=K(i);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:a}}const sS={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;bk(r,"prod");const o=r.shape.length,l=ee(i,r.shape),u=gl(l,o);let c=l,h=r;const d=[];null!=u&&(h=fv({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=bl(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=nS(h.shape,h.dtype,p,c);let b=g;return a&&(b=pl(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}};function rS(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function iS(e,t,n,s,r,i,a,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=xe(s,t.length,he(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}(i,a,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,s){const r=[];let i=0;const a=t.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,s);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let s=0;s<e.length;++s){let a=e[s],l=e[s]+1;for(let e=0;e<n.length;++e){const s=n[e],r=e+t.length-1;if(r>=0){const e=o[r],t=e[e.length-1]-s[a];for(let e=a;e<l;++e)o[r].push(s[e+1]+t)}a=s[a],l=s[l]}l!==a&&(r.push([a,l]),i+=l-a)}return{outSplits:o,valueSlices:r,numValues:i}}(i,a,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const s=se("int32",e[n].length);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(u),p=function(e,t,n,s,r){const i=t.slice();i[0]=r;const a=se(n,K(i)),o=e.length;return function(e,t,n,s,r,i){const a=rS(t,2)[1],o=rS(i,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<s;++t)r[l*o+t]=e[n*a+t];++l}}(e,t,s,0===o?0:o/t[0],a,i),[a,i]}(n,s,r,c,h);return[d,p[0],p[1]]}const aS={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=iS(l,u,c,i.shape,i.dtype,h,a.shape),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}},oS=2147483647;function lS(e,t,n,s,r,i,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===r.length,u=0===a.length,c=[];o||c.push(t[0]),l||c.push(r[0]),u||c.push(a[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=se("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],r=l?s[0]:s[t],a=u?i[0]:i[t];if(0===a)throw new Error("Requires delta != 0");let c;if(a>0&&r<n||a<0&&r>n)c=0;else if(c=Math.ceil(Math.abs((r-n)/a)),c>oS)throw new Error(`Requires ((limit - start) / delta) <= ${oS}`);d[t+1]=d[t]+c}const p=se(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let s=o?e[0]:e[t];const r=u?i[0]:i[t];for(let e=0;e<n;++e)p[f++]=s,s+=r}return[d,p]}const uS={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=lS(a,s.shape,s.dtype,o,r.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}};var cS=fc;class hS{constructor(e,t,n,s,r,i,a,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=mc(u),this.raggedRank=bc(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===cS.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===cS.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case cS.VALUE_ROWIDS:return hS.getMaxWidthValueRowID(t);case cS.ROW_SPLITS:return hS.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${cS[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let i=1;i<t;++i){const t=e[i];t!==s&&(s=t,r=Math.max(i-n,r),n=i)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return pS(e,n)}calculateOutputSize(e){const t=this.valuesShape;yc(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=gc(this.raggedRank,n,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let i=0;for(let e=0;e<s;++e,i+=t)r.push(i);for(let t=s;t<e;++t)r.push(-1);return V(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,i=[];for(let a=0;a<r-1;++a){const r=e[a+1]-e[a];let o=Math.min(s,r),l=t[a];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<r-o;++e)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,i=[];if(0===r)return[];let a=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++a,a<s?l+=n:l=-1);else{if(a=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case cS.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case cS.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${cS[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case cS.FIRST_DIM_SIZE:return e[0];case cS.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case cS.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${cS[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const s=pS(t,!1),r=se(this.valuesDType,K(s));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)i=this.calculateOutputIndex(e-1,i,n[e],t[e]);this.setOutput(this.raggedRank,i,r,s)}return[s,r]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,i=n;let a=s.slice();a=a.slice(e+1);const o=K(a),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;fi((()=>{const t=To(u,e),n=Ao(t,a);u=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=l;++e){let s=e<l?t[e]:-1;if(s!==d){if(h<d){const e=r.subarray(c*o);dS(i.subarray(h*o),e,(d-h)*o)}if(e>=l){const e=n.length;s=Math.floor(e/o)}if(s>d)if(1===this.defaultValue.length)i.subarray(d*o,s*o).fill(this.defaultValue[0]),d=s;else for(;s>d;)dS(i.slice(d*o),u,o),++d;s<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function dS(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function pS(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function fS(e,t,n,s,r,i,a,o,l,u){return new hS(e,t,n,s,r,i,a,o,l,u).compute()}const gS={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,g]=fS(u,r.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}};function mS(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return ge(0,s);const r=ge(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const bS={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:i,step:a}=n,o=mS(s,r,a,i);return t.makeTensorInfo([o.length],i,o)}},yS=vk(Pn,(e=>1/e)),xS={kernelName:Pn,backendName:"cpu",kernelFunc:yS},kS={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s;bk(r,"resizeBilinear");const l=he(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(K([h,u,c,f])),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],y=[i&&u>1?u-1:u,i&&c>1?c-1:c];let x=0;const k=b[0]/y[0],v=b[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=a?k*(t+.5)-.5:k*t;const s=Math.max(0,Math.floor(n)),r=n-s,i=Math.min(d-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+i*l[1];for(let e=0;e<c;e++){let t;t=a?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,i=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+i*l[2],b=u+i*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],i=t+(g[d+e]-t)*s,a=i+(n+(g[b+e]-n)*s-i)*r;m[x++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}},vS={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s;bk([i,r],"resizeBilinearGrad");const o=he(r.shape),[l,u,c,h]=r.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),g=[a&&d>1?u-1:u,a&&p>1?c-1:c],m=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=g[0]/m[0],y=g[1]/m[1],x=n.data.get(i.dataId).values;let k=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),i=t+s*o[1],a=t+r*o[1],l=n-s,d=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,p=i+n*o[2],g=i+s*o[2],m=a+n*o[2],b=a+s*o[2],v=d*u,w=d*r,I=l*u,T=l*r;for(let e=0;e<h;e++){const t=x[k++];f[p+e]+=t*v,f[g+e]+=t*w,f[m+e]+=t*I,f[b+e]+=t*T}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},wS={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s;bk(r,"resizeNearestNeighbor");const l=he(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(h*u*c*f),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],y=[i&&u>1?u-1:u,i&&c>1?c-1:c],x=b[0]/y[0],k=b[1]/y[1];let v=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=a?x*(e+.5):x*e;let s=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=a?k*(e+.5):k*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=g[s+e];m[v++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,m)}},IS={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s;bk([i,r],"resizeNearestNeighborGrad");const o=he(r.shape),l=he(i.shape),[u,c,h,d]=r.shape,[,p,f]=i.shape,g=new Float32Array(u*c*h*d),m=n.data.get(i.dataId).values,b=[a&&p>1?c-1:c,a&&f>1?h-1:h],y=[a&&p>1?p-1:p,a&&f>1?f-1:f],x=b[0]/y[0],k=b[1]/y[1],v=1/x,w=1/k,I=2*Math.ceil(v)+2,T=2*Math.ceil(w)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*v),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const i=n+s*o[2],u=Math.floor(s*w),b=Math.floor(u-T/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const u=i+r;if(u<0||u>=p)continue;const d=t+u*l[1],g=u*x;if(e===Math.min(c-1,a?Math.round(g):Math.floor(g)))for(let e=0;e<T;e++){const t=e+b;if(t<0||t>=f)continue;const r=d+t*l[2],i=t*k;s===Math.min(h-1,a?Math.round(i):Math.floor(i))&&(o+=m[r+n])}}g[i+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}},TS={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s;bk(r,"reverse");const a=r.shape.length,o=ee(i,r.shape);if(0===a)return Sk({inputs:{x:r},backend:n});const l=new Sr(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},SS={kernelName:Os,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:a}=t,o=n,l=ne(s.dtype,K(s.shape)),[u,c,h,d]=s.shape,[p,f]=vc(a,c,h),g=Math.sin(r),m=Math.cos(r),b=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let s=0;s<h;s++){const r=s*d;for(let a=0;a<d;a++){const o=[u,e,s,a],y=o[2],x=o[1];let k=(y-p)*m-(x-f)*g,v=(y-p)*g+(x-f)*m;k=Math.round(k+p),v=Math.round(v+f);let w=i;"number"!=typeof i&&(w=3===a?255:i[a]),k>=0&&k<h&&v>=0&&v<c&&(w=b[t+v*(h*d)+k*d+a]),l[t+n+r+a]=w}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},CS=vk(Kn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),NS={kernelName:Kn,backendName:"cpu",kernelFunc:CS},$S=kk((e=>1/Math.sqrt(e))),ES=wk(qn,$S),RS={kernelName:qn,backendName:"cpu",kernelFunc:ES};function AS(e,t,n,s,r,i,a,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return Zi(n,t.dtype);const p=l instanceof Sr?l:Zi(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<i;e++){const i=[];let l=0;for(let t=0;t<a;t++){const n=h[e*a+t];i.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[e*r+n]:p.values[l*r+n]=0===t.rank?d[0]:d[e*r+n]}return p}const DS={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rc(0,r,a),d=AS(n.bufferSync(r),n.bufferSync(i),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}};function _S(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function FS(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}const OS={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:a}=s,o=function(e,t,n,s,r,i){const a=se("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*r;for(let e=0;e<r;++e)a[l+e]="left"===i?_S(n,t[e+l]):FS(n,t[e+l])}return a}(n.data.get(r.dataId).values,n.data.get(i.dataId).values,r.shape[0],r.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",o)}},LS={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t;bk([s,r,i],"select");const a=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=Pr(r.dtype,i.dtype),h=ge(K(r.shape),c);let d=0;const p=0===a||a>1||1===r.shape.length?1:K(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(r.shape,c,h)}},MS=Ac,PS=Dc,zS=vk(Qn,(e=>e>=0?PS*e:MS*(Math.exp(e)-1))),BS={kernelName:Qn,backendName:"cpu",kernelFunc:zS},WS=vk(ss,(e=>e<0?-1:e>0?1:0)),US={kernelName:ss,backendName:"cpu",kernelFunc:WS},GS=vk(ts,(e=>Math.sin(e))),VS={kernelName:ts,backendName:"cpu",kernelFunc:GS},HS=vk(ns,(e=>Math.sinh(e))),jS={kernelName:ns,backendName:"cpu",kernelFunc:HS},KS=Math.log(1.1920928955078125e-7)+2,qS=vk(is,(e=>{const t=e>-KS,n=e<KS,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),XS={kernelName:is,backendName:"cpu",kernelFunc:qS},YS={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:a}=s;bk([r],"spaceToBatchND");const o=K(i),l=[[0,0]];l.push(...a);for(let e=1+i.length;e<r.shape.length;++e)l.push([0,0]);const u=ZT.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=wc(u.shape,i,o,!1),h=Ic(c.length,i.length,!1),d=Tc(u.shape,i,o,!1),p=tv({inputs:{x:u},backend:n,attrs:{shape:c}}),f=fv({inputs:{x:p},backend:n,attrs:{perm:h}}),g=tv({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};function JS(e,t,n,s,r,i,a){const o=t[0],l=i[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(rh(o));return[se(n,0),[0,h],se(r,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(ih(t,n));if(n>=l)throw new Error(ah(t,n,l));++f[n],d=d&&n>=p,p=n}let g=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,g=g&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(g&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],i=se(n,t*h),d=se(r,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=p[n],a=(0===n?0:f[n-1])+r;p[n]++;for(let n=0;n<h;++n)i[a*h+n]=e[t*h+n];d[a]=s[t],c[t]=a}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=a}return[i,[t,h],d,u,c]}}const ZS={kernelName:hs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,g]=JS(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}};function QS(e,t,n,s,r){const i=K(s),a=t[0],o=r.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(oh(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(lh(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/u);if(u*e!==i)throw new Error(ch(s,l));l[c]=e}if(K(l)!==i)throw new Error(hh(s,l));const h=s.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*s[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=se(n,a*o);for(let t=0;t<a;++t){let n=0;for(let s=0;s<h;++s)n+=e[t*h+s]*d[s];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[a,o],l]}const eC={kernelName:ds,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,c,h]=QS(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};function tC(e,t,n,s,r,i=!1,a=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=se(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(a),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,g=0,m=r[p];for(;;){let t=0;if(f<o){if(t=r[f],m===t){++f;continue}if(m>=t)throw new Error("segment ids are not increasing")}if(m<0||m>=c)throw new Error(fh(m,c));m>g&&d.fill(a,g*u,m*u);for(let t=p;t<f;++t){const n=s[t];if(n<0||n>=l[0])throw new Error(gh(t,s[t],l[0]));for(let t=0;t<u;t++)d[m*u+t]+=e[n*u+t]}if(i)for(let e=0;e<u;e++)d[m*u+e]/=f-p;if(p=f,++f,g=m+1,m=t,f>o)break}return g<c&&d.fill(a,g*u,c*u),[d,h]}const nC={kernelName:ps,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=tC(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},sC={kernelName:fs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=tC(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},rC={kernelName:gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:a}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Rc(0,r,o),p=!1,f=n.bufferSync(r);let g;switch(i.dtype){case"bool":g=AS(f,n.bufferSync(i),o,d,c,u,l,h,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":case"int32":g=AS(f,n.bufferSync(i),o,d,c,u,l,h,n.data.get(a.dataId).values[0],p);break;case"string":g=AS(f,n.bufferSync(i),o,d,c,u,l,h,fr(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}},iC={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:a}=s,o=ee(a,r.shape)[0],l=sh(r,i,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=Bv({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},aC=kk((e=>Math.sqrt(e))),oC=vk(as,(e=>Math.sqrt(e))),lC={kernelName:as,backendName:"cpu",kernelFunc:oC},uC={kernelName:bs,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;bk(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];i[e]=t*t}return{dataId:s.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},cC=Ek(((e,t)=>{const n=e-t;return n*n})),hC=Xk(ms,cC),dC={kernelName:ms,backendName:"cpu",kernelFunc:hC},pC=kk(((e,t)=>{const{pattern:n,replaceGlobal:s,rewrite:r}=t;return e.replace(new RegExp(n,s?"g":""),r)})),fC={kernelName:ys,backendName:"cpu",kernelFunc:wk(ys,pC)},gC=vk(Fs,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),mC={kernelName:Fs,backendName:"cpu",kernelFunc:gC};function bC(e,t,n,s){const r=Zi(e,t.dtype);for(let e=0;e<r.size;e++){const i=r.indexToLoc(e),a=new Array(i.length);for(let e=0;e<a.length;e++)a[e]=i[e]*n[e]+s[e];r.set(t.get(...a),...i)}return r}const yC={kernelName:xs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;bk(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:y,end:x,strides:k}=so(r.shape,i,a,o,l,u,c,h,d);let v;if(g)v=tv({inputs:{x:r},backend:n,attrs:{shape:f}});else if(m||b){V(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Va(y,x,k),t=Bv({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});v=tv({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=bC(p,n.bufferSync(r),k,y);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class xC{constructor(e,t,n,s,r,i){this.separator=pr(e),this.nGramWidths=t,this.leftPad=pr(n),this.rightPad=pr(s),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,i){for(let a=0;a<r;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(r-(a+1))),c=i-(l+u),h=t+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[s+a]=new Uint8Array(d);const p=n[s+a];let f=0;const g=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[h+t]),g(this.separator);if(c>0){g(e[h+c-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,i=se("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),i[e]=i[e-1]+s}const a=new Array(i[r]);for(let n=0;n<r;++n){const s=t[n];let r=i[n];if(this.nGramWidths.forEach((i=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,i);this.createNGrams(e,s,a,r,l,i),r+=l})),this.preserveShort&&r===i[n]){const i=t[n+1]-t[n];if(0===i)continue;const o=i+2*this.padWidth,l=1;this.createNGrams(e,s,a,r,l,o)}}return[a,i]}}function kC(e,t,n,s,r,i,a,o){return new xC(n,s,r,i,a,o).compute(e,t)}const vC={kernelName:ks,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=kC(d,p,r,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};function wC(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let i=e.indexOf(r);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||s.push(t),i=(e=e.subarray(i+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(r,i);n&&0===t.length||s.push(t),r=i+1}}function IC(e,t,n){const s=e.length,r=[];let i=0,a=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;wC(e[l],t,n,r);const u=r.length-s;o[l]=u,i+=u,a=Math.max(a,u)}const l=se("int32",2*i),u=new Array(i),c=[s,a];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,c]}const TC={kernelName:vs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=IC(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function SC(e,t){const n=se("int32",e.length);for(let s=0;s<e.length;++s)n[s]=ur(e[s]).modulo(t).getLowBitsUnsigned();return n}const CC={kernelName:ws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=SC(n.data.get(i.dataId).values,r);return n.makeTensorInfo(i.shape,"int32",a)}},NC=vk(Ts,(e=>Math.tan(e))),$C={kernelName:Ts,backendName:"cpu",kernelFunc:NC},EC=vk(Ss,(e=>Math.tanh(e))),RC={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:s,indices:r,updates:i}=t,{sliceRank:a,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=Rc(0,r,s.shape),h=n.bufferSync(r),d=n.bufferSync(i),p=n.bufferSync(s),f=AS(h,d,s.shape,c,l,o,a,u,p,!1);return n.makeTensorInfo(s.shape,f.dtype,f.values)}};function AC(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=Zi(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const i=e.locToIndex(r);s.values[t]=e.values[i]}return s}const DC={kernelName:Cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;bk(r,"tile");const a=AC(n.bufferSync(r),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},_C=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function FC(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,i=t-n+1,a=Math.log(r),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(r-o)/r)*Math.sign(i-r/2);FC(e,t,Math.max(n,Math.floor(t-i*o/r+l)),Math.min(s,Math.floor(t+(r-i)*o/r+l)))}const r=e[t];let i=n,a=s;for(G(e,n,t),_C(e[s],r)>0&&G(e,n,s);i<a;){for(G(e,i,a),i++,a--;_C(e[i],r)<0;)i+=1;for(;_C(e[a],r)>0;)a-=1}0===_C(e[n],r)?G(e,n,a):(a+=1,G(e,a,s)),a<=t&&(n=a+1),t<=a&&(s=a-1)}}function OC(e,t,n,s,r){const i=t[t.length-1],[a,o]=[e.length/i,i],l=ne(n,a*s),u=ne("int32",a*s);for(let t=0;t<a;t++){const n=t*o,i=e.subarray(n,n+o);let a=new Array(i.length);i.forEach(((e,t)=>a[t]={value:e,index:t})),s<a.length&&(FC(a,s),a=a.slice(0,s)),r&&a.sort(_C);const c=t*s,h=l.subarray(c,c+s),d=u.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=a[e].value,d[e]=a[e].index}const c=t.slice();return c[c.length-1]=s,[Zi(c,n,l),Zi(c,"int32",u)]}const LC={kernelName:Ns,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:a}=s;bk(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=OC(o,r.shape,r.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},MC={kernelName:$s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=he(r.shape),y=b[0],x=b[1],k=b[2],v=he(m),w=v[0],I=v[1],T=v[2],S=ne(r.dtype,K(m));S.fill(l);const C=s.data.get(r.dataId).values,N=s.data.get(i.dataId).values;for(let e=0;e<c;++e){const t=1===i.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let s=0;s<g;++s)for(let r=0;r<p;++r){let i;const u=t[6]*s+t[7]*n+1;if(0===u)continue;const c=(t[0]*s+t[1]*n+t[2])/u,p=(t[3]*s+t[4]*n+t[5])/u,f=PC(c,d,o),g=PC(p,h,o);switch(a){case"nearest":i=BC(C,h,d,y,x,k,e,g,f,r,l);break;case"bilinear":i=WC(C,h,d,y,x,k,e,g,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}S[e*w+n*I+s*T+r]=i}return s.makeTensorInfo(m,r.dtype,S)}return{dataId:s.write(S,m,r.dtype),shape:r.shape,dtype:r.dtype}}};function PC(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return W(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return W(0,n,t-1)}(e,t);case"nearest":return function(e,t){return W(0,e,t-1)}(e,t);default:return e}}function zC(e,t,n,s,r,i,a,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[a*s+o*r+l*i+u]:c}function BC(e,t,n,s,r,i,a,o,l,u,c){return zC(e,t,n,s,r,i,a,Math.round(o),Math.round(l),u,c)}function WC(e,t,n,s,r,i,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*zC(e,t,n,s,r,i,a,h,d,u,c)+(l-d)*zC(e,t,n,s,r,i,a,h,f,u,c))+(o-h)*((f-l)*zC(e,t,n,s,r,i,a,p,d,u,c)+(l-d)*zC(e,t,n,s,r,i,a,p,f,u,c))}function UC(e,t,n,s){const r=ee(t,n)[0],i=[1,n[0],1];for(let e=0;e<r;e++)i[0]*=n[e];i[1]=n[r];for(let e=r+1;e<n.length;e++)i[2]*=n[e];const a=new Map,o=new Int32Array(n[r]),l=new Sr(i,s,e),u=[],c=1===i[0]&&1===i[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)e.push(l.get(n,t,s));n=e.join(",")}const s=a.get(n);if(null!=s)o[t]=s;else{const e=a.size;a.set(n,e),o[t]=e,u.push(t)}}const h=i.slice();h[1]=a.size;const d=new Sr(h,s);u.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const GC={kernelName:Rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;bk(i,"unique");const a=s.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=UC(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},VC={kernelName:As,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r.shape.length,o=r.shape[i],l=new Array(a-1);let u=0;for(let e=0;e<a;e++)e!==i&&(l[u++]=r.shape[e]);const c=new Array(a).fill(0),h=r.shape.slice();h[i]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[i]=e;const t=Bv({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[e]=tv({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},HC={kernelName:Ds,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:a}=s;bk(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-i.shape.length;let c=i;for(let e=0;e<u;++e){const t=Qw({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<a;++e){const t=cr(e,"int32"),s=n.makeTensorInfo([],"int32",t),i=Bw({inputs:{a:s,b:c},backend:n}),a=Kk({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=_w({inputs:{a,b:r},backend:n}),h=Ow({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(i),l.push(a),l.push(u),l.push(h)}const h=YT({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},jC=[iv,ov,uv,hv,ev,dv,mv,bv,yv,xv,vv,Iv,Sv,$v,Rv,Fv,Ov,Lv,Mv,rv,Pv,Uv,Hv,Kv,qv,qk,Jv,Qv,Uk,ew,iw,ow,lw,uw,cw,hw,dw,fw,mw,bw,yw,xw,kw,vw,Iw,Tw,Sw,Cw,Nw,$w,Ew,Rw,Mw,Tk,Pw,Ww,Xw,Zw,eI,sI,fI,mI,bI,kI,II,TI,SI,NI,EI,DI,OI,Ck,LI,sw,PI,BI,UI,$k,HI,qI,YI,QI,tT,rT,aT,uT,cT,hT,fT,bT,yT,xT,kT,vT,wT,IT,TT,NT,$T,AT,FT,Fw,LT,PT,BT,UT,HT,jT,XT,JT,ZT,tS,Dk,sS,aS,uS,gS,bS,Hk,aI,xS,Fk,Lk,nv,kS,vS,wS,IS,TS,SS,NS,RS,DS,OS,LS,BS,zk,US,VS,jS,Wv,_T,XS,YS,ZS,eC,nC,sC,rC,iC,lC,uC,dC,fC,mC,yC,vC,TC,CC,cI,Lw,$C,{kernelName:Ss,backendName:"cpu",kernelFunc:EC},RC,DC,LC,MC,gv,GC,VC,HC,qT];for(const e of jC)js(e);const KC={},qC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function XC(e,t){if(!(e in KC)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Te().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete KC[e]}),!1),Te().getBool("SOFTWARE_WEBGL_ENABLED")&&(qC.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",qC)||n.getContext("experimental-webgl",qC):n.getContext("webgl2",qC)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;KC[e]=n}const n=KC[e];return null==n||n.isContextLost()?(delete KC[e],XC(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),KC[e])}var YC,JC,ZC;function QC(e,t){return[t,e]}function eN(e){const t=K(e);return Y(Math.ceil(t/4))}function tN(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function nN(e,t){const n=e;let s,r,i,a,o,l,u,c,h,d;return 2===Te().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,i=e.RGBA,a=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function sN(e,t){const n=t();return Te().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function rN(e){return!!(Te().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function iN(e,t){return fN(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(YC||(YC={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(JC||(JC={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ZC||(ZC={}));const aN=/ERROR: [0-9]+:([0-9]+):/g;function oN(e,t){const n=aN.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),i=r.length.toString().length+2,a=r.map(((e,t)=>J((t+1).toString(),i)+e));let o=0;for(let e=0;e<a.length;e++)o=Math.max(a[e].length,o);const l=a.slice(0,s-1),u=a.slice(s-1,s),c=a.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${J(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function lN(e,t){if(sN(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function uN(e,t,n,s,r,i,a){const o=e.getAttribLocation(t,n);return-1!==o&&(sN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),sN(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,i,a))),sN(e,(()=>e.enableVertexAttribArray(o))),!0)}function cN(e,t,n,s){sN(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),sN(e,(()=>e.activeTexture(e.TEXTURE0+n))),sN(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),sN(e,(()=>e.uniform1i(n,s)))}function hN(e,t,n){sN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),sN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function dN(e,t){sN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),sN(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function pN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function fN(e,t,n){const s=sN(e,(()=>t()));if(null==s)throw new Error(n);return s}function gN(e,t=2){return K(e.slice(0,e.length-t))}function mN(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function bN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[gN(e),...mN(e)]),t}function yN(e){return e%2==0}function xN(e,t){if(q(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],s=t[t.length-1];if(n===s)return!0;if(yN(n)&&yN(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&yN(e[0])&&yN(t[0])}let kN,vN;function wN(e,t){return null!=e.getExtension(t)}function IN(e){try{if(null!=XC(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function TN(e){const t=nN(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function SN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&V("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const CN=Te();function NN(){let e,t,n,s,r,i,a,o,l,u;return 2===Te().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",o=Te().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function $N(e,t,n="index"){const s=he(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function EN(e,t,n="index"){const s=he(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function RN(e){const t=he(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}CN.registerFlag("HAS_WEBGL",(()=>CN.getNumber("WEBGL_VERSION")>0)),CN.registerFlag("WEBGL_VERSION",(()=>IN(2)?2:IN(1)?1:0)),CN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),CN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===CN.get("WEBGL_VERSION"))),CN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),CN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),CN.registerFlag("WEBGL_PACK",(()=>CN.getBool("HAS_WEBGL"))),CN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_PACK_CLIP",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_PACK_REDUCE",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_CONV_IM2COL",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>CN.getBool("WEBGL_PACK"))),CN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==kN){const t=XC(e);kN=t.getParameter(t.MAX_TEXTURE_SIZE)}return kN}(CN.getNumber("WEBGL_VERSION")))),CN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==vN){const t=XC(e);vN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,vN)}(CN.getNumber("WEBGL_VERSION")))),CN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=CN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=XC(e);return t=wN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:wN(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),CN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>CN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Zr())),CN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=XC(e);if(1===e){if(!wN(t,"OES_texture_float"))return!1}else if(!wN(t,"EXT_color_buffer_float"))return!1;return TN(t)}(CN.getNumber("WEBGL_VERSION")))),CN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!CN.getBool("WEBGL_FORCE_F16_TEXTURES")&&CN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),CN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=XC(e);if(1!==e){if(wN(t,"EXT_color_buffer_float"))return TN(t);const e="EXT_color_buffer_half_float";if(wN(t,e)){const n=t.getExtension(e);return function(e,t){const n=nN(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),i}(t,n)}return!1}return!!wN(t,"OES_texture_float")&&!!wN(t,"WEBGL_color_buffer_float")&&TN(t)}(CN.getNumber("WEBGL_VERSION")))),CN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=CN.getNumber("WEBGL_VERSION"))&&null!=XC(e).fenceSync;var e})),CN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>CN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),CN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),CN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Zr()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),CN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),CN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),CN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),CN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),CN.registerFlag("WEBGL_EXP_CONV",(()=>!1)),CN.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>CN.getBool("IS_TEST"))),CN.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),CN.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),CN.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),CN.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const AN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:DN}=n;function _N(e,t,n){const s=[];if(e.forEach((e=>{const t=K(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=GN(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),i=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?ON(e,s):FN(e,s);const i=e.shapeInfo.logicalShape,a=t.logicalShape;return i.length<=a.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=DN(e.shapeInfo.logicalShape,t.logicalShape),l=UN(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===K(e.shapeInfo.logicalShape),g=1===K(t.logicalShape);if(1!==i||f||g){if(f&&!g)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&q(a,i))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=UN(l),c=DN(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=t.texShape,o=NN(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${LN}\n    ${MN}\n    ${PN}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(q(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),i=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2);let a=i,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],o=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,a,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return q(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${EN(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=$N(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${EN(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=$N(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=$N(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=$N(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,a,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=zN),[h,l,c,r,u,i,n.userCode].join("\n")}function FN(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,i]=e.shapeInfo.texShape;if(1===r&&1===i)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=BN(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${WN(e)}\n      }\n    `;const r=e.shapeInfo.texShape,i=r[0],a=r[1];if(1===a&&1===i)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=BN(n);return 1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape;if(null!=i&&q(n,i)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=i[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=te(n),l=a;if(l.length<n.length){const n=["row","col"];return`\n      ${FN(VN(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${HN(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${WN(e)}\n      }\n    `;const u=i[0],c=i[1],h=BN(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=te(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${FN(VN(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${HN(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${WN(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=BN(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=te(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${FN(VN(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${HN(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${WN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=BN(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],i=t[3]*r,a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:u}=te(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${FN(VN(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${HN(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${r})) +\n          depth3;\n        ${WN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${r} + depth3 + ${BN(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=te(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${FN(VN(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${HN(t,i)});\n      }\n    `}const a=t[5],o=t[4]*a,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${WN(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${BN(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function ON(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${NN().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,i=NN();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,a=i[0],o=i[1],l=NN();if(null!=i&&q(n,i))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const s=[1,2],i=["b","row","col"];return`\n        ${ON(VN(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${HN(i,s)});\n        }\n      `}const o=NN();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=NN();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,a=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<a-1;e++)p=`int b${e}, `+p,d*=i[a-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const LN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",MN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",PN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",zN="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function BN(e){return`offset${e}`}function WN(e){const t=e.name,n=K(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function UN(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function GN(e,t,n){const{newShape:s,keptDims:r}=te(t),i=t.length,a=e&&3===i&&1===t[0],o=a?t.slice(1):s,l=!e&&i>1&&!q(t,n)&&s.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function VN(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function HN(e,t){return t.map((t=>e[t])).join(", ")}function jN(e,t,n){const s=[],r=[];let i,a,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Te().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const r of t.variableNames){const i={name:r,uniform:e.getUniformLocation(n,r,c),offset:e.getUniformLocation(n,`offset${r}`,c)};t.enableShapeUniforms&&(i.shape=e.getUniformLocation(n,`${r}Shape`,c),i.texShape=e.getUniformLocation(n,`${r}TexShape`,c)),s.push(i)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),a=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const s of t.customUniforms)r.push(e.getUniformLocation(n,s.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:a}}function KN(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],i=r.shape;if(!q(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&r.isUniform)return;const a=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!q(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function qN(e){return Te().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class XN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=YC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=NN();this.outputShape=e,this.enableShapeUniforms=qN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?EN(["r","c","d"],e):$N(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class YN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=YC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=NN();this.outputShape=e,this.enableShapeUniforms=qN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?EN(["r","c","d"],e):$N(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class JN{constructor(e){this.variableNames=["A"],this.outTexUsage=JC.DOWNLOAD;const t=NN();this.outputShape=e,this.userCode=`\n      ${AN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ZN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=JC.DOWNLOAD;const t=NN();this.outputShape=e,this.userCode=`\n      ${AN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const QN={R:0,G:1,B:2,A:3};class e${constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=NN();this.outputShape=e,this.enableShapeUniforms=qN(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let e=0;e<n.length;e++){const t=n[e];i+=`\n          if(offset == ${e}) {\n            result = values[${QN[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":RN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${i}\n        }\n        ${s.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class t${constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=NN();this.outputShape=e,this.enableShapeUniforms=qN(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const i=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":RN(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function n$(e,t,n,s,r,i){!function(e,t){const n=Te().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const a=function(e){return fN(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return sN(e,(()=>e.bindTexture(o,a))),sN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),sN(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),sN(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),sN(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Te().getNumber("WEBGL_VERSION")?sN(e,(()=>e.texImage2D(o,0,s,t,n,0,r,i,null))):sN(e,(()=>e.texStorage2D(o,1,s,t,n))),sN(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:a,texShape:[n,t]}}function s$(e){return e.internalFormatFloat}function r$(e){return e.internalFormatHalfFloat}function i$(e){return e.downloadTextureFormat}function a$(e){return e.internalFormatPackedFloat}function o$(e){return e.internalFormatPackedHalfFloat}class l${constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Te().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){KC[e]=t}(t,e)):this.gl=XC(t),e=this.gl,2===Te().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>sN(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>sN(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>sN(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>sN(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>sN(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>sN(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>sN(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>sN(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Te().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=iN(this.gl,e),wN(this.gl,t))this.textureHalfFloatExtension=iN(this.gl,t);else if(Te().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),wN(this.gl,s))this.colorBufferHalfFloatExtension=iN(this.gl,s);else if(Te().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",wN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!wN(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=fN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return sN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),sN(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=fN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return sN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),sN(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return fN(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=nN(this.gl,this.textureHalfFloatExtension)}get debug(){return Te().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;sN(e,(()=>e.finish())),sN(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),sN(e,(()=>e.deleteFramebuffer(this.framebuffer))),sN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),sN(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),sN(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,i]=QC(t,n);return n$(e,r,i,s$(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,i]=QC(t,n);return n$(e,r,i,r$(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,i]=QC(t,n);return n$(e,r,i,i$(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){sN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Te().getNumber("WEBGL_VERSION")?sN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):sN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Te().getNumber("WEBGL_VERSION")?sN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):sN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),sN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,i){let a,o,l;sN(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(a=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(a=new Float32Array(n*s*4),o=e.FLOAT,l=i.internalFormatPackedFloat),a.set(r),2===Te().getNumber("WEBGL_VERSION")?sN(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,a))):sN(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,a))),sN(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,i]=tN(t,n);return n$(e,r,i,o$(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,i]=tN(t,n);return n$(e,r,i,a$(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(dN(this.gl,this.framebuffer),this.outputTexture=null),sN(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,i]=QC(t,n),a=new Uint8Array(t*n*4);return sN(e,(()=>e.readPixels(0,0,r,i,s.downloadTextureFormat,e.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,i){return function(e,t,n,s,r,i,a){const o=e,l=new Float32Array(function(e,t){const[n,s]=tN(e,t);return n*s*4}(i,a));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,l),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n){const s=e.createBuffer();sN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const r=16*t*n;return sN(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),sN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),sN(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Te().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return sN(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=NN();return function(e,t){const n=fN(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(sN(e,(()=>e.shaderSource(n,t))),sN(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return fN(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);sN(t,(()=>t.attachShader(n,this.vertexShader))),sN(t,(()=>t.attachShader(n,e))),function(e,t){if(sN(e,(()=>e.linkProgram(t))),!Te().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const s=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&lN(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;sN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){sN(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),uN(e,t,"clipSpacePos",n,3,20,0)&&uN(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(sN(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&lN(this.gl,this.program),sN(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return fN(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),sN(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),cN(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=tN(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&lN(this.gl,this.program),pN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}sN(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),sN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=iN(this.gl,2===Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Z((()=>this.disposed||this.isQueryAvailable(e,Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Te().platform&&(n=Te().platform.setTimeoutCustom.bind(Te().platform)),Z((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),hN(this.gl,e,this.framebuffer),this.debug&&pN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(hN(this.gl,this.outputTexture,this.framebuffer),this.debug&&pN(this.gl)):dN(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;hN(s,e,this.framebuffer),this.debug&&pN(s),this.outputTexture=e,sN(s,(()=>s.viewport(0,0,t,n))),sN(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),sN(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:u$,XI:c$,Nk:h$,f6:d$,ct:p$,YG:f$,hH:g$,z3:m$,sG:b$,uM:y$,vS:x$,qB:k$,GG:v$,rq:w$,lg:I$,WR:T$,cu:S$,GE:C$,px:N$,jC:$$,He:E$,hE:R$,BF:A$,Dk:D$,cl:_$,_B:F$,ub:O$,_f:L$,Ku:M$,qy:P$,Zy:z$,bu:B$,zv:W$,dH:U$,HS:G$,yH:V$,l3:H$,z9:j$,x6:K$,_m:q$,eW:X$,GK:Y$,SP:J$,yr:Z$,dl:Q$,Dw:eE,xT:tE,_X:nE,wz:sE}=s;function rE(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function iE(e,t){return 1===t?[e]:rE(e,t)}class aE{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=qN(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=iE("rc",this.rank),t=UN(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class oE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=qN(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):$N(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":RN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class lE{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const s=cE(t,n),r=hE(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=uE(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let a;return s===ZC.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===ZC.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===ZC.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===ZC.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===ZC.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=cE(n,s),i=hE(t,r,s);i in this.freeTextures||(this.freeTextures[i]=[]);const a=uE(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=Te().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function uE(e,t,n,s,r){const i=function(e,t){switch(e){case ZC.PACKED_2X2_FLOAT32:return a$(t);case ZC.PACKED_2X2_FLOAT16:return o$(t);case ZC.UNPACKED_FLOAT32:return s$(t);case ZC.UNPACKED_FLOAT16:return r$(t);case ZC.PACKED_4X1_UNSIGNED_BYTE:return i$(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let a;if(r){const[t,n]=tN(e[0],e[1]);a=t*n}else{const[t,n]=QC(e[0],e[1]);a=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return a*o}function cE(e,t){if(e===JC.UPLOAD)return ZC.PACKED_2X2_FLOAT32;if(e===JC.RENDER||null==e)return function(e){return Te().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?ZC.PACKED_2X2_FLOAT32:ZC.UNPACKED_FLOAT32:e?ZC.PACKED_2X2_FLOAT16:ZC.UNPACKED_FLOAT16}(t);if(e===JC.DOWNLOAD||e===JC.PIXELS)return ZC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function hE(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class dE{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=qN(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const pE="if (isnan(x)) return x;",fE="return abs(x);",gE=pE+"\n  return (x < 0.0) ? 0.0 : x;\n",mE=pE+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",bE="return x;";class yE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=qN(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class xE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=qN(this.outputShape.length);const t=e.length,n=iE("rc",t),s=UN(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const kE=vh,vE={},wE=Te().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class IE extends P{nextDataId(){return IE.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Te().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof l$)t=e;else{const n=XC(Te().getNumber("WEBGL_VERSION"),e);t=new l$(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=XC(Te().getNumber("WEBGL_VERSION"));t=new l$(e),this.binaryCache=((n=Te().getNumber("WEBGL_VERSION"))in vE||(vE[n]={}),vE[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new lE(this.gpgpu),this.numMBBeforeWarning=null==Te().global.screen?1024:Te().global.screen.height*Te().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new M(this,di())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,r,i){const a=this.makeTensorInfo(t,n),o=this.texData.get(a.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[s,r]},o.texShape=[s,r];const l=bN(t),u=new e$(l,!1,i),c=this.runWebGLProgram(u,[a],n,[[s,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(a),c.dataId}write(e,t,n){if((Te().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Te().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:JC.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,r){if(Te().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:JC.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:i,shape:a,isPacked:o}=t;if(null!=i){let t;t=o?new yE(a,bE):new dE(a,bE);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=dr()),c="complex64"===s?zc(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=dr()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:i,complexTensorInfos:a,isPacked:o}=t;if(null!=r){let t;t=o?new yE(s,bE):new dE(s,bE);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Te().getBool("DEBUG")&&!Te().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Te().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&Te().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...eN(s))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=zc(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=K(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;sN(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&di().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:i,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new yE(r,bE):new dE(r,bE);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:a}],a),i=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),i}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=di().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>fr(e)));return Zi(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Zi(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!rN(n)){if(Te().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=K(t);if(Te().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...eN(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),i}const i=Te().getBool("WEBGL_PACK")&&!0===s,a=i?bN(t):t,o=i?new ZN(a):new JN(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=mr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=mr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);a.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),a.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:dr(),endMs:null}}endTimer(e){return Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=dr(),e)}async getQueryTime(e){if(Te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=wE){return Te().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&K(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){zs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return kE(e.shape,t)}packedUnaryOp(e,t,n){const s=new yE(e.shape,t),r=this.compileAndRun(s,[e],n);return di().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=U$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Te().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,fE,e.dtype);const t=new dE(e.shape,fE),n=this.compileAndRun(t,[e]);return di().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&ae(n[0])){const r=n.map((e=>pr(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return di().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new xE(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new aE(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[gN(e.shape),...mN(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[gN(t),...mN(t)],i=new oE(r,n),a=[n],o=this.runWebGLProgram(i,[s],e.dtype,a,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:i}=n;null!=t&&V(K(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const a=bN(r);let o;o=s?new YN(a):new XN(a);const l=[null!=t?t:eN(a)];return{dtype:i,shape:r,dataId:this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:e}],i,l,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,i){const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===YC.DENSE){const t=null!=i?i:eN(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===K(a.shape))return o.values=ne(a.dtype,0),a;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&K(t.shape)<=Te().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!xN(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=GN(e.packedInputs,t.shape,i);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=he(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&q(t.shape,i),f=1===K(t.shape),g=Ia(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&q(i,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;s+=`${d}_${m}_${a?l:""}_${o.length}_${f}_${g}_${p}_${u}_${c}_${h}_${b}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let i=e.constructor.name;return i+="_"+s+"_"+r+`${Te().getNumber("WEBGL_VERSION")}`,i}(e,u,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),i=r.map((e=>e.shapeInfo)),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=_N(r,a,t),l=function(e,t){const n=fN(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(sN(e,(()=>e.shaderSource(n,t))),sN(e,(()=>e.compileShader(n))),Te().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw oN(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return Te().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},jN(e,t,u)))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Te().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,r){t.program.enableShapeUniforms||(KN(t.inShapeInfos,n),KN([t.outShapeInfo],[s]));const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):e.setOutputMatrixTexture(i.texture,a[0],a[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Te().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let s=0;s<n.length;++s){const r=n[s],{uniform:i,offset:a,shape:o,texShape:l}=t.variablesLocations[s];if(o){const{uniformShape:n}=GN(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,r.texData.texShape[0],r.texData.texShape[1]),null!=i)if(r.isUniform)if(K(r.shape)<2)e.gl.uniform1f(i,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=r.texData.slice&&null!=a&&e.gl.uniform1i(a,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,i,s)}const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=he(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let n=0;n<t.program.customUniforms.length;++n){const s=t.program.customUniforms[n],i=t.customUniformLocations[n],a=r[n];if("float"===s.type)e.gl.uniform1fv(i,a);else if("vec2"===s.type)e.gl.uniform2fv(i,a);else if("vec3"===s.type)e.gl.uniform3fv(i,a);else if("vec4"===s.type)e.gl.uniform4fv(i,a);else if("int"===s.type)e.gl.uniform1iv(i,a);else if("ivec2"===s.type)e.gl.uniform2iv(i,a);else if("ivec3"===s.type)e.gl.uniform3iv(i,a);else{if("ivec4"!==s.type)throw Error(`uniform type ${s.type} is not supported yet.`);e.gl.uniform4iv(i,a)}}e.executeProgram()}(this.gpgpu,d,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=Te().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=dr();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Te().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Te().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=fi((()=>{if(!Te().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Te().getBool("DEBUG");Te().set("DEBUG",!1);const t=this.abs(ua(1e-8)).dataSync()[0];if(Te().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:i,usage:a,isPacked:o}=t;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=dr());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Te().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=Te().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&Te().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?U(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=te(e);e=t.newShape}let r=K(e),i=null;e.length<=1&&r<=n?i=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const a=null!=i&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||a)if(t){const t=gN(e);let n=2,s=2;e.length&&([n,s]=mN(e)),r=t*(n/2)*(s/2),i=Y(r).map((e=>2*e))}else i=Y(r);return i}(n,o),t.texShape=c),null!=r){const e=bN(n);let i,a=c[1],h=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([a,h]=tN(c[0],c[1])),i=o?new t$(e,d):new e$(e,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,s),g=this.texData.get(f.dataId);g.usage=d?JC.PIXELS:JC.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,r);const m=[[h,a]],b=!0,y=this.runWebGLProgram(i,[f],s,m,b),x=this.texData.get(y.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Te().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=dr()-u)}else{const e=this.acquireTexture(c,a,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*ie(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await hc(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw oN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:o}=jN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:r,width:i,channels:a}=e,o=di().backend;if(!o.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(s,t,n,r,i,a);return di().makeTensorFromDataId(l,t,n,o)}}IE.nextDataId=0,Qr()&&bi("webgl",(()=>new IE),2);const TE="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class SE{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Sa(t,n),this.enableShapeUniforms=qN(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const CE="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class NE{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Sa(t,n);const r=this.outputShape.length;this.enableShapeUniforms=qN(r);let i="";if(s)if(0===r||1===K(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${UN(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=iE("coords",r);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function $E(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const EE={kernelName:Gt,backendName:"webgl",kernelFunc:$E};function RE(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.makeTensorInfo(s.shape,"complex64"),a=n.texData.get(i.dataId),o=$E({inputs:{x:s},backend:n}),l=$E({inputs:{x:r},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const AE={kernelName:tt,backendName:"webgl",kernelFunc:RE},DE="return (a < 0.) ? b * a : a;",_E="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",FE={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s,a=n.makeTensorInfo([],"float32",cr(i,"float32")),o=Te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new NE(_E,r.shape,a.shape):new SE(DE,r.shape,a.shape),l=n.runWebGLProgram(o,[r,a],"float32");return n.disposeIntermediateTensorInfo(a),l}},OE="return (a < 0.) ? b * a : a;",LE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",ME={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,i=Te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new NE(LE,s.shape,r.shape):new SE(OE,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],"float32")}},PE="if (isnan(x)) return x;";function zE({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:i})=>{const{x:a}=r,o=i,l=s||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.texData.get(a.dataId),t=n(e.values,l);return o.makeTensorInfo(a.shape,l,t)}let u;return u=Te().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new yE(a.shape,t):new dE(a.shape,e),o.runWebGLProgram(u,[a],l)}}function BE({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:s.dataId,dtype:s.dtype,shape:u.shape},a=new SE(e,l.shape,u.shape);return c.runWebGLProgram(a,[r,i],Pr(n.dtype,s.dtype))})),i=RE({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),i}const h=i||Pr(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?xh(e):e,s="string"===l.dtype?xh(t):t,[i,a]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(a,h);return c.texData.get(o.dataId).values=i,o}let d;return d=Te().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new NE(t,l.shape,u.shape,n):new SE(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function WE(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":gE;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":mE;if("prelu"===e)return t?LE:OE;if("leakyrelu"===e)return t?_E:DE;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class UE{constructor(e,t,n,s=!1,r=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=qN(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";a&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,m="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class GE{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Sa(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const VE="return a * b;";function HE(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,i=Pr(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),i=new GE("return areal * breal - aimag * bimag;",s.shape,r.shape),a=new GE("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=RE({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[a,o]=A$(s.shape,r.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=Te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new NE(VE,s.shape,r.shape):new SE(VE,s.shape,r.shape),n.runWebGLProgram(a,[s,r],i)}const jE={kernelName:kn,backendName:"webgl",kernelFunc:HE};function KE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,a=n,o=K(r.shape),l=Q(i,o),u=K(l);V(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(r.dataId);return!c.isPacked||xN(r.shape,l)||null!==c.texture&&xN(c.shape,l)?(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[gN(e.shape),...mN(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[gN(t),...mN(t)],a=new oE(i,s),o=[s],l=n.runWebGLProgram(a,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,a)}const qE={kernelName:Bn,backendName:"webgl",kernelFunc:KE};class XE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=e;this.outputShape=[s,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${X(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class YE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=e;this.outputShape=[s,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function JE(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=kc(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let i=e;for(let a=0;a<r.length;a++){const{inSize:o,windowSize:l,outSize:u}=r[a];let c,h;c="mean"===n?0===a?new XE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new XE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new YE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=i,i=s.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return i}class ZE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=UN(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class QE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=UN(this.rank),r=rE("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=r[e];const a=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function eR(e,t,n){const s=Te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QE(e.shape,t):new ZE(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function tR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;return function(e,t,n,s){const r=t,i=e.shape.length,a=ee(r,e.shape);let o=a;const l=gl(o,i),u=null!=l;let c=e;u&&(c=eR(e,l,s),o=bl(o.length,i)),fl("sum",o,i);const[h,d]=dl(c.shape,o);let p=h;n&&(p=pl(h,a));const f=K(d),g=KE({inputs:{x:c},attrs:{shape:[K(e.shape)/f,f]},backend:s}),m=JE(g,zr(e.dtype),"sum",s),b=KE({inputs:{x:m},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(m),u&&s.disposeIntermediateTensorInfo(c),b}(r,i,a,n)}const nR={kernelName:os,backendName:"webgl",kernelFunc:tR};function sR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:i}=s,a=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[i[e]];let u;if(a.shouldExecuteOnCPU([r])){const e=a.texData.get(r.dataId).values,t=nE(e,r.shape,r.dtype,i,l);u=a.makeTensorInfo(l,r.dtype),a.texData.get(u.dataId).values=t}else u=eR(r,i,a);return u}const rR={kernelName:Es,backendName:"webgl",kernelFunc:sR};function iR({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),b=K(g),y=K(m),x=Sa(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);V(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const k=n?[b,h,p]:[b,p,h],v=s?[y,f,d]:[y,d,f],w=KE({inputs:{x:e},backend:r,attrs:{shape:k}}),I=KE({inputs:{x:t},backend:r,attrs:{shape:v}}),T=[w,I],S=Math.max(b,y),C=n?w.shape[1]:w.shape[2],N=null!=i,$=null!=a,E="leakyrelu"===l,R=null!=l?WE(l,!0):null;let A;if((1===p||1===f)&&C>1e3&&!1===(N||$||E||null!=R)){let e=w,t=I;n&&(e=sR({inputs:{x:w},backend:r,attrs:{perm:[0,2,1]}}),T.push(e)),s&&(t=sR({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),T.push(t));const i=1===f;let a=e;1!==f&&(a=KE({inputs:{x:e},backend:r,attrs:{shape:[S,C,1]}}),T.push(a));const o=1===f?2:1;let l=t;i&&(l=KE({inputs:{x:t},backend:r,attrs:{shape:[S,1,C]}}),T.push(l));const u=HE({inputs:{a,b:l},backend:r});A=tR({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),T.push(u)}else{const l=Pr(e.dtype,t.dtype),u=new UE(k,v,[S,p,f],n,s,N,R,$,E),c=[w,I];if(null!=i&&c.push(i),$&&c.push(a),E){const e=r.makeTensorInfo([],"float32",cr(o,"float32"));c.push(e),T.push(e)}A=r.runWebGLProgram(u,c,l)}const D=KE({inputs:{x:A},backend:r,attrs:{shape:x}});T.push(A);for(const e of T)r.disposeIntermediateTensorInfo(e);return D}const aR={kernelName:Ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return iR({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},oR="return abs(x);",lR={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=U$(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=Te().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yE(s.shape,oR):new dE(s.shape,oR),n.runWebGLProgram(r,[s],s.dtype)}},uR=zE({opSnippet:pE+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),cR={kernelName:Re,backendName:"webgl",kernelFunc:uR},hR=zE({opSnippet:pE+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),dR={kernelName:Ae,backendName:"webgl",kernelFunc:hR},pR="return a + b;",fR=BE({opSnippet:pR,packedOpSnippet:pR,supportsComplex:!0,cpuKernelImpl:u$}),gR={kernelName:De,backendName:"webgl",kernelFunc:fR};class mR{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class bR{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const yR={kernelName:_e,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return $E({inputs:{x:r[0]},backend:s});if(r.length>Te().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),i=e({inputs:r.slice(t),backend:s});return e({inputs:[n,i],backend:s})}const i=r.map((e=>e.dtype)).reduce(((e,t)=>Pr(e,t))),a=r.map((e=>e.shape)),o=Te().getBool("WEBGL_PACK")?new bR(r[0].shape,a):new mR(r[0].shape,a);return s.runWebGLProgram(o,r,i)}},xR={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=ee(i,r.shape);let u=l;const c=gl(u,o);let h=r;null!=c&&(h=sR({inputs:{x:r},backend:n,attrs:{perm:c}}),u=bl(u.length,o)),fl("all",u,o);const[d,p]=dl(h.shape,u),f=KE({inputs:{x:h},backend:n,attrs:{shape:[-1,K(p)]}}),g=JE(f,f.dtype,"all",n);let m;return m=KE(a?{inputs:{x:g},backend:n,attrs:{shape:pl(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},kR={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=ee(i,r.shape);let u=l;const c=gl(u,o);let h=r;null!=c&&(h=sR({inputs:{x:r},backend:n,attrs:{perm:c}}),u=bl(u.length,o)),fl("any",u,o);const[d,p]=dl(h.shape,u),f=KE({inputs:{x:h},backend:n,attrs:{shape:[-1,K(p)]}}),g=JE(f,f.dtype,"any",n);let m;return m=KE(a?{inputs:{x:g},backend:n,attrs:{shape:pl(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}};class vR{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class wR{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,V(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],i=Math.ceil(r/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=UN(o),u=iE("coords",o);let c,h;if(1===i){h=o+1;const e=UN(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),g=iE("sourceLocR",h-1).concat("inIdx.r"),m=iE("sourceLocG",h-1).concat("inIdx.g"),b=iE("sourceLocB",h-1).concat("inIdx.b"),y=iE("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",k=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,w=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${k}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function IR(e,t,n,s=null){let r=t.shape[0],i=t.shape[1];null!=s&&(r=s.shape[0],i=s.shape[1]);const a=kc(i),o={windowSize:a,inSize:i,batchSize:r,outSize:Math.ceil(i/a)},l=new vR(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=IR(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function TR(e,t,n,s=null){const r=null!=s?s.shape:t.shape,i=kc(r[r.length-1]),a=new wR(r,i,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(a,o,"int32");if(l.shape.length===t.shape.length){const s=TR(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function SR(e,t,n,s){const r=[n];if(fl("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!Te().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let a=t;null!==i&&i.isPacked&&(a=e.unpackTensor(t),n.push(a));const[o,l]=dl(a.shape,r),u=K(l),c=KE({inputs:{x:a},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=IR(e,c,s);n.push(h);const d=KE({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return TR(e,t,s)}const CR={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let a=ee(i,r.shape);const o=gl(a,r.shape.length);let l=r;const u=[];null!=o&&(l=sR({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=bl(a.length,l.shape.length)),fl("argMax",[a[0]],l.shape.length);const c=SR(n,l,a[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},NR={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let a=ee(i,r.shape);const o=gl(a,r.shape.length);let l=r;const u=[];null!=o&&(l=sR({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=bl(a.length,l.shape.length)),fl("argMin",[a[0]],l.shape.length);const c=SR(n,l,a[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},$R=zE({opSnippet:pE+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ER={kernelName:Pe,backendName:"webgl",kernelFunc:$R},RR=zE({opSnippet:pE+"return log(x + sqrt(x * x + 1.0));"}),AR={kernelName:ze,backendName:"webgl",kernelFunc:RR},DR=zE({opSnippet:pE+"\n  return atan(x);\n"}),_R={kernelName:Be,backendName:"webgl",kernelFunc:DR},FR=BE({opSnippet:TE+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+CE+"\n  return result;\n"}),OR={kernelName:Ue,backendName:"webgl",kernelFunc:FR},LR=zE({opSnippet:pE+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),MR={kernelName:We,backendName:"webgl",kernelFunc:LR};class PR{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const x=4*Math.floor(i/4),k=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class zR{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(k="avgValue / max(count, 1.0)");const v=4*Math.floor(i/4),w=i%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${k});\n      }\n    `}}const BR={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;SN(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;V(ko(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=uo(r.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&q(u.inShape,u.outShape))return $E({inputs:{x:r},backend:n});const c=new PR(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},WR={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=co(r.shape,i,a,[1,1,1],o,l,u),h=new zR(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class UR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VR={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=co(a.shape,o,l,[1,1,1],u,c),d=new GR(h);return n.runWebGLProgram(d,[r],a.dtype)}},HR={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i;SN([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=uo(a.shape,o,l,1,u),h=new UR(c);return n.runWebGLProgram(h,[r],a.dtype)}},jR={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:a,transposeB:o}=s;return iR({a:r,b:i,transposeA:a,transposeB:o,backend:n})}};class KR{constructor(e,t,n,s,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Sa(e,t),Sa(e,n);let a="0.0";null!=s&&(Sa(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=r&&(Sa(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class qR{constructor(e,t,n,s,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Sa(e,t),Sa(e,n);let a="vec4(0.0)";null!=s&&(Sa(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(Sa(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const XR={kernelName:Pt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:i,offset:a,scale:o}=e;V(r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),V(null==a||r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),V(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,i];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=Te().getBool("WEBGL_PACK_NORMALIZATION")?new qR(s.shape,r.shape,i.shape,c,h,l):new KR(s.shape,r.shape,i.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class YR{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=UN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return JR.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${JR[t]} = start[${t}] + coords.${JR[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const JR=["x","y","z","w","u","v"];class ZR{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=UN(this.rank),n=iE("coords",this.rank),s=iE("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${r})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${i};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function QR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:a}=s,[o,l]=no(r,i,a);if(Ua(r,o,l),0===K(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=G$(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=eo(r.shape,o,l);if(u||!c){const e=Te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZR(l):new YR(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),a=s.texData.get(i.dataId);Object.assign(a,r),a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=to(t,he(e.shape));r.slice&&(o+=r.slice.flatOffset),a.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),i}(r,o,l,n)}const eA={kernelName:es,backendName:"webgl",kernelFunc:QR},tA={kernelName:qe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:a}=s;V(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=wc(r.shape,i,o),u=Ic(l.length,i.length),c=Tc(r.shape,i,o),h=Sc(a,i.length),d=Cc(c,a,i.length),p=[],f=KE({inputs:{x:r},backend:n,attrs:{shape:l}}),g=sR({inputs:{x:f},backend:n,attrs:{perm:u}}),m=KE({inputs:{x:g},backend:n,attrs:{shape:c}}),b=QR({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},nA={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a}=s,o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=c$(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}},sA={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,i=Te().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=Te().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,r])||1===a){const e=n.texData.get(s.dataId).values,t=n.texData.get(r.dataId).values,[i,a]=d$(s.shape,r.shape,e,t,s.dtype),o=n.makeTensorInfo(a,s.dtype);return n.texData.get(o.dataId).values=i,o}let o;return o=i?new NE("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",s.shape,r.shape,!1):new SE("\n  return float(int(a.r) & int(b.r));\n",s.shape,r.shape),n.runWebGLProgram(o,[s,r],s.dtype)}},rA={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.readSync(s.dataId),a=n.readSync(r.dataId),o=Sa(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},iA=BE({opSnippet:"return float(a != b);",cpuKernelImpl:_$,dtype:"bool"}),aA={kernelName:wn,backendName:"webgl",kernelFunc:iA};function oA(e){const{inputs:t,backend:n}=e,{input:s}=t;return $E({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const lA={kernelName:Mn,backendName:"webgl",kernelFunc:oA},uA={kernelName:Ze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:i}=n,{dtype:a}=r;if("complex64"===a){if("complex64"===i.dtype)return $E({inputs:{x:i},backend:s});const t=Rl(i.shape),n=e({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),r=RE({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){const t=oA({inputs:{input:i},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:a}});return s.disposeIntermediateTensorInfo(t),n}if(!re(i.dtype,a)){const e=$E({inputs:{x:i},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:a}}if(s.shouldExecuteOnCPU([i])){const e=s.texData.get(i.dataId).values,[t,n,r]=p$(e,i.shape,i.dtype,a);return s.makeTensorInfo(t,n,r)}if("int32"===a)return function(e,t){const n=new dE(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(i,s);if("bool"===a){const e=s.makeTensorInfo([],"bool",ne("bool",1)),t=iA({inputs:{a:i,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},cA="return ceil(x);",hA=zE({opSnippet:cA,packedOpSnippet:cA,cpuKernelImpl:f$}),dA={kernelName:Qe,backendName:"webgl",kernelFunc:hA};class pA{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class fA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const gA={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:i,clipValueMax:a}=s;let o;o=Te().getBool("WEBGL_PACK_CLIP")?new fA(r.shape):new pA(r.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class mA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function bA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const yA={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),i=new mA(s.shape),a=[bA(s,r.complexTensorInfos.real),bA(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class xA{constructor(e){this.outputShape=[],this.outputShape=pc(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class kA{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=pc(e,t);const n=this.outputShape,s=n.length,r=UN(s),i=iE("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=a[t],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${vA(a,l,t)}),\n            vec2(${vA(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${vA(a,l,p)}),\n          vec2(${vA(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function vA(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function wA(e){const{inputs:t,backend:n}=e,{input:s}=t;return $E({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const IA={kernelName:Ht,backendName:"webgl",kernelFunc:wA};function TA(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>oA({inputs:{input:e},backend:n}))),r=e.map((e=>wA({inputs:{input:e},backend:n}))),i=TA(s,t,n),a=TA(r,t,n),o=RE({inputs:{real:i,imag:a},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=K(e.shape.slice(t));return KE({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),i=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),a=pc(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=g$(i,a,s,o),u=pc(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=e.filter((e=>K(e.shape)>0)),a=Te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=a?new dE(e[0].shape,bE):new yE(e[0].shape,bE);return n.runWebGLProgram(t,e,s)}const o=Te().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let s=0;s<i.length;s+=o){const r=i.slice(s,s+o);e.push(TA(r,t,n))}const s=TA(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(a){const e=new kA(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,s)}const{tensors2D:l,outShape:u}=function(e,t,n){const s=pc(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>KE({inputs:{x:e},attrs:{shape:[-1,K(e.shape.slice(t))]},backend:n}))),outShape:s}}(i,t,n),c=new xA(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=KE({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function SA(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=ee(r,t[0].shape)[0];dc(t.map((e=>e.shape)),i);const a=pc(t.map((e=>e.shape)),i);if(0===K(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter((e=>K(e.shape)>0));return 1===o.length?$E({inputs:{x:o[0]},backend:n}):TA(o,i,n)}const CA={kernelName:st,backendName:"webgl",kernelFunc:SA};class NA{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,y=g?3:1;let x="",k="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,k="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${k}\n        setOutput(result);\n      }\n    `}}class $A{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class EA{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=qN(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===a){if(n<u&&(i%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=i%2==0?U(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(i%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class RA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=qN(this.outputShape.length);const{dataFormat:n}=t,s=NN(),r="channelsLast"===n,i=r?1:2,a=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function AA(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function DA({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1;let g;const m=[];if(null!=i){const e=AA(i.shape,p);null!=e&&(i=KE({inputs:{x:i},backend:s,attrs:{shape:e}}),m.push(i))}if(null!=r){const e=AA(r.shape,p);null!=e&&(r=KE({inputs:{x:r},backend:s,attrs:{shape:e}}),m.push(r))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&q(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,V(xN(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=KE({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const b=iR({a:h,b:p,backend:s,transposeA:!1,transposeB:f,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),y=s.texData.get(b.dataId);V(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,y.shape=n.outShape,g=$E({inputs:{x:b},backend:s}),g.shape=n.outShape,m.push(b)}else{const l=n.outHeight*n.outWidth,u=KE({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=KE({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=iR({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:f,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a});g=KE({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)s.disposeIntermediateTensorInfo(e);return g}function _A({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=l*u*c,m=d*h,b=[n.batchSize,g,m],y=[];if(null!=i){const e=AA(i.shape,f);null!=e&&(i=KE({inputs:{x:i},backend:s,attrs:{shape:e}}),y.push(i))}if(null!=r){const e=AA(r.shape,f);null!=e&&(r=KE({inputs:{x:r},backend:s,attrs:{shape:e}}),y.push(r))}const x=KE({inputs:{x:t},backend:s,attrs:{shape:[1,g,K(t.shape)/g]}});y.push(x);const k=new RA(b,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],w=s.runWebGLProgram(k,[e],"float32",v),I=KE({inputs:{x:w},backend:s,attrs:{shape:b}});y.push(w),y.push(I);const T=null!=r,S=null!=i,C="leakyrelu"===o,N=o?WE(o,!0):null,$=new UE(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,m,n.outChannels]:[n.batchSize,n.outChannels,m],!0,!1,T,N,S,C),E=f?[I,x]:[x,I];if(r&&E.push(r),S&&E.push(i),C){const e=s.makeTensorInfo([],"float32",cr(a,"float32"));E.push(e),y.push(e)}const R=s.runWebGLProgram($,E,"float32"),A=KE({inputs:{x:R},backend:s,attrs:{shape:n.outShape}});y.push(R);for(const e of y)s.disposeIntermediateTensorInfo(e);return A}const FA={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=wo(l),d=ho(r.shape,i.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&Te().getBool("WEBGL_EXP_CONV")){const e=new EA(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,i],"float32",t)}else if(Te().getBool("WEBGL_CONV_IM2COL"))p=_A({x:r,filter:i,convInfo:d,backend:n});else{const e=new NA(d);p=n.runWebGLProgram(e,[r,i],"float32")}else p=DA({x:r,filter:i,convInfo:d,backend:n});const f=KE({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class OA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class MA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const zA={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=wo(l),d=ho(r.shape,c,a,1,o,u,!1,h),p=new OA(d);return n.runWebGLProgram(p,[r,i],"float32")}};class BA{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=qN(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,s=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const WA={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=wo(u),d=ho(a,i.shape,o,1,l,c,!1,h);if(Te().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new BA(d);return n.runWebGLProgram(t,[r,i],"float32",e)}{const e=new LA(d);return n.runWebGLProgram(e,[r,i],"float32")}}},UA={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l}=s,u=po(r.shape,i.shape,a,l,o),c=new $A(u);return n.runWebGLProgram(c,[r,i],"float32")}},GA={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,filterShape:l}=s,u=po(r.shape,l,a,1,o),c=new MA(u);return n.runWebGLProgram(c,[r,i],"float32")}},VA={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:a,strides:o,inputShape:l}=s,u=po(l,i.shape,o,1,a),c=new PA(u);return n.runWebGLProgram(c,[r,i],"float32")}},HA=zE({opSnippet:PE+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${CE}\n  return result;\n`}),jA={kernelName:ct,backendName:"webgl",kernelFunc:HA},KA=zE({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),qA={kernelName:ht,backendName:"webgl",kernelFunc:KA};class XA{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,k]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${k};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const YA={kernelName:ft,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new XA(r.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[r,i,a],"float32")}};var JA;!function(e){e.Prod="*",e.Sum="+"}(JA||(JA={}));class ZA{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===JA.Prod?"1.0":"0.0",a=n?i:`getX(${QA(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${UN(r)} coords = getOutputCoords();\n        int end = ${eD(r,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${eD(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${QA(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function QA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function eD(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function tD(e,t,n,s,r,i){const a=t.shape.length,o=gl([s],a);let l=t;null!=o&&(l=sR({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=bl(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=$E({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const s=new ZA(e,l.shape,!1,i),r=[[t]],a=h;h=n.runWebGLProgram(s,[h],h.dtype,r),n.disposeIntermediateTensorInfo(a)}if(r){const t=new ZA(e,l.shape,r,i),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=sR({inputs:{x:h},backend:n,attrs:{perm:ml(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const nD={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;return tD(JA.Prod,r,n,i,a,o)}},sD={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;return tD(JA.Sum,r,n,i,a,o)}},rD={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(i.dataId),s=c$(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(i),s=h$(e,t,a,o);return n.makeTensorInfo(s.shape,i.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class iD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const aD={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:a}=s,o=r.shape[0],l=("NHWC"===a?r.shape[1]:r.shape[2])*i,u=("NHWC"===a?r.shape[2]:r.shape[3])*i,c=("NHWC"===a?r.shape[3]:r.shape[1])/(i*i),h=new iD("NHWC"===a?[o,l,u,c]:[o,c,l,u],i,a);return n.runWebGLProgram(h,[r],r.dtype)}};class oD{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=qN(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class lD{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=qN(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=a%2==0?U(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${f}\n        setOutput(result);\n      }\n    `}}const uD={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),V(ko(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=ho(r.shape,i.shape,a,c,o,u,!0);let d;d=Te().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new lD(h):new oD(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,i],"float32",p)}};class cD{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hD{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const dD={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=ho(r.shape,c,a,o,l,u,!0),d=new cD(h);return n.runWebGLProgram(d,[r,i],"float32")}},pD={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=ho(c,i.shape,a,o,l,u,!0),d=new hD(h);return n.runWebGLProgram(d,[r,i],"float32")}};class fD{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const gD={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],i=K(s.shape),a=KE({inputs:{x:s},backend:n,attrs:{shape:[i]}}),o=new fD(i),l=n.runWebGLProgram(o,[a],a.dtype),u=KE({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class mD{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const bD={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l}=s,u=lo(r.shape,i.shape,a,o,"NHWC",l);let c;const h=new mD(u);c=n.runWebGLProgram(h,[r,i],"float32");const d=KE({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},yD={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:a,summedDims:o,idDims:l}=Jc(r,i.length);Qc(a.length,l,i);const{path:u,steps:c}=eh(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=Zc(p,l[t]);let r;th(e)?r=i[t]:(r=sR({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(r));const a=r.shape.slice();for(let e=0;e<s.length;++e)a.splice(s[e],0,1);q(r.shape,a)||(r=KE({inputs:{x:r},backend:n,attrs:{shape:a}}),f.push(r)),null===d?d=r:(d=HE({inputs:{a:r,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=tR({inputs:{x:d},backend:n,attrs:{axis:u[e]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},xD=zE({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),kD={kernelName:Ct,backendName:"webgl",kernelFunc:xD},vD={kernelName:Nt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,i=Te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new NE("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new SE("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(i,[s,r],s.dtype)}},wD=BE({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:m$}),ID={kernelName:Et,backendName:"webgl",kernelFunc:wD},TD=zE({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${_c};\n  float a1 = ${Fc};\n  float a2 = ${Oc};\n  float a3 = ${Lc};\n  float a4 = ${Mc};\n  float a5 = ${Pc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),SD={kernelName:$t,backendName:"webgl",kernelFunc:TD},CD=zE({opSnippet:PE+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:b$,dtype:"float32"}),ND={kernelName:Rt,backendName:"webgl",kernelFunc:CD};function $D(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(V(-(a+1)<=r,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+r+1),o.splice(l,0,1),KE({inputs:{x:i},backend:s,attrs:{shape:o}})}const ED={kernelName:At,backendName:"webgl",kernelFunc:$D},RD="return exp(x) - 1.0;",AD=zE({opSnippet:RD,packedOpSnippet:RD,cpuKernelImpl:y$}),DD={kernelName:Dt,backendName:"webgl",kernelFunc:AD};class _D{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${s}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function FD(e,t,n){const s=n.texData.get(e.dataId),r=K(e.shape),i=e.shape[e.shape.length-1],a=KE({inputs:{x:e},backend:n,attrs:{shape:[r/i,i]}}),o=a.shape,l=new _D("real",o,t),u=new _D("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=RE({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=KE({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const OD={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return FD(s,!1,n)}};class LD{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function MD(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:i}=n;if(i=i||le(r),"string"===i){const e=se(i,K(s));return e.fill(r),t.makeTensorInfo(s,i,e)}{const e=new LD(s,r),n=[[r]];return t.runWebGLProgram(e,[],i,n)}}const PD={kernelName:Ft,backendName:"webgl",kernelFunc:MD};class zD{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const BD={kernelName:Ot,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new zD(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},WD="return floor(x);",UD=zE({opSnippet:WD,packedOpSnippet:WD,cpuKernelImpl:x$}),GD={kernelName:Lt,backendName:"webgl",kernelFunc:UD},VD=BE({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),HD={kernelName:Mt,backendName:"webgl",kernelFunc:VD};class jD{constructor(e){this.variableNames=["A"];const t=NN(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class KD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=NN(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const qD={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:i}=s,a="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,i];if(o||a){const e=Te().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=XD&&e===YD||(YD=e,XD=document.createElement("canvas").getContext("2d",{willReadFrequently:YD})),XD.canvas.width=l,XD.canvas.height=u,XD.drawImage(r,0,0,l,u),r=XD.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=JC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=Te().getBool("WEBGL_PACK")?new KD(h):new jD(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let XD,YD=Te().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const JD={kernelName:Ms,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=wo(c),m=ho(r.shape,i.shape,l,h,u,d,!1,g);let b;const y=[],x=null!=a,k=null!=o,v="leakyrelu"===p,w=()=>{const e=[r,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=KE({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(x&&e.push(t(a,c)),k&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",cr(f,"float32"));e.push(t),y.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&Te().getBool("WEBGL_EXP_CONV")){const e=p?WE(p,!0):null,t=new EA(m,x,e,k,v),s=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],r=w();b=n.runWebGLProgram(t,r,"float32",s)}else if(Te().getBool("WEBGL_CONV_IM2COL"))b=_A({x:r,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?WE(p,!1):null,t=new NA(m,x,e,k,v),s=w();b=n.runWebGLProgram(t,s,"float32")}else b=DA({x:r,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=KE({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},ZD={kernelName:Ps,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=c;null==g&&(g=[1,1]),V(ko(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const m=ho(r.shape,i.shape,l,g,u,h,!0),b=Te().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,y=d?WE(d,b):null,x=[r,i],k=null!=a,v=null!=o,w="leakyrelu"===d;if(k&&x.push(a),v&&x.push(o),w){const e=n.makeTensorInfo([],"float32",cr(p,"float32"));x.push(e),f.push(e)}let I;I=b?new lD(m,k,y,v,w):new oD(m,k,y,v,w);const T=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],S=n.runWebGLProgram(I,x,"float32",T);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class QD{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=UN(n.length);let i="\n    int index;";for(let e=0;e<this.sliceDim;e++)i+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const e_={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=r.shape,a=i[i.length-1],o=K(s.shape),[l,u,c,h]=Nc(s,r),d=KE({inputs:{x:r},backend:n,attrs:{shape:[u,a]}}),p=KE({inputs:{x:s},backend:n,attrs:{shape:[K(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),i=k$(e,t,s.dtype,u,a,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,i.values)}const f=new QD(a,h,[u,c],s.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=KE({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}};class t_{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=UN(this.rank),s=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)2===s?n.push("index"):n.push(`${t[s]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function n_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:a,batchDims:o}=s,l=ee(a,r.shape)[0];if(Te().get("DEBUG")){const e=n.readSync(i.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];V(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=yh(r,i,l,o),c=K(i.shape),h=[],d=KE({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=KE({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),s=v$(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const g=new t_(d.shape,f),m=n.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const b=KE({inputs:{x:m},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const s_={kernelName:zt,backendName:"webgl",kernelFunc:n_},r_=BE({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:w$,dtype:"bool"}),i_={kernelName:Wt,backendName:"webgl",kernelFunc:r_},a_=BE({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:I$}),o_={kernelName:Ut,backendName:"webgl",kernelFunc:a_},l_={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return FD(s,!0,n)}},u_=zE({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),c_={kernelName:jt,backendName:"webgl",kernelFunc:u_},h_=zE({opSnippet:"return float(isinf(x));",dtype:"bool"}),d_={kernelName:Kt,backendName:"webgl",kernelFunc:h_},p_=zE({opSnippet:"return float(isnan(x));",dtype:"bool"}),f_={kernelName:qt,backendName:"webgl",kernelFunc:p_},g_=BE({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:T$,dtype:"bool"}),m_={kernelName:Yt,backendName:"webgl",kernelFunc:g_},b_=BE({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:S$,dtype:"bool"}),y_={kernelName:Jt,backendName:"webgl",kernelFunc:b_},x_={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,a=C$(s,r,i);return t.makeTensorInfo([a.length],"float32",a)}},k_=zE({opSnippet:PE+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:N$}),v_={kernelName:Qt,backendName:"webgl",kernelFunc:k_},w_=zE({opSnippet:PE+"\n  return log(1.0 + x);\n"}),I_={kernelName:en,backendName:"webgl",kernelFunc:w_},T_=BE({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),S_={kernelName:tn,backendName:"webgl",kernelFunc:T_},C_=zE({opSnippet:"return float(!(x >= 1.0));"}),N_={kernelName:nn,backendName:"webgl",kernelFunc:C_},$_=BE({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),E_={kernelName:sn,backendName:"webgl",kernelFunc:$_};class R_{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class A_{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const D_={kernelName:rn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=s,u=Te().getBool("WEBGL_PACK_NORMALIZATION")?new A_(r.shape,i,a,o,l):new R_(r.shape,i,a,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class __{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const F_={kernelName:an,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new __(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,i,a],r.dtype)}};function O_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:a}=s,o=r.shape.length,l=ee(i,r.shape);let u=l;const c=gl(u,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=nE(e,r.shape,r.dtype,c,t);p=n.makeTensorInfo(t,r.dtype),n.texData.get(p.dataId).values=s}else p=eR(r,c,n);u=bl(u.length,o)}fl("max",u,o);const[f,g]=dl(p.shape,u);let m,b=f;if(a&&(b=pl(f,l)),d){const e=n.texData.get(p.dataId).values,t=$$(e,K(g),b,r.dtype);m=n.makeTensorInfo(b,r.dtype),n.texData.get(m.dataId).values=t}else m=function(e,t,n,s){const r=K(t),i=KE({inputs:{x:e},attrs:{shape:[K(e.shape)/r,r]},backend:s}),a=JE(i,e.dtype,"max",s),o=KE({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const L_={kernelName:on,backendName:"webgl",kernelFunc:O_},M_=BE({opSnippet:TE+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+CE+"\n  return result;\n",cpuKernelImpl:E$}),P_={kernelName:ln,backendName:"webgl",kernelFunc:M_},z_={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;SN(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s;V(ko(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=uo(r.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&q(u.inShape,u.outShape))return $E({inputs:{x:r},backend:n});const c=new PR(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},B_={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=co(r.shape,i,a,[1,1,1],o,u,l),h=new zR(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class W_{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=r-1-e.padInfo.top,o=i-1-e.padInfo.left,l=r*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class U_{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const G_={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=co(a.shape,o,l,[1,1,1],u,c),d=new zR(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new U_(h),g=n.runWebGLProgram(f,[r,p],a.dtype);return n.disposeIntermediateTensorInfo(p),g}},V_={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:a}=t,o=i;SN([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=uo(o.shape,l,u,1,c,h),p=new PR(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new W_(d),m=n.runWebGLProgram(g,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},H_={kernelName:pn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;V(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];V(ko(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=uo(s.shape,r,i,u,a),[h,d]=function(e,t,n,s){let r=new PR(n,"max",!1);const i=s.runWebGLProgram(r,[e],"float32");return r=new PR(n,"max",!0,!0,t),[i,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,l);return[h,d]}},j_={kernelName:fn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:i}=t,a=n,o=s.shape.length,l=ee(i,s.shape);let u=l;const c=gl(u,o),h=null!=c,d=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const e=a.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=nE(e,s.shape,s.dtype,c,t);f=a.makeTensorInfo(t,s.dtype),a.texData.get(f.dataId).values=n}else f=eR(s,c,a);p.push(f),u=bl(u.length,o)}fl("sum",u,o);const[g,m]=dl(f.shape,u);let b=g;r&&(b=pl(g,l));const y=function(e,t,n,s){const r=K(t),i=KE({inputs:{x:e},attrs:{shape:[K(e.shape)/r,r]},backend:s}),a=JE(i,"float32","mean",s),o=KE({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}(f,m,b,a);for(const e of p)a.disposeIntermediateTensorInfo(e);return y}},K_={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=ee(i,r.shape);let u=l;const c=gl(u,o);let h=r;null!=c&&(h=sR({inputs:{x:r},backend:n,attrs:{perm:c}}),u=bl(u.length,r.shape.length)),fl("min",u,o);const[d,p]=dl(h.shape,u),f=KE({inputs:{x:h},backend:n,attrs:{shape:[-1,K(p)]}}),g=JE(f,f.dtype,"min",n);let m;return m=KE(a?{inputs:{x:g},backend:n,attrs:{shape:pl(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},q_=BE({opSnippet:TE+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+CE+"\n  return result;\n",cpuKernelImpl:R$}),X_={kernelName:mn,backendName:"webgl",kernelFunc:q_};class Y_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=UN(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class J_{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=UN(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=iE("rc",s),l=iE("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Z_={kernelName:bn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:i}=n,a=Te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new J_(s.shape,r,i):new Y_(s.shape,r,i);return t.runWebGLProgram(a,[s],s.dtype)}},Q_=BE({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+CE+"\n  return result;\n"}),eF={kernelName:yn,backendName:"webgl",kernelFunc:Q_};class tF{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const nF=BE({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),sF={kernelName:Tt,backendName:"webgl",kernelFunc:nF},rF="return a - b;",iF=BE({opSnippet:rF,packedOpSnippet:rF,supportsComplex:!0,cpuKernelImpl:Q$}),aF={kernelName:Is,backendName:"webgl",kernelFunc:iF};function oF(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,a=ee([i],r.shape),o=O_({inputs:{x:r},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=pl(o.shape,a),u=KE({inputs:{x:o},backend:n,attrs:{shape:l}}),c=iF({inputs:{a:r,b:u},backend:n}),h=CD({inputs:{x:c},backend:n}),d=tR({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=KE({inputs:{x:d},backend:n,attrs:{shape:l}}),f=nF({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const lF={kernelName:cs,backendName:"webgl",kernelFunc:oF},uF={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:a,normalized:o}=s,l=o?r:oF({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new tF(u,c,i),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},cF=pE+"\n  return -x;\n",hF={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=D$(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=Te().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yE(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new dE(s.shape,cF),n.runWebGLProgram(r,[s],s.dtype)}},dF=Lu,pF={kernelName:In,backendName:"webgl",kernelFunc:function(e){zs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=dF(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},fF=Mu,gF={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){zs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=fF(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},mF=Pu,bF={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){zs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=mF(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class yF{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const xF={kernelName:Nn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:a,onValue:o,offValue:l}=s,u=K(r.shape),c=new yF(u,a,o,l),h=KE({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=KE({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(d),p}};function kF(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=oA({inputs:{input:s},backend:n}),t=kF({inputs:{x:e},backend:n}),r=wA({inputs:{input:s},backend:n}),i=kF({inputs:{x:r},backend:n}),a=RE({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return MD({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const vF={kernelName:_s,backendName:"webgl",kernelFunc:kF},wF={kernelName:Cn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=oA({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),i=wA({inputs:{input:r},backend:s}),a=kF({inputs:{x:i},backend:s}),o=RE({inputs:{real:n,imag:a},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(a),o}return MD({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},IF={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return $D({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{H(i,e.shape,"All tensors passed to stack must have matching shapes"),V(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=SA({inputs:t.map((e=>{const t=$D({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class TF{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=UN(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class SF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=UN(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=iE("rc",s),l=iE("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===s?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const CF=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:a}=s;if(0===K(r.shape)){const e=i.map(((e,t)=>e[0]+r.shape[t]+e[1]));return MD({backend:n,attrs:{shape:e,value:a,dtype:r.dtype}})}const o=Te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SF(r.shape,i,a):new TF(r.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[r],r.dtype,l)},NF={kernelName:En,backendName:"webgl",kernelFunc:CF},$F=BE({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+CE+"\n  return result;\n"}),EF={kernelName:Rn,backendName:"webgl",kernelFunc:$F},RF={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=[],u=ee(i,r.shape);let c=u;const h=gl(c,o);let d,p=r;if(null!=h&&(p=sR({inputs:{x:r},backend:n,attrs:{perm:h}}),c=bl(c.length,o),l.push(p)),fl("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:r}=F$(p.shape,p.dtype,e,c);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=dl(p.shape,c),s=K(t),i=KE({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),a=JE(i,zr(r.dtype),"prod",n);d=KE({inputs:{x:a},backend:n,attrs:{shape:e}}),l.push(i),l.push(a)}if(a){l.push(d);const e=pl(d.shape,u);d=KE({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},AF={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(a.dataId),[d,p,f]=O$(l,u,c,i.shape,i.dtype,h,a.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}},DF={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=L$(a,s.shape,s.dtype,o,r.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],s.dtype,c)]}},_F={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,g]=M$(u,r.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}},FF=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:i,dtype:a}=n,o=P$(s,r,i,a);return t.makeTensorInfo([o.length],a,o)},OF={kernelName:Ln,backendName:"webgl",kernelFunc:FF},LF=zE({opSnippet:"return 1.0 / x;"}),MF={kernelName:Pn,backendName:"webgl",kernelFunc:LF},PF=zE({opSnippet:pE+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),zF={kernelName:zn,backendName:"webgl",kernelFunc:PF},BF=zE({opSnippet:pE+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),WF={kernelName:Hn,backendName:"webgl",kernelFunc:BF};class UF{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class GF{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const VF={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=Te().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new GF(r.shape,l,u,i,a):new UF(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],"float32")}};class HF{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,i,a]=e,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const jF={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s,o=new HF(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class KF{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class qF{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const XF={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=Te().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qF(r.shape,l,u,i,a):new KF(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],r.dtype)}};class YF{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,i,a]=e,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const JF={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s,o=new YF(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class ZF{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=UN(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class QF{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=iE("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,a=UN(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const eO={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s,a=r.shape.length,o=ee(i,r.shape);if(0===a)return $E({inputs:{x:r},backend:n});const l=Te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QF(r.shape,o):new ZF(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class tO{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const nO={kernelName:Os,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:a}=t,o=n,l=new tO(s.shape,i),[u,c]=vc(a,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,h)}},sO=zE({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),rO={kernelName:Kn,backendName:"webgl",kernelFunc:sO},iO=zE({opSnippet:"return inversesqrt(x);",cpuKernelImpl:z$}),aO={kernelName:qn,backendName:"webgl",kernelFunc:iO};class oO{constructor(e,t,n,s,r,i,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=UN(r.length),u=UN(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===s?d="i":2===s&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${g}, sum, float(found)));\n        }\n      `}}class lO{constructor(e,t,n,s,r,i,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const l=UN(r.length),u=UN(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===s?d="i":2===s&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${g}, sum, found));\n        }\n      `}}const uO={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rc(0,r,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,r.dtype);const p=KE({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=KE({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=Te().getBool("WEBGL_PACK")?new lO(l,o,p.shape.length,f.shape.length,c,d):new oO(l,o,p.shape.length,f.shape.length,c,d);const b=n.runWebGLProgram(m,[f,p,g],f.dtype),y=KE({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),y}};class cO{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Te().getNumber("WEBGL_VERSION")?"while (left < right) {":r,a="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${a} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const hO={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:a}=s,o=new cO(r.shape[0],r.shape[1],i.shape[1],a),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,i],"int32",l)}};class dO{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let s=0;s<t.length;s++)a.push(`${n[s]}`),s<e&&i.push(`${n[s]}`);s=i.join(),r=a.join()}const i=UN(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const pO={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t,a=new dO(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(a,[s,r,i],Pr(r.dtype,i.dtype))}},fO=zE({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Ac};\n  float scale = ${Dc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),gO={kernelName:Qn,backendName:"webgl",kernelFunc:fO},mO=zE({opSnippet:PE+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:W$}),bO={kernelName:rs,backendName:"webgl",kernelFunc:mO},yO=zE({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),xO={kernelName:ss,backendName:"webgl",kernelFunc:yO},kO=zE({opSnippet:PE+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${CE}\n  return result;\n`}),vO={kernelName:ts,backendName:"webgl",kernelFunc:kO},wO=zE({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),IO={kernelName:ns,backendName:"webgl",kernelFunc:wO},TO=zE({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),SO={kernelName:is,backendName:"webgl",kernelFunc:TO},CO={kernelName:ls,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:a}=s;V(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...a);for(let e=1+i.length;e<r.shape.length;++e)l.push([0,0]);const u=[],c=CF({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=wc(c.shape,i,o,!1),d=Ic(h.length,i.length,!1),p=Tc(c.shape,i,o,!1),f=KE({inputs:{x:c},backend:n,attrs:{shape:h}}),g=sR({inputs:{x:f},backend:n,attrs:{perm:d}}),m=KE({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},NO={kernelName:hs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,g]=V$(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}},$O={kernelName:ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(i.dataId)),[u,c,h]=H$(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}},EO={kernelName:ps,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=j$(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},RO={kernelName:fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=j$(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},AO={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:a}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Rc(0,r,o),p=!1;if("string"===i.dtype){const e=n.bufferSync(r),t=n.bufferSync(i),s=fr(n.readSync(a.dataId)[0]),f=B$(e,t,o,d,c,u,l,h,s,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new oO(u,l,r.shape.length,i.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[i,r,a],i.dtype),m=KE({inputs:{x:g},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(g),m}},DO={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:a}=s,o=ee(a,r.shape)[0],l=sh(r,i,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=QR({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},_O="return sqrt(x);",FO=zE({opSnippet:_O,packedOpSnippet:_O,cpuKernelImpl:K$}),OO={kernelName:as,backendName:"webgl",kernelFunc:FO},LO={kernelName:bs,backendName:"webgl",kernelFunc:zE({opSnippet:"return x * x;"})},MO="return (a - b) * (a - b);",PO=BE({opSnippet:MO,packedOpSnippet:MO}),zO={kernelName:ms,backendName:"webgl",kernelFunc:PO},BO={kernelName:ys,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const i=xh(n.readSync(r.dataId)),a=q$(i,"string",s);return n.makeTensorInfo(r.shape,"string",a)}},WO={kernelName:Fs,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=pE+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new dE(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}};class UO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=UN(n.length),i=UN(n.length);let a="";if(1===s)a="coords * strides + begin";else{let e=0;a=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const GO={kernelName:xs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:y,end:x,strides:k}=so(r.shape,i,a,o,l,u,c,h,d);let v;if(g)v=KE({inputs:{x:r},backend:n,attrs:{shape:f}});else if(m||b){V(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Va(y,x,k),t=QR({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});v=KE({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Zi(r.shape,r.dtype,e),s=X$(p,t,k,y);v=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new UO(y,k,p);v=n.runWebGLProgram(e,[r],r.dtype)}const w=KE({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),w}},VO={kernelName:ks,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=Y$(d,p,r,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}},HO={kernelName:vs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=J$(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},jO={kernelName:ws,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=Z$(a,r);return n.makeTensorInfo(i.shape,"int32",o)}},KO=zE({opSnippet:"return tan(x);"}),qO={kernelName:Ts,backendName:"webgl",kernelFunc:KO},XO=zE({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),YO={kernelName:Ss,backendName:"webgl",kernelFunc:XO},JO={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{tensor:r,indices:i,updates:a}=t,{}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Rc(0,i,r.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(r.shape,i.dtype);const p=KE({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=KE({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=KE({inputs:{x:r},backend:n,attrs:{shape:d}}),m=new oO(l,o,p.shape.length,f.shape.length,c,d,!1,!0),b=n.runWebGLProgram(m,[f,p,g],g.dtype),y=KE({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),y}};class ZO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=UN(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function QO(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>fr(e))):e,s=Zi(r.shape,r.dtype,t),a=eE(s,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new ZO(r.shape,i);return n.runWebGLProgram(a,[r],r.dtype)}const eL={kernelName:Cs,backendName:"webgl",kernelFunc:QO};class tL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class nL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function sL(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function rL(e){let t=1;for(;t<e;)t*=2;return t}const iL={kernelName:Ns,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:a}=s,o=Te().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Te().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||i>l){const e=n.readSync(r.dataId),[t,s]=tE(e,u,r.dtype,i,a);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,MD({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=K(u)/c,g=KE({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&sL(n,p);const m=rL(i),b=rL(c);let y=null;const x=()=>null===y?[g,g]:[g,y],k=(e,t,s)=>{const r=x(),i=new tL(s),a=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(i,r,"int32",a),sL(n,o)};for(let e=1;e<m;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)k(t,n,[f,b])}for(let e=b;e>m;e/=2){const t=x(),s=new nL([f,e/2]),r=[[c],[null===y?1:0],[m]],i=y;y=n.runWebGLProgram(s,t,"int32",r),sL(n,i);const a=m/2,o=2*a;for(let e=a;e>=1;e/=2)k(o,e,y.shape)}let v=y;y=QR({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,i]}}),sL(n,v);let w=n_({inputs:{x:g,indices:y},backend:n,attrs:{axis:1,batchDims:1}});sL(n,g);const I=u.slice(0,-1);I.push(i),v=y,y=KE({inputs:{x:y},attrs:{shape:I},backend:n}),sL(n,v);const T=w;return w=KE({inputs:{x:w},attrs:{shape:I},backend:n}),sL(n,T),[w,y]}};class aL{constructor(e,t,n,s,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const oL={kernelName:$s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=new aL(h,d,a,o,l,[c,f,g,p]);return n.runWebGLProgram(m,[r,i],"float32")}},lL={kernelName:Rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;SN(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=sE(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},uL={kernelName:As,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,o=a.shape.length,l=r.shape[i],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==i&&(u[c++]=a.shape[e]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[i]=e;const t=QR({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),s=KE({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class cL{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,i=e.numSegments,a=i*Math.ceil(r/n);this.outputShape=[s,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const hL={kernelName:Ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:a}=s,o=r.shape.length,l=[];let u=0;const c=gl([u],o);let h=r;null!=c&&(h=sR({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=bl(1,o)[0]);const d=bh(h.shape,u,a),p=K([h.shape[u]]),f=KE({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=zr(r.dtype),m=(e,t,s,r,i)=>{const a=e.shape[0],o=e.shape[1],u=mh(o,i),c=new cL({windowSize:u,inSize:o,batchSize:a,numSegments:i},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===i)return h;const d=FF({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=QO({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),m(h,t,p,r,i)},b=KE({inputs:{x:m(f,"unsortedSegmentSum",i,g,a)},backend:n,attrs:{shape:d}});let y=b;if(null!=c){l.push(b);const e=ml(c);y=sR({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},dL=[aR,lR,cR,dR,gR,yR,xR,kR,CR,NR,ER,AR,_R,OR,MR,BR,WR,VR,HR,jR,XR,tA,nA,sA,rA,uA,dA,gA,AE,yA,CA,FA,zA,WA,UA,GA,VA,jA,qA,YA,nD,sD,rD,aD,uD,dD,pD,gD,bD,yD,kD,vD,ID,SD,ND,ED,DD,OD,PD,BD,GD,HD,qD,JD,ZD,e_,s_,i_,o_,EE,l_,IA,c_,d_,f_,FE,m_,y_,x_,v_,I_,S_,N_,E_,D_,F_,L_,P_,z_,B_,G_,V_,H_,j_,K_,X_,Z_,eF,uF,jE,hF,pF,gF,bF,aA,xF,wF,IF,NF,EF,ME,RF,AF,DF,_F,OF,lA,sF,MF,zF,WF,qE,VF,jF,XF,JF,eO,nO,rO,aO,uO,hO,pO,gO,bO,xO,vO,IO,eA,lF,SO,CO,NO,$O,EO,RO,AO,DO,OO,LO,zO,BO,WO,GO,VO,HO,jO,aF,nR,qO,YO,JO,eL,iL,oL,rR,lL,uL,hL,vF];for(const e of dL)js(e);function pL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(pL=function(){return!!e})()}var fL=function(e){function t(e,n){var s,r,i,a;return u(this,t),r=this,i=I(i=t),(s=w(r,pL()?Reflect.construct(i,[],I(r).constructor):i.apply(r,a)))._aiLevelText="ultra",s.enableTrainingMode=e,s.modelLocation=n,s.model=null,s.memory=[],s.gamma=.95,s.epsilon=1,s.epsilonDecay=.95,s.epsilonMin=.01,s.learningRate=.001,s.batchSize=64,s.lastAction=null,s}return C(t,e),p(t,[{key:"setup",value:(a=i(o().mark((function e(t,n){return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.createOrLoadModel(t,n,this.enableTrainingMode,this.modelLocation);case 2:this.model=e.sent;case 3:case"end":return e.stop()}}),e,this)}))),function(e,t){return a.apply(this,arguments)})},{key:"createOrLoadModel",value:(r=i(o().mark((function e(t,n,s,r){var i;return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(s){e.next=4;break}return e.next=3,vb(r);case 3:return e.abrupt("return",e.sent);case 4:return(i=new wb(void 0)).add(Mx({inputShape:[t,n,1],filters:32,kernelSize:3,activation:"relu",padding:"same"})),i.add(Mx({filters:64,kernelSize:3,activation:"relu",padding:"same"})),i.add(new My(void 0)),i.add(Px({units:128,activation:"relu"})),i.add(Px({units:4,activation:"linear"})),i.compile({optimizer:uc.adam(this.learningRate),loss:"meanSquaredError"}),e.abrupt("return",i);case 12:case"end":return e.stop()}}),e,this)}))),function(e,t,n,s){return r.apply(this,arguments)})},{key:"loadModel",value:function(){}},{key:"ai",value:function(e){var t;return t=Math.random()<this.epsilon&&this.enableTrainingMode?this.getRandomAction():this.getBestAction(e),this.lastAction=t,t}},{key:"getRandomAction",value:function(){switch(g(1,4)){case 1:return l.Key.UP;case 2:return l.Key.LEFT;case 3:return l.Key.BOTTOM;case 4:return l.Key.RIGHT}}},{key:"getBestAction",value:function(e){var t=this.getState(e).expandDims(0),n=this.model.predict(t).arraySync()[0],s=n.indexOf(Math.max.apply(Math,L(n)));return l.ActionMappingInverse[s]}},{key:"getState",value:function(e){for(var t=e.grid,n=new Array(t.height).fill(0).map((function(){return new Array(t.width).fill(0)})),s=0;s<t.height;s++)for(var r=0;r<t.width;r++){var i=new f(r,s);e.positionInQueue(i)?n[s][r]=1:n[s][r]=this.cellToStateValue(t.get(i))}return ui(n).expandDims(-1)}},{key:"cellToStateValue",value:function(e){return l.CaseTypeAIValue[e]}},{key:"findPositionInState",value:function(e,t){for(var n=0;n<e.length;n++)for(var s=0;s<e[n].length;s++)if(e[n][s]===l.CaseTypeAIValue[t])return{x:s,y:n};return null}},{key:"remember",value:function(e,t,n,s,r){this.memory.push({state:e,action:t,reward:n,nextState:s,done:r}),this.memory.length>2e3&&this.memory.shift()}},{key:"train",value:(s=i(o().mark((function e(){var t,n,s,r,i,a,u,c,h,d,p,f,g,m,b,y,x,k,v;return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(this.memory.length<this.batchSize)){e.next=2;break}return e.abrupt("return");case 2:for(t=[],n=0;n<this.batchSize;n++)s=Math.floor(Math.random()*this.memory.length),t.push(this.memory[s]);for(r=[],i=[],a=0,u=t;a<u.length;a++)c=u[a],h=c.state,d=c.action,p=c.reward,f=c.nextState,g=c.done,m=p,g||(b=this.model.predict(f.expandDims(0)).arraySync()[0],m+=this.gamma*Math.max.apply(Math,L(b))),y=this.model.predict(h.expandDims(0)).arraySync()[0],x=l.ActionMapping[d],y[x]=m,r.push(h),i.push(y);return k=eu(r),v=eu(i),e.next=11,this.model.fit(k,v,{epochs:1,verbose:0});case 11:this.epsilon>this.epsilonMin&&(this.epsilon*=this.epsilonDecay);case 12:case"end":return e.stop()}}),e,this)}))),function(){return s.apply(this,arguments)})},{key:"calculateReward",value:function(e,t){var n=e.gameOver,s=e.getHeadPosition(),r=t.arraySync().map((function(e){return e.map((function(e){return Math.round(1e3*e[0])/1e3}))})),i=this.findPositionInState(r,l.CaseType.FRUIT),a=this.findPositionInState(r,l.CaseType.FRUIT_GOLD);return n?-10:i&&s.x===i.x&&s.y===i.y?10:a&&s.x===a.x&&s.y===a.y?30:-.2}},{key:"step",value:(n=i(o().mark((function e(t,n){var s,r,i;return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:s=this.getState(t),r=this.calculateReward(t,n),i=t.gameOver,this.remember(n,this.lastAction,r,s,i);case 4:case"end":return e.stop()}}),e,this)}))),function(e,t){return n.apply(this,arguments)})}]);var n,s,r,a}(v);function gL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(gL=function(){return!!e})()}var mL=function(e){function t(){var e,n,s,r;return u(this,t),n=this,s=I(s=t),(e=w(n,gL()?Reflect.construct(s,[],I(n).constructor):s.apply(n,r)))._aiLevelText="mock",e}return C(t,e),p(t,[{key:"ai",value:function(){return null}}])}(v);function bL(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,s=Array(t);n<t;n++)s[n]=e[n];return s}var yL,xL=function(){function e(t,n,s,r,i,a,o,c){u(this,e),this.direction=null==t?l.Direction.RIGHT:t,this.initialDirection=this.direction,this.initialLength=null==n?3:n,this.initTriedDirections=[],this.errorInit=!1,this.grid=s||new k,this.queue=[],this.lastKey=-1,this.lastTail,this.lastTailMoved,this.ticksDead=0,this.player=null==r?l.PlayerType.HUMAN:r,this.aiLevel=null==i?l.AiLevel.DEFAULT:i,this.autoRetry=null!=a&&a,this.score=0,this.gameOver=!1,this.scoreMax=!1,this.color,this.name=null==o?"Snake":o,this.snakeAI=new v,this.customAI=c,this.ticksWithoutAction=0}return p(e,[{key:"init",value:(n=i(o().mark((function e(){var t,n,s,r,i,a,u,c,h,d,p,g,m,b,y,x,k;return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(this.initialLength<=0)){e.next=3;break}return this.errorInit=!0,e.abrupt("return",!1);case 3:if(this.grid.maze&&this.initTriedDirections.length<=0&&(this.initialDirection=this.grid.mazeFirstPosition.direction,this.direction=this.initialDirection),t=0,n=0,!(this.initialDirection==l.Direction.RIGHT&&-1==this.initTriedDirections.indexOf(l.Direction.RIGHT)||this.initialDirection==l.Direction.LEFT&&-1==this.initTriedDirections.indexOf(l.Direction.LEFT))){e.next=24;break}s=0;case 8:if(!(s<this.grid.height)){e.next=22;break}r=0,i=0;case 11:if(!(i<this.grid.width)){e.next=19;break}if(this.grid.get(new f(i,s))==l.CaseType.EMPTY?r++:r=0,!(r>=this.initialLength)){e.next=16;break}return t++,e.abrupt("break",19);case 16:i++,e.next=11;break;case 19:s++,e.next=8;break;case 22:e.next=40;break;case 24:if(!(this.initialDirection==l.Direction.UP&&-1==this.initTriedDirections.indexOf(l.Direction.UP)||this.initialDirection==l.Direction.BOTTOM&&-1==this.initTriedDirections.indexOf(l.Direction.BOTTOM))){e.next=40;break}a=0;case 26:if(!(a<this.grid.width)){e.next=40;break}u=0,c=0;case 29:if(!(c<this.grid.height)){e.next=37;break}if(this.grid.get(new f(a,c))==l.CaseType.EMPTY?u++:u=0,!(u>=this.initialLength)){e.next=34;break}return n++,e.abrupt("break",37);case 34:c++,e.next=29;break;case 37:a++,e.next=26;break;case 40:if(this.initTriedDirections.push(this.initialDirection),!(t<=0&&(this.initialDirection==l.Direction.RIGHT||this.initialDirection==l.Direction.LEFT)||n<=0&&(this.initialDirection==l.Direction.UP||this.initialDirection==l.Direction.BOTTOM))){e.next=66;break}if(-1!=this.initTriedDirections.indexOf(l.Direction.RIGHT)){e.next=48;break}return this.initialDirection=l.Direction.RIGHT,this.direction=l.Direction.RIGHT,e.abrupt("return",this.init());case 48:if(-1!=this.initTriedDirections.indexOf(l.Direction.LEFT)){e.next=54;break}return this.initialDirection=l.Direction.LEFT,this.direction=l.Direction.LEFT,e.abrupt("return",this.init());case 54:if(-1!=this.initTriedDirections.indexOf(l.Direction.UP)){e.next=60;break}return this.initialDirection=l.Direction.UP,this.direction=l.Direction.UP,e.abrupt("return",this.init());case 60:if(-1!=this.initTriedDirections.indexOf(l.Direction.BOTTOM)){e.next=64;break}return this.initialDirection=l.Direction.BOTTOM,this.direction=l.Direction.BOTTOM,e.abrupt("return",this.init());case 64:return this.errorInit=!0,e.abrupt("return",!1);case 66:h=!0,d=[];case 68:if(!h){e.next=81;break}if(h=!1,p=this.grid.maze?this.grid.mazeFirstPosition:this.grid.getRandomPosition()){e.next=74;break}return this.errorInit=!0,e.abrupt("return",!1);case 74:for(g=new f(p.x,p.y,this.initialDirection),d=[],m=this.initialLength-1;m>=0;m--)m<this.initialLength-1&&(this.initialDirection==l.Direction.RIGHT?g=this.grid.getNextPosition(new f(g.x,g.y,this.initialDirection),l.Direction.RIGHT):this.initialDirection==l.Direction.LEFT?g=this.grid.getNextPosition(new f(g.x,g.y,this.initialDirection),l.Direction.LEFT):this.initialDirection==l.Direction.BOTTOM?g=this.grid.getNextPosition(new f(g.x,g.y,this.initialDirection),l.Direction.BOTTOM):this.initialDirection==l.Direction.UP&&(g=this.grid.getNextPosition(new f(g.x,g.y,this.initialDirection),l.Direction.UP))),this.grid.get(g)!=l.CaseType.EMPTY?h=!0:d.push(new f(g.x,g.y,g.direction));if(!this.grid.maze||!h){e.next=79;break}return e.abrupt("return",this.init());case 79:e.next=68;break;case 81:for(b=!1,this.grid.maze||(y=new f(d[d.length-1].x,d[d.length-1].y,this.direction),(this.grid.isDeadPosition(this.grid.getNextPosition(y,l.Direction.UP),!1)&&this.direction==l.Direction.UP||this.grid.isDeadPosition(this.grid.getNextPosition(y,l.Direction.BOTTOM),!1)&&this.direction==l.Direction.BOTTOM||this.grid.isDeadPosition(this.grid.getNextPosition(y,l.Direction.LEFT),!1)&&this.direction==l.Direction.LEFT||this.grid.isDeadPosition(this.grid.getNextPosition(y,l.Direction.RIGHT),!1)&&this.direction==l.Direction.RIGHT)&&(b=!0,this.direction=this.grid.invertDirection(this.direction))),x=0;x<d.length;x++)b?((k=d[d.length-x-1]).direction=this.grid.invertDirection(k.direction),this.insert(d[d.length-x-1])):this.insert(d[x]);return this.grid.maze&&this.player==l.PlayerType.HYBRID_HUMAN_AI&&(this.player=l.PlayerType.HUMAN),this.player==l.PlayerType.HYBRID_HUMAN_AI&&(this.aiLevel=l.AiLevel.HIGH),this.lastTail=this.get(this.queue.length-1),e.next=89,this.initAI();case 89:return e.abrupt("return",!0);case 90:case"end":return e.stop()}}),e,this)}))),function(){return n.apply(this,arguments)})},{key:"initAI",value:(t=i(o().mark((function e(){var t;return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.customAI){e.next=23;break}e.t0=this.aiLevel,e.next=e.t0===l.AiLevel.RANDOM?4:e.t0===l.AiLevel.LOW?6:e.t0===l.AiLevel.DEFAULT?8:e.t0===l.AiLevel.HIGH?10:e.t0===l.AiLevel.ULTRA?12:e.t0===l.AiLevel.MOCK?17:19;break;case 4:return this.snakeAI=new $,e.abrupt("break",21);case 6:return this.snakeAI=new R,e.abrupt("break",21);case 8:return this.snakeAI=new D,e.abrupt("break",21);case 10:return this.snakeAI=new F,e.abrupt("break",21);case 12:return t=new fL(!1,l.AIModelLocation),e.next=15,t.setup();case 15:return this.snakeAI=t,e.abrupt("break",21);case 17:return this.snakeAI=new mL,e.abrupt("break",21);case 19:return this.snakeAI=new D,e.abrupt("break",21);case 21:e.next=25;break;case 23:this.snakeAI=this.customAI,this.aiLevel=l.AiLevel.CUSTOM;case 25:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"reset",value:function(){this.direction=this.initialDirection,this.initTriedDirections=[],this.errorInit=!1,this.queue=[],this.score=0,this.gameOver=!1,this.scoreMax=!1,this.lastTailMoved=!0,this.lastTail=void 0,this.lastKey=-1,this.ticksDead=0,this.ticksWithoutAction=0,this.snakeAI&&(this.snakeAI.aiFruitGoal=l.CaseType.FRUIT)}},{key:"insert",value:function(e){this.queue.unshift(e),this.grid.set(l.CaseType.SNAKE,e)}},{key:"remove",value:function(){var e=this.queue.pop();this.grid.set(l.CaseType.EMPTY,e),this.lastTail=e}},{key:"length",value:function(){return this.queue.length}},{key:"get",value:function(e){return this.queue&&null!=this.queue[e]?this.queue[e].copy():null}},{key:"set",value:function(e,t){e>=0&&e<this.length()&&(this.queue[e]=t)}},{key:"getHeadPosition",value:function(){return this.get(0)}},{key:"getTailPosition",value:function(){return this.get(this.length()-1)}},{key:"positionInQueue",value:function(e){var t,n=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return bL(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?bL(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var s=0,r=function(){};return{s:r,n:function(){return s>=e.length?{done:!0}:{done:!1,value:e[s++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){o=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(o)throw i}}}}(this.queue);try{for(n.s();!(t=n.n()).done;){var s=t.value;if(s&&s.x==e.x&&s.y==e.y)return!0}}catch(e){n.e(e)}finally{n.f()}return!1}},{key:"hasMaxScore",value:function(){return this.grid.getTotal(l.CaseType.EMPTY)<=0&&!this.grid.fruitPosGold&&!this.grid.fruitPos}},{key:"setGameOver",value:function(e){this.gameOver=!0,this.ticksDead=e;for(var t=0;t<this.length();t++)this.grid.set(l.CaseType.SNAKE_DEAD,this.get(t))}},{key:"kill",value:function(){this.autoRetry=!1,this.grid=null,this.queue=null}},{key:"keyToDirection",value:function(e){return e==l.Key.LEFT&&this.direction!=l.Direction.RIGHT&&this.direction!=l.Direction.LEFT?l.Direction.LEFT:e==l.Key.UP&&this.direction!=l.Direction.BOTTOM&&this.direction!=l.Direction.UP?l.Direction.UP:e==l.Key.RIGHT&&this.direction!=l.Direction.LEFT&&this.direction!=l.Direction.RIGHT?l.Direction.RIGHT:e==l.Key.BOTTOM&&this.direction!=l.Direction.UP&&this.direction!=l.Direction.BOTTOM?l.Direction.BOTTOM:null}},{key:"moveTo",value:function(e){var t=this.keyToDirection(e);null!=t&&(this.direction=t)}},{key:"getNextPosition",value:function(e,t){return this.grid.getNextPosition(e,t)}},{key:"getDirectionTo",value:function(e,t){return this.grid.getDirectionTo(e,t)}},{key:"getGraphicDirectionFor",value:function(e,t,n){if(null==t||null==n)return e.direction;var s=this.getDirectionTo(e,n),r=this.getDirectionTo(e,t);return s==l.Direction.LEFT&&r==l.Direction.BOTTOM||s==l.Direction.BOTTOM&&r==l.Direction.LEFT?l.Direction.ANGLE_1:s==l.Direction.RIGHT&&r==l.Direction.BOTTOM||s==l.Direction.BOTTOM&&r==l.Direction.RIGHT?l.Direction.ANGLE_2:s==l.Direction.UP&&r==l.Direction.RIGHT||s==l.Direction.RIGHT&&r==l.Direction.UP?l.Direction.ANGLE_3:s==l.Direction.UP&&r==l.Direction.LEFT||s==l.Direction.LEFT&&r==l.Direction.UP?l.Direction.ANGLE_4:e.direction}},{key:"getGraphicDirection",value:function(e){return this.getGraphicDirectionFor(this.get(e),this.get(e-1),this.get(e+1))}},{key:"copy",value:function(){for(var t=new e(this.direction,3,new k(this.grid.width,this.grid.height,!1,!1),this.player,this.aiLevel,!1),n=0;n<t.grid.height;n++)for(var s=0;s<t.grid.width;s++)t.grid.set(this.grid.get(new f(s,n)),new f(s,n));t.queue=[];for(var r=0;r<this.queue.length;r++)t.queue.push(JSON.parse(JSON.stringify(this.queue[r])));return t}},{key:"ai",value:function(){if(this.snakeAI&&this.snakeAI.ai){var e=this.snakeAI.ai(this);return e&&this.keyToDirection(e)!=this.direction?this.ticksWithoutAction=0:this.ticksWithoutAction++,e}return null}},{key:"isAIStuck",value:function(e,t){if(this.snakeAI&&this.snakeAI.ai){if((this.direction==l.Direction.LEFT||this.direction==l.Direction.RIGHT)&&this.ticksWithoutAction>=this.grid.width*e)return!0;if((this.direction==l.Direction.UP||this.direction==l.Direction.BOTTOM)&&this.ticksWithoutAction>=this.grid.height*t)return!0}return!1}},{key:"getAILevelText",value:function(){return this.snakeAI?this.snakeAI.aiLevelText:"???"}}]);var t,n}(),kL=function(){return p((function e(t){u(this,e),this.name=t,this.callbacks=[]}),[{key:"registerCallback",value:function(e){this.callbacks.push(e)}}])}(),vL=function(){return p((function e(){u(this,e),this.events={}}),[{key:"registerEvent",value:function(e){this.events[e]=new kL(e)}},{key:"dispatchEvent",value:function(e,t){for(var n=this.events[e].callbacks,s=0,r=n.length;s<r;s++)n[s](t)}},{key:"addEventListener",value:function(e,t){this.events[e].registerCallback(t)}}])}(),wL=function(){return p((function e(t,n,s,r,i,a,o){u(this,e),this.grid=t,this.snakes=n,this.speed=null==s?8:s,this.initialSpeed=null==s?8:s,this.initialSpeedUntouched=null==s?8:s,this.enablePause=null==r||r,this.enableRetry=null==i||i,this.progressiveSpeed=null!=a&&a,this.aiStuckLimit=null==o?3:o,this.countBeforePlay=3,this.lastKey=-1,this.numFruit=1,this.ticks=0,this.firstStart=!0,this.starting=!1,this.paused=!0,this.exited=!1,this.killed=!1,this.isReseted=!0,this.gameOver=!1,this.gameFinished=!1,this.gameMazeWin=!1,this.scoreMax=!1,this.errorOccurred=!1,this.clientSidePredictionsMode=!1,this.aiStuck=!1,this.intervalPlay,this.reactor=new vL,this.reactor.registerEvent("onStart"),this.reactor.registerEvent("onPause"),this.reactor.registerEvent("onContinue"),this.reactor.registerEvent("onReset"),this.reactor.registerEvent("onStop"),this.reactor.registerEvent("onExit"),this.reactor.registerEvent("onKill"),this.reactor.registerEvent("onScoreIncreased"),this.reactor.registerEvent("onUpdate"),this.reactor.registerEvent("onUpdateCounter")}),[{key:"init",value:(n=i(o().mark((function e(){var t,n;return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.clientSidePredictionsMode){e.next=11;break}if(null==this.snakes?(this.errorOccurred=!0,this.snakes=[]):Array.isArray(this.snakes)?(Array.isArray(this.snakes)&&this.snakes.length<=0||this.grid.maze&&this.snakes.length>1)&&(this.errorOccurred=!0):this.snakes=[this.snakes],this.grid instanceof k!=0){e.next=6;break}this.errorOccurred=!0,e.next=11;break;case 6:if(this.errorOccurred){e.next=11;break}return e.next=9,this.initGridAndSnakes();case 9:for(t=g(0,360,this.grid?new(y())(this.grid.seedGame):null),n=0;n<this.snakes.length;n++)this.snakes[n]instanceof xL==0?this.errorOccurred=!0:(t=m(t,Math.round(360/this.snakes.length)),this.snakes[n].color=t);case 11:case"end":return e.stop()}}),e,this)}))),function(){return n.apply(this,arguments)})},{key:"initGridAndSnakes",value:(t=i(o().mark((function e(){var t,n;return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.grid.reset(),this.grid.init(),null==this.snakes){e.next=11;break}for(t=0;t<this.snakes.length;t++)this.snakes[t].reset();n=0;case 5:if(!(n<this.snakes.length)){e.next=11;break}return e.next=8,this.snakes[n].init();case 8:n++,e.next=5;break;case 11:this.grid.setFruit(this.snakes.length);case 12:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"reset",value:(e=i(o().mark((function e(){return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.paused=!0,this.isReseted=!0,this.exited=!1,this.clearIntervalPlay(),this.numFruit=1,this.ticks=0,this.lastKey=-1,this.scoreMax=!1,this.errorOccurred=!1,this.gameOver=!1,this.gameFinished=!1,this.gameMazeWin=!1,this.starting=!1,this.initialSpeed=this.initialSpeedUntouched,this.speed=this.initialSpeedUntouched,this.aiStuck=!1,this.grid.seedGrid&&(this.grid.seedGrid=""+(parseInt(this.grid.seedGrid)+1)),this.grid.seedGame&&(this.grid.seedGame=""+(parseInt(this.grid.seedGame)+1)),e.next=20,this.initGridAndSnakes();case 20:this.reactor.dispatchEvent("onReset"),this.start();case 22:case"end":return e.stop()}}),e,this)}))),function(){return e.apply(this,arguments)})},{key:"start",value:function(){var e=this;if(this.reactor.dispatchEvent("onUpdateCounter"),!this.errorOccurred){if(null!=this.snakes)for(var t=0;t<this.snakes.length;t++)this.snakes[t].errorInit&&(this.errorOccurred=!0,this.stop());!this.paused||this.gameOver||this.killed||this.scoreMax||this.starting||(this.starting=!0,this.firstStart||this.reactor.dispatchEvent("onContinue"),this.countBeforePlay=3,this.clearIntervalPlay(),this.reactor.dispatchEvent("onUpdateCounter"),this.intervalPlay=setInterval((function(){e.countBeforePlay--,e.reactor.dispatchEvent("onUpdateCounter"),e.countBeforePlay<0&&e.forceStart()}),1e3))}}},{key:"forceStart",value:function(){this.clearIntervalPlay(),this.countBeforePlay=-1,this.paused=!1,this.isReseted=!1,this.firstStart=!1,this.starting=!1,this.reactor.dispatchEvent("onStart"),this.tick()}},{key:"clearIntervalPlay",value:function(){clearInterval(this.intervalPlay)}},{key:"continue",value:function(){this.clientSidePredictionsMode||(this.start(),this.reactor.dispatchEvent("onContinue"))}},{key:"stop",value:function(e){this.gameOver||this.clientSidePredictionsMode||(this.paused=!0,this.gameOver=!0,e&&(this.gameFinished=!0),this.clearIntervalPlay(),this.reactor.dispatchEvent("onStop"))}},{key:"pause",value:function(){this.paused||this.clientSidePredictionsMode||(this.paused=!0,this.clearIntervalPlay(),this.reactor.dispatchEvent("onPause"))}},{key:"kill",value:function(){if(!this.killed){if(this.paused=!0,this.gameOver=!0,this.killed=!0,null!=this.snakes)for(var e=0;e<this.snakes.length;e++)this.snakes[e].kill(),this.snakes[e]=null;this.clearIntervalPlay(),this.grid=null,this.snakes=null,this.reactor.dispatchEvent("onKill")}}},{key:"exit",value:function(){this.exited||(this.stop(),this.exited=!0,this.reactor.dispatchEvent("onExit"))}},{key:"destroySnakes",value:function(e,t){for(var n=0;n<this.snakes.length;n++)e&&Array.isArray(e)&&e.indexOf(n)<0&&t.indexOf(this.snakes[n].player)>-1&&this.snakes[n].setGameOver(this.ticks)}},{key:"getNBPlayer",value:function(e){var t=0;if(null!=this.snakes)for(var n=0;n<this.snakes.length;n++)this.snakes[n].player==e&&t++;return t}},{key:"getPlayer",value:function(e,t){var n=0;if(null!=this.snakes)for(var s=0;s<this.snakes.length;s++)if(this.snakes[s].player==t&&n++,n==e)return this.snakes[s];return null}},{key:"tick",value:function(){var e=this;setTimeout((function(){e.doTick()}),this.initialSpeed*l.Setting.TIME_MULTIPLIER)}},{key:"doTick",value:function(){if(!this.paused&&!this.killed){this.ticks++;var e,t=!1;if(this.grid&&(!this.grid.maze||this.grid.mazeForceAuto||this.grid.maze&&this.getNBPlayer(l.PlayerType.HUMAN)<=0&&this.getNBPlayer(l.PlayerType.HYBRID_HUMAN_AI)<=0||this.grid.maze&&(this.getNBPlayer(l.PlayerType.HUMAN)>0||this.getNBPlayer(l.PlayerType.HYBRID_HUMAN_AI)>0)&&-1!=(this.getPlayer(1,l.PlayerType.HYBRID_HUMAN_AI)||this.getPlayer(1,l.PlayerType.HUMAN)).lastKey)){for(var n=0;n<this.snakes.length;n++){var s=this.snakes[n].direction,r=!1,i=!1;if(t=!1,this.snakes[n].lastTailMoved=!1,!this.snakes[n].gameOver&&!this.snakes[n].scoreMax){this.snakes[n].player==l.PlayerType.HUMAN||this.snakes[n].player==l.PlayerType.HYBRID_HUMAN_AI?(this.snakes[n].moveTo(this.snakes[n].lastKey),this.snakes[n].lastKey=-1):this.snakes[n].player==l.PlayerType.AI&&(!this.clientSidePredictionsMode||this.clientSidePredictionsMode&&this.snakes[n].aiLevel!=l.AiLevel.RANDOM)&&this.snakes[n].moveTo(this.snakes[n].ai());var a=this.snakes[n].getHeadPosition();this.snakes[n].player==l.PlayerType.HYBRID_HUMAN_AI&&this.grid.isDeadPosition(this.snakes[n].getNextPosition(a,this.snakes[n].direction))&&(this.snakes[n].direction=s,this.snakes[n].moveTo(this.snakes[n].ai()),this.snakes[n].lastKey=-1),a=this.snakes[n].getNextPosition(a,this.snakes[n].direction),this.grid.isDeadPosition(a)?this.snakes[n].setGameOver(this.ticks):this.grid.get(a)==l.CaseType.FRUIT||this.grid.get(a)==l.CaseType.FRUIT_GOLD?(this.grid.get(a)==l.CaseType.FRUIT?(this.snakes[n].score++,this.grid.set(l.CaseType.EMPTY,this.grid.fruitPos),this.grid.fruitPos=null):this.grid.get(a)==l.CaseType.FRUIT_GOLD&&(this.snakes[n].score+=3,this.grid.set(l.CaseType.EMPTY,this.grid.fruitPosGold),this.grid.fruitPosGold=null,i=!0),e=!0,this.snakes[n].insert(a),this.grid.maze?(this.gameMazeWin=!0,this.gameFinished=!0,this.stop()):this.snakes[n].hasMaxScore()&&this.snakes.length<=1?(this.scoreMax=!0,this.snakes[n].scoreMax=!0,this.stop()):(this.numFruit++,i||(r=!0)),this.snakes.length<=1&&this.progressiveSpeed&&this.snakes[n].score>0&&this.initialSpeed>1&&(this.initialSpeed=Math.ceil(-this.initialSpeedUntouched/100*this.snakes[n].score+this.initialSpeedUntouched),this.initialSpeed=this.initialSpeed<1?1:this.initialSpeed)):(this.snakes[n].insert(a),this.grid.maze||(this.snakes[n].remove(),this.snakes[n].lastTailMoved=!0))}this.scoreMax||!r||this.clientSidePredictionsMode||(t=!this.grid.setFruit(this.snakes.length))}this.scoreMax||t||!this.grid.detectCorridor(this.grid.fruitPos)&&!this.grid.isFruitSurrounded(this.grid.fruitPos,!0)||this.clientSidePredictionsMode||(t=!this.grid.setFruit(this.snakes.length)),this.scoreMax||null==this.grid.fruitPosGold||!this.grid.detectCorridor(this.grid.fruitPosGold)&&!this.grid.isFruitSurrounded(this.grid.fruitPosGold,!0)||(this.grid.set(l.CaseType.EMPTY,this.grid.fruitPosGold),this.grid.fruitPosGold=null);for(var o=0,u=0;u<this.snakes.length;u++)(this.snakes[u].gameOver||this.snakes[u].scoreMax)&&o++;for(var c=!1,h=0;h<this.snakes.length;h++)if(!this.snakes[h].gameOver&&this.snakes[h].isAIStuck(1,1))this.aiStuck=!0,c=!!this.snakes[h].isAIStuck(this.aiStuckLimit,this.aiStuckLimit);else if((this.snakes[h].player==l.PlayerType.HUMAN||this.snakes[h].player==l.PlayerType.HYBRID_HUMAN_AI)&&!this.snakes[h].gameOver||this.snakes[h].player==l.PlayerType.AI&&!this.snakes[h].gameOver){this.aiStuck=!1,c=!1;break}(o>=this.snakes.length||t||c)&&(this.stop(),this.snakes.length>1&&(this.gameFinished=!0)),this.reactor.dispatchEvent("onUpdate"),e&&this.reactor.dispatchEvent("onScoreIncreased")}this.tick()}}},{key:"onReset",value:function(e){this.reactor.addEventListener("onReset",e)}},{key:"onStart",value:function(e){this.reactor.addEventListener("onStart",e)}},{key:"onContinue",value:function(e){this.reactor.addEventListener("onContinue",e)}},{key:"onStop",value:function(e){this.reactor.addEventListener("onStop",e)}},{key:"onPause",value:function(e){this.reactor.addEventListener("onPause",e)}},{key:"onExit",value:function(e){this.reactor.addEventListener("onExit",e)}},{key:"onKill",value:function(e){this.reactor.addEventListener("onKill",e)}},{key:"onScoreIncreased",value:function(e){this.reactor.addEventListener("onScoreIncreased",e)}},{key:"onUpdate",value:function(e){this.reactor.addEventListener("onUpdate",e)}},{key:"onUpdateCounter",value:function(e){this.reactor.addEventListener("onUpdateCounter",e)}}]);var e,t,n}();function IL(e){var t=JSON.parse(JSON.stringify(e));if(t)for(var n=0;n<t.length;n++)delete t[n].grid,e[n].snakeAI&&e[n].snakeAI.aiLevelText&&(t[n].snakeAI.aiLevelText=e[n].snakeAI.aiLevelText);return t}function TL(e){var t=JSON.parse(JSON.stringify(e));return t&&(t.rngGrid=null,t.rngGame=null),t}function SL(e,t){yL&&(t=null!=t?t:yL.grid),t=Object.assign(new k,t),!e&&yL&&(e=yL.snakes);for(var n=0;n<e.length;n++){e[n].grid=t,e[n]=Object.assign(new xL,e[n]);for(var s=0;s<e[n].queue.length;s++)e[n].queue[s]=Object.assign(new f,e[n].queue[s]);e[n].initAI()}return{grid:t,snakes:e}}onmessage=function(){var e=i(o().mark((function e(t){var n,s,r,i,a,u,c,h;return o().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!((n=t.data).length>1&&"init"==n[0])){e.next=21;break}return s=SL(n[1].snakes,n[1].grid),r=s.grid,i=s.snakes,yL=new wL(r,i,n[1].speed,n[1].enablePause,n[1].enableRetry,n[1].progressiveSpeed),e.next=8,yL.init();case 8:self.postMessage(["init",{snakes:IL(yL.snakes),grid:TL(yL.grid),enablePause:yL.enablePause,enableRetry:yL.enableRetry,progressiveSpeed:yL.progressiveSpeed,offsetFrame:yL.speed*l.Setting.TIME_MULTIPLIER,errorOccurred:yL.errorOccurred}]),yL.onReset((function(){self.postMessage(["reset",{paused:yL.paused,isReseted:yL.isReseted,exited:yL.exited,snakes:IL(yL.snakes),grid:TL(yL.grid),numFruit:yL.numFruit,ticks:yL.ticks,scoreMax:yL.scoreMax,gameOver:yL.gameOver,gameFinished:yL.gameFinished,gameMazeWin:yL.gameMazeWin,starting:yL.starting,initialSpeed:yL.initialSpeed,speed:yL.speed,offsetFrame:yL.speed*l.Setting.TIME_MULTIPLIER,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:yL.errorOccurred,aiStuck:yL.aiStuck,precAiStuck:!1}])})),yL.onStart((function(){self.postMessage(["start",{snakes:IL(yL.snakes),grid:TL(yL.grid),starting:yL.starting,countBeforePlay:yL.countBeforePlay,paused:yL.paused,isReseted:yL.isReseted,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:yL.errorOccurred}])})),yL.onPause((function(){self.postMessage(["pause",{paused:yL.paused,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:yL.errorOccurred}])})),yL.onContinue((function(){self.postMessage(["continue",{confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:yL.errorOccurred}])})),yL.onStop((function(){self.postMessage(["stop",{paused:yL.paused,scoreMax:yL.scoreMax,gameOver:yL.gameOver,gameFinished:yL.gameFinished,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:yL.errorOccurred}])})),yL.onExit((function(){self.postMessage(["exit",{paused:yL.paused,gameOver:yL.gameOver,gameFinished:yL.gameFinished,exited:yL.exited,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:yL.errorOccurred}])})),yL.onKill((function(){self.postMessage(["kill",{paused:yL.paused,gameOver:yL.gameOver,killed:yL.killed,snakes:IL(yL.snakes),grid:TL(yL.grid),gameFinished:yL.gameFinished,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:yL.errorOccurred}])})),yL.onScoreIncreased((function(){self.postMessage(["scoreIncreased",{}])})),yL.onUpdate((function(){self.postMessage(["update",{paused:yL.paused,isReseted:yL.isReseted,exited:yL.exited,snakes:IL(yL.snakes),grid:TL(yL.grid),numFruit:yL.numFruit,ticks:yL.ticks,scoreMax:yL.scoreMax,gameOver:yL.gameOver,gameFinished:yL.gameFinished,gameMazeWin:yL.gameMazeWin,starting:yL.starting,initialSpeed:yL.initialSpeed,speed:yL.speed,countBeforePlay:yL.countBeforePlay,offsetFrame:0,errorOccurred:yL.errorOccurred,aiStuck:yL.aiStuck}])})),yL.onUpdateCounter((function(){self.postMessage(["updateCounter",{paused:yL.paused,isReseted:yL.isReseted,exited:yL.exited,snakes:IL(yL.snakes),grid:TL(yL.grid),numFruit:yL.numFruit,ticks:yL.ticks,scoreMax:yL.scoreMax,gameOver:yL.gameOver,gameFinished:yL.gameFinished,gameMazeWin:yL.gameMazeWin,starting:yL.starting,initialSpeed:yL.initialSpeed,speed:yL.speed,countBeforePlay:yL.countBeforePlay,errorOccurred:yL.errorOccurred}])})),e.next=57;break;case 21:if(null==yL){e.next=56;break}a=n[0],e.t0=a,e.next="reset"===e.t0?26:"start"===e.t0?28:"stop"===e.t0?30:"finish"===e.t0?32:"pause"===e.t0?34:"kill"===e.t0?36:"tick"===e.t0?38:"ping"===e.t0?42:"exit"===e.t0?44:"forceStart"===e.t0?46:"key"===e.t0?48:"update"===e.t0?50:"destroySnakes"===e.t0?52:54;break;case 26:return yL.reset(),e.abrupt("break",54);case 28:return yL.start(),e.abrupt("break",54);case 30:return yL.stop(!1),e.abrupt("break",54);case 32:return yL.stop(!0),e.abrupt("break",54);case 34:return yL.pause(),e.abrupt("break",54);case 36:return yL.kill(),e.abrupt("break",54);case 38:return yL.paused=!1,yL.countBeforePlay=-1,yL.tick(),e.abrupt("break",54);case 42:return self.postMessage("pong"),e.abrupt("break",54);case 44:return yL.exit(),e.abrupt("break",54);case 46:return yL.forceStart(),e.abrupt("break",54);case 48:return n.length>1&&(yL.lastKey=n[1],null!=(u=yL.getPlayer(1,l.PlayerType.HUMAN)||yL.getPlayer(1,l.PlayerType.HYBRID_HUMAN_AI))&&null!=u.lastKey&&(u.lastKey=n[1])),e.abrupt("break",54);case 50:return n.length>1&&("snakes"==n[1].key?(c=SL(n[1].data))&&(yL.snakes=c.snakes):"grid"==n[1].key?(h=SL(null,n[1].data))&&(yL.grid=h.grid):yL[n[1].key]=n[1].data),e.abrupt("break",54);case 52:return n[1]&&n[2]&&yL.destroySnakes(n[1],n[2]),e.abrupt("break",54);case 54:e.next=57;break;case 56:"ping"==n&&self.postMessage("pong");case 57:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),self.postMessage("ready")})()})();