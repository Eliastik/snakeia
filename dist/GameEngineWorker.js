/*! For license information please see GameEngineWorker.js.LICENSE.txt */
(()=>{var __webpack_modules__={144:(e,t,n)=>{"use strict";const r=n(3908);e.exports=(e,t,n=!1)=>{if(e instanceof r)return e;try{return new r(e,t)}catch(e){if(!n)return null;throw e}}},270:(e,t,n)=>{"use strict";const r=n(3908),s=n(8311);e.exports=(e,t,n)=>{let i=null,a=null,o=null;try{o=new s(t,n)}catch(e){return null}return e.forEach(e=>{o.test(e)&&(i&&1!==a.compare(e)||(i=e,a=new r(i,n)))}),i}},551:()=>{},560:(e,t,n)=>{"use strict";const r=n(3908);e.exports=(e,t,n)=>new r(e,n).compare(new r(t,n))},579:(e,t,n)=>{var r=n(3738).default;e.exports=function(e){if(null!=e){var t=e["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],n=0;if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}throw new TypeError(r(e)+" is not iterable")},e.exports.__esModule=!0,e.exports.default=e.exports},887:(e,t,n)=>{var r=n(6993),s=n(1791);e.exports=function(e,t,n,i,a){return new s(r().w(e,t,n,i),a||Promise)},e.exports.__esModule=!0,e.exports.default=e.exports},909:(e,t,n)=>{"use strict";const r=n(3908);e.exports=(e,t,n)=>{const s=new r(e,n),i=new r(t,n);return s.compare(i)||s.compareBuild(i)}},1123:e=>{"use strict";const t=/^[0-9]+$/,n=(e,n)=>{const r=t.test(e),s=t.test(n);return r&&s&&(e=+e,n=+n),e===n?0:r&&!s?-1:s&&!r?1:e<n?-1:1};e.exports={compareIdentifiers:n,rcompareIdentifiers:(e,t)=>n(t,e)}},1234:()=>{},1261:(e,t,n)=>{"use strict";const r=n(3908),s=n(8311),i=n(5580);e.exports=(e,t)=>{e=new s(e,t);let n=new r("0.0.0");if(e.test(n))return n;if(n=new r("0.0.0-0"),e.test(n))return n;n=null;for(let t=0;t<e.set.length;++t){const s=e.set[t];let a=null;s.forEach(e=>{const t=new r(e.semver.version);switch(e.operator){case">":0===t.prerelease.length?t.patch++:t.prerelease.push(0),t.raw=t.format();case"":case">=":a&&!i(t,a)||(a=t);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}}),!a||n&&!i(n,a)||(n=a)}return n&&e.test(n)?n:null}},1729:(e,t,n)=>{"use strict";const r=n(144);e.exports=(e,t)=>{const n=r(e,t);return n&&n.prerelease.length?n.prerelease:null}},1763:(e,t,n)=>{"use strict";const r=n(560);e.exports=(e,t)=>r(e,t,!0)},1791:(e,t,n)=>{var r=n(5172),s=n(5546);e.exports=function e(t,n){function i(e,s,a,o){try{var l=t[e](s),u=l.value;return u instanceof r?n.resolve(u.v).then(function(e){i("next",e,a,o)},function(e){i("throw",e,a,o)}):n.resolve(u).then(function(e){l.value=e,a(l)},function(e){return i("throw",e,a,o)})}catch(e){o(e)}}var a;this.next||(s(e.prototype),s(e.prototype,"function"==typeof Symbol&&Symbol.asyncIterator||"@asyncIterator",function(){return this})),s(this,"_invoke",function(e,t,r){function s(){return new n(function(t,n){i(e,r,t,n)})}return a=a?a.then(s,s):s()},!0)},e.exports.__esModule=!0,e.exports.default=e.exports},1832:(e,t,n)=>{"use strict";const r=n(144);e.exports=(e,t)=>{const n=r(e,null,!0),s=r(t,null,!0),i=n.compare(s);if(0===i)return null;const a=i>0,o=a?n:s,l=a?s:n,u=!!o.prerelease.length;if(l.prerelease.length&&!u){if(!l.patch&&!l.minor)return"major";if(0===l.compareMain(o))return l.minor&&!l.patch?"minor":"patch"}const c=u?"pre":"";return n.major!==s.major?c+"major":n.minor!==s.minor?c+"minor":n.patch!==s.patch?c+"patch":"prerelease"}},2111:(e,t,n)=>{"use strict";const r=n(4641),s=n(3999),i=n(5580),a=n(4089),o=n(7059),l=n(5200);e.exports=(e,t,n,u)=>{switch(t){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e===n;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e!==n;case"":case"=":case"==":return r(e,n,u);case"!=":return s(e,n,u);case">":return i(e,n,u);case">=":return a(e,n,u);case"<":return o(e,n,u);case"<=":return l(e,n,u);default:throw new TypeError(`Invalid operator: ${t}`)}}},2525:(e,t,n)=>{"use strict";const r=n(7638),s=n(560);e.exports=(e,t,n)=>{const i=[];let a=null,o=null;const l=e.sort((e,t)=>s(e,t,n));for(const e of l)r(e,t,n)?(o=e,a||(a=e)):(o&&i.push([a,o]),o=null,a=null);a&&i.push([a,null]);const u=[];for(const[e,t]of i)e===t?u.push(e):t||e!==l[0]?t?e===l[0]?u.push(`<=${t}`):u.push(`${e} - ${t}`):u.push(`>=${e}`):u.push("*");const c=u.join(" || "),h="string"==typeof t.raw?t.raw:String(t);return c.length<h.length?c:t}},2938:(e,t,n)=>{"use strict";const r=n(3908);e.exports=(e,t)=>new r(e,t).major},3007:(e,t,n)=>{"use strict";const r=n(3908);e.exports=(e,t,n,s,i)=>{"string"==typeof n&&(i=s,s=n,n=void 0);try{return new r(e instanceof r?e.version:e,n).inc(t,s,i).version}catch(e){return null}}},3031:function(e,t,n){var r;!function(e,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},3181:function(e,t,n){var r;!function(e,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},3293:function(module){(function(a){var b=Math.sign,c=Math.min,d=Math.abs;void 0===a.Lowlight&&(a.Lowlight={}),"object"==typeof module.exports&&(module.exports=a.Lowlight);class e{constructor(){this.nodes=new Map}id(e){return e}node(e,t=!1){return t?this.nodes.get(this.id(arguments[0])):this.nodes.get(e)}data(e,t){return 2===arguments.length&&(e.graph.get(this)._data=t),e.graph.get(this)._data}adjacent(e,t){return e.graph.get(this).has(t)}neighbors(e){return Array.from(e.graph.get(this).keys())}connected(e,t){return e.graph.get(this)._connectivity===t.graph.get(this)._connectivity}connect(){let e=Array.from(this.nodes.values()),t=0;for(let t=0;t<e.length;t++)e[t].graph.get(this)._connectivity=void 0;for(let n=0;n<e.length;n++){if(void 0!==e[n].graph.get(this)._connectivity)continue;let r=[e[n]];for(t++;r.length;){let e=r.shift();e.graph.get(this)._connectivity=t,this.neighbors(e).map(e=>{void 0===e.graph.get(this)._connectivity&&0>r.indexOf(e)&&r.push(e)})}}}add(e){return 1<arguments.length?Array.from(arguments).map(e=>this.add(e)):(e.graph.set(this,new Map),this.nodes.set(e.id,e),e)}delete(e){return 1<arguments.length?Array.from(arguments).map(e=>this.delete(e)):(e.graph.delete(this),this.nodes.delete(e.id),e)}edge(e,t,n=1,r=1){if(!e.graph.has(this)||!t.graph.has(this))throw new Error("Nodes must be on the same graph");return null===n?e.graph.get(this).delete(t):e.graph.get(this).set(t,n),null===r?t.graph.get(this).delete(e):t.graph.get(this).set(e,r),this}cost(e,t){return this.adjacent(e,t)?e.graph.get(this).get(t):null}}e.fromArray=function(t,n={}){let r=e.fromArray.X(t,n.order),s=e.fromArray.Y(t,n.order),i=e.fromArray.at.bind(null,t,n.order),a=[],o=null;for(let t,l=1;l<Math.max(2,arguments.length);l++){t=new e,a.push(t),n=arguments[l]||{};let u=e.fromArray.id.bind(null,r,s,n.torus),c=n.cost||e.fromArray.cost,h=e.fromArray.edge.bind(null,t,c);for(let e=0;e<r;e++)for(let n,r=0;r<s;r++)n=t.add(o?o.get(u(e,r)):new f(u(e,r))),n.x=e,n.y=r,n.graph.get(t)._data=i(e,r),h(n,t.nodes.get(u(e-1,r))),h(n,t.nodes.get(u(e+1,r))),h(n,t.nodes.get(u(e,r-1))),h(n,t.nodes.get(u(e,r+1)));if(n.diagonals)for(let e=0;e<r;e++)for(let r=0;r<s;r++){let s=t.nodes.get(u(e,r)),i=t.adjacent(s,t.nodes.get(u(e-1,r))),a=t.adjacent(s,t.nodes.get(u(e+1,r))),o=t.adjacent(s,t.nodes.get(u(e,r-1))),l=t.adjacent(s,t.nodes.get(u(e,r+1)));"strict"===n.cutting?(i&&o&&h(s,t.nodes.get(u(e-1,r-1))),i&&l&&h(s,t.nodes.get(u(e-1,r+1))),a&&o&&h(s,t.nodes.get(u(e+1,r-1))),a&&l&&h(s,t.nodes.get(u(e+1,r+1)))):((i||o||n.cutting)&&h(s,t.nodes.get(u(e-1,r-1))),(i||l||n.cutting)&&h(s,t.nodes.get(u(e-1,r+1))),(a||o||n.cutting)&&h(s,t.nodes.get(u(e+1,r-1))),(a||l||n.cutting)&&h(s,t.nodes.get(u(e+1,r+1))))}Object.defineProperty(t,"id",{enumerable:!1,configurable:!1,writable:!0,value:e=>u(e.x,e.y)}),t.connect(),t.X=r,t.Y=s,t.TORUS=n.torus,o||(o=t.nodes)}return 1<a.length?a:a[0]},e.fromArray.X=function(e,t="yx"){return"xy"===t?e.length:"yx"===t?e[0].length:0},e.fromArray.Y=function(e,t="yx"){return"xy"===t?e[0].length:"yx"===t?e.length:0},e.fromArray.at=function(e,t="yx",n,r){return"xy"===t?e[n][r]:e[r][n]},e.fromArray.id=function(e=0,t=0,n=!1,r,s){return n?(s+t)%t*e+(r+e)%e:0<=r&&r<e&&0<=s&&s<t?s*e+r:null},e.fromArray.cost=function(){return 1},e.fromArray.edge=function(e,t,n,r){r&&e.edge(n,r,t(e.data(n),e.data(r)),t(e.data(r),e.data(n)))},e.fromArray.update=function(){console.warn("Graph.fromArray isn't implemented yet")};class f{constructor(e,t){for(let n in this.id=e,this.graph=new Map,t)"id"!=n&&"graph"!=n&&(this[n]=t[n])}}class g{constructor(e){this.nodes=[],this.score="function"==typeof e?e:e=>+e}get size(){return this.nodes.length}add(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return this.nodes.push(e),this.bubble(this.size-1)}set(e){let t=this.nodes.indexOf(e);return~t?this.score(e)<=this.score(this.nodes[t])?this.bubble(this.nodes.indexOf(e)):this.sink(this.nodes.indexOf(e)):this.add(e)}pop(){let e=this.nodes[0],t=this.nodes.pop();return 0<this.size&&(this.nodes[0]=t,this.sink(0)),e}top(){return this.nodes[0]}delete(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.delete(arguments[e]);return this}for(let t=0;t<this.size;t++){if(this.nodes[t]!=e)continue;let n=this.nodes.pop();return t==this.size-1?this:(this.nodes[t]=n,this.bubble(t).sink(t))}}bubble(e){let t=this.nodes[e],n=this.score(t);for(;0<e;){let r=Math.floor((e+1)/2)-1,s=this.nodes[r];if(n>=this.score(s))break;this.nodes[r]=t,this.nodes[e]=s,e=r}return this}sink(e){let t=this.nodes[e],n=this.score(t);for(;;){let r=2*(e+1),s=r-1,i=null;if(s<this.size&&this.score(this.nodes[s])<n&&(i=s),r<this.size&&this.score(this.nodes[r])<(i?this.score(this.nodes[i]):n)&&(i=r),null===i)break;this.nodes[e]=this.nodes[i],this.nodes[i]=t,e=i}return this}}let h={manhattan:function(e,t,n={}){let r=d(t.x-e.x),s=d(t.y-e.y);return(n.multiplier||1)*(r+s)},manhattanTorus:function(e,t,n={}){let r=c(d(t.x-e.x),t.x+(n.x||0)-e.x,e.x+(n.x||0)-t.x),s=c(d(t.y-e.y),t.y+(n.y||0)-e.y,e.y+(n.y||0)-t.y);return(n.multiplier||1)*(r+s)},diagonal:function(e,t,n={}){let r=d(t.x-e.x),s=d(t.y-e.y);return m*(r+s)+(dm-2*m)*c(r,s)},diagonalTorus:function(e,t,n={}){let r=c(d(t.x-e.x),t.x+(n.x||0)-e.x,e.x+(n.x||0)-t.x),s=c(d(t.y-e.y),t.y+(n.y||0)-e.y,e.y+(n.y||0)-t.y);return(n.multiplier||1)*(r+s)+((n.diagonalMultiplier||1.4)-2*(n.multiplier||1))*c(r,s)},euclidian:function(e,t,n={}){let r=d(t.x-e.x),s=d(t.y-e.y);return(n.multiplier||1)*Math.sqrt(r*r+s*s)},euclidianTorus:function(e,t,n={}){let r=c(d(t.x-e.x),t.x+(n.x||0)-e.x,e.x+(n.x||0)-t.x),s=c(d(t.y-e.y),t.y+(n.y||0)-e.y,e.y+(n.y||0)-t.y);return(n.multiplier||1)*(r+s)+((n.diagonalMultiplier||1.4)-2*(n.multiplier||1))*c(r,s)}};class i extends Error{constructor(e){super(e),this.name="WorkerError"}}class j{constructor(t,n={}){if(this.graphs=[],this.heuristic=n.heuristic||"manhattan",this.heuristicOptions=n.heuristicOptions||{},Array.isArray(t)&&(this.heuristic=n.heuristic in h?n.heuristic:n.diagonals?n.torus?"diagonalTorus":"diagonal":n.torus?"manhattanTorus":"manhattan",this.heuristicOptions.x=e.fromArray.X(t,n.order),this.heuristicOptions.y=e.fromArray.Y(t,n.order),this.graphs=e.fromArray.apply(this,arguments),!Array.isArray(this.graphs)&&(this.graphs=[this.graphs])),n.thread&&("undefined"==typeof WorkerGlobalScope||!(self instanceof WorkerGlobalScope))){this.worker=null;try{this.worker=new Worker(n.thread)}catch(t){throw"file:"===window.location.protocol&&console.warn("WebWorkers in local files may not be supported by your browser."),new i(`${n.thread} couldn't be opened.`)}"cost"in n&&(n.cost=n.cost.toString()),this.worker.postMessage(["constructor",t,n]),this.path=(e,t,n={})=>{this._worker_path_callback=n.callback,delete n.callback,this.worker.postMessage(["path",e,t,n])},this.worker.onmessage=e=>{let t=JSON.parse(e.data);"path"===t[0]&&this._worker_path_callback(t[1])}}}path(e,t,n={}){if(n.jps)return this.jps(e,t,n);let r=new g(e=>e.estimated),s=new Map,i=this.graphs[n.layer||0];if(e=i.node(e,!0),t=i.node(t,!0),r.add({node:e,estimated:0}),s.set(e,{score:0,from:null}),!n.static||i.connected(e,t))for(;r.size;){let e=r.pop().node;if(e===t)break;i.neighbors(e).map(a=>{let o=(s.has(e)?s.get(e).score:0)+i.cost(e,a);o<(s.has(a)?s.get(a).score:1/0)&&(s.set(a,{score:o,from:e}),r.set({node:a,estimated:o+h[n.heuristic||this.heuristic](a,t,n.heuristicOptions||this.heuristicOptions)}))}),r.delete(e)}let a=[];if(s.has(t)){let e=t;for(a.push(t);null!==(e=s.get(e).from);)a.push(e);a=a.reverse()}return n.callback&&n.callback(a,s),a}}if(j.JPS=class{constructor(){}static access(e,t,n,r){return e.adjacent(t,r?e.node(n,!0):n)}static neighborhood(e,t,n,r){let s=[],i=n.get(r).from||null;if(null===i)return t.neighbors(r);{let n={x:b(r.x-i.x),y:b(r.y-i.y)};if(0!=n.x&&0!=n.y){let i=e(r,{x:r.x+n.x,y:r.y},!0),a=e(r,{x:r.x,y:r.y+n.y},!0);(i||a)&&(s.push(t.node({x:r.x+n.x,y:r.y+n.y},!0)),i&&(s.push(t.node({x:r.x+n.x,y:r.y},!0)),!e(r,{x:r.x,y:r.y-n.y},!0)&&s.push(t.node({x:r.x+n.x,y:r.y-n.y},!0))),a&&(s.push(t.node({x:r.x,y:r.y+n.y},!0)),!e(r,{x:r.x-n.x,y:r.y},!0)&&s.push(t.node({x:r.x-n.x,y:r.y+n.y},!0))))}else e(r,{x:r.x+n.x,y:r.y+n.y},!0)&&(s.push(t.node({x:r.x+n.x,y:r.y+n.y},!0)),0==n.x?0!=n.y&&(!e(r,{x:r.x-1,y:r.y},!0)&&s.push(t.node({x:r.x-1,y:r.y+n.y},!0)),!e(r,{x:r.x+1,y:r.y},!0)&&s.push(t.node({x:r.x+1,y:r.y+n.y},!0))):(!e(r,{x:r.x,y:r.y-1},!0)&&s.push(t.node({x:r.x+n.x,y:r.y-1},!0)),!e(r,{x:r.x,y:r.y+1},!0)&&s.push(t.node({x:r.x+n.x,y:r.y+1},!0))))}return s.filter(e=>e)}static jump(e,t,n,r,s,i){for(;;){if(!e(i,s))return null;if(s.x===r.x&&s.y===r.y)return s;let a={x:b(s.x-i.x),y:b(s.y-i.y)};if(0!=a.x&&0!=a.y){if(!e(s,{x:s.x-a.x,y:s.y},!0)&&e(s,{x:s.x-a.x,y:s.y+a.y},!0)||!e(s,{x:s.x,y:s.y-a.y},!0)&&e(s,{x:s.x+a.x,y:s.y-a.y},!0))return s;let i=j.JPS.jump.bind(this,e,t,n,r);if(null!==i(t.node({x:s.x+a.x,y:s.y},!0),s)||null!==i(t.node({x:s.x,y:s.y+a.y},!0),s))return s}else if(0!=a.x){if(!e(s,{x:s.x,y:s.y-1},!0)&&e(s,{x:s.x+a.x,y:s.y-1},!0)||!e(s,{x:s.x,y:s.y+1},!0)&&e(s,{x:s.x+a.x,y:s.y+1},!0))return s}else if(0!=a.y&&(!e(s,{x:s.x-1,y:s.y},!0)&&e(s,{x:s.x-1,y:s.y+a.y},!0)||!e(s,{x:s.x+1,y:s.y},!0)&&e(s,{x:s.x+1,y:s.y+a.y},!0)))return s;i=s,s=t.node({x:s.x+a.x,y:s.y+a.y},!0)}return null}},j.prototype.jps=function(e,t,n={}){if(this.graphs[n.layer||0].TORUS)return console.warn("Torus map aren't yet supported by JPS"),n.callback&&n.callback([],new Map),[];let r=new g(e=>e.estimated),s=new Map,i=this.graphs[n.layer||0],a=null;e=i.node(e,!0),t=i.node(t,!0),r.add({node:e,estimated:0}),s.set(e,{score:0,from:null});let o=j.JPS.access.bind(this,i),l=j.JPS.neighborhood.bind(this,o,i,s),u=j.JPS.jump.bind(this,o,i,s,t);if(!n.static||i.connected(e,t))for(;r.size;){let e=r.pop().node;if(e===t)break;l(e).map(o=>{if(null!==(a=u(o,e))){let o=(s.has(e)?s.get(e).score:0)+i.cost(e,a);o<(s.has(a)?s.get(a).score:1/0)&&(s.set(a,{score:o,from:e,jumped:!0}),r.set({node:a,estimated:o+h[n.heuristic||this.heuristic](a,t,n.heuristicOptions||this.heuristicOptions)}))}}),r.delete(e)}let c=[];if(s.has(t)){let n=t;for(;n.x!=e.x||n.y!=e.y;)for(let e=s.get(n).from;n.x!=e.x||n.y!=e.y;)c.push(n),n=i.node({x:n.x+b(e.x-n.x),y:n.y+b(e.y-n.y)},!0);c.push(n),c.reverse()}return n.callback&&n.callback(c,s),c},"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope){let a;onmessage=function(b){let c=b.data;switch(c[0]){case"constructor":if("cost"in c[2]){let a=/^\((.*?)\)\s*=>\s*{/.test(c[2].cost),b=/^function /.test(c[2].cost);c[2].cost=eval(`(${a||b?"":"function "}${c[2].cost})`)}a=new j(c[1],c[2]);break;case"path":postMessage(JSON.stringify(["path",a.path(c[1],c[2],c[3])]))}}}a.Lowlight.Astar={Graph:e,Node:f,BinaryHeap:g,Heuristic:h,Configuration:j,WorkerError:i}})("undefined"==typeof window?this:window)},3717:function(e,t,n){var r;!function(e,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},3738:e=>{function t(n){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},3874:(e,t,n)=>{"use strict";const r=n(8311);e.exports=(e,t)=>{try{return new r(e,t).range||"*"}catch(e){return null}}},3904:(e,t,n)=>{"use strict";const r=Symbol("SemVer ANY");class s{static get ANY(){return r}constructor(e,t){if(t=i(t),e instanceof s){if(e.loose===!!t.loose)return e;e=e.value}e=e.trim().split(/\s+/).join(" "),u("comparator",e,t),this.options=t,this.loose=!!t.loose,this.parse(e),this.semver===r?this.value="":this.value=this.operator+this.semver.version,u("comp",this)}parse(e){const t=this.options.loose?a[o.COMPARATORLOOSE]:a[o.COMPARATOR],n=e.match(t);if(!n)throw new TypeError(`Invalid comparator: ${e}`);this.operator=void 0!==n[1]?n[1]:"","="===this.operator&&(this.operator=""),n[2]?this.semver=new c(n[2],this.options.loose):this.semver=r}toString(){return this.value}test(e){if(u("Comparator.test",e,this.options.loose),this.semver===r||e===r)return!0;if("string"==typeof e)try{e=new c(e,this.options)}catch(e){return!1}return l(e,this.operator,this.semver,this.options)}intersects(e,t){if(!(e instanceof s))throw new TypeError("a Comparator is required");return""===this.operator?""===this.value||new h(e.value,t).test(this.value):""===e.operator?""===e.value||new h(this.value,t).test(e.semver):!((t=i(t)).includePrerelease&&("<0.0.0-0"===this.value||"<0.0.0-0"===e.value)||!t.includePrerelease&&(this.value.startsWith("<0.0.0")||e.value.startsWith("<0.0.0"))||(!this.operator.startsWith(">")||!e.operator.startsWith(">"))&&(!this.operator.startsWith("<")||!e.operator.startsWith("<"))&&(this.semver.version!==e.semver.version||!this.operator.includes("=")||!e.operator.includes("="))&&!(l(this.semver,"<",e.semver,t)&&this.operator.startsWith(">")&&e.operator.startsWith("<"))&&!(l(this.semver,">",e.semver,t)&&this.operator.startsWith("<")&&e.operator.startsWith(">")))}}e.exports=s;const i=n(8587),{safeRe:a,t:o}=n(9718),l=n(2111),u=n(7272),c=n(3908),h=n(8311)},3908:(e,t,n)=>{"use strict";const r=n(7272),{MAX_LENGTH:s,MAX_SAFE_INTEGER:i}=n(6874),{safeRe:a,t:o}=n(9718),l=n(8587),{compareIdentifiers:u}=n(1123);class c{constructor(e,t){if(t=l(t),e instanceof c){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError(`Invalid version. Must be a string. Got type "${typeof e}".`);if(e.length>s)throw new TypeError(`version is longer than ${s} characters`);r("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const n=e.trim().match(t.loose?a[o.LOOSE]:a[o.FULL]);if(!n)throw new TypeError(`Invalid Version: ${e}`);if(this.raw=e,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>i||this.major<0)throw new TypeError("Invalid major version");if(this.minor>i||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>i||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map(e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<i)return t}return e}):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(e){if(r("SemVer.compare",this.version,this.options,e),!(e instanceof c)){if("string"==typeof e&&e===this.version)return 0;e=new c(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof c||(e=new c(e,this.options)),u(this.major,e.major)||u(this.minor,e.minor)||u(this.patch,e.patch)}comparePre(e){if(e instanceof c||(e=new c(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{const n=this.prerelease[t],s=e.prerelease[t];if(r("prerelease compare",t,n,s),void 0===n&&void 0===s)return 0;if(void 0===s)return 1;if(void 0===n)return-1;if(n!==s)return u(n,s)}while(++t)}compareBuild(e){e instanceof c||(e=new c(e,this.options));let t=0;do{const n=this.build[t],s=e.build[t];if(r("build compare",t,n,s),void 0===n&&void 0===s)return 0;if(void 0===s)return 1;if(void 0===n)return-1;if(n!==s)return u(n,s)}while(++t)}inc(e,t,n){if(e.startsWith("pre")){if(!t&&!1===n)throw new Error("invalid increment argument: identifier is empty");if(t){const e=`-${t}`.match(this.options.loose?a[o.PRERELEASELOOSE]:a[o.PRERELEASE]);if(!e||e[1]!==t)throw new Error(`invalid identifier: ${t}`)}}switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t,n);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t,n);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t,n),this.inc("pre",t,n);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t,n),this.inc("pre",t,n);break;case"release":if(0===this.prerelease.length)throw new Error(`version ${this.raw} is not a prerelease`);this.prerelease.length=0;break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":{const e=Number(n)?1:0;if(0===this.prerelease.length)this.prerelease=[e];else{let r=this.prerelease.length;for(;--r>=0;)"number"==typeof this.prerelease[r]&&(this.prerelease[r]++,r=-2);if(-1===r){if(t===this.prerelease.join(".")&&!1===n)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(e)}}if(t){let r=[t,e];!1===n&&(r=[t]),0===u(this.prerelease[0],t)?isNaN(this.prerelease[1])&&(this.prerelease=r):this.prerelease=r}break}default:throw new Error(`invalid increment argument: ${e}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}e.exports=c},3927:(e,t,n)=>{"use strict";const r=n(909);e.exports=(e,t)=>e.sort((e,n)=>r(e,n,t))},3999:(e,t,n)=>{"use strict";const r=n(560);e.exports=(e,t,n)=>0!==r(e,t,n)},4089:(e,t,n)=>{"use strict";const r=n(560);e.exports=(e,t,n)=>r(e,t,n)>=0},4277:(e,t,n)=>{"use strict";const r=n(909);e.exports=(e,t)=>e.sort((e,n)=>r(n,e,t))},4373:e=>{e.exports=function(e){var t=Object(e),n=[];for(var r in t)n.unshift(r);return function e(){for(;n.length;)if((r=n.pop())in t)return e.value=r,e.done=!1,e;return e.done=!0,e}},e.exports.__esModule=!0,e.exports.default=e.exports},4493:(e,t,n)=>{"use strict";const r=n(3908);e.exports=(e,t)=>new r(e,t).patch},4530:()=>{},4633:(e,t,n)=>{var r=n(5172),s=n(6993),i=n(5869),a=n(887),o=n(1791),l=n(4373),u=n(579);function c(){"use strict";var t=s(),n=t.m(c),h=(Object.getPrototypeOf?Object.getPrototypeOf(n):n.__proto__).constructor;function d(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))}var p={throw:1,return:2,break:3,continue:3};function f(e){var t,n;return function(r){t||(t={stop:function(){return n(r.a,2)},catch:function(){return r.v},abrupt:function(e,t){return n(r.a,p[e],t)},delegateYield:function(e,s,i){return t.resultName=s,n(r.d,u(e),i)},finish:function(e){return n(r.f,e)}},n=function(e,n,s){r.p=t.prev,r.n=t.next;try{return e(n,s)}finally{t.next=r.n}}),t.resultName&&(t[t.resultName]=r.v,t.resultName=void 0),t.sent=r.v,t.next=r.n;try{return e.call(this,t)}finally{r.p=t.prev,r.n=t.next}}}return(e.exports=c=function(){return{wrap:function(e,n,r,s){return t.w(f(e),n,r,s&&s.reverse())},isGeneratorFunction:d,mark:t.m,awrap:function(e,t){return new r(e,t)},AsyncIterator:o,async:function(e,t,n,r,s){return(d(t)?a:i)(f(e),t,n,r,s)},keys:l,values:u}},e.exports.__esModule=!0,e.exports.default=e.exports)()}e.exports=c,e.exports.__esModule=!0,e.exports.default=e.exports},4641:(e,t,n)=>{"use strict";const r=n(560);e.exports=(e,t,n)=>0===r(e,t,n)},4756:(e,t,n)=>{var r=n(4633)();e.exports=r;try{regeneratorRuntime=r}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}},4801:function(e,t,n){var r;!function(s,i,a){var o,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(i)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(i)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+e[s%n]+(t=a[s])],a[i]=t;(r.g=function(e){for(var t,n=0,s=r.i,i=r.j,a=r.S;e--;)t=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+t])+(a[i]=t)];return r.i=s,r.j=i,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(a.random(),i),e.exports){e.exports=p;try{o=n(1234)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},5032:(e,t,n)=>{"use strict";const r=n(8311),s=n(3904),{ANY:i}=s,a=n(7638),o=n(560),l=[new s(">=0.0.0-0")],u=[new s(">=0.0.0")],c=(e,t,n)=>{if(e===t)return!0;if(1===e.length&&e[0].semver===i){if(1===t.length&&t[0].semver===i)return!0;e=n.includePrerelease?l:u}if(1===t.length&&t[0].semver===i){if(n.includePrerelease)return!0;t=u}const r=new Set;let s,c,p,f,g,m,y;for(const t of e)">"===t.operator||">="===t.operator?s=h(s,t,n):"<"===t.operator||"<="===t.operator?c=d(c,t,n):r.add(t.semver);if(r.size>1)return null;if(s&&c){if(p=o(s.semver,c.semver,n),p>0)return null;if(0===p&&(">="!==s.operator||"<="!==c.operator))return null}for(const e of r){if(s&&!a(e,String(s),n))return null;if(c&&!a(e,String(c),n))return null;for(const r of t)if(!a(e,String(r),n))return!1;return!0}let b=!(!c||n.includePrerelease||!c.semver.prerelease.length)&&c.semver,x=!(!s||n.includePrerelease||!s.semver.prerelease.length)&&s.semver;b&&1===b.prerelease.length&&"<"===c.operator&&0===b.prerelease[0]&&(b=!1);for(const e of t){if(y=y||">"===e.operator||">="===e.operator,m=m||"<"===e.operator||"<="===e.operator,s)if(x&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===x.major&&e.semver.minor===x.minor&&e.semver.patch===x.patch&&(x=!1),">"===e.operator||">="===e.operator){if(f=h(s,e,n),f===e&&f!==s)return!1}else if(">="===s.operator&&!a(s.semver,String(e),n))return!1;if(c)if(b&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===b.major&&e.semver.minor===b.minor&&e.semver.patch===b.patch&&(b=!1),"<"===e.operator||"<="===e.operator){if(g=d(c,e,n),g===e&&g!==c)return!1}else if("<="===c.operator&&!a(c.semver,String(e),n))return!1;if(!e.operator&&(c||s)&&0!==p)return!1}return!(s&&m&&!c&&0!==p||c&&y&&!s&&0!==p||x||b)},h=(e,t,n)=>{if(!e)return t;const r=o(e.semver,t.semver,n);return r>0?e:r<0||">"===t.operator&&">="===e.operator?t:e},d=(e,t,n)=>{if(!e)return t;const r=o(e.semver,t.semver,n);return r<0?e:r>0||"<"===t.operator&&"<="===e.operator?t:e};e.exports=(e,t,n={})=>{if(e===t)return!0;e=new r(e,n),t=new r(t,n);let s=!1;e:for(const r of e.set){for(const e of t.set){const t=c(r,e,n);if(s=s||null!==t,t)continue e}if(s)return!1}return!0}},5172:e=>{e.exports=function(e,t){this.v=e,this.k=t},e.exports.__esModule=!0,e.exports.default=e.exports},5200:(e,t,n)=>{"use strict";const r=n(560);e.exports=(e,t,n)=>r(e,t,n)<=0},5342:(e,t,n)=>{"use strict";const r=n(7075);e.exports=(e,t,n)=>r(e,t,"<",n)},5546:e=>{function t(n,r,s,i){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}e.exports=t=function(e,n,r,s){function i(n,r){t(e,n,function(e){return this._invoke(n,r,e)})}n?a?a(e,n,{value:r,enumerable:!s,configurable:!s,writable:!s}):e[n]=r:(i("next",0),i("throw",1),i("return",2))},e.exports.__esModule=!0,e.exports.default=e.exports,t(n,r,s,i)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},5571:(e,t,n)=>{"use strict";const r=n(7075);e.exports=(e,t,n)=>r(e,t,">",n)},5580:(e,t,n)=>{"use strict";const r=n(560);e.exports=(e,t,n)=>r(e,t,n)>0},5817:()=>{},5869:(e,t,n)=>{var r=n(887);e.exports=function(e,t,n,s,i){var a=r(e,t,n,s,i);return a.next().then(function(e){return e.done?e.value:a.next()})},e.exports.__esModule=!0,e.exports.default=e.exports},6170:(e,t,n)=>{"use strict";const r=n(3908),s=n(144),{safeRe:i,t:a}=n(9718);e.exports=(e,t)=>{if(e instanceof r)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;let n=null;if((t=t||{}).rtl){const r=t.includePrerelease?i[a.COERCERTLFULL]:i[a.COERCERTL];let s;for(;(s=r.exec(e))&&(!n||n.index+n[0].length!==e.length);)n&&s.index+s[0].length===n.index+n[0].length||(n=s),r.lastIndex=s.index+s[1].length+s[2].length;r.lastIndex=-1}else n=e.match(t.includePrerelease?i[a.COERCEFULL]:i[a.COERCE]);if(null===n)return null;const o=n[2],l=n[3]||"0",u=n[4]||"0",c=t.includePrerelease&&n[5]?`-${n[5]}`:"",h=t.includePrerelease&&n[6]?`+${n[6]}`:"";return s(`${o}.${l}.${u}${c}${h}`,t)}},6254:(e,t,n)=>{"use strict";const r=n(3908);e.exports=(e,t)=>new r(e,t).minor},6780:(e,t,n)=>{"use strict";const r=n(8311);e.exports=(e,t,n)=>(e=new r(e,n),t=new r(t,n),e.intersects(t,n))},6833:function(e,t,n){var r;!function(e,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,i=t.i;return t.w=r=r+1640531527|0,n=s[i+34&127],e=s[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,s,i,a,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,i=-32;i<l;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=a,e.X=o,e.i=s}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},6874:e=>{"use strict";const t=Number.MAX_SAFE_INTEGER||9007199254740991;e.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER:t,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:"2.0.0",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}},6953:(e,t,n)=>{"use strict";const r=n(144);e.exports=(e,t)=>{const n=r(e,t);return n?n.version:null}},6993:(e,t,n)=>{var r=n(5546);function s(){var t,n,i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",o=i.toStringTag||"@@toStringTag";function l(e,s,i,a){var o=s&&s.prototype instanceof c?s:c,l=Object.create(o.prototype);return r(l,"_invoke",function(e,r,s){var i,a,o,l=0,c=s||[],h=!1,d={p:0,n:0,v:t,a:p,f:p.bind(t,4),d:function(e,n){return i=e,a=0,o=t,d.n=n,u}};function p(e,r){for(a=e,o=r,n=0;!h&&l&&!s&&n<c.length;n++){var s,i=c[n],p=d.p,f=i[2];e>3?(s=f===r)&&(o=i[(a=i[4])?5:(a=3,3)],i[4]=i[5]=t):i[0]<=p&&((s=e<2&&p<i[1])?(a=0,d.v=r,d.n=i[1]):p<f&&(s=e<3||i[0]>r||r>f)&&(i[4]=e,i[5]=r,d.n=f,a=0))}if(s||e>1)return u;throw h=!0,r}return function(s,c,f){if(l>1)throw TypeError("Generator is already running");for(h&&1===c&&p(c,f),a=c,o=f;(n=a<2?t:o)||!h;){i||(a?a<3?(a>1&&(d.n=-1),p(a,o)):d.n=o:d.v=o);try{if(l=2,i){if(a||(s="next"),n=i[s]){if(!(n=n.call(i,o)))throw TypeError("iterator result is not an object");if(!n.done)return n;o=n.value,a<2&&(a=0)}else 1===a&&(n=i.return)&&n.call(i),a<2&&(o=TypeError("The iterator does not provide a '"+s+"' method"),a=1);i=t}else if((n=(h=d.n<0)?o:e.call(r,d))!==u)break}catch(e){i=t,a=1,o=e}finally{l=1}}return{value:n,done:h}}}(e,i,a),!0),l}var u={};function c(){}function h(){}function d(){}n=Object.getPrototypeOf;var p=[][a]?n(n([][a]())):(r(n={},a,function(){return this}),n),f=d.prototype=c.prototype=Object.create(p);function g(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,r(e,o,"GeneratorFunction")),e.prototype=Object.create(f),e}return h.prototype=d,r(f,"constructor",d),r(d,"constructor",h),h.displayName="GeneratorFunction",r(d,o,"GeneratorFunction"),r(f),r(f,o,"Generator"),r(f,a,function(){return this}),r(f,"toString",function(){return"[object Generator]"}),(e.exports=s=function(){return{w:l,m:g}},e.exports.__esModule=!0,e.exports.default=e.exports)()}e.exports=s,e.exports.__esModule=!0,e.exports.default=e.exports},7059:(e,t,n)=>{"use strict";const r=n(560);e.exports=(e,t,n)=>r(e,t,n)<0},7075:(e,t,n)=>{"use strict";const r=n(3908),s=n(3904),{ANY:i}=s,a=n(8311),o=n(7638),l=n(5580),u=n(7059),c=n(5200),h=n(4089);e.exports=(e,t,n,d)=>{let p,f,g,m,y;switch(e=new r(e,d),t=new a(t,d),n){case">":p=l,f=c,g=u,m=">",y=">=";break;case"<":p=u,f=h,g=l,m="<",y="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(o(e,t,d))return!1;for(let n=0;n<t.set.length;++n){const r=t.set[n];let a=null,o=null;if(r.forEach(e=>{e.semver===i&&(e=new s(">=0.0.0")),a=a||e,o=o||e,p(e.semver,a.semver,d)?a=e:g(e.semver,o.semver,d)&&(o=e)}),a.operator===m||a.operator===y)return!1;if((!o.operator||o.operator===m)&&f(e,o.semver))return!1;if(o.operator===y&&g(e,o.semver))return!1}return!0}},7180:function(e,t,n){var r;!function(e,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},7272:e=>{"use strict";const t="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};e.exports=t},7391:(e,t,n)=>{var r=n(7180),s=n(3181),i=n(3031),a=n(9067),o=n(6833),l=n(3717),u=n(4801);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},7414:(e,t,n)=>{"use strict";const r=n(144);e.exports=(e,t)=>{const n=r(e.trim().replace(/^[=v]+/,""),t);return n?n.version:null}},7631:(e,t,n)=>{"use strict";const r=n(8311);e.exports=(e,t)=>new r(e,t).set.map(e=>e.map(e=>e.value).join(" ").trim().split(" "))},7638:(e,t,n)=>{"use strict";const r=n(8311);e.exports=(e,t,n)=>{try{t=new r(t,n)}catch(e){return!1}return t.test(e)}},8108:()=>{},8311:(e,t,n)=>{"use strict";const r=/\s+/g;class s{constructor(e,t){if(t=a(t),e instanceof s)return e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease?e:new s(e.raw,t);if(e instanceof o)return this.raw=e.value,this.set=[[e]],this.formatted=void 0,this;if(this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease,this.raw=e.trim().replace(r," "),this.set=this.raw.split("||").map(e=>this.parseRange(e.trim())).filter(e=>e.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const e=this.set[0];if(this.set=this.set.filter(e=>!y(e[0])),0===this.set.length)this.set=[e];else if(this.set.length>1)for(const e of this.set)if(1===e.length&&b(e[0])){this.set=[e];break}}this.formatted=void 0}get range(){if(void 0===this.formatted){this.formatted="";for(let e=0;e<this.set.length;e++){e>0&&(this.formatted+="||");const t=this.set[e];for(let e=0;e<t.length;e++)e>0&&(this.formatted+=" "),this.formatted+=t[e].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(e){const t=((this.options.includePrerelease&&g)|(this.options.loose&&m))+":"+e,n=i.get(t);if(n)return n;const r=this.options.loose,s=r?c[h.HYPHENRANGELOOSE]:c[h.HYPHENRANGE];e=e.replace(s,R(this.options.includePrerelease)),l("hyphen replace",e),e=e.replace(c[h.COMPARATORTRIM],d),l("comparator trim",e),e=e.replace(c[h.TILDETRIM],p),l("tilde trim",e),e=e.replace(c[h.CARETTRIM],f),l("caret trim",e);let a=e.split(" ").map(e=>v(e,this.options)).join(" ").split(/\s+/).map(e=>$(e,this.options));r&&(a=a.filter(e=>(l("loose invalid filter",e,this.options),!!e.match(c[h.COMPARATORLOOSE])))),l("range list",a);const u=new Map,b=a.map(e=>new o(e,this.options));for(const e of b){if(y(e))return[e];u.set(e.value,e)}u.size>1&&u.has("")&&u.delete("");const x=[...u.values()];return i.set(t,x),x}intersects(e,t){if(!(e instanceof s))throw new TypeError("a Range is required");return this.set.some(n=>x(n,t)&&e.set.some(e=>x(e,t)&&n.every(n=>e.every(e=>n.intersects(e,t)))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new u(e,this.options)}catch(e){return!1}for(let t=0;t<this.set.length;t++)if(A(this.set[t],e,this.options))return!0;return!1}}e.exports=s;const i=new(n(8794)),a=n(8587),o=n(3904),l=n(7272),u=n(3908),{safeRe:c,t:h,comparatorTrimReplace:d,tildeTrimReplace:p,caretTrimReplace:f}=n(9718),{FLAG_INCLUDE_PRERELEASE:g,FLAG_LOOSE:m}=n(6874),y=e=>"<0.0.0-0"===e.value,b=e=>""===e.value,x=(e,t)=>{let n=!0;const r=e.slice();let s=r.pop();for(;n&&r.length;)n=r.every(e=>s.intersects(e,t)),s=r.pop();return n},v=(e,t)=>(l("comp",e,t),e=S(e,t),l("caret",e),e=k(e,t),l("tildes",e),e=E(e,t),l("xrange",e),e=C(e,t),l("stars",e),e),w=e=>!e||"x"===e.toLowerCase()||"*"===e,k=(e,t)=>e.trim().split(/\s+/).map(e=>I(e,t)).join(" "),I=(e,t)=>{const n=t.loose?c[h.TILDELOOSE]:c[h.TILDE];return e.replace(n,(t,n,r,s,i)=>{let a;return l("tilde",e,t,n,r,s,i),w(n)?a="":w(r)?a=`>=${n}.0.0 <${+n+1}.0.0-0`:w(s)?a=`>=${n}.${r}.0 <${n}.${+r+1}.0-0`:i?(l("replaceTilde pr",i),a=`>=${n}.${r}.${s}-${i} <${n}.${+r+1}.0-0`):a=`>=${n}.${r}.${s} <${n}.${+r+1}.0-0`,l("tilde return",a),a})},S=(e,t)=>e.trim().split(/\s+/).map(e=>T(e,t)).join(" "),T=(e,t)=>{l("caret",e,t);const n=t.loose?c[h.CARETLOOSE]:c[h.CARET],r=t.includePrerelease?"-0":"";return e.replace(n,(t,n,s,i,a)=>{let o;return l("caret",e,t,n,s,i,a),w(n)?o="":w(s)?o=`>=${n}.0.0${r} <${+n+1}.0.0-0`:w(i)?o="0"===n?`>=${n}.${s}.0${r} <${n}.${+s+1}.0-0`:`>=${n}.${s}.0${r} <${+n+1}.0.0-0`:a?(l("replaceCaret pr",a),o="0"===n?"0"===s?`>=${n}.${s}.${i}-${a} <${n}.${s}.${+i+1}-0`:`>=${n}.${s}.${i}-${a} <${n}.${+s+1}.0-0`:`>=${n}.${s}.${i}-${a} <${+n+1}.0.0-0`):(l("no pr"),o="0"===n?"0"===s?`>=${n}.${s}.${i}${r} <${n}.${s}.${+i+1}-0`:`>=${n}.${s}.${i}${r} <${n}.${+s+1}.0-0`:`>=${n}.${s}.${i} <${+n+1}.0.0-0`),l("caret return",o),o})},E=(e,t)=>(l("replaceXRanges",e,t),e.split(/\s+/).map(e=>N(e,t)).join(" ")),N=(e,t)=>{e=e.trim();const n=t.loose?c[h.XRANGELOOSE]:c[h.XRANGE];return e.replace(n,(n,r,s,i,a,o)=>{l("xRange",e,n,r,s,i,a,o);const u=w(s),c=u||w(i),h=c||w(a),d=h;return"="===r&&d&&(r=""),o=t.includePrerelease?"-0":"",u?n=">"===r||"<"===r?"<0.0.0-0":"*":r&&d?(c&&(i=0),a=0,">"===r?(r=">=",c?(s=+s+1,i=0,a=0):(i=+i+1,a=0)):"<="===r&&(r="<",c?s=+s+1:i=+i+1),"<"===r&&(o="-0"),n=`${r+s}.${i}.${a}${o}`):c?n=`>=${s}.0.0${o} <${+s+1}.0.0-0`:h&&(n=`>=${s}.${i}.0${o} <${s}.${+i+1}.0-0`),l("xRange return",n),n})},C=(e,t)=>(l("replaceStars",e,t),e.trim().replace(c[h.STAR],"")),$=(e,t)=>(l("replaceGTE0",e,t),e.trim().replace(c[t.includePrerelease?h.GTE0PRE:h.GTE0],"")),R=e=>(t,n,r,s,i,a,o,l,u,c,h,d)=>`${n=w(r)?"":w(s)?`>=${r}.0.0${e?"-0":""}`:w(i)?`>=${r}.${s}.0${e?"-0":""}`:a?`>=${n}`:`>=${n}${e?"-0":""}`} ${l=w(u)?"":w(c)?`<${+u+1}.0.0-0`:w(h)?`<${u}.${+c+1}.0-0`:d?`<=${u}.${c}.${h}-${d}`:e?`<${u}.${c}.${+h+1}-0`:`<=${l}`}`.trim(),A=(e,t,n)=>{for(let n=0;n<e.length;n++)if(!e[n].test(t))return!1;if(t.prerelease.length&&!n.includePrerelease){for(let n=0;n<e.length;n++)if(l(e[n].semver),e[n].semver!==o.ANY&&e[n].semver.prerelease.length>0){const r=e[n].semver;if(r.major===t.major&&r.minor===t.minor&&r.patch===t.patch)return!0}return!1}return!0}},8570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},i={};function a(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:m;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),i=m,a=0;a<e.length;a+=8){var l=Math.min(8,e.length-a),h=parseInt(e.substring(a,a+l),n);if(l<8){var d=o(u(n,l));i=i.mul(d).add(o(h))}else i=(i=i.mul(s)).add(o(h))}return i.unsigned=t,i}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,g=a(1<<24),m=a(0);n.ZERO=m;var y=a(0,!0);n.UZERO=y;var b=a(1);n.ONE=b;var x=a(1,!0);n.UONE=x;var v=a(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),i=this,a="";;){var l=i.div(s),c=(i.sub(l.mul(s)).toInt()>>>0).toString(e);if((i=l).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return!(1&~this.low)},S.isEven=function(){return!(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,i=65535&this.low,a=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=i+(65535&e.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=t+a,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return m;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(I))return e.isOdd()?I:m;if(e.eq(I))return this.isOdd()?I:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,i=this.low>>>16,a=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=a*p)>>>16,y+=(b+=i*p)>>>16,b&=65535,y+=(b+=a*d)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*d)>>>16,y&=65535,f+=(y+=a*c)>>>16,f+=n*p+s*d+i*c+a*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,i;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;i=y}else{if(this.eq(I))return e.eq(b)||e.eq(v)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?b:v:(s=this.sub(e.mul(n)),i=n.add(s.div(e)));if(e.eq(I))return this.unsigned?y:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=m}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:u(2,a-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=b),i=i.add(d),s=s.sub(p)}return i},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},8587:e=>{"use strict";const t=Object.freeze({loose:!0}),n=Object.freeze({});e.exports=e=>e?"object"!=typeof e?t:e:n},8590:()=>{},8794:e=>{"use strict";e.exports=class{constructor(){this.max=1e3,this.map=new Map}get(e){const t=this.map.get(e);return void 0===t?void 0:(this.map.delete(e),this.map.set(e,t),t)}delete(e){return this.map.delete(e)}set(e,t){if(!this.delete(e)&&void 0!==t){if(this.map.size>=this.max){const e=this.map.keys().next().value;this.delete(e)}this.map.set(e,t)}return this}}},9067:function(e,t,n){var r;!function(e,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&a(r,n),s.state=function(){return a(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},9589:(e,t,n)=>{"use strict";const r=n(9718),s=n(6874),i=n(3908),a=n(1123),o=n(144),l=n(6953),u=n(7414),c=n(3007),h=n(1832),d=n(2938),p=n(6254),f=n(4493),g=n(1729),m=n(560),y=n(9970),b=n(1763),x=n(909),v=n(3927),w=n(4277),k=n(5580),I=n(7059),S=n(4641),T=n(3999),E=n(4089),N=n(5200),C=n(2111),$=n(6170),R=n(3904),A=n(8311),_=n(7638),D=n(7631),F=n(9628),O=n(270),L=n(1261),M=n(3874),P=n(7075),z=n(5571),B=n(5342),W=n(6780),U=n(2525),G=n(5032);e.exports={parse:o,valid:l,clean:u,inc:c,diff:h,major:d,minor:p,patch:f,prerelease:g,compare:m,rcompare:y,compareLoose:b,compareBuild:x,sort:v,rsort:w,gt:k,lt:I,eq:S,neq:T,gte:E,lte:N,cmp:C,coerce:$,Comparator:R,Range:A,satisfies:_,toComparators:D,maxSatisfying:F,minSatisfying:O,minVersion:L,validRange:M,outside:P,gtr:z,ltr:B,intersects:W,simplifyRange:U,subset:G,SemVer:i,re:r.re,src:r.src,tokens:r.t,SEMVER_SPEC_VERSION:s.SEMVER_SPEC_VERSION,RELEASE_TYPES:s.RELEASE_TYPES,compareIdentifiers:a.compareIdentifiers,rcompareIdentifiers:a.rcompareIdentifiers}},9628:(e,t,n)=>{"use strict";const r=n(3908),s=n(8311);e.exports=(e,t,n)=>{let i=null,a=null,o=null;try{o=new s(t,n)}catch(e){return null}return e.forEach(e=>{o.test(e)&&(i&&-1!==a.compare(e)||(i=e,a=new r(i,n)))}),i}},9718:(e,t,n)=>{"use strict";const{MAX_SAFE_COMPONENT_LENGTH:r,MAX_SAFE_BUILD_LENGTH:s,MAX_LENGTH:i}=n(6874),a=n(7272),o=(t=e.exports={}).re=[],l=t.safeRe=[],u=t.src=[],c=t.safeSrc=[],h=t.t={};let d=0;const p="[a-zA-Z0-9-]",f=[["\\s",1],["\\d",i],[p,s]],g=(e,t,n)=>{const r=(e=>{for(const[t,n]of f)e=e.split(`${t}*`).join(`${t}{0,${n}}`).split(`${t}+`).join(`${t}{1,${n}}`);return e})(t),s=d++;a(e,s,t),h[e]=s,u[s]=t,c[s]=r,o[s]=new RegExp(t,n?"g":void 0),l[s]=new RegExp(r,n?"g":void 0)};g("NUMERICIDENTIFIER","0|[1-9]\\d*"),g("NUMERICIDENTIFIERLOOSE","\\d+"),g("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${p}*`),g("MAINVERSION",`(${u[h.NUMERICIDENTIFIER]})\\.(${u[h.NUMERICIDENTIFIER]})\\.(${u[h.NUMERICIDENTIFIER]})`),g("MAINVERSIONLOOSE",`(${u[h.NUMERICIDENTIFIERLOOSE]})\\.(${u[h.NUMERICIDENTIFIERLOOSE]})\\.(${u[h.NUMERICIDENTIFIERLOOSE]})`),g("PRERELEASEIDENTIFIER",`(?:${u[h.NONNUMERICIDENTIFIER]}|${u[h.NUMERICIDENTIFIER]})`),g("PRERELEASEIDENTIFIERLOOSE",`(?:${u[h.NONNUMERICIDENTIFIER]}|${u[h.NUMERICIDENTIFIERLOOSE]})`),g("PRERELEASE",`(?:-(${u[h.PRERELEASEIDENTIFIER]}(?:\\.${u[h.PRERELEASEIDENTIFIER]})*))`),g("PRERELEASELOOSE",`(?:-?(${u[h.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${u[h.PRERELEASEIDENTIFIERLOOSE]})*))`),g("BUILDIDENTIFIER",`${p}+`),g("BUILD",`(?:\\+(${u[h.BUILDIDENTIFIER]}(?:\\.${u[h.BUILDIDENTIFIER]})*))`),g("FULLPLAIN",`v?${u[h.MAINVERSION]}${u[h.PRERELEASE]}?${u[h.BUILD]}?`),g("FULL",`^${u[h.FULLPLAIN]}$`),g("LOOSEPLAIN",`[v=\\s]*${u[h.MAINVERSIONLOOSE]}${u[h.PRERELEASELOOSE]}?${u[h.BUILD]}?`),g("LOOSE",`^${u[h.LOOSEPLAIN]}$`),g("GTLT","((?:<|>)?=?)"),g("XRANGEIDENTIFIERLOOSE",`${u[h.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),g("XRANGEIDENTIFIER",`${u[h.NUMERICIDENTIFIER]}|x|X|\\*`),g("XRANGEPLAIN",`[v=\\s]*(${u[h.XRANGEIDENTIFIER]})(?:\\.(${u[h.XRANGEIDENTIFIER]})(?:\\.(${u[h.XRANGEIDENTIFIER]})(?:${u[h.PRERELEASE]})?${u[h.BUILD]}?)?)?`),g("XRANGEPLAINLOOSE",`[v=\\s]*(${u[h.XRANGEIDENTIFIERLOOSE]})(?:\\.(${u[h.XRANGEIDENTIFIERLOOSE]})(?:\\.(${u[h.XRANGEIDENTIFIERLOOSE]})(?:${u[h.PRERELEASELOOSE]})?${u[h.BUILD]}?)?)?`),g("XRANGE",`^${u[h.GTLT]}\\s*${u[h.XRANGEPLAIN]}$`),g("XRANGELOOSE",`^${u[h.GTLT]}\\s*${u[h.XRANGEPLAINLOOSE]}$`),g("COERCEPLAIN",`(^|[^\\d])(\\d{1,${r}})(?:\\.(\\d{1,${r}}))?(?:\\.(\\d{1,${r}}))?`),g("COERCE",`${u[h.COERCEPLAIN]}(?:$|[^\\d])`),g("COERCEFULL",u[h.COERCEPLAIN]+`(?:${u[h.PRERELEASE]})?`+`(?:${u[h.BUILD]})?(?:$|[^\\d])`),g("COERCERTL",u[h.COERCE],!0),g("COERCERTLFULL",u[h.COERCEFULL],!0),g("LONETILDE","(?:~>?)"),g("TILDETRIM",`(\\s*)${u[h.LONETILDE]}\\s+`,!0),t.tildeTrimReplace="$1~",g("TILDE",`^${u[h.LONETILDE]}${u[h.XRANGEPLAIN]}$`),g("TILDELOOSE",`^${u[h.LONETILDE]}${u[h.XRANGEPLAINLOOSE]}$`),g("LONECARET","(?:\\^)"),g("CARETTRIM",`(\\s*)${u[h.LONECARET]}\\s+`,!0),t.caretTrimReplace="$1^",g("CARET",`^${u[h.LONECARET]}${u[h.XRANGEPLAIN]}$`),g("CARETLOOSE",`^${u[h.LONECARET]}${u[h.XRANGEPLAINLOOSE]}$`),g("COMPARATORLOOSE",`^${u[h.GTLT]}\\s*(${u[h.LOOSEPLAIN]})$|^$`),g("COMPARATOR",`^${u[h.GTLT]}\\s*(${u[h.FULLPLAIN]})$|^$`),g("COMPARATORTRIM",`(\\s*)${u[h.GTLT]}\\s*(${u[h.LOOSEPLAIN]}|${u[h.XRANGEPLAIN]})`,!0),t.comparatorTrimReplace="$1$2$3",g("HYPHENRANGE",`^\\s*(${u[h.XRANGEPLAIN]})\\s+-\\s+(${u[h.XRANGEPLAIN]})\\s*$`),g("HYPHENRANGELOOSE",`^\\s*(${u[h.XRANGEPLAINLOOSE]})\\s+-\\s+(${u[h.XRANGEPLAINLOOSE]})\\s*$`),g("STAR","(<|>)?=?\\s*\\*"),g("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),g("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},9970:(e,t,n)=>{"use strict";const r=n(560);e.exports=(e,t,n)=>r(t,e,n)}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.loaded=!0,n.exports}__webpack_require__.amdD=function(){throw new Error("define cannot be used indirect")},__webpack_require__.amdO={},__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var __webpack_exports__={};(()=>{"use strict";var e={};__webpack_require__.r(e),__webpack_require__.d(e,{assertParamsValid:()=>ja,computeFlatOffset:()=>io,computeOutShape:()=>qa,getNormalizedAxes:()=>Za,isSliceContinous:()=>so,maskToAxes:()=>Ka,parseSliceParams:()=>ao,sliceInfo:()=>oo,startForAxis:()=>no,startIndicesWithElidedDims:()=>Qa,stopForAxis:()=>ro,stopIndicesWithElidedDims:()=>eo,stridesForAxis:()=>to,stridesWithElidedDims:()=>Xa});var t={};__webpack_require__.r(t),__webpack_require__.d(t,{collectGatherOpShapeInfo:()=>Dh,computeOutShape:()=>_h,segOpComputeOptimalWindowSize:()=>Ah});var n={};__webpack_require__.r(n),__webpack_require__.d(n,{ERF_A1:()=>Xc,ERF_A2:()=>Yc,ERF_A3:()=>Jc,ERF_A4:()=>Zc,ERF_A5:()=>Qc,ERF_P:()=>qc,PARALLELIZE_THRESHOLD:()=>Fc,RowPartitionType:()=>$c,SELU_SCALE:()=>Kc,SELU_SCALEALPHA:()=>jc,applyActivation:()=>Tu,assertAndGetBroadcastShape:()=>$a,assertAxesAreInnerMostDims:()=>bl,assertParamsConsistent:()=>Nc,assignToTypedArray:()=>ih,axesAreInnerMostDims:()=>fl,calculateShapes:()=>Hc,checkEinsumDimSizes:()=>fh,checkPadOnDimRoundingMode:()=>No,combineLocations:()=>gl,combineRaggedTensorToTensorShapes:()=>Rc,complexWithEvenIndex:()=>nh,complexWithOddIndex:()=>rh,computeConv2DInfo:()=>mo,computeConv3DInfo:()=>yo,computeDefaultPad:()=>bo,computeDilation2DInfo:()=>po,computeOptimalWindowSize:()=>Oc,computeOutAndReduceShapes:()=>ml,computeOutShape:()=>Cc,computePool2DInfo:()=>fo,computePool3DInfo:()=>go,convertConv2DDataFormat:()=>Eo,decodeEinsumEquation:()=>dh,eitherStridesOrDilationsAreOne:()=>So,expandShapeToKeepDim:()=>yl,exponent:()=>oh,exponents:()=>ah,fromStringArrayToUint8:()=>Oh,fromUint8ToStringArray:()=>Fh,getAxesPermutation:()=>xl,getBroadcastDims:()=>Na,getComplexWithIndex:()=>sh,getEinsumComputePath:()=>gh,getEinsumPermutation:()=>ph,getFusedBiasGradient:()=>Su,getFusedDyActivation:()=>Iu,getImageCenter:()=>Lc,getInnerMostAxes:()=>wl,getPermuted:()=>Pc,getRaggedRank:()=>_c,getReductionAxes:()=>Ca,getReshaped:()=>Mc,getReshapedPermuted:()=>zc,getRowPartitionTypesHelper:()=>Ac,getSliceBeginCoords:()=>Bc,getSliceSize:()=>Wc,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>xh,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>vh,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>wh,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Sh,getSparseReshapeInputOutputMismatchErrorMessage:()=>Eh,getSparseReshapeInputOutputMultipleErrorMessage:()=>Th,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>kh,getSparseReshapeNegativeOutputDimErrorMessage:()=>Ih,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Rh,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Nh,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Ch,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>$h,getUndoAxesPermutation:()=>vl,isIdentityPermutation:()=>mh,log:()=>Vr,mergeRealAndImagArrays:()=>eh,prepareAndValidate:()=>Uc,prepareSplitSize:()=>bh,segment_util:()=>t,shouldFuse:()=>Eu,slice_util:()=>e,splitRealAndImagArrays:()=>th,stridesOrDilationsArePositive:()=>To,tupleValuesAreOne:()=>Io,upcastType:()=>Us,validateDefaultValueShape:()=>Dc,validateInput:()=>Vc,validateUpdateShape:()=>Gc,warn:()=>Gr});var r={};function s(e,t,n,r,s,i,a){try{var o=e[i](a),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,s)}function i(e){return function(){var t=this,n=arguments;return new Promise(function(r,i){var a=e.apply(t,n);function o(e){s(a,r,i,o,l,"next",e)}function l(e){s(a,r,i,o,l,"throw",e)}o(void 0)})}}__webpack_require__.r(r),__webpack_require__.d(r,{mx:()=>yw,XI:()=>uk,Nk:()=>ck,f6:()=>dk,ct:()=>dw,YG:()=>gk,hH:()=>wk,z3:()=>iI,sG:()=>mI,uM:()=>wI,vS:()=>PI,qB:()=>jI,GG:()=>qI,lg:()=>QI,rq:()=>YI,cu:()=>dS,WR:()=>uS,GE:()=>gS,px:()=>yS,jC:()=>_S,He:()=>OS,hE:()=>HS,BF:()=>Jk,Dk:()=>tT,cl:()=>uT,_B:()=>kT,ub:()=>TT,_f:()=>CT,Ku:()=>FT,qy:()=>LT,Zy:()=>qT,bu:()=>JT,zv:()=>rw,dH:()=>Ew,HS:()=>ik,yH:()=>yE,l3:()=>xE,z9:()=>wE,x6:()=>EE,_m:()=>DE,eW:()=>ME,GK:()=>BE,SP:()=>GE,yr:()=>HE,dl:()=>NI,Dw:()=>JE,xT:()=>tN,_X:()=>Dw,wz:()=>lN});var a=__webpack_require__(4756),o=__webpack_require__.n(a);const l={CaseType:{EMPTY:0,SNAKE:1,FRUIT:2,WALL:3,SNAKE_DEAD:4,SURROUNDED:5,FRUIT_GOLD:6,CROSSED:7},CaseTypeText:{0:"-",1:"o",2:"x",3:"#",4:"O",5:"/",6:"X",7:" "},CaseTypeAIValue:{0:0,1:4,2:1,3:3,4:3,5:0,6:2,7:0},PlayerType:{AI:"PLAYER_AI",HUMAN:"PLAYER_HUMAN",HYBRID_HUMAN_AI:"PLAYER_HYBRID_HUMAN_AI"},AiLevel:{RANDOM:"AI_LEVEL_RANDOM",LOW:"AI_LEVEL_LOW",DEFAULT:"AI_LEVEL_DEFAULT",HIGH:"AI_LEVEL_HIGH",ULTRA:"AI_LEVEL_ULTRA",CUSTOM:"AI_LEVEL_CUSTOM",MOCK:"AI_LEVEL_MOCK"},OutputType:{TEXT:"OUTPUT_TEXT",GRAPHICAL:"OUTPUT_GRAPHICAL"},Setting:{CANVAS_WIDTH:800,CANVAS_HEIGHT:600,FONT_FAMILY:"Delius",FONT_SIZE:32,HEADER_HEIGHT_DEFAULT:75,TARGET_FPS:60,TIME_MULTIPLIER:15,IMAGE_SNAKE_HUE:75,IMAGE_SNAKE_SATURATION:50,IMAGE_SNAKE_VALUE:77,CARS_TO_PRERENDER:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","×"],APP_VERSION:"2.2.0",DATE_VERSION:"10/18/2020",PROB_GOLD_FRUIT_1_PLAYER:100,PROB_GOLD_FRUIT_MULTIPLE_PLAYERS:50,INFO_NOTIF_COLOR:"rgba(52, 152, 219, 0.5)",ERROR_NOTIF_COLOR:"rgba(231, 76, 60, 0.5)"},Direction:{UP:0,TOP:0,RIGHT:1,BOTTOM:2,DOWN:2,LEFT:3,ANGLE_1:4,ANGLE_2:5,ANGLE_3:6,ANGLE_4:7},SimpleDirection:{UP:0,RIGHT:1,BOTTOM:2,LEFT:3},VerticalDirection:{UP:0,BOTTOM:2},HorizontalDirection:{RIGHT:1,LEFT:3},Key:{UP:38,RIGHT:39,BOTTOM:40,LEFT:37,ENTER:13},ActionMapping:{38:0,39:1,40:2,37:3},ActionMappingInverse:{0:38,1:39,2:40,3:37},AIRewards:{GAME_OVER:-1,GAME_OVER_WITH_EMPTY_CASES_AROUND:-1,FRUIT_EATEN:.5,GOLD_FRUIT_EATEN:1,MOVE:-.001,STUCK:0},AIActions:{TURN_LEFT:0,TURN_RIGHT:1,CONTINUE:2},Error:{ROOM_NOT_FOUND:"ROOM_NOT_FOUND",ROOM_ALREADY_JOINED:"ROOM_ALREADY_JOINED",INVALID_SETTINGS:"INVALID_SETTINGS",MAX_ROOM_LIMIT_REACHED:"MAX_ROOM_LIMIT_REACHED",AUTHENTICATION_REQUIRED:"AUTHENTICATION_REQUIRED",ALREADY_CREATED_ROOM:"ALREADY_CREATED_ROOM",BANNED:"BANNED",DISCONNECTED:"DISCONNECTED"},GameState:{STARTING:"STARTING",STARTED:"STARTED",SEARCHING_PLAYERS:"SEARCHING_PLAYERS",AUTHENTICATION_SUCCESS:"AUTHENTICATION_SUCCESS"},QualitySettings3DIndividualPresets:{enableAntialiasing:{type:"boolean"},fruitLights:{type:"boolean"},enableShadows:{type:"boolean"},enableReflections:{type:"boolean"},shadowType:{type:"choice",presets:{low:"basic",medium:"pcf",high:"pcfsoft"}},shadowResolution:{type:"choice",presets:{low:512,normal:1024,medium:2048,high:4096,ultra:8192,extreme:16384}},materialType:{type:"choice",presets:{minimum:"basic",low:"lambert",medium:"phong",high:"pbr"}},snakeSegments:{type:"choice",presets:{minimum:{minTubular:4,maxTubular:128,minRadius:4,maxRadius:64,maxLength:50,maxGridArea:1e4},low:{minTubular:4,maxTubular:256,minRadius:4,maxRadius:64,maxLength:50,maxGridArea:1e4},normal:{minTubular:6,maxTubular:256,minRadius:6,maxRadius:64,maxLength:50,maxGridArea:1e4},medium:{minTubular:6,maxTubular:256,minRadius:6,maxRadius:64,maxLength:50,maxGridArea:1e4},high:{minTubular:6,maxTubular:256,minRadius:6,maxRadius:64,maxLength:50,maxGridArea:1e4},ultra:{minTubular:6,maxTubular:512,minRadius:6,maxRadius:128,maxLength:75,maxGridArea:1e4},extreme:{minTubular:6,maxTubular:1024,minRadius:6,maxRadius:256,maxLength:100,maxGridArea:1e4}}},reflectionQuality:{type:"choice",presets:{low:"static",medium:"dynamicOnce",high:"dynamicThrottled",ultra:"dynamicFull"}},reflectionResolution:{type:"choice",presets:{minimum:32,low:64,medium:128,high:256,ultra:512,extreme:1024}}},QualitySettings3DPreset:{"3dMinimal":{enableShadows:!1,enableAntialiasing:!1,enableReflections:!1,shadowResolution:"low",shadowType:"low",materialType:"low",snakeSegments:"minimum",fruitLights:!1,reflectionQuality:"low",reflectionResolution:"minimum"},"3dLow":{enableShadows:!0,enableAntialiasing:!1,enableReflections:!1,shadowResolution:"low",shadowType:"high",materialType:"high",snakeSegments:"low",fruitLights:!1,reflectionQuality:"low",reflectionResolution:"low"},"3dNormal":{enableShadows:!0,enableAntialiasing:!0,enableReflections:!0,shadowResolution:"normal",shadowType:"high",materialType:"high",snakeSegments:"normal",fruitLights:!0,reflectionQuality:"low",reflectionResolution:"low"},"3dMedium":{enableShadows:!0,enableAntialiasing:!0,enableReflections:!0,shadowResolution:"medium",shadowType:"high",materialType:"high",snakeSegments:"medium",fruitLights:!0,reflectionQuality:"medium",reflectionResolution:"medium"},"3dHigh":{enableShadows:!0,enableAntialiasing:!0,enableReflections:!0,shadowResolution:"high",shadowType:"high",materialType:"high",snakeSegments:"high",fruitLights:!0,reflectionQuality:"high",reflectionResolution:"high"},"3dUltra":{enableShadows:!0,enableAntialiasing:!0,enableReflections:!0,shadowResolution:"ultra",shadowType:"high",materialType:"high",snakeSegments:"ultra",fruitLights:!0,reflectionQuality:"high",reflectionResolution:"high"},"3dExtreme":{enableShadows:!0,enableAntialiasing:!0,enableReflections:!0,shadowResolution:"ultra",shadowType:"high",materialType:"high",snakeSegments:"extreme",fruitLights:!0,reflectionQuality:"ultra",reflectionResolution:"extreme"}},DefaultQualitySettings3D:"3dNormal",DefaultAIModelsListAPI:"https://www.eliastiksofts.com/snakeia/models/"};function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function h(e){var t=function(e){if("object"!=c(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,h(r.key),r)}}function p(e,t,n){return t&&d(e.prototype,t),n&&d(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}var f=function(){function e(t,n,r){u(this,e),this.x=t,this.y=n,this.direction=r}return p(e,[{key:"copy",value:function(){return new e(this.x,this.y,this.direction)}},{key:"convertToKeyDirection",value:function(){switch(this.direction){case l.Direction.UP:return l.Key.UP;case l.Direction.RIGHT:return l.Key.RIGHT;case l.Direction.LEFT:return l.Key.LEFT;case l.Direction.BOTTOM:return l.Key.BOTTOM;default:return this.direction}}},{key:"convertToSimpleDirection",value:function(){switch(this.direction){case l.Key.UP:return l.Direction.UP;case l.Key.RIGHT:return l.Direction.RIGHT;case l.Key.LEFT:return l.Direction.LEFT;case l.Key.BOTTOM:return l.Direction.BOTTOM;default:return this.direction}}},{key:"equals",value:function(e){return null!=e&&this.x==e.x&&this.y==e.y}}])}();const g=function(e,t,n){return Math.floor((n?n():Math.random())*(t-e+1))+e},m=function(e,t){var n=e+t;return n>360?n-360:n<0?360+n:n};var y=__webpack_require__(7391),b=__webpack_require__.n(y),x=__webpack_require__(3293),v=__webpack_require__.n(x);function w(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var k=function(){return p(function e(t,n,r,s,i,a,o,c,h,d){u(this,e),this.width=null==t?20:t,this.height=null==n?20:n,this.generateWalls=null!=r&&r,this.borderWalls=null!=s&&s,this.maze=null!=i&&i,this.mazeFirstPosition=new f(1,1,l.Direction.RIGHT),this.mazeForceAuto=null!=o&&o,this.grid,this.initialGrid,this.fruitPos,this.fruitPosGold,this.customGrid=a,this.seedGrid=c?""+parseInt(c):void 0,this.seedGame=c?""+parseInt(h):void 0,this.rngGrid,this.rngGame,this.probGoldFruitIncrease=null!=d&&d},[{key:"init",value:function(){if(null!=this.customGrid||null!=this.initialGrid){var e;e=null!=this.initialGrid?this.initialGrid:this.customGrid,this.height=e.length,this.width=e[0].length,this.initialGrid=new Array(this.height),this.grid=new Array(this.height);for(var t=0;t<this.height;t++)this.initialGrid[t]=e[t].slice(),this.grid[t]=e[t].slice()}else{this.grid=new Array(this.height);for(var n=0;n<this.height;n++){this.grid[n]=new Array(this.width);for(var r=0;r<this.width;r++)this.borderWalls&&(0==n||n==this.height-1||0==r||r==this.width-1)||this.generateWalls&&this.rngGrid&&this.rngGrid()>.65||this.maze?this.grid[n][r]=l.CaseType.WALL:this.grid[n][r]=l.CaseType.EMPTY}this.maze?this.generateMaze():this.generateWalls&&this.fixWalls(this.borderWalls)}this.fruitPosGold=null}},{key:"reset",value:function(){this.grid=void 0,this.initialGrid=void 0,this.fruitPos=void 0,this.fruitPosGold=void 0,this.rngGrid=new(b())(this.seedGrid),this.rngGame=new(b())(this.seedGame)}},{key:"fixWalls",value:function(e){var t,n,r,s;e?(t=1,r=this.height-1,n=1,s=this.width-1):(t=0,r=this.height,n=0,s=this.width);for(var i=t;i<r;i++)for(var a=n;a<s;a++){var o=new f(a,i),u=this.getNextPosition(o,l.Direction.UP),c=this.getNextPosition(u,l.Direction.LEFT),h=this.getNextPosition(u,l.Direction.RIGHT),d=this.getNextPosition(o,l.Direction.BOTTOM),p=this.getNextPosition(d,l.Direction.LEFT),g=this.getNextPosition(d,l.Direction.RIGHT);this.get(c)!=l.CaseType.WALL&&this.get(h)!=l.CaseType.WALL&&this.get(p)!=l.CaseType.WALL&&this.get(g)!=l.CaseType.WALL||this.set(l.CaseType.EMPTY,o)}}},{key:"mazeRecursion",value:function(e,t){for(var n=function(e,t){for(var n,r,s=e.length-1;s>0;s--)n=Math.floor((t?t():Math.random())*(s+1)),r=e[s],e[s]=e[n],e[n]=r;return e}([l.Direction.UP,l.Direction.RIGHT,l.Direction.BOTTOM,l.Direction.LEFT],this.rngGrid),r=0;r<n.length;r++)switch(n[r]){case l.Direction.UP:if(e-2<=0)continue;this.get(new f(t,e-2))!=l.CaseType.EMPTY&&(this.set(l.CaseType.EMPTY,new f(t,e-2)),this.set(l.CaseType.EMPTY,new f(t,e-1)),this.mazeRecursion(e-2,t));break;case l.Direction.RIGHT:if(t+2>=this.width-1)continue;this.get(new f(t+2,e))!=l.CaseType.EMPTY&&(this.set(l.CaseType.EMPTY,new f(t+2,e)),this.set(l.CaseType.EMPTY,new f(t+1,e)),this.mazeRecursion(e,t+2));break;case l.Direction.BOTTOM:if(e+2>=this.height-1)continue;this.get(new f(t,e+2))!=l.CaseType.EMPTY&&(this.set(l.CaseType.EMPTY,new f(t,e+2)),this.set(l.CaseType.EMPTY,new f(t,e+1)),this.mazeRecursion(e+2,t));break;case l.Direction.LEFT:if(t-2<=0)continue;this.get(new f(t-2,e))!=l.CaseType.EMPTY&&(this.set(l.CaseType.EMPTY,new f(t-2,e)),this.set(l.CaseType.EMPTY,new f(t-1,e)),this.mazeRecursion(e,t-2))}}},{key:"generateMaze",value:function(){this.mazeFirstPosition=new f(1,1,l.Direction.RIGHT),this.set(l.CaseType.EMPTY,this.mazeFirstPosition),this.mazeRecursion(1,1)}},{key:"set",value:function(e,t){this.grid[t.y][t.x]=e}},{key:"get",value:function(e){return this.grid[e.y][e.x]}},{key:"valToChar",value:function(e){return l.CaseTypeText[e]}},{key:"getImageCase",value:function(e){return function(e){switch(e){case l.CaseType.WALL:return"wall.png";case l.CaseType.FRUIT:return"fruit.png";case l.CaseType.FRUIT_GOLD:return"fruit_gold.png";case l.CaseType.EMPTY:case l.CaseType.SNAKE:case l.CaseType.SNAKE_DEAD:case l.CaseType.SURROUNDED:case l.CaseType.CROSSED:return""}return"unknown.png"}(this.get(e))}},{key:"getGraph",value:function(e){for(var t=new Array(this.height),n=0;n<this.height;n++){t[n]=new Array(this.width);for(var r=0;r<this.width;r++){var s=new f(r,n);e&&this.get(s)==l.CaseType.SNAKE?t[n][r]=0:this.isDeadPosition(s)?t[n][r]=1:t[n][r]=0}}return t}},{key:"getRandomPosition",value:function(){return new f(g(0,this.width-1,this.rngGame),g(0,this.height-1,this.rngGame))}},{key:"setFruit",value:function(e,t){var n,r,s=[1];if(t||null==this.fruitPos||this.get(this.fruitPos)!=l.CaseType.FRUIT||this.set(l.CaseType.EMPTY,this.fruitPos),!(this.getTotal(l.CaseType.EMPTY)>0))return!!(this.getTotal(l.CaseType.EMPTY)<=0&&this.fruitPosGold);do{if(n=this.getRandomPosition(),(r=this.detectCorridor(n))&&this.get(n)==l.CaseType.EMPTY&&this.set(l.CaseType.SURROUNDED,n),this.getTotal(l.CaseType.EMPTY)<=0)return!!this.fruitPosGold}while(this.get(n)!=l.CaseType.EMPTY||this.isFruitSurrounded(n,!0)||this.maze&&!this.testFruitMaze(n,s)||r);t?(this.fruitPosGold=n,this.set(l.CaseType.FRUIT_GOLD,n)):(this.fruitPos=n,this.set(l.CaseType.FRUIT,n));var i=1==g(1,this.probGoldFruitIncrease?3:e>1?l.Setting.PROB_GOLD_FRUIT_MULTIPLE_PLAYERS:l.Setting.PROB_GOLD_FRUIT_1_PLAYER,this.rngGame);return!this.maze&&null==this.fruitPosGold&&i&&this.setFruit(e,!0),!0}},{key:"testFruitMaze",value:function(e,t){var n=this.getGraph(!0);return new(v().Astar.Configuration)(n,{order:"yx",torus:!1,diagonals:!1,cutting:!1,cost:function(e,t){return 1==t?null:1}}).path({x:this.mazeFirstPosition.x,y:this.mazeFirstPosition.y},{x:e.x,y:e.y}).length<Math.ceil(this.getTotal(l.CaseType.EMPTY)/(1*Math.ceil(t[0]/4)))?(t[0]++,!1):(t[0]++,!0)}},{key:"isCaseSurrounded",value:function(e,t,n,r){var s=this;if(!e)return!1;for(var i,a=new Set(r),o=new Set(n),u=new Set,c=[e],h=function(){var e,n=c.pop(),r=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return w(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?w(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,s=function(){};return{s,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){o=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(o)throw i}}}}([l.Direction.UP,l.Direction.BOTTOM,l.Direction.LEFT,l.Direction.RIGHT].map(function(e){return s.getNextPosition(n,e)}));try{for(r.s();!(e=r.n()).done;){var i=e.value,h=i.y*s.width+i.x;if(!u.has(h)){var d=s.get(i);if(a.has(d)){if(o.has(d))return{v:!1};u.add(h),c.push(i),t&&d==l.CaseType.EMPTY&&s.set(l.CaseType.SURROUNDED,i)}}}}catch(e){r.e(e)}finally{r.f()}};c.length>0;)if(i=h())return i.v;var d=this.get(e);return t&&[l.CaseType.EMPTY,l.CaseType.FRUIT,l.CaseType.FRUIT_GOLD].includes(d)&&this.set(l.CaseType.SURROUNDED,e),!0}},{key:"isFruitSurrounded",value:function(e,t){var n=this.isCaseSurrounded(e,!1,[l.CaseType.SNAKE],[l.CaseType.EMPTY,l.CaseType.SNAKE]);return n&&t&&this.isCaseSurrounded(e,!0,[l.CaseType.SNAKE],[l.CaseType.EMPTY,l.CaseType.SNAKE]),n}},{key:"detectCorridor",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.grid?JSON.parse(JSON.stringify(this.grid)):null;if(this.maze||!e||!t)return!1;var n=this.getNextPosition(e,l.Direction.TOP),r=this.getNextPosition(e,l.Direction.BOTTOM),s=this.getNextPosition(e,l.Direction.RIGHT),i=this.getNextPosition(e,l.Direction.LEFT),a=this.isDeadPosition(n,!0,!0)+this.isDeadPosition(r,!0,!0)+this.isDeadPosition(s,!0,!0)+this.isDeadPosition(i,!0,!0);if(a<=1||this.isDeadPosition(e,!0))return!1;if(a>=3)return!0;t[e.y][e.x]=l.CaseType.CROSSED;var o=t[n.y][n.x]!=l.CaseType.CROSSED&&this.detectCorridor(n,t),u=t[r.y][r.x]!=l.CaseType.CROSSED&&this.detectCorridor(r,t),c=t[i.y][i.x]!=l.CaseType.CROSSED&&this.detectCorridor(i,t),h=t[s.y][s.x]!=l.CaseType.CROSSED&&this.detectCorridor(s,t);return!!(u||o||c||h)}},{key:"getOnLine",value:function(e,t){for(var n=0,r=0;r<this.width;r++)this.get(new f(r,t))==e&&n++;return n}},{key:"getTotal",value:function(e){for(var t=0,n=0;n<this.height;n++)t+=this.getOnLine(e,n);return t}},{key:"getNextPosition",value:function(e,t){var n=new f(e.x,e.y,t);switch(t){case l.Direction.LEFT:n.x--,n.direction=l.Direction.LEFT;break;case l.Direction.UP:n.y--,n.direction=l.Direction.UP;break;case l.Direction.RIGHT:n.x++,n.direction=l.Direction.RIGHT;break;case l.Direction.BOTTOM:n.y++,n.direction=l.Direction.BOTTOM;break;case l.Key.LEFT:n.x--,n.direction=l.Key.LEFT;break;case l.Key.UP:n.y--,n.direction=l.Key.UP;break;case l.Key.RIGHT:n.x++,n.direction=l.Direction.RIGHT;break;case l.Key.BOTTOM:n.y++,n.direction=l.Direction.BOTTOM}return n.x<0?n.x=this.width-1:n.x>=this.width&&(n.x=0),n.y<0?n.y=this.height-1:n.y>=this.height&&(n.y=0),n}},{key:"getDirectionTo",value:function(e,t){return this.getNextPosition(e,l.Direction.UP).equals(t)?l.Direction.UP:this.getNextPosition(e,l.Direction.BOTTOM).equals(t)?l.Direction.BOTTOM:this.getNextPosition(e,l.Direction.RIGHT).equals(t)?l.Direction.RIGHT:this.getNextPosition(e,l.Direction.LEFT).equals(t)?l.Direction.LEFT:-1}},{key:"invertDirection",value:function(e){return e==l.Direction.UP?l.Direction.BOTTOM:e==l.Direction.BOTTOM?l.Direction.UP:e==l.Direction.RIGHT?l.Direction.LEFT:e==l.Direction.LEFT?l.Direction.RIGHT:null}},{key:"isDeadPosition",value:function(e,t,n){return!t&&this.get(e)==l.CaseType.SNAKE||this.get(e)==l.CaseType.WALL||this.get(e)==l.CaseType.SNAKE_DEAD||!!n&&this.get(e)==l.CaseType.SURROUNDED}},{key:"toString",value:function(){for(var e="",t=0;t<this.height;t++){for(var n=0;n<this.width;n++)e+=this.valToChar(this.get(new f(n,t)))+" ";e+="\n"}return e}}])}(),I=function(){return p(function e(){u(this,e),this.aiFruitGoal=l.CaseType.FRUIT,this.aiLevelText="custom"},[{key:"ai",value:function(e){var t=e.getHeadPosition(),n=e.grid.fruitPos,r=e.grid.fruitPosGold;if(n&&e.grid.get(n)==l.CaseType.FRUIT){var s=Math.abs(n.x-t.x)+Math.abs(n.y-t.y),i=r?Math.abs(r.x-t.x)+Math.abs(r.y-t.y):-1;r&&e.grid.get(r)==l.CaseType.FRUIT_GOLD&&this.aiFruitGoal==l.CaseType.FRUIT?this.aiFruitGoal=i<=s?l.CaseType.FRUIT_GOLD:l.CaseType.FRUIT:r&&e.grid.get(r)==l.CaseType.FRUIT_GOLD||(this.aiFruitGoal=l.CaseType.FRUIT)}else n&&e.grid.get(n)==l.CaseType.FRUIT||!r||e.grid.get(r)!=l.CaseType.FRUIT_GOLD||(this.aiFruitGoal=l.CaseType.FRUIT_GOLD);return null}}])}();function S(e,t){if(t&&("object"==c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(r){var s=Object.getOwnPropertyDescriptor(r,t);return s.get?s.get.call(arguments.length<3?e:n):s.value}},E.apply(null,arguments)}function N(e,t){return N=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},N(e,t)}function C(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&N(e,t)}function $(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return($=function(){return!!e})()}var R=function(e){function t(){var e,n,r,s;return u(this,t),n=this,r=T(r=t),(e=S(n,$()?Reflect.construct(r,[],T(n).constructor):r.apply(n,s))).aiLevelText="random",e}return C(t,e),p(t,[{key:"ai",value:function(e){!function(e,t,n){var r=E(T(e.prototype),"ai",n);return"function"==typeof r?function(e){return r.apply(n,e)}:r}(t,0,this)([e]);var n=e.getHeadPosition(),r=e.grid.isDeadPosition(e.getNextPosition(n,l.Key.UP)),s=e.grid.isDeadPosition(e.getNextPosition(n,l.Key.LEFT)),i=e.grid.isDeadPosition(e.getNextPosition(n,l.Key.BOTTOM)),a=e.grid.isDeadPosition(e.getNextPosition(n,l.Key.RIGHT));if(r&&s&&i&&a)return l.Key.UP;for(var o=null;null==o||e.grid.isDeadPosition(e.getNextPosition(n,o));)switch(g(1,4,e.grid?e.grid.rngGame:null)){case 1:o=l.Key.UP;break;case 2:o=l.Key.LEFT;break;case 3:o=l.Key.BOTTOM;break;case 4:o=l.Key.RIGHT}return o}}])}(I);function A(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(A=function(){return!!e})()}var _=function(e){function t(){var e,n,r,s;return u(this,t),n=this,r=T(r=t),(e=S(n,A()?Reflect.construct(r,[],T(n).constructor):r.apply(n,s))).aiLevelText="low",e}return C(t,e),p(t,[{key:"ai",value:function(e){if(function(e,t,n){var r=E(T(e.prototype),"ai",n);return"function"==typeof r?function(e){return r.apply(n,e)}:r}(t,0,this)([e]),null!=e.grid.fruitPos){var n=e.getHeadPosition(),r=this.aiFruitGoal==l.CaseType.FRUIT_GOLD?e.grid.fruitPosGold:e.grid.fruitPos,s=l.Key.RIGHT;r.x>n.x?s=r.x-n.x>e.grid.width/2?l.Key.LEFT:l.Key.RIGHT:r.x<n.x?s=n.x-r.x>e.grid.width/2?l.Key.RIGHT:l.Key.LEFT:r.y<n.y?s=n.y-r.y>e.grid.height/2?l.Key.BOTTOM:l.Key.UP:r.y>n.y&&(s=r.y-n.y>e.grid.height/2?l.Key.UP:l.Key.BOTTOM);var i=e.getNextPosition(n,s);if(e.grid.isDeadPosition(i)){for(var a=this.direction,o=null,u=1;u<e.queue.length;u++)if(e.get(u).direction!=a){o=e.get(u).direction;break}i=e.getNextPosition(n,o),e.grid.isDeadPosition(i)?e.grid.isDeadPosition(e.getNextPosition(n,l.Key.UP))?e.grid.isDeadPosition(e.getNextPosition(n,l.Key.RIGHT))?e.grid.isDeadPosition(e.getNextPosition(n,l.Key.BOTTOM))?e.grid.isDeadPosition(e.getNextPosition(n,l.Key.LEFT))||(s=l.Key.LEFT):s=l.Key.BOTTOM:s=l.Key.RIGHT:s=l.Key.UP:s=i.convertToKeyDirection()}return s}}}])}(I);function D(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function F(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(F=function(){return!!e})()}var O=function(e){function t(e){var n,r,s,i;return u(this,t),r=this,s=T(s=t),(n=S(r,F()?Reflect.construct(s,[],T(r).constructor):s.apply(r,i))).enableTorus=e,n.aiLevelText="normal",n.path=[],n.oldFruitPosition=null,n.oldFruitPositionGold=null,n}return C(t,e),p(t,[{key:"ai",value:function(e){!function(e,t,n){var r=E(T(e.prototype),"ai",n);return"function"==typeof r?function(e){return r.apply(n,e)}:r}(t,0,this)([e]),this.shouldUpdatePath(e)&&this.updatePath(e);var n=e.getHeadPosition();if(this.path.length>0){var r=this.path.pop(),s=new f(r.x,r.y);return new f(null,null,e.getDirectionTo(n,s)).convertToKeyDirection()}return null}},{key:"shouldUpdatePath",value:function(e){if(0===this.path.length)return!0;var t=e.grid.fruitPos,n=e.grid.fruitPosGold;if(this.aiFruitGoal===l.CaseType.FRUIT_GOLD&&!n.equals(this.oldFruitPositionGold))return!0;if(this.aiFruitGoal===l.CaseType.FRUIT&&!t.equals(this.oldFruitPosition))return!0;var r,s=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return D(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?D(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,s=function(){};return{s,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){o=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(o)throw i}}}}(this.path);try{for(s.s();!(r=s.n()).done;){var i=r.value;if(e.grid.isDeadPosition(new f(i.x,i.y)))return!0}}catch(e){s.e(e)}finally{s.f()}return!1}},{key:"updatePath",value:function(e){var t=e.getHeadPosition(),n=e.grid.fruitPos,r=e.grid.fruitPosGold,s=n;if(t&&(n||r)){var i=e.grid.getGraph(!1),a=new(v().Astar.Configuration)(i,{order:"yx",torus:!!this.enableTorus,diagonals:!1,cutting:!1,static:!0,cost:function(e,t){return 1==t?null:1}});r&&this.aiFruitGoal===l.CaseType.FRUIT_GOLD&&(s=r);var o=this.calculatePath(a,t,s);o.length<1&&(this.aiFruitGoal!==l.CaseType.FRUIT_GOLD&&r||(s=n),o=this.calculatePath(a,t,s)),this.path=o.reverse(),this.path.pop(),this.oldFruitPosition=n,this.oldFruitPositionGold=r}}},{key:"calculatePath",value:function(e,t,n){return e.path({x:t.x,y:t.y},{x:n?n.x:null,y:n?n.y:null})}}])}(I);function L(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(L=function(){return!!e})()}var M=function(e){function t(e){var n,r,s,i;return u(this,t),r=this,i=[!0],s=T(s=t),(n=S(r,L()?Reflect.construct(s,i||[],T(r).constructor):s.apply(r,i))).aiLow=new _(e),n.aiLevelText="high",n}return C(t,e),p(t,[{key:"ai",value:function(e){var n=function(e,t,n){var r=E(T(e.prototype),"ai",n);return"function"==typeof r?function(e){return r.apply(n,e)}:r}(t,0,this)([e]);return n||this.aiLow.ai(e)}}])}(O);function P(e,t,n){return(t=h(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var z=__webpack_require__(9589),B=__webpack_require__.n(z);class W{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class U{refCount(e){return G("refCount")}incRef(e){return G("incRef")}timerAvailable(){return!0}time(e){return G("time")}read(e){return G("read")}readSync(e){return G("readSync")}readToGPU(e,t){return G("readToGPU")}numDataIds(){return G("numDataIds")}disposeData(e,t){return G("disposeData")}write(e,t,n){return G("write")}move(e,t,n,r,s){return G("move")}createTensorFromGPUData(e,t,n){return G("createTensorFromGPUData")}memory(){return G("memory")}floatPrecision(){return G("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return G("dispose")}}function G(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function V(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,K(e,t,n)}function H(e,t,n){return Math.max(e,Math.min(t,n))}function j(e){return e%2==0?e:e+1}function K(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function q(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function X(e,t,n=""){q(Z(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Y(e){q(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function J(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Z(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Q(e){return e%1==0}function ee(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function te(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ne(e,t=e=>0,n,r){return new Promise((s,i)=>{let a=0;const o=()=>{if(e())return void s();a++;const l=t(a);null!=n&&a>=n?i():null!=r?r(o,l):setTimeout(o,l)};o()})}function re(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function se(e,t){const n=t.length;return q((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),q(e.every(e=>Q(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function ie(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||s?null:se(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[a]||i[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ae(e,t){return oe(e,t)}function oe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function le(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ue(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ce(e){return"string"==typeof e||e instanceof String}function he(e){return"number"==typeof e}function de(e){return Array.isArray(e)?de(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":he(e)?"float32":ce(e)?"string":"boolean"==typeof e?"bool":"float32"}function pe(e){return!!(e&&e.constructor&&e.call&&e.apply)}function fe(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function ge(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function me(e,t,n,r=!1){const s=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)s[t]=n[e+t]}else{const i=t[0],a=t.slice(1),o=a.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<i;t++)s[t]=me(e+t*o,a,n,r)}return s}function ye(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return me(0,e,t,n)}function be(e,t){const n=xe(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function xe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ve(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return ye(e,new Float32Array(n));if("int32"===t)return ye(e,new Int32Array(n));if("bool"===t)return ye(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function we(e){e.forEach(t=>{q(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function ke(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ie(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Se(e){return e&&e.then&&"function"==typeof e.then}const Te="tfjsflags";class Ee{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ne,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ce().getBool("IS_TEST")||Ce().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ce().getBool("IS_TEST")||Ce().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Se(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);Te in e&&e[Te].split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)})}}function Ne(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function Ce(){return Re}let $e,Re=null;function Ae(){if(null==$e){let e;if("undefined"!=typeof window)e=window;else if(void 0!==__webpack_require__.g)e=__webpack_require__.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}$e=e}return $e}function _e(e,t){const n=function(){const e=Ae();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const De="Abs",Fe="Acos",Oe="Acosh",Le="Add",Me="AddN",Pe="All",ze="Any",Be="ArgMax",We="ArgMin",Ue="Asin",Ge="Asinh",Ve="Atan",He="Atanh",je="Atan2",Ke="AvgPool",qe="AvgPoolGrad",Xe="AvgPool3D",Ye="AvgPool3DGrad",Je="BatchMatMul",Ze="BatchToSpaceND",Qe="Bincount",et="BitwiseAnd",tt="BroadcastArgs",nt="Cast",rt="Ceil",st="ClipByValue",it="Complex",at="ComplexAbs",ot="Concat",lt="Conv2D",ut="Conv2DBackpropFilter",ct="Conv2DBackpropInput",ht="Conv3D",dt="Conv3DBackpropFilterV2",pt="Conv3DBackpropInputV2",ft="Cos",gt="Cosh",mt="Cumprod",yt="Cumsum",bt="CropAndResize",xt="DenseBincount",vt="DepthToSpace",wt="DepthwiseConv2dNative",kt="DepthwiseConv2dNativeBackpropFilter",It="DepthwiseConv2dNativeBackpropInput",St="Diag",Tt="Dilation2D",Et="Dilation2DBackpropInput",Nt="Dilation2DBackpropFilter",Ct="RealDiv",$t="Einsum",Rt="Elu",At="EluGrad",_t="Erf",Dt="Equal",Ft="Exp",Ot="ExpandDims",Lt="Expm1",Mt="FFT",Pt="Fill",zt="FlipLeftRight",Bt="Floor",Wt="FloorDiv",Ut="FusedBatchNorm",Gt="GatherV2",Vt="GatherNd",Ht="Greater",jt="GreaterEqual",Kt="Identity",qt="IFFT",Xt="Imag",Yt="IsFinite",Jt="IsInf",Zt="IsNan",Qt="LeakyRelu",en="Less",tn="LessEqual",nn="LinSpace",rn="Log",sn="Log1p",an="LogicalAnd",on="LogicalNot",ln="LogicalOr",un="LRN",cn="LRNGrad",hn="Max",dn="Maximum",pn="MaxPool",fn="MaxPoolGrad",gn="MaxPool3D",mn="MaxPool3DGrad",yn="MaxPoolWithArgmax",bn="Mean",xn="Min",vn="Minimum",wn="MirrorPad",kn="Mod",In="Multinomial",Sn="Multiply",Tn="Neg",En="NotEqual",Nn="NonMaxSuppressionV3",Cn="NonMaxSuppressionV4",$n="NonMaxSuppressionV5",Rn="OnesLike",An="OneHot",_n="Pack",Dn="PadV2",Fn="Pow",On="Prelu",Ln="Prod",Mn="RaggedGather",Pn="RaggedRange",zn="RaggedTensorToTensor",Bn="Range",Wn="Real",Un="Reciprocal",Gn="Relu",Vn="Reshape",Hn="ResizeNearestNeighbor",jn="ResizeNearestNeighborGrad",Kn="ResizeBilinear",qn="ResizeBilinearGrad",Xn="Relu6",Yn="Reverse",Jn="Round",Zn="Rsqrt",Qn="ScatterNd",er="TensorScatterUpdate",tr="SearchSorted",nr="Select",rr="Selu",sr="Slice",ir="Sin",ar="Sinh",or="Sign",lr="Sigmoid",ur="Softplus",cr="Sqrt",hr="Sum",dr="SpaceToBatchND",pr="SplitV",fr="Softmax",gr="SparseFillEmptyRows",mr="SparseReshape",yr="SparseSegmentMean",br="SparseSegmentSum",xr="SparseToDense",vr="SquaredDifference",wr="Square",kr="StaticRegexReplace",Ir="StridedSlice",Sr="StringNGrams",Tr="StringSplit",Er="StringToHashBucketFast",Nr="Sub",Cr="Tan",$r="Tanh",Rr="Tile",Ar="TopK",_r="Transform",Dr="Transpose",Fr="Unique",Or="Unpack",Lr="UnsortedSegmentSum",Mr="ZerosLike",Pr="Step",zr="RotateWithOffset",Br="_FusedMatMul",Wr="FusedConv2D",Ur="FusedDepthwiseConv2D";function Gr(...e){Ce().getBool("IS_TEST")||Ce().getBool("PROD")||console.warn(...e)}function Vr(...e){Ce().getBool("IS_TEST")||Ce().getBool("PROD")||console.log(...e)}const Hr=_e("kernelRegistry",()=>new Map),jr=_e("gradRegistry",()=>new Map);function Kr(e,t){const n=Zr(e,t);return Hr.get(n)}function qr(e){return jr.get(e)}function Xr(e){const t=Hr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===e&&n.push(a)}return n}function Yr(e){const{kernelName:t,backendName:n}=e,r=Zr(t,n);Hr.has(r)&&Gr(`The kernel '${t}' for backend '${n}' is already registered`),Hr.set(r,e)}function Jr(e){const{kernelName:t}=e;jr.has(t)&&Ce().getBool("DEBUG")&&Gr(`Overriding the gradient for '${t}'`),jr.set(t,e)}function Zr(e,t){return`${t}_${e}`}function Qr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var es=__webpack_require__(8570);const ts=__webpack_require__.n(es)()||es;function ns(e){return ts.fromString(e,!0,16)}const rs=ns("c3a5c85c97cb3127"),ss=ns("b492b66fbe98f273"),is=ns("9ae16a3b2f90404f");function as(e){return e.xor(e.shru(47))}function os(e,t,n){const r=e.slice(t,t+n);return ts.fromBytes(Array.from(r),!0,!0)}function ls(e,t){return os(e,t,8)}function us(e,t){return os(e,t,4)}function cs(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function hs(e,t,n=ns("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function ds(e,t,n,r){return function(e,t,n,r,s,i){s=s.add(e),i=cs(i.add(s).add(r),21);const a=s;return s=(s=s.add(t)).add(n),i=i.add(cs(s,44)),[s.add(r),i.add(a)]}(ls(e,t),ls(e,t+8),ls(e,t+16),ls(e,t+24),n,r)}function ps(e,t=e.length){const n=ts.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=is.add(2*t),r=ls(e,0).add(is),s=ls(e,t-8);return hs(cs(s,37).mul(n).add(r),cs(r,25).add(s).mul(n),n)}if(t>=4){const n=is.add(2*t);return hs(us(e,0).shl(3).add(t),us(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return as(is.mul(n).xor(rs.mul(r))).mul(is)}return is}(e,t):function(e,t=e.length){const n=is.add(2*t),r=ls(e,0).mul(ss),s=ls(e,8),i=ls(e,t-8).mul(n),a=ls(e,t-16).mul(is);return hs(cs(r.add(s),43).add(cs(i,30)).add(a),r.add(cs(s.add(is),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=is.add(2*t),r=ls(e,0).mul(is),s=ls(e,8),i=ls(e,t-8).mul(n),a=ls(e,t-16).mul(is),o=cs(r.add(s),43).add(cs(i,30)).add(a),l=hs(o,r.add(cs(s.add(is),18)).add(i),n),u=ls(e,16).mul(n),c=ls(e,24),h=o.add(ls(e,t-32)).mul(n),d=l.add(ls(e,t-24)).mul(n);return hs(cs(u.add(c),43).add(cs(h,30)).add(d),u.add(cs(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(ss).add(113),i=as(s.mul(is).add(113)).mul(is),a=[ts.UZERO,ts.UZERO],o=[ts.UZERO,ts.UZERO];r=r.mul(is).add(ls(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=cs(r.add(s).add(a[0]).add(ls(e,l+8)),37).mul(ss),s=cs(s.add(a[1]).add(ls(e,l+48)),42).mul(ss),r=r.xor(o[1]),s=s.add(a[0]).add(ls(e,l+40)),i=cs(i.add(o[0]),33).mul(ss),a=ds(e,l,a[1].mul(ss),r.add(o[0])),o=ds(e,l+32,i.add(o[1]),s.add(ls(e,l+16))),[i,r]=[r,i],l+=64}while(l!==u);const h=ss.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=cs(r.add(s).add(a[0]).add(ls(e,l+8)),37).mul(h),s=cs(s.add(a[1]).add(ls(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(ls(e,l+40))),i=cs(i.add(o[0]),33).mul(h),a=ds(e,l,a[1].mul(h),r.add(o[0])),o=ds(e,l+32,i.add(o[1]),s.add(ls(e,l+16))),[i,r]=[r,i],hs(hs(a[0],o[0],h).add(as(s).mul(rs)).add(i),hs(a[1],o[1],h).add(r),h)}function fs(e,t){return"string"===t?ys(e):gs([e],t)}function gs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=vs(e)),Ce().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ms(){return Ce().platform.now()}function ys(e,t="utf-8"){return t=t||"utf-8",Ce().platform.encode(e,t)}function bs(e,t="utf-8"){return t=t||"utf-8",Ce().platform.decode(e,t)}function xs(e){return null!=Ce().platform.isTypedArray?Ce().platform.isTypedArray(e):Qr(e)}function vs(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Se(e)||null==e||xs(e)&&n)t.push(e);else if(Array.isArray(e)||xs(e))for(let r=0;r<e.length;++r)vs(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)vs(e[s],t,n)}return t}class ws{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Is)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const a=ms();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:ms()-a})}if(Ce().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{ks(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(e=>e.kernelMs),extraInfo:i.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:i}=e;n.forEach(e=>{Promise.all([e.data(),r,i]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function ks(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Is{logKernelProfile(e,t,n,r,s,i){const a="number"==typeof r?te(`${r}ms`,9):r.error,o=te(e,25),l=t.rank,u=t.size,c=te(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ss(e,t,n,r){const s=ge(t),i=function(e,t,n,r){const s=J(t),i=r[r.length-1],a=new Array(i).fill(0),o=t.length,l="complex64"===n?Cs(e):e;if(o>1)for(let e=0;e<s/i;e++){const t=e*i;for(let e=0;e<i;e++)a[e]=Math.max(a[e],Ts(l[t+e],0,n).length)}return a}(e,t,n,s),a=t.length,o=Ns(e,t,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join("\n")),l.join("\n")}function Ts(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ce(e)?`'${e}'`:"bool"===n?Es(e):parseFloat(e.toFixed(7)).toString(),te(r,t)}function Es(e){return 0===e?"false":"true"}function Ns(e,t,n,r,s,i=!0){const a="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Ts(Cs(e)[0],0,n)]:"bool"===n?[Es(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*a;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-3)*a,o*a));return"complex64"===n&&(r=Cs(r),i=Cs(i)),["["+r.map((e,t)=>Ts(e,s[t],n)).join(", ")+", ..., "+i.map((e,t)=>Ts(e,s[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?Cs(e):Array.from(e)).map((e,t)=>Ts(e,s[t],n)).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,i=r+h;d.push(...Ns(e.slice(r,i),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,i=r+h;d.push(...Ns(e.slice(r,i),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,i=r+h;d.push(...Ns(e.slice(r,i),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Cs(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class $s{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=J(e),null!=n){const e=n.length;q(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||oe(t,this.size),this.strides=ge(e)}set(e,...t){0===t.length&&(t=[0]),q(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Rs().makeTensor(this.values,this.shape,this.dtype)}}let Rs=null,As=null,_s=null;class Ds{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=J(e),this.strides=ge(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return As.buffer(this.shape,this.dtype,e)}bufferSync(){return As.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ye(this.shape,e,"complex64"===this.dtype)}arraySync(){return ye(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Rs().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>bs(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Rs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Rs().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>bs(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Rs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Rs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return As.print(this,e)}clone(){return this.throwIfDisposed(),As.clone(this)}toString(e=!1){return Ss(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),As.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Rs().makeVariable(this,e,t,n)}}function Fs(){return _e("Tensor",()=>Ds)}Object.defineProperty(Ds,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Fs();class Os extends Ds{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Z(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Rs().disposeTensor(this),this.dataId=e.dataId,Rs().incRef(this,null)}dispose(){Rs().disposeVariable(this),this.isDisposedInternal=!0}}var Ls,Ms,Ps,zs,Bs;Object.defineProperty(Os,Symbol.hasInstance,{value:e=>e instanceof Ds&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ls||(Ls={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Ms||(Ms={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ps||(Ps={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(zs||(zs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Bs||(Bs={}));const Ws={float32:zs,int32:Ms,bool:Ps,complex64:Bs};function Us(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ws[e][t]}function Gs(e){return Us(e,"int32")}function Vs(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Hs(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function js(e,t){if(e.dtype===t.dtype)return[e,t];const n=Us(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ks(e,t){return t.some(t=>t.id===e.id)}function qs(e){const t=[];return Xs(e,t,new Set),t}function Xs(e,t,n){if(null==e)return;if(e instanceof Ds)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Xs(r,t,n))}}function Ys(e){return null!=e.kernelName}class Js{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Zs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Js}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Gr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ws(this.backendInstance),!0}setupRegisteredKernels(){Xr(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Xr(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof U||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Gr(`Initialization of backend ${e} failed`),Gr(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Gr(`Initialization of backend ${e} failed`),Gr(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Zs.nextTensorId++}nextVariableId(){return Zs.nextVariableId++}clone(e){const t=ei.runKernel(Kt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e};return ei.runKernel(nt,t,{dtype:"float32"})}}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Kr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Ys(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ys(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const l=Kr(t,this.backendName);q(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),a=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const u=a.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};a=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,s));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Ys(e)?null:e.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=a()}),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(e=>null!=u[e]?u[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=qr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(q(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(e=>t[e])):i=e.map(e=>t[e]);const a=n.filter((e,t)=>s[t]);return i.concat(a)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&ce(e[0])&&(s=e.map(e=>ys(e)));const i=r.write(s,t,n),a=new Ds(t,n,i,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,i=new Ds(r,s,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Os(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ue(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Os||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ue(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=qr(e);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=xe(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=qs(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(q(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));q(s instanceof Ds,()=>"The result y returned by f() must be a tensor.");const i=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],a=i.inputs;for(const e in a){const n=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach(e=>r[e.id]=!0),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,a[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=be(J(e),"float32");return ei.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const i=t[s],a=[];if(i.outputs.forEach(t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)}),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n(()=>o[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[t];if(!Z(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}(e,i,e=>this.tidy(e),ti);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return q(pe(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;q(t.every(e=>e instanceof Ds),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),q(n.value instanceof Ds,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),q(pe(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),i=Array.isArray(s)?s:[s];q(i.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),q(i.every(e=>e instanceof Ds),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const a={};return i.forEach((e,t)=>{a[t]=()=>e}),a},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=ms(),n=await this.backend.time(e);return n.wallMs=ms()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Js;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Qs(){const e=Ae();if(null==e._tfengine){const t=new Ee(e);e._tfengine=new Zs(t)}var t;return t=e._tfengine.ENV,Re=t,Rs=()=>e._tfengine,e._tfengine}Zs.nextTensorId=0,Zs.nextVariableId=0;const ei=Qs();function ti(e,t){const n={a:e,b:t};return ei.runKernel(Le,n)}function ni(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ri(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const si=Ce();function ii(e,t){let n=e;if(xs(e))return"string"===t?[]:[e.length];if(Vs(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Hs(e))return[e.buffer.size/(null==t?4:ue(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||xs(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Ce().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ai(e,r,[]),r}function ai(e,t,n){if(n=n||[],!Array.isArray(e)&&!xs(e))return void q(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);q(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),q(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let t=0;t<e.length;++t)ai(e[t],r,n.concat(t))}function oi(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function li(e,t,n,r="numeric"){if(e instanceof Fs())return oi(r,e.dtype,t,n),e;let s=de(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),oi(r,s,t,n),null==e||!xs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=ii(e,s);xs(e)||Array.isArray(e)||(e=[e]);const a="string"!==s?gs(e,s):vs(e,[],!0);return ei.makeTensor(a,i,s)}function ui(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,s)=>li(e,`${t}[${s}]`,n,r))}function ci(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{ei.startScope(n);try{const t=r(...e);return Se(t)&&console.error("Cannot return a Promise inside of tidy."),ei.endScope(t),t}catch(e){throw ei.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}si.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),si.registerFlag("IS_BROWSER",()=>ri()),si.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),si.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),si.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),si.registerFlag("PROD",()=>!1),si.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>si.getBool("DEBUG")),si.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),si.registerFlag("IS_TEST",()=>!1),si.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>si.getBool("DEBUG")),si.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),si.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),si.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const hi=ci({complex_:function(e,t){const n=li(e,"real","complex"),r=li(t,"imag","complex");X(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ei.runKernel(it,s)}});function di(e,t,n,r){if(null==r)r=de(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Hs(e)||Vs(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return ei.backend.createTensorFromGPUData(e,t||n,r)}if(!xs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){we(t);const e=J(t),r=J(n);q(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==J(t.slice(e));q(n[e]===t[e]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return xs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?gs(e,r):vs(e,[],!0),ei.makeTensor(e,t,r)}function pi(e,t,n){return di(e,t,ii(e,n),n)}const fi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class gi{static join(e){return new gi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map(e=>xs(e)?e.buffer:e)).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let i=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],a=e+i-n.start,o=i,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,a,l-a);if(s.set(u,o),i+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,i=t(e[s]);if(0===i)return s;i<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function mi(){return ei}function yi(){return ei.memory()}function bi(e,t){return ei.tidy(e,t)}function xi(e){qs(e).forEach(e=>e.dispose())}function vi(e){return ei.keep(e)}function wi(e,t,n=1){return ei.registerBackend(e,t,n)}async function ki(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(e)?e[i].tensor:e[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ti(await Promise.all(r)),specs:n}}function Ii(e,t){const n=J(e.shape);let r;if("quantization"in e){const t=e.quantization;r=fi[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(t(e,e+4))[0];return e}r=fi[e.dtype]}return n*r}function Si(e,t){const n=e.name,r=e.dtype,s=e.shape,i=J(s);let a,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const l=fi[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){a=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];a[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let s=0;s<r.length;s++){const a=r[s],o=e[n[a>>10]+(1023&a)]+t[a>>10];i[s]=o}return new Float32Array(s)}}();a=e(u)}}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${n}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);a=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];a[e]=Math.round(t*s.scale+s.min)}}o+=i*l}else if("string"===r){const n=J(e.shape);a=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+4))[0];o+=4;const n=new Uint8Array(t.slice(o,o+e));a.push(n),o+=e}}else{const e=fi[r];if("float32"===r)a=new Float32Array(t);else if("int32"===r)a=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){a=new Float32Array(t);const e=new Float32Array(a.length/2),n=new Float32Array(a.length/2);for(let t=0;t<e.length;t++)e[t]=a[2*t],n[t]=a[2*t+1];const r=pi(e,s,"float32"),i=pi(n,s,"float32"),o=hi(r,i);return r.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${r}`)}a=new Uint8Array(t)}o+=i*e}return pi(a,s,r)}function Ti(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}_s=function(e){Ce().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Ei="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ni(e){return Ei?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Ci(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function $i(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ni(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ni(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new gi(e.weightData).byteLength}}function Ri(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Ai{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ai.instance&&(Ai.instance=new Ai),Ai.instance}static registerSaveRouter(e){Ai.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ai.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ai.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ai.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ai.getInstance().loadRouters:Ai.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}const _i="tensorflowjs",Di="models_store",Fi="model_info_store";function Oi(){if(!Ce().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Li(e){const t=e.result;t.createObjectStore(Di,{keyPath:"modelPath"}),t.createObjectStore(Fi,{keyPath:"modelPath"})}class Mi{constructor(e){if(this.indexedDB=Oi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(_i,1);r.onupgradeneeded=()=>Li(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Di,"readonly"),r=t.objectStore(Di).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=gi.join(t.weightData);const r=$i(t),i=s.transaction(Fi,"readwrite");let a,o,l=i.objectStore(Fi);try{a=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}a.onsuccess=()=>{o=s.transaction(Di,"readwrite");const a=o.objectStore(Di);let u;try{u=a.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:r}),u.onerror=e=>{l=i.objectStore(Fi);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(u.error)),t.onerror=e=>(s.close(),n(u.error))}},a.onerror=e=>(s.close(),n(a.error)),i.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}Mi.URL_SCHEME="indexeddb://";const Pi=e=>{return Ce().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Mi.URL_SCHEME)?(t=e.slice(Mi.URL_SCHEME.length),new Mi(t)):null;var t};Ai.registerSaveRouter(Pi),Ai.registerLoadRouter(Pi);class zi{constructor(){this.indexedDB=Oi()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(_i,1);n.onupgradeneeded=()=>Li(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Fi,"readonly"),i=s.objectStore(Fi).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Mi.URL_SCHEME)?t.slice(Mi.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(_i,1);r.onupgradeneeded=()=>Li(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(Fi,"readwrite"),a=i.objectStore(Fi),o=a.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),i=()=>{l=s.transaction(Di,"readwrite");const r=l.objectStore(Di).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}const Bi="/",Wi="tensorflowjs_models",Ui="info",Gi="model_topology",Vi="weight_specs",Hi="weight_data",ji="model_metadata";function Ki(e){return{info:[Wi,e,Ui].join(Bi),topology:[Wi,e,Gi].join(Bi),weightSpecs:[Wi,e,Vi].join(Bi),weightData:[Wi,e,Hi].join(Bi),modelMetadata:[Wi,e,ji].join(Bi)}}function qi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Xi(e){const t=e.split(Bi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Bi)}class Yi{constructor(e){if(!Ce().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ki(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=$i(e),s=gi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ei)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch(e){throw qi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ei){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}Yi.URL_SCHEME="localstorage://";const Ji=e=>{return Ce().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yi.URL_SCHEME)?(t=e.slice(Yi.URL_SCHEME.length),new Yi(t)):null;var t};Ai.registerSaveRouter(Ji),Ai.registerLoadRouter(Ji);class Zi{constructor(){q(Ce().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),q("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Wi+Bi,n=Bi+Ui;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[Xi(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Ki(e=(t=e).startsWith(Yi.URL_SCHEME)?t.slice(Yi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return qi(n),r}}class Qi{constructor(){this.managers={}}static getInstance(){return null==Qi.instance&&(Qi.instance=new Qi),Qi.instance}static registerManager(e,t){q(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),q(e.length>0,()=>"scheme must not be an empty string.");const n=Qi.getInstance();q(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=Qi.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Qi.getInstance().managers)}}class ea{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Ce().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(e,t)}isTypedArray(e){return Qr(e)}}if(Ce().get("IS_BROWSER")){Ce().setPlatform("browser",new ea);try{Qi.registerManager(Yi.URL_SCHEME,new Zi)}catch(e){}try{Qi.registerManager(Mi.URL_SCHEME,new zi)}catch(e){}}let ta;function na(e,t="float32",n){return t=t||"float32",we(e),new $s(e,t,n)}Ce().get("IS_NODE")&&!Ce().get("IS_BROWSER")&&Ce().setPlatform("node",new class{constructor(){this.util=__webpack_require__(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ce().global.fetch?Ce().global.fetch(e,t):(null==ta&&(ta=__webpack_require__(5817)),ta(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const ra=ci({cast_:function(e,t){const n=li(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return ei.runKernel(nt,r,s)}}),sa=ci({clone_:function(e){const t={x:li(e,"x","clone","string_or_numeric")};return ei.runKernel(Kt,t)}});Qs(),As={buffer:na,cast:ra,clone:sa,print:function(e,t=!1){console.log(e.toString(t))}};const ia=ci({add_:function(e,t){let n=li(e,"a","add"),r=li(t,"b","add");[n,r]=js(n,r);const s={a:n,b:r};return ei.runKernel(Le,s)}}),aa=ci({floorDiv_:function(e,t){let n=li(e,"a","floorDiv"),r=li(t,"b","floorDiv");[n,r]=js(n,r);const s={a:n,b:r};return ei.runKernel(Wt,s)}}),oa=ci({div_:function(e,t){let n=li(e,"a","div"),r=li(t,"b","div");if([n,r]=js(n,r),"int32"===n.dtype&&"int32"===r.dtype)return aa(n,r);const s={a:n,b:r};return ei.runKernel(Ct,s,{})}}),la=ci({mul_:function(e,t){let n=li(e,"a","mul"),r=li(t,"b","mul");[n,r]=js(n,r);const s={a:n,b:r};return ei.runKernel(Sn,s)}}),ua=ci({sqrt_:function(e){const t={x:li(e,"x","sqrt","float32")};return ei.runKernel(cr,t)}}),ca=ci({square_:function(e){const t=li(e,"x","square");return ei.runKernel("Square",{x:t},{})}}),ha=ci({zerosLike_:function(e){const t={x:li(e,"x","zerosLike")};return ei.runKernel(Mr,t)}});function da(e){return ei.customGrad(e)}function pa(e,t){if((xs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&xs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return di(e,[],[],t)}const fa=new Map,ga=new Map;class ma{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ya{constructor(){this.classNameMap={}}static getMap(){return null==ya.instance&&(ya.instance=new ya),ya.instance}static register(e){ya.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ba(e,t,n){q(null!=e.className,()=>"Class being registered does not have the static className property defined."),q("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),q(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return ya.register(e),fa.set(r,e),ga.set(e,r),e}class xa extends ma{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return xi(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){q(pe(e),()=>"The f passed in variableGrads(f) must be a function"),q(null==t||Array.isArray(t)&&t.every(e=>e instanceof Os),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ei.registeredVariables)t.push(ei.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;q((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:i,grads:a}=ei.gradients(e,t,null,!0);q(a.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),q(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=a[t]&&(o[e.name]=a[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&xi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:pa(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(xa,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class va extends xa{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ei.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:bi(()=>ha(r).variable(s))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:bi(()=>ha(r).variable(s))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;bi(()=>{const e=ia(la(a,this.rho),la(ca(i),1-this.rho)),t=la(oa(ua(ia(o,this.epsilon)),ua(ia(a,this.epsilon))),i),n=ia(la(o,this.rho),la(ca(t),1-this.rho));a.assign(e),o.assign(n);const s=ia(la(t,-this.learningRate),r);r.assign(s)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(xi(this.accumulatedGrads.map(e=>e.variable)),xi(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function wa(e,t,n){we(e);const r={shape:e,value:t,dtype:n=n||de(t)};return ei.runKernel(Pt,{},r)}class ka extends xa{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ei.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:bi(()=>wa(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable;bi(()=>{const e=ia(i,ca(s));i.assign(e);const t=ia(la(oa(s,ua(ia(e,ei.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&xi(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Ia=ci({pow_:function(e,t){let n=li(e,"base","pow"),r=li(t,"exp","pow");[n,r]=js(n,r);const s={a:n,b:r};return ei.runKernel(Fn,s)}}),Sa=ci({sub_:function(e,t){let n=li(e,"a","sub"),r=li(t,"b","sub");[n,r]=js(n,r);const s={a:n,b:r};return ei.runKernel(Nr,s)}});class Ta extends xa{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],bi(()=>{this.accBeta1=pa(t).variable(),this.accBeta2=pa(n).variable()}),null==r&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);bi(()=>{const n=Sa(1,this.accBeta1),r=Sa(1,this.accBeta2);t.forEach((t,s)=>{const i=ei.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:bi(()=>ha(i).variable(a))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:bi(()=>ha(i).variable(a))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=ia(la(l,this.beta1),la(o,1-this.beta1)),h=ia(la(u,this.beta2),la(ca(o),1-this.beta2)),d=oa(c,n),p=oa(h,r);l.assign(c),u.assign(h);const f=ia(la(oa(d,ia(ua(p),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(la(this.accBeta1,this.beta1)),this.accBeta2.assign(la(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&xi(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&xi(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),bi(()=>{this.accBeta1.assign(Ia(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ia(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Ea=ci({abs_:function(e){const t=li(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ei.runKernel(at,e)}{const e={x:t};return ei.runKernel(De,e)}}});function Na(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=e[i]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function Ca(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],i=t.length-r-1,a=t[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function $a(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let i=e[e.length-s-1];null==i&&(i=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===i)r[n-s-1]=a;else if(1===a)r[n-s-1]=i;else{if(i!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-s-1]=i}}return r}const Ra=ci({maximum_:function(e,t){let n=li(e,"a","maximum"),r=li(t,"b","maximum");[n,r]=js(n,r),"bool"===n.dtype&&(n=ra(n,"int32"),r=ra(r,"int32")),$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(dn,s)}});class Aa extends xa{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],bi(()=>{this.iteration=pa(0).variable(),this.accBeta1=pa(t).variable()}),null==r&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);bi(()=>{const n=Sa(1,this.accBeta1),r=oa(-this.learningRate,ia(la(this.iteration,this.decay),1));t.forEach((t,s)=>{const i=ei.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:ha(i).variable(a)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:ha(i).variable(a)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=ia(la(l,this.beta1),la(o,1-this.beta1)),h=la(u,this.beta2),d=Ea(o),p=Ra(h,d);l.assign(c),u.assign(p);const f=ia(la(oa(r,n),oa(c,ia(p,this.epsilon))),i);i.assign(f)}),this.iteration.assign(ia(this.iteration,1)),this.accBeta1.assign(la(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&xi(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&xi(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class _a extends xa{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=ei.registeredVariables[t];bi(()=>{const e=ia(la(this.c,r),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=vi(pa(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Da extends _a{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=pa(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ei.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:bi(()=>ha(r).variable(e))}}const s=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&bi(()=>{let e;const t=ia(la(this.m,s),i);e=this.useNesterov?ia(la(this.c,ia(i,la(t,this.m))),r):ia(la(this.c,t),r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&xi(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Fa extends xa{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ei.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ei.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:bi(()=>ha(r).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:bi(()=>ha(r).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:bi(()=>ha(r).variable(s))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;bi(()=>{const e=ia(la(a,this.decay),la(ca(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=ia(la(t,this.decay),la(i,1-this.decay)),l=oa(la(i,this.learningRate),ua(Sa(e,ia(ca(s),this.epsilon)))),u=ia(la(o,this.momentum),l);a.assign(e),t.assign(s),o.assign(u);const c=Sa(r,u);r.assign(c)}else{const e=ia(la(a,this.decay),la(ca(i),1-this.decay)),t=ia(la(o,this.momentum),oa(la(i,this.learningRate),ua(ia(e,this.epsilon))));a.assign(e),o.assign(t);const n=Sa(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&xi(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&xi(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&xi(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Oa=[va,ka,Ta,Aa,Da,Fa,_a];function La(e){return new Promise(e=>setTimeout(e)).then(e)}class Ma{constructor(e){if(!Ce().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ma.URL_SCHEME)&&(e=e.slice(Ma.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=gi.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Ci(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await La(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await La(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:$i(e)}}}}function Pa(e,t,n,r){!function(e){q(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){q(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),q(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),q(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(i=>(i.then(i=>{const a=n+ ++s/e.length*(r-n);return t(a),i}),i)))}async function za(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ce().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await Pa(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await Pa(s,t.onProgress,.5,1)}Ma.URL_SCHEME="downloads://",Ai.registerSaveRouter(e=>Ce().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ma.URL_SCHEME)?function(e="model"){return new Ma(e)}(e.slice(Ma.URL_SCHEME.length)):null);class Ba{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(q("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Ce().platform.fetch,q(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&q(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Ci(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=gi.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:$i(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():async function(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),function(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}(e,n,r)}(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Ri(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?Ce().platform.fetch:t.fetchFunc;let s,i=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var a;i<e.length;){if(!s){const n=(await r(e[i],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);i++,s=void 0,null===(a=t.onProgress)||void 0===a||a.call(t,i/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,i=[],a=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e);return[Ri(e),await za(t,this.loadOptions)]}}function Wa(e){return null!=e.match(Ba.URL_SCHEME_REGEX)}Ba.URL_SCHEME_REGEX=/^https?:\/\//;const Ua=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Wa(e)):Wa(e),n)return Ga(e,t)}return null};function Ga(e,t){return new Ba(e,t)}Ai.registerSaveRouter(Ua),Ai.registerLoadRouter(Ua);const Va=-2,Ha=-1;function ja(e,t,n){const r=e.shape.length;q(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),q(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)q(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function Ka(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function qa(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Xa(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Ya(e,t,n){return n<=e?n:n-(t-1)}function Ja(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Za(e,t,n,r,s,i,a,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Qa(a,l,u,r,e),h=eo(o,l,u,s,e),d=Xa(i,l,u,e)}else for(let t=0;t<u;t++)c[t]=no(a,r,i,e,t,l),h[t]=ro(o,s,i,e,t,l),d[t]=to(i,t,l);return{begin:c,end:h,strides:d}}function Qa(e,t,n,r,s){const i=[...s],a=Ja(n,t);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=0;else{const a=Ya(t,n,s);let o=r[a];e&1<<a&&(o=0),i[s]=o}return i}function eo(e,t,n,r,s){const i=[...s],a=Ja(n,t);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=Ya(t,n,s);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let e=0;e<i.length;e++){const t=s[e];i[e]<0&&(i[e]+=t),i[e]=H(0,i[e],s[e])}return i}function to(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function no(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=H(0,a,l-1),a}function ro(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?H(0,a,l):H(-1,a,l-1),a}function so(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function io(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ao(e,t,n){let r;const s=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{q(-1!==e,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map((t,n)=>t>=0?t:(q(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,i]}function oo(e,t,n,r,s,i,a,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=a&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Va),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Ha),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,g=!0;const m=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){m.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],i=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[t];const a=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=lo(d.begin[t],0,d.strides[t],r,s,i),d.end[t]=lo(d.end[t],1,d.strides[t],r,s,i);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&a,f=f&&(0===t&&1===d.strides[t]||a);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):a&&r>=0&&(o=d.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!==0?1:0),m.push(e)}else m.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(m[t]):t===Va&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>d.finalShapeGatherIndices[t]!==Va),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function lo(e,t,n,r,s,i){if(s[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}const uo=ci({all_:function(e,t=null,n=!1){const r={x:li(e,"x","all","bool")},s={axis:t,keepDims:n};return ei.runKernel(Pe,r,s)}}),co=ci({any_:function(e,t=null,n=!1){const r={x:li(e,"x","any","bool")},s={axis:t,keepDims:n};return ei.runKernel(ze,r,s)}}),ho=ci({argMax_:function(e,t=0){const n={x:li(e,"x","argMax")},r={axis:t};return ei.runKernel(Be,n,r)}});function po(e,t,n,r,s="NHWC",i){return mo(e,[...t,e[3]],n,i,r,null,null,Eo(s))}function fo(e,t,n,r,s,i,a="channelsLast"){const[o,l]=xo(t);let u;if("channelsLast"===a)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,e[1],e[1]]}return mo(e,u,n,r,s,i,!1,a)}function go(e,t,n,r,s,i,a="NDHWC"){const[o,l,u]=vo(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return yo(e,c,n,r,s,!1,h,i)}function mo(e,t,n,r,s,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=xo(n),[y,b]=xo(r),x=wo(d,y),v=wo(p,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,i,a,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=bo(e,t,n));const i=e[1];return[ko((e[0]-t+2*r)/n+1,s),ko((i-t+2*r)/n+1,s)]}([t,n],i,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+i-t),o=Math.max(0,(h-1)*s+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=ko((t-i+d+p)/r+1,o),h=ko((n-a+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,x,v,i,o),S=a?f*h:f;let T;return"channelsFirst"===o?T=[l,S,k,I]:"channelsLast"===o&&(T=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:T,filterShape:t}}function yo(e,t,n,r,s,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[y,b,x]=vo(n),[v,w,k]=vo(r),I=wo(p,v),S=wo(f,w),T=wo(g,k),{padInfo:E,outDepth:N,outHeight:C,outWidth:$}=function(e,t,n,r,s,i,a,o,l,u,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const g=function(e,t,n,r,s,i){null==s&&(s=bo(e,t[0],r[0]));const a=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(a[n]=ko((e[n]-t[n]+2*s)/r[n]+1,i));return a}([t,n,r,1],[o,l,u],0,[s,i,a],e,c);d=g[0],p=g[1],f=g[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const e=(d-1)*s+o-t,c=(p-1)*i+l-n,g=(f-1)*a+u-r,m=Math.floor(e/2),y=e-m,b=Math.floor(c/2),x=c-b,v=Math.floor(g/2);h={top:b,bottom:x,left:v,right:g-v,front:m,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,x,I,S,T,o),R=i?m*d:m;let A;return"channelsFirst"===a?A=[l,R,N,C,$]:"channelsLast"===a&&(A=[l,N,C,$,R]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:C,outWidth:$,outChannels:R,padInfo:E,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function bo(e,t,n,r=1){const s=wo(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function xo(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function vo(e){return"number"==typeof e?[e,e,e]:e}function wo(e,t){return t<=1?e:e+(e-1)*(t-1)}function ko(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Io(e){const[t,n,r]=xo(e);return 1===t&&1===n&&1===r}function So(e,t){return Io(e)||Io(t)}function To(e){return xo(e).every(e=>e>0)}function Eo(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function No(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)q(Q(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(t=>{t.forEach(t=>{q(Q(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})})}}}const Co=ci({reshape_:function(e,t){const n={x:li(e,"x","reshape","string_or_numeric")},r={shape:t};return ei.runKernel(Vn,n,r)}}),$o=ci({avgPool_:function(e,t,n,r,s){const i=li(e,"x","avgPool","float32");q(So(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let a=i,o=!1;3===i.rank&&(o=!0,a=Co(i,[1,i.shape[0],i.shape[1],i.shape[2]])),q(4===a.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),No("avgPool",r,s);const l={x:a},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=ei.runKernel(Ke,l,u);return c=ra(c,i.dtype),o?Co(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ro=ci({avgPool3d_:function(e,t,n,r,s,i="NDHWC"){const a=li(e,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=Co(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),q(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),q("NDHWC"===i,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),q("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),No("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let h=ei.runKernel(Xe,u,c);return h=ra(h,o.dtype),l?Co(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ao=ci({batchNorm_:function(e,t,n,r,s,i){null==i&&(i=.001);const a=li(e,"x","batchNorm"),o=li(t,"mean","batchNorm"),l=li(n,"variance","batchNorm");let u,c;null!=s&&(u=li(s,"scale","batchNorm")),null!=r&&(c=li(r,"offset","batchNorm")),q(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),q(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),q(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Co(e,[1,1,1,e.size]):2===e.rank?Co(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Co(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(a),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:i},p=ei.runKernel(Ut,h,d);return Co(p,a.shape)}}),_o=ci({batchNorm2d_:function(e,t,n,r,s,i){const a=li(e,"x","batchNorm"),o=li(t,"mean","batchNorm"),l=li(n,"variance","batchNorm");let u,c;return null!=s&&(u=li(s,"scale","batchNorm")),null!=r&&(c=li(r,"offset","batchNorm")),q(2===a.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),q(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),q(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&q(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&q(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Ao(a,o,l,c,u,i)}}),Do=ci({batchNorm3d_:function(e,t,n,r,s,i){const a=li(e,"x","batchNorm"),o=li(t,"mean","batchNorm"),l=li(n,"variance","batchNorm");let u,c;return null!=s&&(u=li(s,"scale","batchNorm")),null!=r&&(c=li(r,"offset","batchNorm")),q(3===a.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),q(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),q(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&q(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&q(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Ao(a,o,l,c,u,i)}}),Fo=ci({batchNorm4d_:function(e,t,n,r,s,i){const a=li(e,"x","batchNorm"),o=li(t,"mean","batchNorm"),l=li(n,"variance","batchNorm");let u,c;return null!=s&&(u=li(s,"scale","batchNorm")),null!=r&&(c=li(r,"offset","batchNorm")),q(4===a.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),q(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),q(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&q(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&q(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Ao(a,o,l,c,u,i)}}),Oo=ci({broadcastTo_:function(e,t){let n=li(e,"broadcastTo","x");const r=n.shape;if(we(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Co(n,e)}const s=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===i.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return sa(n);const a={x:n},o={reps:i};return ei.runKernel(Rr,a,o)}}),Lo=ci({clipByValue_:function(e,t,n){const r=li(e,"x","clipByValue");if(q(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return wa(r.shape,t,r.dtype);const s={x:r},i={clipValueMin:t,clipValueMax:n};return ei.runKernel(st,s,i)}}),Mo=ci({concat_:function(e,t=0){q(e.length>=1,()=>"Pass at least one tensor to concat");const n=ui(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return sa(n[0]);const r=n,s={axis:t};return ei.runKernel(ot,r,s)}}),Po=ci({concat1d_:function(e){return Mo(e,0)}}),zo=ci({concat2d_:function(e,t){return Mo(e,t)}}),Bo=ci({concat3d_:function(e,t){return Mo(e,t)}}),Wo=ci({concat4d_:function(e,t){return Mo(e,t)}}),Uo=ci({conv2d_:function(e,t,n,r,s="NHWC",i=[1,1],a){const o=li(e,"x","conv2d","float32"),l=li(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Co(o,[1,o.shape[0],o.shape[1],o.shape[2]])),q(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),q(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),No("conv2d",r,a);const h="NHWC"===s?u.shape[3]:u.shape[1];q(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),q(So(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),q(To(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),q(To(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=ei.runKernel(lt,d,p);return c?Co(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Go=ci({conv1d_:function(e,t,n,r,s="NWC",i=1,a){const o=li(e,"x","conv1d"),l=li(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Co(o,[1,o.shape[0],o.shape[1]])),q(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),q(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),No("conv1d",r,a),q(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),q(So(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),q(To(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),q(To(n),()=>"Error in conv1D: Stride should be larger than 0."),q("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=Co(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Co(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Uo(d,h,[1,n],r,"NHWC",[1,i],a);return Co(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Vo=ci({conv2DBackpropInput_:function(e,t,n,r,s,i="NHWC",a){q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Co(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),q(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),q(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),q(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];q(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),q(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),No("conv2dDerInput",s,a);const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},f=ei.runKernel(ct,d,p);return u?Co(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ho=ci({conv2dTranspose_:function(e,t,n,r,s,i){const a=li(e,"x","conv2dTranspose"),o=li(t,"filter","conv2dTranspose");return Vo(n,a,o,r,s,"NHWC",i)}}),jo=ci({conv3d_:function(e,t,n,r,s="NDHWC",i=[1,1,1]){const a=li(e,"x","conv3d"),o=li(t,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=Co(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),q(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),q(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),q(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),q(So(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),q("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),q(To(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),q(To(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:i},d=ei.runKernel(ht,c,h);return u?Co(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ko=ci({conv3DBackpropInput_:function(e,t,n,r,s){q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,a=t,o=!1;4===t.rank&&(o=!0,a=Co(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const l=i[4],u=a.shape[4];q(5===i.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),q(5===a.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),q(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),q(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),q(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c={dy:a,filter:n},h={pad:s,strides:r,inputShape:i},d=ei.runKernel(pt,c,h);return o?Co(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),qo=ci({conv3dTranspose_:function(e,t,n,r,s){const i=li(e,"x","conv3dTranspose"),a=li(t,"filter","conv3dTranspose");return Ko(n,i,a,r,s)}}),Xo=ci({denseBincount_:function(e,t,n,r=!1){const s=li(e,"x","denseBincount"),i=li(t,"weights","denseBincount");q("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),q(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),q(n>=0,()=>`size must be non-negative, but got ${n}.`),q(i.size===s.size||0===i.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`);const a={x:s,weights:i},o={size:n,binaryOutput:r};return ei.runKernel(xt,a,o)}}),Yo=ci({depthwiseConv2d_:function(e,t,n,r,s="NHWC",i=[1,1],a){const o=li(e,"x","depthwiseConv2d","float32"),l=li(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Co(o,[1,o.shape[0],o.shape[1],o.shape[2]])),q(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),q(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h="NHWC"===s?u.shape[3]:u.shape[1];q(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),No("depthwiseConv2d",r,a);const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=ei.runKernel(wt,d,p);return c?Co(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Jo=ci({elu_:function(e){const t={x:li(e,"x","elu","float32")};return ei.runKernel(Rt,t)}}),Zo=ci({equal_:function(e,t){let n=li(e,"a","equal","string_or_numeric"),r=li(t,"b","equal","string_or_numeric");[n,r]=js(n,r),$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(Dt,s)}}),Qo=ci({erf_:function(e){let t=li(e,"x","erf");q("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=ra(t,"float32"));const n={x:t};return ei.runKernel(_t,n)}}),el=ci({exp_:function(e){const t={x:li(e,"x","exp")};return ei.runKernel(Ft,t)}}),tl=ci({expandDims_:function(e,t=0){const n=li(e,"x","expandDims","string_or_numeric");q(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:t};return ei.runKernel(Ot,r,s)}}),nl=ci({tile_:function(e,t){const n=li(e,"x","tile","string_or_numeric");q(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},s={reps:t};return ei.runKernel(Rr,r,s)}}),rl=ci({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=na([e,t],r),i=e<=t?e:t;for(let e=0;e<i;++e)s.set(1,e,e);const a=Co(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return nl(tl(a,0),[n[0],1,1]);if(2===n.length)return nl(tl(tl(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return nl(tl(tl(tl(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),sl=ci({floor_:function(e){const t={x:li(e,"x","floor","float32")};return ei.runKernel(Bt,t)}}),il=ci({gather_:function(e,t,n=0,r=0){const s={x:li(e,"x","gather"),indices:li(t,"indices","gather","int32")},i={axis:n,batchDims:r};return ei.runKernel(Gt,s,i)}}),al=ci({greater_:function(e,t){let n=li(e,"a","greater","string_or_numeric"),r=li(t,"b","greater","string_or_numeric");[n,r]=js(n,r),$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(Ht,s)}}),ol=ci({greaterEqual_:function(e,t){let n=li(e,"a","greaterEqual","string_or_numeric"),r=li(t,"b","greaterEqual","string_or_numeric");[n,r]=js(n,r),$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(jt,s)}}),ll=ci({leakyRelu_:function(e,t=.2){const n={x:li(e,"x","leakyRelu")},r={alpha:t};return ei.runKernel(Qt,n,r)}}),ul=ci({log_:function(e){const t={x:li(e,"x","log","float32")};return ei.runKernel(rn,t)}}),cl=ci({log1p_:function(e){const t={x:li(e,"x","log1p")};return ei.runKernel(sn,t)}}),hl=ci({max_:function(e,t=null,n=!1){const r={x:li(e,"x","max")},s={reductionIndices:t,keepDims:n};return ei.runKernel(hn,r,s)}}),dl=ci({sum_:function(e,t=null,n=!1){let r=li(e,"x","sum");"bool"===r.dtype&&(r=ra(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return ei.runKernel(hr,s,i)}}),pl=ci({logSoftmax_:function(e,t=-1){const n=li(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=da((e,n)=>{const r=hl(e,t,!0),s=Sa(e,r),i=Sa(ra(s,"float32"),ul(dl(el(s),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{const[r]=n,s=el(r);return Sa(e,la(dl(e,t,!0),s))}}});return r(n)}});function fl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function gl(e,t,n){const r=e.length+t.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[i++]):s.push(t[a++]);return s}function ml(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]}function yl(e,t){return gl(e,t.map(e=>1),t)}function bl(e,t,n){q(fl(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function xl(e,t){if(fl(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function vl(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function wl(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const kl=ci({logSumExp_:function(e,t=null,n=!1){const r=li(e,"x","logSumExp"),s=se(t,r.shape),i=hl(r,s,!0),a=Sa(r,i),o=el(a),l=dl(o,s),u=ul(l),c=ia(Co(i,u.shape),u);if(n){const e=yl(c.shape,s);return Co(c,e)}return c}}),Il=ci({logicalAnd_:function(e,t){const n=li(e,"a","logicalAnd","bool"),r=li(t,"b","logicalAnd","bool");$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(an,s)}}),Sl=ci({matMul_:function(e,t,n=!1,r=!1){let s=li(e,"a","matMul"),i=li(t,"b","matMul");[s,i]=js(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return ei.runKernel(Je,a,o)}}),Tl=ci({maxPool_:function(e,t,n,r,s){const i=li(e,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=Co(i,[1,i.shape[0],i.shape[1],i.shape[2]])),q(4===a.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),q(So(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),No("maxPool",r,s);const l={x:a},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=ei.runKernel(pn,l,u);return o?Co(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),El=ci({maxPool3d_:function(e,t=[1,1,1],n,r,s,i="NDHWC"){const a=li(e,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=Co(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),q(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),q("NDHWC"===i,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),No("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},h=ei.runKernel(gn,u,c);return l?Co(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Nl=ci({mean_:function(e,t=null,n=!1){const r={x:li(e,"x","mean")},s={axis:t,keepDims:n};return ei.runKernel(bn,r,s)}}),Cl=ci({min_:function(e,t=null,n=!1){const r={x:li(e,"x","min")},s={axis:t,keepDims:n};return ei.runKernel(xn,r,s)}}),$l=ci({minimum_:function(e,t){let n=li(e,"a","minimum"),r=li(t,"b","minimum");[n,r]=js(n,r),"bool"===n.dtype&&(n=ra(n,"int32"),r=ra(r,"int32")),$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(vn,s)}}),Rl=ci({moments_:function(e,t=null,n=!1){const r=se(t,(e=li(e,"x","moments")).shape),s=Nl(e,r,n);let i=s.shape;n||(i=yl(s.shape,r));const a=ca(Sa(ra(e,"float32"),Co(s,i)));return{mean:s,variance:Nl(a,r,n)}}}),Al=ci({neg_:function(e){const t={x:li(e,"x","neg")};return ei.runKernel(Tn,t)}}),_l=ci({notEqual_:function(e,t){let n=li(e,"a","notEqual","string_or_numeric"),r=li(t,"b","notEqual","string_or_numeric");[n,r]=js(n,r),$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(En,s)}}),Dl=ci({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:li(e,"indices","oneHot","int32")},a={dtype:s,depth:t,onValue:n,offValue:r};return ei.runKernel(An,i,a)}});function Fl(e,t="float32"){if(we(e),"complex64"===t){const t=Fl(e,"float32"),n=Fl(e,"float32");return hi(t,n)}const n=xe(J(e),t);return ei.makeTensor(n,e,t)}function Ol(e,t="float32"){if(we(e),"complex64"===t){const t=Ol(e,"float32"),n=Fl(e,"float32");return hi(t,n)}const n=be(J(e),t);return ei.makeTensor(n,e,t)}const Ll=ci({onesLike_:function(e){const t={x:li(e,"x","onesLike")};return ei.runKernel(Rn,t)}}),Ml=ci({pad_:function(e,t,n=0){const r=li(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},i={x:r};return ei.runKernel(Dn,i,s)}}),Pl=ci({prelu_:function(e,t){const n={x:li(e,"x","prelu"),alpha:li(t,"alpha","prelu")};return ei.runKernel(On,n)}});class zl{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=y.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Bl{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=y.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Wl=ci({randomNormal_:function(e,t=0,n=1,r,s){if(we(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new zl(t,n,r,!1,s),a=na(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Ul=ci({randomUniform_:function(e,t=0,n=1,r="float32",s){we(e);const i=na(e,r),a=new Bl(t,n,null,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});function Gl(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return ei.runKernel(Bn,{},s)}const Vl=ci({relu_:function(e){const t={x:li(e,"x","relu")};return ei.runKernel(Gn,t)}}),Hl=ci({reverse_:function(e,t){const n={x:li(e,"x","reverse")},r={dims:t};return ei.runKernel(Yn,n,r)}}),jl=ci({selu_:function(e){const t={x:li(e,"x","selu")};return ei.runKernel(rr,t)}}),Kl=ci({separableConv2d_:function(e,t,n,r,s,i=[1,1],a="NHWC"){const o=li(e,"x","separableConv2d"),l=li(t,"depthwiseFilter","separableConv2d"),u=li(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Co(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");q(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),q(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),q(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),q(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),q(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];q(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Yo(c,l,r,s,a,i),g=Uo(f,u,1,"valid",a);return h?Co(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),ql=ci({sigmoid_:function(e){const t={x:li(e,"x","sigmoid","float32")};return ei.runKernel(lr,t)}}),Xl=ci({sign_:function(e){const t={x:li(e,"x","sign")};return ei.runKernel(or,t)}}),Yl=ci({slice_:function(e,t,n){const r=li(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:t,size:n};return ei.runKernel(sr,s,i)}}),Jl=ci({slice1d_:function(e,t,n){const r=li(e,"x","slice1d");return q(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Yl(r,[t],[n])}}),Zl=ci({slice2d_:function(e,t,n){const r=li(e,"x","slice2d");return q(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Yl(r,t,n)}}),Ql=ci({slice3d_:function(e,t,n){const r=li(e,"x","slice3d");return q(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Yl(r,t,n)}}),eu=ci({slice4d_:function(e,t,n){const r=li(e,"x","slice4d");return q(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Yl(r,t,n)}}),tu=ci({softmax_:function(e,t=-1){const n=li(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return ei.runKernel(fr,r,s)}}),nu=ci({softplus_:function(e){const t={x:li(e,"x","softplus")};return ei.runKernel(ur,t)}}),ru=ci({split_:function(e,t,n=0){const r={x:li(e,"x","split")},s={numOrSizeSplits:t,axis:n};return ei.runKernel(pr,r,s)}}),su=ci({squeeze_:function(e,t){const n=li(e,"x","squeeze","string_or_numeric");return Co(n,ie(n.shape,t).newShape)}}),iu=ci({stack_:function(e,t=0){const n=ui(e,"tensors","stack","string_or_numeric");q(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&q(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:t};return ei.runKernel(_n,r,s)}}),au=ci({tanh_:function(e){const t={x:li(e,"x","tanh","float32")};return ei.runKernel($r,t)}});function ou(e,t){Y(e);const n=ii(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return di(e,null,n,t)}function lu(e,t,n){if(Y(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ii(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return di(e,t,r,n)}const uu=ci({truncatedNormal_:function(e,t=0,n=1,r,s){if(we(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new zl(t,n,r,!0,s),a=na(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),cu=ci({unstack_:function(e,t=0){const n=li(e,"x","unstack","string_or_numeric");q(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:t};return ei.runKernel(Or,r,s)}}),hu=ci({where_:function(e,t,n){const r=li(t,"a","where"),s=li(n,"b","where"),i=li(e,"condition","where","bool"),a=$a($a(i.shape,r.shape),s.shape),o={condition:Oo(i,a),t:Oo(r,a),e:Oo(s,a)};return ei.runKernel(nr,o)}}),du=ci({imag_:function(e){const t={input:li(e,"input","imag")};return ei.runKernel(Xt,t)}}),pu=ci({real_:function(e){const t={input:li(e,"input","real")};return ei.runKernel(Wn,t)}}),fu=ci({transpose_:function(e,t,n){const r=li(e,"x","transpose");if(null==t&&(t=r.shape.map((e,t)=>t).reverse()),q(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(e=>{q(e>=0&&e<r.rank,()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`)}),r.rank<=1)return r.clone();const s={x:r},i={perm:t};return"complex64"===r.dtype?bi(()=>{let e=pu(r),t=du(r);return e=ei.runKernel(Dr,{x:e},i),t=ei.runKernel(Dr,{x:t},i),n&&(t=Al(t)),hi(e,t)}):ei.runKernel(Dr,s,i)}}),gu=ci({dropout_:function(e,t,n,r){const s=li(e,"x","dropout");if(q("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),q(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Ds?s.clone():s;const i=function(e,t){if(null==t)return e.shape.slice();if(Z(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),a=1-t,o=oa(sl(ia(Ul(i,0,1,"float32",r),a)),a);return la(s,o)}}),mu=ci({fft_:function(e){q("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ei.runKernel(Mt,t)}}),yu=ci({rfft_:function(e,t){q("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),i=e.shape.map(e=>e);i[e.shape.length-1]=t,s=Yl(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=Mo([e,Fl(r)],e.shape.length-1),n=t}else s=e;const i=ha(s),a=Co(hi(s,i),[r,n]),o=mu(a),l=Math.floor(n/2)+1,u=pu(o),c=du(o),h=ru(u,[l,n-l],u.shape.length-1),d=ru(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Co(hi(h[0],d[0]),p)}}),bu=ci({ifft_:function(e){q("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return ei.runKernel(qt,t)}}),xu=ci({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Co(e,[n,t]);r=bu(s)}else{const s=[n,2*(t-1)],i=Co(pu(e),[n,t]),a=Co(du(e),[n,t]),o=Hl(Yl(i,[0,1],[n,t-2]),1),l=la(Hl(Yl(a,[0,1],[n,t-2]),1),pa(-1)),u=Mo([i,o],1),c=Mo([a,l],1),h=Co(hi(u,c),[s[0],s[1]]);r=bu(h)}if(r=pu(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Co(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),vu=ci({conv2DBackpropFilter_:function(e,t,n,r,s,i="NHWC",a){let o=e;3===e.rank&&(o=Co(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Co(t,[1,t.shape[0],t.shape[1],t.shape[2]])),q(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),q(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),q(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];q(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),q(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),No("conv2dDerFilter",s,a);const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return ei.runKernel(ut,h,d)}}),wu=ci({relu6_:function(e){const t={x:li(e,"x","relu6")};return ei.runKernel(Xn,t)}}),ku=ci({step_:function(e,t=0){const n={x:li(e,"x","step")},r={alpha:t};return ei.runKernel(Pr,n,r)}});function Iu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return la(e,ku(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Su(e,t){let n=t;const r=Ca(e.shape,t.shape);return r.length>0&&(n=dl(n,r)),Co(n,e.shape)}function Tu(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Vl(e);if("elu"===t)return Jo(e);if("relu6"===t)return wu(e);if("prelu"===t)return Pl(e,n);if("leakyrelu"===t)return ll(e,r);if("sigmoid"===t)return ql(e);throw new Error(`Unknown fused activation ${t}.`)}const Eu=(e,t)=>!(e>0)||"linear"===t,Nu=ci({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Eu(ei.state.gradientDepth,l)){q("NHWC"===s,()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let h=Uo(e,t,n,r,s,i,a);return null!=o&&(h=ia(h,o)),Tu(h,l,u,c)}const h=li(e,"x","conv2d","float32"),d=li(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Co(h,[1,h.shape[0],h.shape[1],h.shape[2]])),q(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),q(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),No("fused conv2d",r,a);const g="NHWC"===s?p.shape[3]:p.shape[1];q(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),q(So(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const m=mo(p.shape,d.shape,n,i,r,a);let y,b;if(null!=o&&(y=li(o,"bias","fused conv2d"),[y]=js(y,h),"NHWC"===s?$a(m.outShape,y.shape):(q(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),q(0===y.shape.length||y.shape[0]===m.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${m.outChannels})`))),null!=u){const e=u.shape;if(q(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)q(1===e[0]||e[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${m.outChannels}).`);else if(3===e.length)try{$a(e,m.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(n)}b=li(u,"prelu weights","fused conv2d")}const x=(e,t)=>{q("NHWC"===s,()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[a,o,u,c]=t,h=Iu(e,u,l);q(Io(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const d=[Vo(o.shape,h,a,n,r),vu(o,h,a.shape,n,r)];if(null!=c){const e=Su(c,h);d.push(e)}return d},v={x:p,filter:d,bias:y,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=da((e,t,n)=>{let r=ei.runKernel(Wr,v,w);return n([t,e,r]),f&&(r=Co(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}});return e(p,d)}{const e=da((e,t,n,r)=>{let s=ei.runKernel(Wr,v,w);return r([t,e,s,n]),f&&(s=Co(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}});return e(p,d,y)}}}),Cu=ci({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,i=[1,1],a){let o=e;3===e.rank&&(o=Co(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Co(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return ei.runKernel(kt,u,c)}}),$u=ci({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,i=[1,1],a){let o=t,l=!1;3===t.rank&&(l=!0,o=Co(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:e},h=ei.runKernel(It,u,c);return l?Co(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Ru=ci({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===Eu(ei.state.gradientDepth,i)){let l=Sl(e,t,n,r);return null!=s&&(l=ia(l,s)),Tu(l,i,a,o)}let l=li(e,"a","fused matMul"),u=li(t,"b","fused matMul");[l,u]=js(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=J(f),y=J(g);q(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=$a(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),x=Co(l,n?[m,c,d]:[m,d,c]),v=Co(u,r?[y,p,h]:[y,h,p]);let w,k;null!=s&&(w=li(s,"bias","fused matMul"),[w]=js(w,l),$a(b,w.shape)),null!=a&&(k=li(a,"prelu weights","fused matMul"));const I=(e,t)=>{const[a,o,l,u]=t,c=Iu(Co(e,l.shape),l,i);let h,d;return n||r?!n&&r?(h=Sl(c,o,!1,!1),d=Sl(c,a,!0,!1)):n&&!r?(h=Sl(o,c,!1,!0),d=Sl(a,c,!1,!1)):(h=Sl(o,c,!0,!0),d=Sl(c,a,!0,!0)):(h=Sl(c,o,!1,!0),d=Sl(a,c,!0,!1)),null!=s?[h,d,Su(u,c)]:[h,d]},S={a:x,b:v,bias:w,preluActivationWeights:k},T={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==s){const e=da((e,t,n)=>{const r=ei.runKernel(Br,S,T);return n([e,t,r]),{value:Co(r,b),gradFunc:I}});return e(x,v)}{const e=da((e,t,n,r)=>{const s=ei.runKernel(Br,S,T);return r([e,t,s,n]),{value:Co(s,b),gradFunc:I}});return e(x,v,w)}}}),Au=ci({cropAndResize_:function(e,t,n,r,s="bilinear",i=0){const a=li(e,"image","cropAndResize"),o=li(t,"boxes","cropAndResize","float32"),l=li(n,"boxInd","cropAndResize","int32"),u=o.shape[0];q(4===a.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),q(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),q(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),q(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),q(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),q("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`);const c={image:a,boxes:o,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return ei.runKernel(bt,c,h)}}),_u=ci({flipLeftRight_:function(e){const t=li(e,"image","flipLeftRight","float32");q(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return ei.runKernel(zt,n,{})}}),Du=ci({grayscaleToRGB_:function(e){const t=li(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];q(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),q(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,nl(t,s)}}),Fu=ci({einsum_:function(e,...t){const n=t.map((e,t)=>li(e,`tensors${t}`,"einsum")),r={equation:e};return ei.runKernel($t,n,r)}}),Ou=ci({rgbToGrayscale_:function(e){const t=li(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];q(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),q(3===r,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=t.dtype,i=ra(t,"float32"),a=ou([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Fu("ij,j->i",i,a);break;case 3:o=Fu("ijk,k->ij",i,a);break;case 4:o=Fu("ijkl,l->ijk",i,a);break;case 5:o=Fu("ijklm,m->ijkl",i,a);break;case 6:o=Fu("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=tl(o,-1),ra(o,s)}}),Lu=ci({rotateWithOffset_:function(e,t,n=0,r=.5){const s=li(e,"image","rotateWithOffset","float32");q(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const i={image:s},a={radians:t,fillValue:n,center:r};return ei.runKernel(zr,i,a)}});function Mu(e,t,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=e.shape[0];return n=Math.min(n,a),q(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),q(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),q(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),q(1===t.rank,()=>"scores must be a 1D tensor"),q(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),q(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}const Pu=ci({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=li(e,"boxes","nonMaxSuppression","float32"),a=li(t,"scores","nonMaxSuppression","float32"),o=Mu(i,a,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return ei.runKernel(Nn,{boxes:i,scores:a},l)}});function zu(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(e,t,n||Bu)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Bu(e,t){return e>t?1:e<t?-1:0}function Wu(e,t,n,r,s){return Vu(e,t,n,r,s,0)}function Uu(e,t,n,r,s,i){return Vu(e,t,n,r,s,0,!1,i,!0)}function Gu(e,t,n,r,s,i){return Vu(e,t,n,r,s,i,!0)}function Vu(e,t,n,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Ku);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=Hu(e,i,h[n]);if(a>=r){o=!0;break}if(t.score=t.score*ju(r,c,a),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>s&&zu(u,t,Ku))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function Hu(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(a,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-g,0)*Math.max(b-m,0);return x/(p+f-x)}function ju(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Ku(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const qu=ci({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=li(e,"boxes","nonMaxSuppression"),o=li(t,"scores","nonMaxSuppression"),l=Mu(a,o,n,r,s,i),u={boxes:a,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},h=ei.runKernel($n,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Xu=ci({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=li(e,"boxes","nonMaxSuppression"),o=li(t,"scores","nonMaxSuppression"),l=Mu(a,o,n,r,s,null),u={boxes:a,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},h=ei.runKernel(Cn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Yu=ci({resizeBilinear_:function(e,t,n=!1,r=!1){const s=li(e,"images","resizeBilinear");q(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),q(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),q(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=s,a=!1;3===s.rank&&(a=!0,i=Co(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},u=ei.runKernel(Kn,o,l);return a?Co(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Ju=ci({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=li(e,"images","resizeNearestNeighbor");q(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),q(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),q("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),q(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=s,a=!1;3===s.rank&&(a=!0,i=Co(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},u=ei.runKernel(Hn,o,l);return a?Co(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Zu=ci({bincount_:function(e,t,n){const r=li(e,"x","bincount"),s=li(t,"weights","bincount");q("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),q(n>=0,()=>`size must be non-negative, but got ${n}.`),q(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const i={x:r,weights:s},a={size:n};return ei.runKernel(Qe,i,a)}}),Qu=ci({lessEqual_:function(e,t){let n=li(e,"a","lessEqual","string_or_numeric"),r=li(t,"b","lessEqual","string_or_numeric");[n,r]=js(n,r),$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(tn,s)}}),ec=ci({round_:function(e){const t={x:li(e,"x","round")};return ei.runKernel(Jn,t)}}),tc=ci({threshold_:function(e,t="binary",n=!1,r=.5){const s=li(e,"image","threshold"),i=s.shape[0]*s.shape[1];let a,o,l,u,c=la(ou([r]),255);if(q(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),q(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),q("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),q("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===s.shape[2]){[a,o,l]=ru(s,[1,1,1],-1);const e=la(a,.2989),t=la(o,.587),n=la(l,.114);u=ia(ia(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,i,a,o,l=ou([-1]),u=ou([0]),c=ou([0]);for(let h=0;h<e.size-1;h++){n=Yl(e,0,h+1),r=Yl(e,h+1),a=oa(dl(n),t),o=oa(dl(r),t);const d=dl(la(n,Gl(0,n.size)));s=oa(d,dl(n));const p=wa(r.shape,n.size),f=ia(Gl(0,r.size),p),g=la(r,f);i=oa(dl(g),dl(r));const m=Sa(s,i),y=Sa(s,i),b=la(a,o);c=la(la(b,m),y);const x=al(c,u);u=hu(x,c,u),l=hu(x,ou([h]),l)}return l}(Zu(ra(ec(u),"int32"),pi([]),256),i));const h=n?Qu(u,c):al(u,c);return ra(la(h,255),"int32")}}),nc=ci({transform_:function(e,t,n="nearest",r="constant",s=0,i){const a=li(e,"image","transform","float32"),o=li(t,"transforms","transform","float32");q(4===a.rank,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),q(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),q(null==i||2===i.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:a,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return ei.runKernel(_r,l,u)}}),rc=ci({less_:function(e,t){let n=li(e,"a","less","string_or_numeric"),r=li(t,"b","less","string_or_numeric");[n,r]=js(n,r),$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(en,s)}}),sc=ci({bandPart_:function(e,t,n){const r=li(e,"a","bandPart");q(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[i,a]=r.shape.slice(-2);let o,l;"number"==typeof t?(q(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),q(t<=i,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`),o=li(t<0?i:t,"numLower","bandPart")):(q("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),o=hu(rc(t,0),i,$l(t,i))),"number"==typeof n?(q(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),q(n<=a,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`),l=li(n<0?a:n,"numUpper","bandPart")):(q("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),l=hu(rc(n,0),a,$l(n,a)));const u=Co(Gl(0,i,1,"int32"),[-1,1]),c=Gl(0,a,1,"int32"),h=Sa(u,c),d=Il(Qu(h,o),ol(h,Al(l))),p=Fl([i,a],r.dtype);return Co(iu(cu(Co(r,[-1,i,a])).map(e=>hu(d,e,p))),s)}});function ic(e,t,n=null){if(0===e.rank)return Ea(e);if(1!==e.rank&&null===n)return ic(Co(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return dl(Ea(e),n);if(t===1/0)return hl(Ea(e),n);if(t===-1/0)return Cl(Ea(e),n);if("euclidean"===t||2===t)return ua(dl(Ia(Ea(e),pa(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return hl(dl(Ea(e),n[0]),n[1]-1);if(t===1/0)return hl(dl(Ea(e),n[1]),n[0]);if(t===-1/0)return Cl(dl(Ea(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ua(dl(ca(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ac=ci({norm_:function(e,t="euclidean",n=null,r=!1){const s=ic(e=li(e,"x","norm"),t,n);let i=s.shape;if(r){const t=se(n,e.shape);i=yl(s.shape,t)}return Co(s,i)}}),oc=ci({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,q(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)q(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=ru(e,e.shape[0],0).map(e=>su(e,[0]));q(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ei.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=la(dl(la(n[r],e)),n[r]);e=Sa(e,t)}return oa(e,ac(e,"euclidean"))}));return t?iu(n,0):n}});function lc(e,t=!1){return ei.tidy(()=>{q(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=rl(n),i=sa(e);const a=lu([[1]],[1,1]);let o=sa(a);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=i,l=o,u=s;[o,i,s]=ei.tidy(()=>{const t=Yl(i,[e,e],[n-e,1]),l=ac(t),u=Yl(i,[e,e],[1,1]),c=hu(al(u,0),lu([[-1]]),lu([[1]])),h=Sa(u,la(c,l)),d=oa(t,h);o=1===d.shape[0]?sa(a):Mo([a,Yl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Al(oa(Sl(c,h),l)),f=Yl(i,[e,0],[n-e,r]),g=la(p,o),m=fu(o);if(0===e)i=Sa(f,Sl(g,Sl(m,f)));else{const t=Sa(f,Sl(g,Sl(m,f)));i=Mo([Yl(i,[0,0],[e,r]),t],0)}const y=fu(g),b=Yl(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Sa(b,Sl(Sl(b,o),y));else{const t=Sa(b,Sl(Sl(b,o),y));s=Mo([Yl(s,[0,0],[n,e]),t],1)}return[o,i,s]}),xi([t,l,u])}return!t&&n>r&&(s=Yl(s,[0,0],[n,r]),i=Yl(i,[0,0],[r,r])),[s,i]})}const uc=ci({qr_:function(e,t=!1){if(q(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return lc(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=cu(Co(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],i=[];return r.forEach(e=>{const[n,r]=lc(e,t);s.push(n),i.push(r)}),[Co(iu(s,0),e.shape),Co(iu(i,0),e.shape)]}}});var cc;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(cc||(cc={}));const hc=ci({computeWeightedLoss_:function(e,t,n=cc.SUM_BY_NONZERO_WEIGHTS){const r=li(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=li(t,"weights","computeWeightedLoss"));const i=null==s?r:la(r,s);if(n===cc.NONE)return i;if(n===cc.SUM)return dl(i);if(n===cc.MEAN){if(null==s)return Nl(i);{const e=r.size/s.size,t=oa(dl(i),dl(s));return e>1?oa(t,pa(e)):t}}if(n===cc.SUM_BY_NONZERO_WEIGHTS){if(null==s)return oa(dl(i),pa(r.size));{const e=la(s,Ol(r.shape)),t=ra(dl(_l(e,pa(0))),"float32");return oa(dl(i),t)}}throw Error(`Unknown reduction: ${n}`)}}),dc=ci({absoluteDifference_:function(e,t,n,r=cc.SUM_BY_NONZERO_WEIGHTS){const s=li(e,"labels","absoluteDifference"),i=li(t,"predictions","absoluteDifference");let a=null;null!=n&&(a=li(n,"weights","absoluteDifference")),X(s.shape,i.shape,"Error in absoluteDifference: ");const o=Ea(Sa(s,i));return hc(o,a,r)}}),pc=ci({cosineDistance_:function(e,t,n,r,s=cc.SUM_BY_NONZERO_WEIGHTS){const i=li(e,"labels","cosineDistance"),a=li(t,"predictions","cosineDistance");let o=null;null!=r&&(o=li(r,"weights","cosineDistance")),X(i.shape,a.shape,"Error in cosineDistance: ");const l=pa(1),u=Sa(l,dl(la(i,a),n,!0));return hc(u,o,s)}}),fc=ci({hingeLoss_:function(e,t,n,r=cc.SUM_BY_NONZERO_WEIGHTS){let s=li(e,"labels","hingeLoss");const i=li(t,"predictions","hingeLoss");let a=null;null!=n&&(a=li(n,"weights","hingeLoss")),X(s.shape,i.shape,"Error in hingeLoss: ");const o=pa(1);s=Sa(la(pa(2),s),o);const l=Vl(Sa(o,la(s,i)));return hc(l,a,r)}}),gc=ci({huberLoss_:function(e,t,n,r=1,s=cc.SUM_BY_NONZERO_WEIGHTS){const i=li(e,"labels","huberLoss"),a=li(t,"predictions","huberLoss");let o=null;null!=n&&(o=li(n,"weights","huberLoss")),X(i.shape,a.shape,"Error in huberLoss: ");const l=pa(r),u=Ea(Sa(a,i)),c=$l(u,l),h=Sa(u,c),d=ia(la(pa(.5),ca(c)),la(l,h));return hc(d,o,s)}}),mc=ci({logLoss_:function(e,t,n,r=1e-7,s=cc.SUM_BY_NONZERO_WEIGHTS){const i=li(e,"labels","logLoss"),a=li(t,"predictions","logLoss");let o=null;null!=n&&(o=li(n,"weights","logLoss")),X(i.shape,a.shape,"Error in logLoss: ");const l=pa(1),u=pa(r),c=Al(la(i,ul(ia(a,u)))),h=la(Sa(l,i),ul(ia(Sa(l,a),u))),d=Sa(c,h);return hc(d,o,s)}}),yc=ci({squaredDifference_:function(e,t){let n=li(e,"a","squaredDifference"),r=li(t,"b","squaredDifference");[n,r]=js(n,r),$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(vr,s,{})}}),bc=ci({meanSquaredError_:function(e,t,n,r=cc.SUM_BY_NONZERO_WEIGHTS){const s=li(e,"labels","meanSquaredError"),i=li(t,"predictions","meanSquaredError");let a=null;null!=n&&(a=li(n,"weights","meanSquaredError")),X(s.shape,i.shape,"Error in meanSquaredError: ");const o=yc(s,i);return hc(o,a,r)}}),xc=ci({sigmoidCrossEntropy_:function(e,t,n,r=0,s=cc.SUM_BY_NONZERO_WEIGHTS){let i=li(e,"multiClassLabels","sigmoidCrossEntropy");const a=li(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=li(n,"weights","sigmoidCrossEntropy")),X(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=pa(r),t=pa(1),n=pa(.5);i=ia(la(i,Sa(t,e)),la(n,e))}const l=function(e,t){const n=li(e,"labels","sigmoidCrossEntropyWithLogits"),r=li(t,"logits","sigmoidCrossEntropyWithLogits");X(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Vl(r),i=la(r,n),a=cl(el(Al(Ea(r))));return ia(Sa(s,i),a)}(i,a);return hc(l,o,s)}}),vc=ci({softmaxCrossEntropy_:function(e,t,n,r=0,s=cc.SUM_BY_NONZERO_WEIGHTS){let i=li(e,"onehotLabels","softmaxCrossEntropy");const a=li(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=li(n,"weights","softmaxCrossEntropy")),X(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const e=pa(r),t=pa(1),n=pa(i.shape[1]);i=ia(la(i,Sa(t,e)),oa(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=da((e,t,r)=>{const s=kl(t,[n],!0),i=Sa(ra(t,"float32"),s);r([e,i]);const a=Al(la(i,e));return{value:dl(a,[n]),gradFunc:(e,t)=>{const[r,s]=t,i=yl(e.shape,[n]);return[la(Co(e,i),Sa(ra(r,"float32"),el(s))),la(Co(e,i),Sa(el(s),ra(r,"float32")))]}}});return r(e,t)}(i,a);return hc(l,o,s)}}),wc={flipLeftRight:_u,grayscaleToRGB:Du,resizeNearestNeighbor:Ju,resizeBilinear:Yu,rgbToGrayscale:Ou,rotateWithOffset:Lu,cropAndResize:Au,nonMaxSuppression:Pu,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=li(e,"boxes","nonMaxSuppressionAsync"),a=li(t,"scores","nonMaxSuppressionAsync"),o=Mu(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=Wu(u,c,n,r,s);return i!==e&&i.dispose(),a!==t&&a.dispose(),ou(h,"int32")},nonMaxSuppressionWithScore:qu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=li(e,"boxes","nonMaxSuppressionAsync"),o=li(t,"scores","nonMaxSuppressionAsync"),l=Mu(a,o,n,r,s,i);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Gu(c,h,n,r,s,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:ou(d,"int32"),selectedScores:ou(p)}},nonMaxSuppressionPadded:Xu,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=li(e,"boxes","nonMaxSuppressionAsync"),o=li(t,"scores","nonMaxSuppressionAsync"),l=Mu(a,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:g}=Uu(d,p,u,c,h,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:ou(f,"int32"),validOutputs:pa(g,"int32")}},threshold:tc,transform:nc},kc={bandPart:sc,gramSchmidt:oc,qr:uc},Ic={absoluteDifference:dc,computeWeightedLoss:hc,cosineDistance:pc,hingeLoss:fc,huberLoss:gc,logLoss:mc,meanSquaredError:bc,sigmoidCrossEntropy:xc,softmaxCrossEntropy:vc},Sc=class{static sgd(e){return new _a(e)}static momentum(e,t,n=!1){return new Da(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Fa(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Ta(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new va(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Aa(e,t,n,r,s)}static adagrad(e,t=.1){return new ka(e,t)}},Tc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Ec(){return new Promise(e=>Tc(()=>e()))}function Nc(e,t){const n=e[0].length;e.forEach((e,t)=>{q(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),q(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let i=0;i<n;i++)q(i===t||e[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function Cc(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var $c;function Rc(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const i=n[s],a=r[r.length-n.length+s],o=r[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${i} but shape[${s+e}] = ${o}`)}else r[a]=i}return r}function Ac(e){const t={FIRST_DIM_SIZE:$c.FIRST_DIM_SIZE,VALUE_ROWIDS:$c.VALUE_ROWIDS,ROW_LENGTHS:$c.ROW_LENGTHS,ROW_SPLITS:$c.ROW_SPLITS,ROW_LIMITS:$c.ROW_LIMITS,ROW_STARTS:$c.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function _c(e){return 0===e.length?0:e[0]===$c.FIRST_DIM_SIZE?e.length-1:e.length}function Dc(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}($c||($c={}));const Fc=30;function Oc(e){return e<=Fc?e:fe(e,Math.floor(Math.sqrt(e)))}function Lc(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Mc(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Pc(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function zc(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Bc(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Wc(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Uc(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===J(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,i=s[s.length-1];let a=1;for(let e=0;e<s.length-1;++e)a*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=i;e<n;++e)u*=o[e],l.push(o[e]);const c=[...ge(e.shape).map(e=>e/u),1].slice(0,i);return[l,a,u,c]}function Gc(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(i+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(i+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Vc(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Gc(n,t,e)}function Hc(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,i=n.length;let a=1;for(let e=s;e<i;++e)a*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:J(t.shape)/o,sliceSize:a,strides:[...ge(n.slice(0,s)),1],outputSize:J(n)}}const jc=1.7580993408473768,Kc=1.0507009873554805,qc=.3275911,Xc=.254829592,Yc=-.284496736,Jc=1.421413741,Zc=-1.453152027,Qc=1.061405429;function eh(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function th(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function nh(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function rh(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function sh(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ih(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function ah(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const i=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function oh(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const lh="->",uh=/->/g,ch=",",hh="...";function dh(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(uh,"").length)/lh.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${lh}").`);const[r,s]=e.split(lh);q(-1===r.indexOf(hh),()=>`The ellipsis notation ("${hh}") is not supported yet.`);const i=r.split(ch),a=i.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!i.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==ch&&o.push(t)}const l=new Array(i.length);for(let e=0;e<a;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<i[e].length;++t)l[e].push(o.indexOf(i[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function ph(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function fh(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:q(r[t[e][n]]===s[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`)}}function gh(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const i=[];for(let e=0;e<n.length;++e){const s=yh(t,n[e]);for(const t of s)-1===i.indexOf(t)&&(r[e].push(t),i.push(t))}return{path:n,steps:r}}function mh(e){return e.every((e,t)=>e===t)}function yh(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function bh(e,t,n=0){let r=[];if("number"==typeof t)q(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);q(s<=1,()=>"There should be only one negative value in split array.");const i=t.indexOf(-1);if(-1!==i){const r=t.reduce((e,t)=>t>0?e+t:e);t[i]=e.shape[n]-r}q(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function xh(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function vh(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function wh(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function kh(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Ih(e,t){return`size ${e} must be non-negative, not ${t}`}function Sh(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Th(e,t){return`Input to reshape is a SparseTensor with ${J(e)}\n  dense values, but the requested shape requires a multiple of ${J(t)}. inputShape=${e} outputShape= ${t}`}function Eh(e,t){return`Input to reshape is a tensor with ${J(e)} dense values, but the requested shape has ${J(t)}. inputShape=${e} outputShape=${t}`}function Nh(){return"segment ids must be >= 0"}function Ch(){return"segment ids are not increasing"}function $h(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Rh(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Ah(e,t){let n,r=!1;for(e<=Fc?(n=e,r=!0):n=fe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=fe(e,n+1);return n}function _h(e,t,n){const r=[],s=e.length;for(let i=0;i<s;i++)i!==t?r.push(e[i]):r.push(n);return r}function Dh(e,t,n,r){const s=t.shape.length,i=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}function Fh(e){try{return e.map(e=>bs(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Oh(e){return e.map(e=>ys(e))}function Lh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=na(e,"int32"),s=na([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=r.indexToLoc(n[t]),a=t*e.length;s.values.set(i,a)}return s.toTensor()}!function(){for(const e of Oa)ba(e)}();const Mh={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(e,ku(ra(n,"float32"),-1))}}},Ph={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ca(ra(n,"float32")),r=ua(Sa(pa(1),t));return Al(oa(e,r))}}}},zh={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ua(Sa(ca(ra(n,"float32")),1));return oa(e,t)}}}},Bh={kernelName:Le,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$a(n.shape,r.shape);return{a:()=>{let t=e;const r=Ca(n.shape,s);return r.length>0&&(t=dl(t,r)),Co(t,n.shape)},b:()=>{let t=e;const n=Ca(r.shape,s);return n.length>0&&(t=dl(t,n)),Co(t,r.shape)}}}},Wh={kernelName:Me,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},Uh={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ha(n)}}},Gh={kernelName:We,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ha(n)}}},Vh={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(e,ua(Sa(pa(1),ca(ra(n,"float32")))))}}},Hh={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ua(ia(pa(1),ca(ra(n,"float32"))));return oa(e,t)}}}},jh={kernelName:je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$a(n.shape,r.shape);return{a:()=>{const t=ia(ca(n),ca(r));let i=la(e,oa(r,t));const a=Ca(n.shape,s);return a.length>0&&(i=dl(i,a)),Co(i,n.shape)},b:()=>{const t=ia(ca(n),ca(r));let i=Al(la(e,oa(n,t)));const a=Ca(r.shape,s);return a.length>0&&(i=dl(i,a)),Co(i,r.shape)}}}},Kh={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(e,ia(ca(ra(n,"float32")),1))}}},qh={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(e,Sa(pa(1),ca(ra(n,"float32"))))}}},Xh=ci({avgPool3dGrad_:function(e,t,n,r,s,i){const a=li(e,"dy","avgPool3dGrad"),o=li(t,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=Co(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=Co(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),q(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),q(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),No("avgPool3dGrad",s,i);const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:i},p=ei.runKernel(Ye,h,d);return c?Co(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Yh={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Xh(e,r,s,i,a,o)}}},Jh=ci({avgPoolGrad_:function(e,t,n,r,s){const i=li(e,"dy","avgPoolGrad"),a=li(t,"input","avgPoolGrad");q(a.rank===i.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`);let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=Co(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=Co(i,[1,i.shape[0],i.shape[1],i.shape[2]])),q(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),q(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=ei.runKernel(qe,c,h);return u?Co(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Zh={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a}=n;return{x:()=>Jh(e,r,s,i,a)}}},Qh={kernelName:Je,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Sl(e,s,!1,!1),b:()=>Sl(e,r,!0,!1)}:i&&!a?{a:()=>Sl(s,e,!1,!0),b:()=>Sl(r,e,!1,!1)}:{a:()=>Sl(s,e,!0,!0),b:()=>Sl(e,r,!0,!0)}:{a:()=>Sl(e,s,!1,!0),b:()=>Sl(r,e,!0,!1)}}},ed=ci({spaceToBatchND_:function(e,t,n){const r=li(e,"x","spaceToBatchND");q(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),q(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),q(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const s={x:r},i={blockShape:t,paddings:n};return ei.runKernel(dr,s,i)}}),td={kernelName:Ze,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>ed(e,r,s)}}},nd={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let e=s.length-1;e>=0;e--)if(s[e]===i[e])a[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let e=0;e<a.length;e++)a[e]>1&&o.push(e);return{x:()=>dl(e,o,!0)}}},rd={kernelName:nt,gradFunc:e=>({x:()=>e.clone()})},sd={kernelName:rt,gradFunc:e=>({x:()=>ha(e)})},id={kernelName:st,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>hu(Il(ol(r,s),Qu(r,i)),e,ha(e))}}},ad={kernelName:at,inputsToSave:["x"],gradFunc:Mh.gradFunc},od={kernelName:ot,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:s}=n,i=se(s,t[0].shape)[0],a=r.map(e=>e[i]);return ru(e,a,i).map(e=>()=>e)}},ld={kernelName:lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return q(Io(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>Vo(r.shape,e,s,a,o,l),filter:()=>vu(r,e,s.shape,a,o,l)}}},ud={kernelName:ct,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Uo(e,s,i,a,o,1,l),filter:()=>vu(e,r,s.shape,i,a,o,l)}}},cd=ci({conv3DBackpropFilter_:function(e,t,n,r,s){let i=e;4===e.rank&&(i=Co(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=Co(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),q(5===i.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),q(5===a.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),q(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),q(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),q(a.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:i,dy:a},l={strides:r,pad:s,filterShape:n};return ei.runKernel(dt,o,l)}}),hd={kernelName:ht,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i}=n;q(Io(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[a,o]=t;return{x:()=>Ko(a.shape,e,o,s,i),filter:()=>cd(a,e,o.shape,s,i)}}},dd=ci({sin_:function(e){const t={x:li(e,"x","sin","float32")};return ei.runKernel(ir,t)}}),pd={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(Al(dd(ra(n,"float32"))),e)}}},fd=ci({sinh_:function(e){const t={x:li(e,"x","sinh")};return ei.runKernel(ar,t)}}),gd={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(fd(ra(n,"float32")),e)}}},md=ci({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:li(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return ei.runKernel(yt,s,i)}}),yd={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const t=xl([s],r.rank);let n=md(e,s,i,!a);return null!=t&&(n=fu(n,t)),n}}}},bd={kernelName:wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;q(Io(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=t;return q(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),q(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),q(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),q(So(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),No("depthwiseConv2d",i,a),{x:()=>$u(l.shape,e,u,s,i,o,a),filter:()=>Cu(l,e,u.shape,s,i,o,a)}}},xd={kernelName:Tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,i={x:r,filter:s,dy:e},a={x:r,filter:s,dy:e};return{x:()=>ei.runKernel(Et,i,n),filter:()=>ei.runKernel(Nt,a,n)}}},vd={kernelName:Rt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ei.runKernel(At,r)}}},wd={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=la(el(Al(ca(n))),2/Math.sqrt(Math.PI));return{x:()=>la(e,r)}}},kd={kernelName:Ft,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(e,n)}}},Id={kernelName:Ot,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Co(e,n.shape)}}},Sd={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(e,el(n))}}},Td={kernelName:Bt,gradFunc:e=>({x:()=>ha(e)})},Ed={kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$a(n.shape,r.shape);return{a:()=>{const t=oa(e,ra(r,"float32")),i=Ca(n.shape,s);return i.length>0?Co(dl(t,i),n.shape):t},b:()=>{let t=la(e,ra(n,"float32"));const i=Ca(r.shape,s);i.length>0&&(t=Co(dl(t,i),r.shape));const a=ca(r);return Al(oa(t,ra(a,"float32")))}}}},Nd=ci({rsqrt_:function(e){const t={x:li(e,"x","rsqrt","float32")};return ei.runKernel(Zn,t)}}),Cd={kernelName:Ut,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=t,l=null==o?pa(1):o,u=Ca(i.shape,s.shape),c=[];if(1===i.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Sa(s,i),d=la(e,l),p=Nd(ia(a,pa(r))),f=la(la(la(p,p),p),pa(-.5));return{x:()=>1===i.rank?Co(la(la(e,nl(Co(p,[1,1,1,i.shape[0]]),c)),l),s.shape):Co(la(la(e,p),l),s.shape),mean:()=>{let e=la(la(p,pa(-1)),d);return 1===i.rank&&(e=dl(e,u)),Co(e,i.shape)},variance:()=>{let e=la(la(f,h),d);return 1===i.rank&&(e=dl(e,u)),Co(e,i.shape)},scale:()=>{const t=la(h,p);let n=la(e,t);return 1===i.rank&&(n=dl(n,u)),Co(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=dl(t,u)),Co(t,i.shape)}}}},$d=ci({unsortedSegmentSum_:function(e,t,n){const r=li(e,"x","unsortedSegmentSum"),s=li(t,"segmentIds","unsortedSegmentSum","int32");q(Q(n),()=>"numSegments must be of dtype int");const i={x:r,segmentIds:s},a={numSegments:n};return ei.runKernel(Lr,i,a)}}),Rd={kernelName:Gt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:i,batchDims:a}=n,o=se(i,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,a=r.slice(0,o),l=a.length,u=r.slice(i,r.length).slice(1),c=u.length,h=Ad(0,l),d=Ad(l+1,l+1+c),p=_d([a,[s],u]),f=Co(n,p),g=Co(t,[s]),m=_d([[l],h,d]),y=fu(f,m);let b=$d(y,g,e.shape[o]);const x=vl(m);return b=fu(b,x),b};if(1===a){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=iu(n.map((t,n)=>l(t,s.slice(n,1),e.slice(n,1))()));return t.reshape(r.shape)},indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function Ad(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function _d(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Dd={kernelName:jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ha(n),b:()=>ha(r)}}},Fd={kernelName:Kt,gradFunc:e=>({x:()=>ra(e,"float32")})},Od={kernelName:Yt,gradFunc:e=>({x:()=>ha(e)})},Ld={kernelName:Jt,gradFunc:e=>({x:()=>ha(e)})},Md={kernelName:Zt,gradFunc:e=>({x:()=>ha(e)})},Pd={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,i=al(r,0);return{x:()=>hu(i,e,la(e,s))}}},zd={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(e,ia(n,1))}}},Bd={kernelName:rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(e,ra(n,"float32"))}}},Wd={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=el(r);return Sa(e,la(dl(e,s,!0),t))}}}},Ud=ci({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,i=1,a=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:a};return ei.runKernel(cn,o,l)}}),Gd={kernelName:un,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Ud(r,s,e,i,a,o,l)}}};function Vd(e,t,n,r){return t.rank<n.rank&&(t=Co(t,yl(t.shape,r))),e.rank<n.rank&&(e=Co(e,yl(e.shape,r))),{x:()=>la(e,ra(Zo(n,t),e.dtype))}}const Hd={kernelName:hn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,i=t[0],a=Vd(e,t[1],i,se(s,i.shape));return{x:()=>a.x()}}},jd={kernelName:dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>la(e,ra(ol(n,r),"float32")),b:()=>la(e,ra(rc(n,r),"float32"))}}},Kd=ci({maxPool3dGrad_:function(e,t,n,r,s,i,a){const o=li(e,"dy","maxPool3dGrad"),l=li(t,"input","maxPool3dGrad"),u=li(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Co(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Co(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Co(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),q(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),q(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),q(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),No("maxPool3dGrad",i,a);const f={dy:c,input:h,output:d},g={filterSize:r,strides:s,pad:i,dimRoundingMode:a},m=ei.runKernel(mn,f,g);return p?Co(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),qd={kernelName:gn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>Kd(e,r,s,i,a,o,l)}}},Xd=ci({maxPoolGrad_:function(e,t,n,r,s,i,a){const o=li(e,"dy","maxPoolGrad"),l=li(t,"input","maxPoolGrad"),u=li(n,"output","maxPoolGrad");q(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),q(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),q(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),No("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return ei.runKernel(fn,c,h)}}),Yd={kernelName:pn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Xd(e,r,s,i,a,o)}}},Jd={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,i=se(s,r.shape),a=J(ml(r.shape,i)[1]);return{x:()=>{const t=r.shape.slice();i.forEach(e=>{t[e]=1});const n=Co(e,t);return oa(la(n,Ol(r.shape,"float32")),a)}}}},Zd={kernelName:xn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[i,a]=t,o=Vd(e,a,i,se(s,i.shape));return{x:()=>o.x()}}},Qd={kernelName:vn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>la(e,ra(Qu(n,r),"float32")),b:()=>la(e,ra(al(n,r),"float32"))}}},ep={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map(e=>e[0]);return{x:()=>Yl(e,i,r.shape)}}},tp={kernelName:kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$a(n.shape,r.shape);return{a:()=>{const t=Ca(n.shape,s);return t.length>0?Co(dl(e,t),n.shape):e},b:()=>{const t=la(e,Al(sl(oa(n,r)))),i=Ca(r.shape,s);return i.length>0?Co(dl(t,i),r.shape):t}}}},np={kernelName:Sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$a(n.shape,r.shape);return{a:()=>{const t=la(e,ra(r,"float32")),i=Ca(n.shape,s);return i.length>0?Co(dl(t,i),n.shape):t},b:()=>{const t=la(e,ra(n,"float32")),i=Ca(r.shape,s);return i.length>0?Co(dl(t,i),r.shape):t}}}},rp={kernelName:Tn,gradFunc:e=>({x:()=>Al(e)})},sp={kernelName:An,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Fl(n.shape,"float32")}}},ip={kernelName:Rn,gradFunc:e=>({x:()=>ha(e)})},ap={kernelName:_n,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return cu(e,r).map(e=>()=>e)}},op={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map(e=>e[0]);return{x:()=>Yl(e,i,r.shape)}}},lp={kernelName:Fn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,i=n,a=r,o=$a(i.shape,a.shape);return{a:()=>{const t=ra(a,"float32");let n=la(e,la(t,Ia(i,Sa(t,pa(1)))));const r=Ca(i.shape,o);return r.length>0&&(n=dl(n,r)),Co(n,i.shape)},b:()=>{const t=al(i,0),n=hu(t,ul(i),ha(i));let r=la(e,la(s,n));const l=Ca(a.shape,o);return l.length>0&&(r=dl(r,l)),Co(r,a.shape)}}}},up={kernelName:On,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=al(n,0);return{x:()=>hu(s,e,la(e,r)),alpha:()=>{let t=hu(s,ha(e),la(e,n));const i=Ca(r.shape,e.shape);return i.length>0&&(t=dl(t,i)),Co(t,r.shape)}}}},cp=ci({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:li(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:r};return ei.runKernel(mt,s,i)}});const hp={kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let i=[];return i=null==s?r.shape.map((e,t)=>t):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,i=xl(n,r);let a=e;null!=i&&(a=fu(e,i));const o=a.shape.slice(),l=o.splice(r-n.length,n.length).reduce((e,t)=>e*t,1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=Co(t,r),i=cp(e,n,!0,!1),a=cp(e,n,!0,!0),o=la(i,a);return la(s,o)}(a.reshape(o),t,s);if(u=u.reshape(a.shape),null!=i){const e=vl(i);u=fu(u,e)}return u}(r,e,i)}}},dp={kernelName:Ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$a(n.shape,r.shape);return{a:()=>{const t=oa(e,ra(r,"float32")),i=Ca(n.shape,s);return i.length>0?Co(dl(t,i),n.shape):t},b:()=>{let t=la(e,ra(n,"float32"));const i=Ca(r.shape,s);i.length>0&&(t=Co(dl(t,i),r.shape));const a=ca(r);return Al(oa(t,ra(a,"float32")))}}}},pp={kernelName:Un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(e,Al(ca(n)))}}},fp={kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=la(Qu(n,6),ku(n));return{x:()=>la(e,ra(r,"float32"))}}},gp={kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(e,ra(ku(n),"float32"))}}},mp={kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,n.shape)}}},yp={kernelName:Kn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ei.runKernel(qn,s,n)}}},bp={kernelName:Hn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ei.runKernel(jn,s,n)}}},xp={kernelName:Yn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=se(r,e.shape);return{x:()=>Hl(e,s)}}},vp={kernelName:Jn,gradFunc:e=>({x:()=>ha(e)})},wp={kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Al(oa(e,la(Ia(n,1.5),2)))}}},kp=ci({logicalNot_:function(e){const t={x:li(e,"x","logicalNot","bool")};return ei.runKernel(on,t)}}),Ip={kernelName:nr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>ra(ha(n),"float32"),t:()=>la(e,ra(n,e.dtype)),e:()=>la(e,ra(kp(n),e.dtype))}}},Sp={kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=al(n,pa(0)),r=pa(jc),s=pa(Kc),i=la(e,s),a=la(la(e,r),el(ra(n,"float32")));return hu(t,i,a)}}}},Tp={kernelName:lr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(e,la(n,Sa(pa(1),n)))}}},Ep={kernelName:or,gradFunc:e=>({x:()=>ha(e)})},Np=ci({cos_:function(e){const t={x:li(e,"x","cos","float32")};return ei.runKernel(ft,t)}}),Cp={kernelName:ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(Np(ra(n,"float32")),e)}}},$p=ci({cosh_:function(e){const t={x:li(e,"x","cosh","float32")};return ei.runKernel(gt,t)}}),Rp={kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la($p(ra(n,"float32")),e)}}},Ap={kernelName:sr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:i}=n,a=r.shape,[o,l]=ao(r,s,i),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],a[t]-o[t]-l[t]]);return{x:()=>Ml(e,u)}}},_p={kernelName:fr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,i=la(e,r);return{logits:()=>Sa(i,la(dl(i,[s],!0),r))}}},Dp={kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(e,ql(n))}}},Fp=ci({batchToSpaceND_:function(e,t,n){const r=li(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);q(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),q(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),q(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);const i={x:r},a={blockShape:t,crops:n};return ei.runKernel(Ze,i,a)}}),Op={kernelName:dr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Fp(e,r,s)}}},Lp={kernelName:pr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Mo(e,r)}}},Mp=[Mh,Ph,zh,Bh,Wh,Uh,Gh,Vh,Hh,jh,Kh,qh,Yh,Zh,Qh,td,nd,rd,sd,id,ad,od,ud,ld,hd,pd,gd,yd,bd,xd,dp,vd,wd,kd,Id,Sd,Ed,Td,Cd,Rd,Dd,Fd,Od,Ld,Md,Pd,zd,Bd,Wd,Gd,Hd,Hd,jd,qd,Yd,Jd,Zd,Qd,ep,tp,np,rp,sp,ip,ap,op,op,lp,up,hp,pp,fp,gp,mp,yp,bp,xp,vp,wp,Ip,Sp,Tp,Ep,Cp,Rp,Ap,_p,Dp,Op,Op,Lp,Lp,{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(e,la(ua(ra(n,"float32")),2))}}},{kernelName:vr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=pa(2);return{a:()=>la(e,la(s,Sa(n,r))),b:()=>la(e,la(s,Sa(r,n)))}}},{kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(e,la(ra(n,"float32"),2))}}},{kernelName:Pr,gradFunc:e=>({x:()=>ha(e)})},{kernelName:Nr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=$a(n.shape,r.shape);return{a:()=>{let t=e;const r=Ca(n.shape,s);return r.length>0&&(t=dl(t,r)),Co(t,n.shape)},b:()=>{let t=e;const n=Ca(r.shape,s);return n.length>0&&(t=dl(t,n)),Co(Al(t),r.shape)}}}},{kernelName:hr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:i}=n;se(i,r.shape).forEach(e=>{s[e]=1});const a=Co(e,s),o=la(a,Ol(r.shape,"float32"));return{x:()=>o}}},{kernelName:Cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>oa(e,ca(Np(n)))}}},{kernelName:$r,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>la(Sa(pa(1),ca(n)),e)}}},{kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=ha(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=ia(t,Yl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)t=ia(t,Yl(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)t=ia(t,Yl(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)t=ia(t,Yl(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Dr,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,i=vl(s);return{x:()=>fu(e,i)}}},{kernelName:Or,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>iu(e,s)}}},{kernelName:Lr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ra(t,ha(t)),r=il(e,n);let s=ol(t,pa(0,"int32"));const i=r.rank-s.rank;for(let e=0;e<i;++e)s=tl(s,e+1);s=Il(s,Ol(r.shape,"bool"));const a=ha(r);return hu(s,r,a)}(e,n)}}},{kernelName:Mr,gradFunc:e=>({x:()=>ha(e)})}];for(const e of Mp)Jr(e);Fs().prototype.abs=function(){return this.throwIfDisposed(),Ea(this)};const Pp=ci({acos_:function(e){const t={x:li(e,"x","acos")};return ei.runKernel(Fe,t)}});Fs().prototype.acos=function(){return this.throwIfDisposed(),Pp(this)};const zp=ci({acosh_:function(e){const t={x:li(e,"x","acosh")};return ei.runKernel(Oe,t)}});Fs().prototype.acosh=function(){return this.throwIfDisposed(),zp(this)},Fs().prototype.add=function(e){return this.throwIfDisposed(),ia(this,e)},Fs().prototype.all=function(e,t){return this.throwIfDisposed(),uo(this,e,t)},Fs().prototype.any=function(e,t){return this.throwIfDisposed(),co(this,e,t)},Fs().prototype.argMax=function(e){return this.throwIfDisposed(),ho(this,e)};const Bp=ci({argMin_:function(e,t=0){const n={x:li(e,"x","argMin")},r={axis:t};return ei.runKernel(We,n,r)}});Fs().prototype.argMin=function(e){return this.throwIfDisposed(),Bp(this,e)},Fs().prototype.asScalar=function(){return this.throwIfDisposed(),q(1===this.size,()=>"The array must have only 1 element."),Co(this,[])},Fs().prototype.asType=function(e){return this.throwIfDisposed(),ra(this,e)},Fs().prototype.as1D=function(){return this.throwIfDisposed(),Co(this,[this.size])},Fs().prototype.as2D=function(e,t){return this.throwIfDisposed(),Co(this,[e,t])},Fs().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Co(this,[e,t,n])},Fs().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Co(this,[e,t,n,r])},Fs().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Co(this,[e,t,n,r,s])};const Wp=ci({asin_:function(e){const t={x:li(e,"x","asin")};return ei.runKernel(Ue,t)}});Fs().prototype.asin=function(){return this.throwIfDisposed(),Wp(this)};const Up=ci({asinh_:function(e){const t={x:li(e,"x","asinh")};return ei.runKernel(Ge,t)}});Fs().prototype.asinh=function(){return this.throwIfDisposed(),Up(this)};const Gp=ci({atan_:function(e){const t={x:li(e,"x","atan")};return ei.runKernel(Ve,t)}});Fs().prototype.atan=function(){return this.throwIfDisposed(),Gp(this)};const Vp=ci({atan2_:function(e,t){let n=li(e,"a","atan2"),r=li(t,"b","atan2");[n,r]=js(n,r);const s={a:n,b:r};return ei.runKernel(je,s)}});Fs().prototype.atan2=function(e){return this.throwIfDisposed(),Vp(this,e)};const Hp=ci({atanh_:function(e){const t={x:li(e,"x","atanh")};return ei.runKernel(He,t)}});Fs().prototype.atanh=function(){return this.throwIfDisposed(),Hp(this)},Fs().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),$o(this,e,t,n,r)},Fs().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Fp(this,e,t)},Fs().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Ao(this,e,t,n,r,s)},Fs().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Oo(this,e)},Fs().prototype.cast=function(e){return this.throwIfDisposed(),ra(this,e)};const jp=ci({ceil_:function(e){const t={x:li(e,"x","ceil","float32")};return ei.runKernel(rt,t)}});Fs().prototype.ceil=function(){return this.throwIfDisposed(),jp(this)},Fs().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Lo(this,e,t)},Fs().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ds&&(e=[e]),Mo([this,...e],t)},Fs().prototype.conv1d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Go(this,e,t,n,r,s,i)},Fs().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Ho(this,e,t,n,r,s)},Fs().prototype.conv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Uo(this,e,t,n,r,s,i)},Fs().prototype.cos=function(){return this.throwIfDisposed(),Np(this)},Fs().prototype.cosh=function(){return this.throwIfDisposed(),$p(this)},Fs().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),cp(this,e,t,n)},Fs().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),md(this,e,t,n)};const Kp=ci({depthToSpace_:function(e,t,n="NHWC"){const r=li(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];q(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),q(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),q(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`),q(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${r.shape}`);const o={x:r},l={blockSize:t,dataFormat:n};return ei.runKernel(vt,o,l)}});Fs().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Kp(this,e,t)},Fs().prototype.depthwiseConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Yo(this,e,t,n,r,s,i)};const qp=ci({dilation2d_:function(e,t,n,r,s=[1,1],i="NHWC"){const a=li(e,"x","dilation2d"),o=li(t,"filter","dilation2d");q(3===a.rank||4===a.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),q(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),q("NHWC"===i,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=a,u=!1;3===a.rank&&(l=Co(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),q(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=ei.runKernel(Tt,c,h);return u?Co(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Fs().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),qp(this,e,t,n,r,s)};const Xp=ci({divNoNan_:function(e,t){let n=li(e,"a","div"),r=li(t,"b","div");[n,r]=js(n,r);const s=oa(n,r),i=ha(s),a=Zo(r,i);return hu(a,i,s)}});Fs().prototype.divNoNan=function(e){return this.throwIfDisposed(),Xp(this,e)},Fs().prototype.div=function(e){return this.throwIfDisposed(),oa(this,e)};const Yp=ci({dot_:function(e,t){const n=li(e,"t1","dot"),r=li(t,"t2","dot");q(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(q(s===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`),1===n.rank&&1===r.rank){const e=Co(n,[1,-1]),t=Co(r,[-1,1]),s=Sl(e,t);return Co(s,[])}if(1===n.rank&&2===r.rank){const e=Co(n,[1,-1]),t=Co(r,[r.shape[0],r.shape[1]]),s=Sl(e,t);return Co(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Co(r,[-1,1]),t=Sl(n,e);return Co(t,[t.size])}{const e=Co(r,[r.shape[0],r.shape[1]]);return Sl(n,e)}}});Fs().prototype.dot=function(e){return this.throwIfDisposed(),Yp(this,e)},Fs().prototype.elu=function(){return this.throwIfDisposed(),Jo(this)},Fs().prototype.equal=function(e){return this.throwIfDisposed(),Zo(this,e)},Fs().prototype.erf=function(){return this.throwIfDisposed(),Qo(this)};const Jp=ci({euclideanNorm_:function(e,t=null,n=!1){return ac(e,"euclidean",t,n)}});Fs().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Jp(this,e,t)},Fs().prototype.exp=function(){return this.throwIfDisposed(),el(this)},Fs().prototype.expandDims=function(e){return this.throwIfDisposed(),tl(this,e)};const Zp=ci({expm1_:function(e){const t={x:li(e,"x","expm1")};return ei.runKernel(Lt,t)}});Fs().prototype.expm1=function(){return this.throwIfDisposed(),Zp(this)},Fs().prototype.fft=function(){return this.throwIfDisposed(),mu(this)},Fs().prototype.flatten=function(){return this.throwIfDisposed(),Co(this,[this.size])},Fs().prototype.floor=function(){return this.throwIfDisposed(),sl(this)},Fs().prototype.floorDiv=function(e){return this.throwIfDisposed(),aa(this,e)},Fs().prototype.gather=function(e,t,n){return this.throwIfDisposed(),il(this,e,t,n)},Fs().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ol(this,e)},Fs().prototype.greater=function(e){return this.throwIfDisposed(),al(this,e)},Fs().prototype.ifft=function(){return this.throwIfDisposed(),bu(this)},Fs().prototype.irfft=function(){return this.throwIfDisposed(),xu(this)};const Qp=ci({isFinite_:function(e){const t={x:li(e,"x","isFinite")};return ei.runKernel(Yt,t)}});Fs().prototype.isFinite=function(){return this.throwIfDisposed(),Qp(this)};const ef=ci({isInf_:function(e){const t={x:li(e,"x","isInf")};return ei.runKernel(Jt,t)}});Fs().prototype.isInf=function(){return this.throwIfDisposed(),ef(this)};const tf=ci({isNaN_:function(e){const t={x:li(e,"x","isNaN")};return ei.runKernel(Zt,t)}});Fs().prototype.isNaN=function(){return this.throwIfDisposed(),tf(this)},Fs().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ll(this,e)},Fs().prototype.lessEqual=function(e){return this.throwIfDisposed(),Qu(this,e)},Fs().prototype.less=function(e){return this.throwIfDisposed(),rc(this,e)};const nf=ci({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const i=li(e,"x","localResponseNormalization");q(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`),q(Q(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=i,o=!1;3===i.rank&&(o=!0,a=Co(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:t,bias:n,alpha:r,beta:s},c=ei.runKernel(un,l,u);return o?Co(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Fs().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),nf(this,e,t,n,r)};const rf=ci({logSigmoid_:function(e){const t=li(e,"x","logSigmoid");return da(e=>({value:Al(nu(Al(e))),gradFunc:t=>la(t,ql(Al(e)))}))(t)}});Fs().prototype.logSigmoid=function(){return this.throwIfDisposed(),rf(this)},Fs().prototype.logSoftmax=function(e){return this.throwIfDisposed(),pl(this,e)},Fs().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),kl(this,e,t)},Fs().prototype.log=function(){return this.throwIfDisposed(),ul(this)},Fs().prototype.log1p=function(){return this.throwIfDisposed(),cl(this)},Fs().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Il(this,e)},Fs().prototype.logicalNot=function(){return this.throwIfDisposed(),kp(this)};const sf=ci({logicalOr_:function(e,t){const n=li(e,"a","logicalOr","bool"),r=li(t,"b","logicalOr","bool");$a(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(ln,s)}});Fs().prototype.logicalOr=function(e){return this.throwIfDisposed(),sf(this,e)};const af=ci({logicalXor_:function(e,t){const n=li(e,"a","logicalXor","bool"),r=li(t,"b","logicalXor","bool");return $a(n.shape,r.shape),Il(sf(e,t),kp(Il(e,t)))}});Fs().prototype.logicalXor=function(e){return this.throwIfDisposed(),af(this,e)},Fs().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Sl(this,e,t,n)},Fs().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Tl(this,e,t,n,r)},Fs().prototype.max=function(e,t){return this.throwIfDisposed(),hl(this,e,t)},Fs().prototype.maximum=function(e){return this.throwIfDisposed(),Ra(this,e)},Fs().prototype.mean=function(e,t){return this.throwIfDisposed(),Nl(this,e,t)},Fs().prototype.min=function(e,t){return this.throwIfDisposed(),Cl(this,e,t)},Fs().prototype.minimum=function(e){return this.throwIfDisposed(),$l(this,e)};const of=ci({mirrorPad_:function(e,t,n){q("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=li(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");q(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)q(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),q(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`);const i={paddings:t,mode:n},a={x:r};return ei.runKernel(wn,a,i)}});Fs().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),of(this,e,t)};const lf=ci({mod_:function(e,t){let n=li(e,"a","mod"),r=li(t,"b","mod");[n,r]=js(n,r);const s={a:n,b:r};return ei.runKernel(kn,s)}});Fs().prototype.mod=function(e){return this.throwIfDisposed(),lf(this,e)},Fs().prototype.mul=function(e){return this.throwIfDisposed(),la(this,e)},Fs().prototype.neg=function(){return this.throwIfDisposed(),Al(this)},Fs().prototype.norm=function(e,t,n){return this.throwIfDisposed(),ac(this,e,t,n)},Fs().prototype.notEqual=function(e){return this.throwIfDisposed(),_l(this,e)},Fs().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Dl(this,e,t,n)},Fs().prototype.onesLike=function(){return this.throwIfDisposed(),Ll(this)},Fs().prototype.pad=function(e,t){return this.throwIfDisposed(),Ml(this,e,t)};const uf=ci({pool_:function(e,t,n,r,s,i,a){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=li(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Co(o,[1,o.shape[0],o.shape[1],o.shape[2]])),q(So(i,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`);const c=fo(l.shape,t,i,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),i=e.concat(r,s),a=t.map((e,t)=>(e-i[t]%e)%e),o=s.map((e,t)=>e+a[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,a[t]])]}([c.inHeight,c.inWidth],h,d),m=p?r:"valid",y=p?l:ed(l,h,f),b=("avg"===n?()=>$o(y,t,i,m,a):()=>Tl(y,t,i,m,a))(),x=p?b:Fp(b,h,g);return u?Co(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});Fs().prototype.pool=function(e,t,n,r,s,i){return this.throwIfDisposed(),uf(this,e,t,n,r,s,i)},Fs().prototype.pow=function(e){return this.throwIfDisposed(),Ia(this,e)},Fs().prototype.prelu=function(e){return this.throwIfDisposed(),Pl(this,e)};const cf=ci({prod_:function(e,t=null,n=!1){let r=li(e,"x","prod");"bool"===r.dtype&&(r=ra(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return ei.runKernel(Ln,s,i)}});Fs().prototype.prod=function(e,t){return this.throwIfDisposed(),cf(this,e,t)};const hf=ci({reciprocal_:function(e){const t={x:li(e,"x","reciprocal")};return ei.runKernel(Un,t)}});Fs().prototype.reciprocal=function(){return this.throwIfDisposed(),hf(this)},Fs().prototype.relu=function(){return this.throwIfDisposed(),Vl(this)},Fs().prototype.relu6=function(){return this.throwIfDisposed(),wu(this)},Fs().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Co(this,e.shape)},Fs().prototype.reshape=function(e){return this.throwIfDisposed(),Co(this,e)},Fs().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Yu(this,e,t,n)},Fs().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Ju(this,e,t,n)},Fs().prototype.reverse=function(e){return this.throwIfDisposed(),Hl(this,e)},Fs().prototype.rfft=function(){return this.throwIfDisposed(),yu(this)},Fs().prototype.round=function(){return this.throwIfDisposed(),ec(this)},Fs().prototype.rsqrt=function(){return this.throwIfDisposed(),Nd(this)},Fs().prototype.selu=function(){return this.throwIfDisposed(),jl(this)},Fs().prototype.separableConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Kl(this,e,t,n,r,s,i)},Fs().prototype.sigmoid=function(){return this.throwIfDisposed(),ql(this)},Fs().prototype.sign=function(){return this.throwIfDisposed(),Xl(this)},Fs().prototype.sin=function(){return this.throwIfDisposed(),dd(this)},Fs().prototype.sinh=function(){return this.throwIfDisposed(),fd(this)},Fs().prototype.slice=function(e,t){return this.throwIfDisposed(),Yl(this,e,t)},Fs().prototype.softmax=function(e){return this.throwIfDisposed(),tu(this,e)},Fs().prototype.softplus=function(){return this.throwIfDisposed(),nu(this)},Fs().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ed(this,e,t)},Fs().prototype.split=function(e,t){return this.throwIfDisposed(),ru(this,e,t)},Fs().prototype.sqrt=function(){return this.throwIfDisposed(),ua(this)},Fs().prototype.square=function(){return this.throwIfDisposed(),ca(this)},Fs().prototype.squaredDifference=function(e){return this.throwIfDisposed(),yc(this,e)},Fs().prototype.squeeze=function(e){return this.throwIfDisposed(),su(this,e)},Fs().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ds?[this,e]:[this,...e];return iu(n,t)},Fs().prototype.step=function(e){return this.throwIfDisposed(),ku(this,e)};const df=ci({stridedSlice_:function(e,t,n,r,s=0,i=0,a=0,o=0,l=0){const u={x:li(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return ei.runKernel(Ir,u,c)}});Fs().prototype.stridedSlice=function(e,t,n,r,s,i,a,o){return this.throwIfDisposed(),df(this,e,t,n,r,s,i,a,o)},Fs().prototype.sub=function(e){return this.throwIfDisposed(),Sa(this,e)},Fs().prototype.sum=function(e,t){return this.throwIfDisposed(),dl(this,e,t)};const pf=ci({tan_:function(e){const t={x:li(e,"x","tan","float32")};return ei.runKernel(Cr,t)}});Fs().prototype.tan=function(){return this.throwIfDisposed(),pf(this)},Fs().prototype.tanh=function(){return this.throwIfDisposed(),au(this)},Fs().prototype.tile=function(e){return this.throwIfDisposed(),nl(this,e)},Fs().prototype.toBool=function(){return this.throwIfDisposed(),ra(this,"bool")},Fs().prototype.toFloat=function(){return this.throwIfDisposed(),ra(this,"float32")},Fs().prototype.toInt=function(){return this.throwIfDisposed(),ra(this,"int32")};const ff=ci({topk_:function(e,t=1,n=!0){const r=li(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const i={x:r},a={k:t,sorted:n},[o,l]=ei.runKernel(Ar,i,a);return{values:o,indices:l}}});Fs().prototype.topk=function(e,t){return this.throwIfDisposed(),ff(this,e,t)},Fs().prototype.transpose=function(e){return this.throwIfDisposed(),fu(this,e)};const gf=ci({unique_:function(e,t=0){const n=li(e,"x","unique","string_or_numeric");q(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:t},[i,a]=ei.runKernel(Fr,r,s);return{values:i,indices:a}}});Fs().prototype.unique=function(e){return this.throwIfDisposed(),gf(this,e)},Fs().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),$d(this,e,t)},Fs().prototype.unstack=function(e){return this.throwIfDisposed(),cu(this,e)},Fs().prototype.where=function(e,t){return this.throwIfDisposed(),hu(e,this,t)},Fs().prototype.zerosLike=function(){return this.throwIfDisposed(),ha(this)};class mf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mf.prototype)}}class yf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yf.prototype)}}class bf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bf.prototype)}}class xf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xf.prototype)}}class vf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vf.prototype)}}Error;class wf{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function kf(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function If(e,t){if(!e)throw new vf(t)}function Sf(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Tf(e){return 1===e.length?e[0]:e}function Ef(e){return Array.isArray(e)?e:[e]}function Nf(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Cf(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let $f={};function Rf(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Af(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>Af(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Af(t):e[n]=t.value)}}}function _f(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let i;if(s in n)i=n[s];else if(s in $f)i=$f[s];else if(i=t[s],null==i)throw new bf(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new bf(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in $f?[o,l]=$f.className:a in t&&([o,l]=t[a]),null==o)throw new bf(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys($f))e[t]=$f[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=Object.assign({},$f);for(const e of Object.keys(n))$f[e]=n[e];Af(i.config);const r=l(o,i.config,n,s);return $f=Object.assign({},t),r}{const e=Object.assign({},$f);for(const e of Object.keys(n))$f[e]=n[e];const t=new o(i.config);return $f=Object.assign({},e),t}}}function Df(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ff(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Of(e){if(null==e)throw new bf(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Lf(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new bf(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Mf(e,t,n=0,r=1/0){return If(n>=0),If(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function Pf(e,t){Array.isArray(e)?(q(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>Pf(e,`element ${n+1} of ${t}`))):q(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${zf(e)}.`)}function zf(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>zf(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Bf(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Wf=0;function Uf(){return Wf++}const Gf={};function Vf(e=""){return e in Gf||(Gf[e]=0),Gf[e]+=1,e+Gf[e].toString()}const Hf=["channelsFirst","channelsLast"],jf=["nearest","bilinear"],Kf=["valid","same","causal"],qf=["max","avg"],Xf=["sum","mul","concat","ave"],Yf=new Map;function Jf(e){Lf(Hf,"DataFormat",e)}function Zf(e){Lf(Kf,"PaddingMode",e)}function Qf(e){Lf(qf,"PoolMode",e)}const eg=[];function tg(e,t){eg.push(e);try{const e=t();return eg.pop(),e}catch(e){throw eg.pop(),e}}function ng(e){if(!ig(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===eg.length?"":eg.join("/")+"/")+e}function rg(e){if(!ig(e))throw new Error("Not a valid tensor name: '"+e+"'");Yf.has(e)||Yf.set(e,0);const t=Yf.get(e);if(Yf.set(e,Yf.get(e)+1),t>0){const n=`${e}_${t}`;return Yf.set(n,1),n}return e}const sg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ig(e){return!!e.match(sg)}function ag(e){return e===parseInt(e.toString(),10)}function og(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function lg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function ug(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function cg(e,t){if(t<e)throw new bf(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let hg;function dg(){return null==hg&&(hg=ei.backend.epsilon()),hg}function pg(e,t){return ra(e,t)}function fg(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Co(e,n)}function gg(e,t,n){return bi(()=>{switch(e.rank){case 1:return Jl(e,t,n);case 2:return Zl(e,[t,0],[n,e.shape[1]]);case 3:return Ql(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return eu(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Yl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Yl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new bf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function mg(e,t,n){return bi(()=>{switch(e.rank){case 1:return Jl(e,t,n);case 2:return Zl(e,[0,t],[e.shape[0],n]);case 3:return Ql(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return eu(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new bf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function yg(e,t,n,r){return bi(()=>{switch(e.rank){case 1:return Jl(e,t,n);case 2:switch(r){case 1:return gg(e,t,n);case 2:return mg(e,t,n);default:throw new bf(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return gg(e,t,n);case 2:return Ql(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return mg(e,t,n);default:throw new bf(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return gg(e,t,n);case 2:return eu(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return eu(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return mg(e,t,n);default:throw new bf(`The axis is not within the rank of the tensor ${r}`)}default:throw new bf(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function bg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Mo(e,t)}function xg(e,t){switch(e.rank){case 1:return Po([e,t]);case 2:return zo([e,t],0);case 3:return Bo([e,t],0);case 4:return Wo([e,t],0);default:throw new bf(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function vg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new bf(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return nl(e,t)}function wg(e,t=0,n=1,r,s){return Wl(e,t,n,r,s)}function kg(e,t,n,r){if(e.rank<2||t.rank<2)throw new xf(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new xf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Ru({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Tg(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),i=s.pop();e=Co(e,[-1,i]);const a=t.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=Co(fu(t,c),[l,-1]);const h=[...s,...u];return Co(Ru({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Tg(e.rank,r,"channelsLast"):null,activation:n}),h)}}function Ig(e,t,n){return bi(()=>(t=Array.isArray(t)?ou(t,"int32"):ra(t,"int32"),il(e,t,n)))}function Sg(e){return la(e,e)}function Tg(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new bf(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Co(t,[1,r[0],1,1,1]):Co(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Co(t,[1,1,1,1,r[0]]):Co(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Co(t,[1,r[0],1,1]):Co(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Co(t,[1,1,1,r[0]]):Co(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Co(t,[1,r[0],1]):Co(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Co(t,[1,1,r[0]]):Co(t,[1].concat(r))}else if(e<3)return t;throw new bf(`Unsupported input rank by biasAdd: ${t.rank}`)}function Eg(e,t,n){return bi(()=>(null==n&&(n="channelsLast"),Jf(n),ia(e,Tg(e.rank,t,n))))}function Ng(e,t,n,r){return bi(()=>gu(e,t,n,r))}function Cg(e,t,n=!1){return n?e():t()}const $g=["fanIn","fanOut","fanAvg"],Rg=["normal","uniform","truncatedNormal"];class Ag extends ma{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class _g extends Ag{apply(e,t){return Fl(e,t)}}_g.className="Zeros",ba(_g);class Dg extends Ag{apply(e,t){return Ol(e,t)}}Dg.className="Ones",ba(Dg);class Fg extends Ag{constructor(e){if(super(),"object"!=typeof e)throw new bf(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new bf(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return bi(()=>la(pa(this.value),Ol(e,t)))}getConfig(){return{value:this.value}}}Fg.className="Constant",ba(Fg);class Og extends Ag{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ul(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Og.className="RandomUniform",ba(Og);class Lg extends Ag{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xf(`randomNormal does not support dType ${t}.`);return wg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Lg.className="RandomNormal",ba(Lg);class Mg extends Ag{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xf(`truncatedNormal does not support dType ${t}.`);return uu(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Mg.className="TruncatedNormal",ba(Mg);class Pg extends Ag{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return bi(()=>{if(2!==e.length||e[0]!==e[1])throw new bf("Identity matrix initializer can only be used for 2D square matrices.");return la(this.gain,rl(e[0]))})}getConfig(){return{gain:this.gain}}}Pg.className="Identity",ba(Pg);class zg extends Ag{constructor(e){if(super(),e.scale<0)throw new bf(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Lf($g,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Lf(Rg,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Jf(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=og(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=og(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=og(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xf(`${this.getClassName()} does not support dType ${t}.`);return uu(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return Ul(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}zg.className="VarianceScaling",ba(zg);class Bg extends zg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zg.className}}Bg.className="GlorotUniform",ba(Bg);class Wg extends zg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zg.className}}Wg.className="GlorotNormal",ba(Wg);class Ug extends zg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zg.className}}Ug.className="HeNormal",ba(Ug);class Gg extends zg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zg.className}}Gg.className="HeUniform",ba(Gg);class Vg extends zg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zg.className}}Vg.className="LeCunNormal",ba(Vg);class Hg extends zg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zg.className}}Hg.className="LeCunUniform",ba(Hg);class jg extends Ag{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return bi(()=>{if(e.length<2)throw new xf("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=J(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const i=wg([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),a=kc.qr(i,!1);let o=a[0];const l=a[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=la(o,l.sign()),n<r&&(o=o.transpose()),la(pa(this.gain),o.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}jg.className="Orthogonal",ba(jg);const Kg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function qg(e,t={}){return _f(e,ya.getMap().classNameMap,t,"initializer")}function Xg(e){return Rf(e)}function Yg(e){if("string"==typeof e){const t=e in Kg?Kg[e]:e;if("GlorotNormal"===t)return new Wg;if("GlorotUniform"===t)return new Bg;if("HeNormal"===t)return new Ug;if("HeUniform"===t)return new Gg;if("LeCunNormal"===t)return new Vg;if("LeCunUniform"===t)return new Hg;{const e={};return e.className=t,e.config={},qg(e)}}return e instanceof Ag?e:qg(e)}function Jg(e){return Array.isArray(e)&&Array.isArray(e[0])}function Zg(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Qg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new bf(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function em(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new bf(`Expected exactly 1 Shape; got ${e.length}`)}return e}function tm(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}const nm="Variable";class rm{constructor(e,t="float32",n=nm,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Uf(),n=null==n?nm:n,this.originalName=ng(n),this.name=rg(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return ei.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function sm(e){return e.map(e=>e.read())}function im(e){e.forEach(e=>{e[0].write(e[1])})}class am{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class om{constructor(e,t,n,r,s,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=Uf(),null!=i&&(this.originalName=ng(i),this.name=rg(this.originalName)),this.rank=t.length}}let lm=0;class um{constructor(e,t){this.callArgs=t,this.id=lm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let cm=0;class hm extends ma{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=cm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Nf(e)+"_"+Vf(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new yf(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new bf(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Tf(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Tf(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new mf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new mf(`Layer ${this.name} is not connected, no input to return.`);return Tf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new mf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new mf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Tf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Ef(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Ef(this.inputSpec);if(t.length!==n.length)throw new bf(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new bf(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new bf(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new bf(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new bf(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),i=s.axes[n],a=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new bf(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],i=r.shape[t];if(null!=n&&null!=i&&n!==i)throw new bf(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Ef(e),r=function(e){let t=!0;for(const n of Ef(e))if(!(n instanceof om)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of Ef(e))if(n instanceof om){t=!1;break}return t}(e);if(r===s)throw new bf("Arguments to apply() must be all SymbolicTensors or all Tensors");return tg(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Ef(e))t.push(n.shape);this.build(Tf(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=Ef(r),i=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=Tf(i),null!=this.activityRegularizer)throw new xf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Ef(e);const t=[];for(const n of e)t.push(n.shape);return Tf(t)}(e),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new om(i,n,this,Ef(e),t,this.name,r)):new om(i,r,this,Ef(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new xf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new mf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new mf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new yf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return tm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return sm(e?this.trainableWeights:this.weights)}setWeights(e){bi(()=>{const t=this.weights;if(t.length!==e.length)throw new bf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=sm(t);for(let s=0;s<r.length;++s){const i=r[s],a=t[s],o=e[s];if(!Z(i.shape,o.shape))throw new bf(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}im(n)})}addWeight(e,t,n,r,s,i,a,o){if(-1!==this._addedWeightNames.indexOf(e))throw new bf(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Yg("zeros"));const l=r.apply(t,n),u=new rm(l,n,e,i,a);return l.dispose(),null!=s&&this.addLoss(()=>s.apply(u.read())),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Ef(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=Ef(t),i=Ef(r);if(s.length!==i.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=i[e]}addInboundNode(e,t,n,r,s,i,a=null){const o=Ef(e);t=Ef(t),n=Ef(n),r=Ef(r),s=Zg(s),i=Zg(i);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new um({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function dm(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=dm(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class pm extends hm{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Vf("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new bf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new bf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new bf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new om(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new um({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new bf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function fm(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new bf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new pm({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}pm.className="InputLayer",ba(pm);class gm{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof gm)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new bf(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return ra(t,e.dtype)}catch(n){throw new bf(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof om){if(null==this.id2Value[e.id])throw new bf(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new bf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof om){if(null==this.id2Value[e.id])throw new bf(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new bf(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&xi(this.id2Mask)}}const mm=new wf,ym=new wf;function bm(e,t,n,r){const s=null!=n&&n.training,i=Array.isArray(e),a=i?e:[e],o=a.map(e=>e.name),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=mm.get(c);if(null==d){const e=function(e,t){q(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const s=vm(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of e){const{sorted:e,recipientMap:a}=vm(i,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in a)null==r[e]&&(r[e]=new Set),a[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:xm(r)}}(a,t);d=e.sorted,h=e.recipientCounts,mm.put(c,d),ym.put(c,h)}h={},s||Object.assign(h,ym.get(c));const p=new gm(t);for(let e=0;e<d.length;++e){if(null!=r){const e=yi().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const i=d[e],a=i.sourceLayer;if(a instanceof pm)continue;const u=[],c=[],f=[];let g=!1;for(const e of i.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(g=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=Ef(a.apply(u,n));let y=null;a.supportsMasking&&(y=a.computeMask(u,c));const b=wm(i),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],m[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=m[e])}s||xi(f)}return p.disposeMasks(),i?l:l[0]}function xm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function vm(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const i=[],a=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=a[a.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&a.pop();else{a.push(i.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:s}}function wm(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function km(e,t){return bi(()=>ua(dl(la(e,e),t,!0)))}Ce().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=mm&&mm.setMaxEntries(e),null!=ym&&ym.setMaxEntries(e)});class Im extends ma{getConfig(){return{}}}class Sm extends Im{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bi(()=>{const t=km(e,this.axis),n=Lo(t,0,this.maxValue);return la(e,oa(n,ia(dg(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Sm.className="MaxNorm",ba(Sm);class Tm extends Im{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bi(()=>oa(e,ia(dg(),km(e,this.axis))))}getConfig(){return{axis:this.axis}}}Tm.className="UnitNorm",ba(Tm);class Em extends Im{apply(e){return Vl(e)}}Em.className="NonNeg",ba(Em);class Nm extends Im{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bi(()=>{const t=km(e,this.axis),n=ia(la(this.rate,Lo(t,this.minValue,this.maxValue)),la(1-this.rate,t));return la(e,oa(n,ia(dg(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Nm.className="MinMaxNorm",ba(Nm);const Cm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function $m(e){return Rf(e)}function Rm(e,t={}){return _f(e,ya.getMap().classNameMap,t,"constraint")}function Am(e){return null==e?null:"string"==typeof e?Rm({className:e in Cm?Cm[e]:e,config:{}}):e instanceof Im?e:Rm(e)}function _m(){return new _g}function Dm(e){return new Fg(e)}function Fm(e){return new Og(e)}async function Om(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const i=e[s];if("number"!=typeof i){const e=i;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];xi(r)}}function Lm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Mm;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Mm||(Mm={}));class Pm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class zm{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Bm extends Pm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=bi(()=>ia(this.totals[e],la(r,n)));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:bi(()=>{const n=la(oa(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),vi(t[e])}))}}class Wm extends Pm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const a=s[i];e.push(a.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Um extends Pm{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ec,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");he(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():ms();return(...i)=>{const a=null!=n?n():ms();return a-s<t||(s=a,r=e(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Om(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Om(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Om(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Om(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Om(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):he(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Om(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Om(e),await this.trainEnd(e))}}function Gm(e,t){return null==e&&(e={}),e instanceof Pm?[e]:Array.isArray(e)&&e[0]instanceof Pm?e:Ef(e).map(e=>new Um(e,t))}class Vm{constructor(){}static registerCallbackConstructor(e,t){q(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Vm.checkForDuplicate(t),null==Vm.constructors[e]&&(Vm.constructors[e]=[]),Vm.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Vm.constructors)Vm.constructors[+t].forEach(t=>{if(t===e)throw new bf("Duplicate callback constructor.")})}static clear(){Vm.constructors={}}static createCallbacks(e){const t=[];for(const n in Vm.constructors){const r=+n;e>=r&&t.push(...Vm.constructors[r])}return t.map(e=>new e)}}function Hm(e,t,n,r,s,i,a,o,l){const u=new Wm,c=[new Bm,...Vm.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new zm(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function jm(e,t={},n=!1){return _f(e,ya.getMap().classNameMap,t,"layer",n)}function Km(e,t){return bi(()=>{"float32"!==e.dtype&&(e=ra(e,"float32"));const n=dl(Sg(e),t,!0),r=wa(n.shape,dg()),s=ua(Ra(n,r));return oa(e,s)})}function qm(e,t){return bi(()=>Nl(Sg(Sa(t,e)),-1))}function Xm(e,t){return bi(()=>Nl(Ea(Sa(t,e)),-1))}function Ym(e,t){return bi(()=>{const n=Sa(e,t),r=Lo(Ea(e),dg(),Number.MAX_VALUE),s=Ea(oa(n,r));return la(100,Nl(s,-1))})}function Jm(e,t,n=!1){return bi(()=>{if(n)t=tu(t);else{const e=dl(t,t.shape.length-1,!0);t=oa(t,e)}return t=Lo(t,dg(),1-dg()),Al(dl(la(ra(e,"float32"),ul(t)),t.shape.length-1))})}function Zm(e,t,n=!1){return bi(()=>{const r=ra(sl(function(e){const t=[og(e.shape)];return Co(e,t)}(e)),"int32"),s=(t=Lo(t,dg(),1-dg())).shape;return Jm(Co(Dl(r,s[s.length-1]),s),t,n)})}function Qm(e,t){return bi(()=>{let n;return n=Lo(t,dg(),1-dg()),n=ul(oa(n,Sa(1,n))),Nl(function(e,t){if(!Z(e.shape,t.shape))throw new bf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return bi(()=>{const n=Vl(t),r=Al(Ea(t));return ia(Sa(n,la(t,e)),cl(el(r)))})}(e,n),-1)})}function ey(e,t){return bi(()=>{const n=Km(e,-1),r=Km(t,-1),s=la(n,r);return Al(dl(s,-1))})}Vm.constructors={};const ty={meanSquaredError:qm,meanAbsoluteError:Xm,meanAbsolutePercentageError:Ym,meanSquaredLogarithmicError:function(e,t){return bi(()=>{const n=Lo(t,dg(),Number.MAX_VALUE),r=ul(ia(1,n)),s=Lo(e,dg(),Number.MAX_VALUE),i=ul(ia(1,s));return Nl(Sg(Sa(r,i)),-1)})},squaredHinge:function(e,t){return bi(()=>{const n=Ra(0,Sa(1,la(e,t)));return Nl(Sg(n),-1)})},hinge:function(e,t){return bi(()=>{const n=Ra(0,Sa(1,la(e,t)));return Nl(n,-1)})},categoricalHinge:function(e,t){return bi(()=>{const n=dl(la(e,t),-1),r=hl(la(Sa(1,e),t),-1);return Ra(0,ia(1,Sa(r,n)))})},logcosh:function(e,t){return bi(()=>{const n=Math.log(2),r=Sa(t,e),s=Sa(ia(r,nu(la(-2,r))),n);return Nl(s,-1)})},categoricalCrossentropy:Jm,sparseCategoricalCrossentropy:Zm,binaryCrossentropy:Qm,kullbackLeiblerDivergence:function(e,t){return bi(()=>{const n=Lo(e,dg(),1),r=Lo(t,dg(),1);return dl(la(e,ul(oa(n,r))),-1)})},poisson:function(e,t){return bi(()=>{const n=ul(ia(dg(),t));return Nl(Sa(t,la(e,n)),-1)})},cosineProximity:ey};function ny(e){if("string"==typeof e){if(e in ty)return ty[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new bf(t)}return e}function ry(e,t){return bi(()=>{const n=la(.5,Ll(t)),r=pg(al(t,n),e.dtype);return Nl(Zo(e,r),-1)})}function sy(e,t){return bi(()=>pg(Zo(ho(e,-1),ho(t,-1)),"float32"))}function iy(e,t){return Qm(e,t)}function ay(e,t){return e.rank===t.rank&&(e=su(e,[e.rank-1])),(t=ho(t,-1)).dtype!==e.dtype&&(t=ra(t,e.dtype)),ra(Zo(e,t),"float32")}const oy=Jm,ly=Zm,uy={binaryAccuracy:ry,categoricalAccuracy:sy,precision:function(e,t){return bi(()=>{const n=function(e,t){return bi(()=>ra(dl(Il(Zo(e,1),Zo(t,1))),"float32"))}(e,t),r=function(e,t){return bi(()=>ra(dl(Il(Zo(e,0),Zo(t,1))),"float32"))}(e,t),s=ia(n,r);return ra(hu(al(s,0),oa(n,s),0),"float32")})},categoricalCrossentropy:oy,sparseCategoricalCrossentropy:ly,mse:qm,MSE:qm,mae:Xm,MAE:Xm,mape:Ym,MAPE:Ym,cosine:ey};function cy(e){if("string"==typeof e&&e in uy)return uy[e];if("string"!=typeof e&&null!=e)return e;throw new bf(`Unknown metric ${e}`)}function hy(e){if(If(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(ty))if(ty[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(uy))if(uy[n]===e){t=n;break}return void 0!==t?t:e.name}}function dy(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!py(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function py(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!py(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!py(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function fy(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function gy(e,t,n){let r,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}fy([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function my(e,t,n,r){let s,i;try{i=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){i="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===a.length?"":a[0];fy([`${o} (${l})`,i,s,e.countParams().toString(),u],t,r);for(let e=1;e<a.length;++e)fy(["","","","",a[e]],t,r)}function yy(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function by(e,t){if(null===e)return null;if("string"==typeof e)return Cf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];yy(t,s,r)?n.push(r):n.push(by(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Cf(n);t[e]=by(r,e)}}return t}}function xy(e,t){if(null==e)return null;if("string"==typeof e)return Nf(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];yy(t,s,r)?n.push(r):n.push(xy(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Nf(n)]="name"!==n&&"className"!==n||"string"!=typeof r?xy(r,n):r}return t}}const vy="4.22.0";class wy extends hm{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Vf(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ff(this.inputs).length!==this.inputs.length)throw new bf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);Ff(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;If(0===n,"input layer has >1 nodes"),If(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof pm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},s={},i={},a=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new yf(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(wy.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],i=u.nodeIndices[e],a=u.tensorIndices[e];o(r,t,n,s,i,a)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=a.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];const a=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];i=Math.max(i,a),r[e.outboundLayer.id]=i,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.nodeIndices[r],o=s.inboundNodes[a],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map(e=>parseInt(e,10)).sort(Df);this.layers=[];for(const e of p){const t=d[e];t.sort((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof wy&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map(e=>parseInt(e,10)).sort(Df);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new yf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map(e=>e.name);for(const e of m){const t=m.filter(t=>t===e).length;if(1!==t)throw new yf(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new um({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new bf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,i]of e.weights.entries()){const e=s?`${i.name.split("/").slice(0,-1).join("/")+"/"}${t}`:i.originalName;if(null!=n[e])throw new bf(`Duplicate weight name: ${e}`);n[e]=i,r++}const i=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])i.push([n[s],e[r]]);else if(t)throw new bf(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new bf(`${e.length} of ${r} weights are not set: ${e}`)}im(i)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!r.includes(e)).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${vy}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=xy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return bi(()=>{e=Ef(e);const n=new gm;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return bm(this.outputs,n,t)})}computeMask(e,t){return bi(()=>{let n;return e=Ef(e),n=null==t?kf(null,e.length):Ef(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=Zg(e);if(t.length!==this.inputLayers.length)throw new bf(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Df);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],i=e.nodeIndices[t],a=e.tensorIndices[t],o=n[`${s.name}_${i}_${a}`];r.push(o)}const s=Zg(t.computeOutputShape(Tf(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${i}_${e}`]=s[e]}}const s=[],i=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;i.push(s)}for(let e=0;e<i.length;e++){const t=i[e];If(t in n),s.push(n[t])}return Tf(s)}runInternalGraph(e,t){null==t&&(t=kf(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=e[r],a=t[r];n[s.id]=[i,a]}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Df);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===i.length){const[e,n]=i[0];null==u.mask&&(u.mask=n),o=Ef(t.call(e,u)),l=Ef(t.computeMask(e,n)),r=[e],a=[n]}else r=i.map(e=>e[0]),a=i.map(e=>e[1]),null==u.mask&&(u.mask=a),o=Ef(t.call(r,u)),l=Ef(t.computeMask(r,a));if(t.activityRegularizer)throw new xf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],i=l[e];n[t.id]=[r,i]}}}}const s=[],i=[],a=[];for(const e of this.outputs){If(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];a.push(t.shape),s.push(t),i.push(r)}return[s,i,a]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof wy?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=wy.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new bf("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new bf(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new bf(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return bi(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=wy.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=wy.nodeKey(e,n);let a={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[wy.nodeKey(s,i)];null==l&&(l=0),e.push([s.name,l,o,a])}i.push(e)}}}const a={};a.name=e.name,a.className=r,a.config=s,a.inboundNodes=i,n.push(a)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],i=wy.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=t[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,a,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],i=wy.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=t[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,a,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},i={};function a(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let r;for(const i of t){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Tf(n),r)}function l(e){const n=e.name,i=jm(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new bf(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)})}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Of(i);)for(const e of c){const t=s[e.name];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];If(t in s);const i=s[t].inboundNodes[n].outputTensors;h.push(i[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];If(t in s);const i=s[t].inboundNodes[n].outputTensors;d.push(i[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new bf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){bi(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function ky(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Iy(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=bi(()=>{if(1===e.shape.length)return sa(e);if(2===e.shape.length){if(e.shape[1]>1)return ho(e,1);if(1===e.shape[1])return Co(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());xi(t);const s=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])}),ou(s,"float32")}return null}function Sy(e,t){return la(e,t)}function Ty(e,t){let n,r;const s=t;n=s.xs,r=s.ys,q(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const i=Ey("input",e.inputNames,n),a=Ey("output",e.outputNames,r),o=i[0].shape[0];q(i.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),q(a.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<i.length;t++)q(i[t].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let t=0;t<a.length;t++)q(a[t].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:i,ys:a}}function Ey(e,t,n){if(n instanceof Ds)return[n];if(Array.isArray(n))return q(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const s of t){if(null==n[s])throw new bf(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function Ny(e){return"function"==typeof e.iterator}function Cy(e){q(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function $y(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>gg(e,t,n-t)):gg(e,t,n-t)}function Ry(e,t){return bi(()=>null==e?null:Array.isArray(e)?e.map(e=>Ry(e,t)):Ig(e,"int32"===t.dtype?t:ra(t,"int32")))}function Ay(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function _y(e){const t=[];e instanceof Ds&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(fg(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Dy(e,t){if(null==e)return;const n=[];if(t instanceof Ds)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Ds)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach(e=>{e.isDisposed||e.dispose()})}function Fy(e){return Array.isArray(e)}function Oy(e){return!function(e){return e instanceof Ds}(e)&&!Fy(e)}function Ly(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Fy(e)&&e.length>0)t=!0;else if(Oy(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new bf(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let i;if(Oy(e)){i=[];for(const n of t){if(null==e[n])throw new bf(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(Fy(e)){if(e.length!==t.length)throw new bf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new bf(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=_y(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=i[e];if(a.shape.length!==n[e].length)throw new bf(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${a.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const i=a.shape[t],o=n[e][t];if(null!=o&&o>=0&&i!==o)throw new bf(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function My(e,t,n,r=!0,s=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new bf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new bf(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=i[e];if(a.shape.length!==n[e].length)throw new bf(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[e][i];if(null!=l&&l!==o)throw new bf(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class Py extends wy{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new bf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){i.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),fy(i,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?gy(o[e],n,r):my(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?tm(e.collectedTrainableWeights):tm(e.trainableWeights),t}(e),u=tm(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Sc.adagrad(.01),Adadelta:()=>Sc.adadelta(1,.95,dg()),Adam:()=>Sc.adam(.001,.9,.999,dg()),Adamax:()=>Sc.adamax(.002,.9,.999,dg(),0),RMSProp:()=>Sc.rmsprop(.001,.9,0,dg()),SGD:()=>Sc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new bf(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof xa))throw new bf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new bf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map(e=>ny(e))}else{const n=ny(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new bf(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(ny(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],tg("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};tg("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,i;for(const a of t){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Qm?-1!==["accuracy","acc"].indexOf(a)?r=ry:-1!==["crossentropy","ce"].indexOf(a)&&(r=iy):this.lossFunctions[e]===Zm?-1!==["accuracy","acc"].indexOf(a)?r=ay:-1!==["crossentropy","ce"].indexOf(a)&&(r=ly):-1!==["accuracy","acc"].indexOf(a)?r=sy:-1!==["crossentropy","ce"].indexOf(a)&&(r=oy),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else{const e=cy(a);i=e,n=""+hy(a)}let t;tg(n,()=>{t=i}),s(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Cy(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return Tf(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Dy(s[0],e),Dy(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new xf("Verbose mode is not implemented yet.");q(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const a="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await a.next();if(i=bi(()=>{if(t.value){const{xs:n,ys:r}=Ty(e,t.value),a=n.concat(r),u=bi(()=>s(a));if(xi(a),0===l)for(let e=0;e<u.length;++e)i.push(pa(0));const c=a[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=i[e];i[e]=bi(()=>ia(i[e],la(c,t))),l>0&&xi(n)}xi(u),o+=c,++l}return i}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=oa(i[e],o),xi(t)}return Tf(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new bf(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new bf(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new bf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),i=new gm;if(e instanceof Ds&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new bf(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new bf(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const a=bm(s,i);return n?a:a[0]}retrieveSymbolicTensors(e){const t=kf(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map(e=>e.name);for(let r=0;r<e.length;++r){const a=i.indexOf(e[r]);if(-1!==a&&(t[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new bf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return bi(()=>{const r=this.checkNumSamples(e);if(n)throw new xf("Verbose predictLoop() is not implemented yet.");const s=Ay(r,t),i=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t)bi(()=>{const n=s[t][0],r=s[t][1],i=$y(e,n,r),a=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)a.push({key:this.inputs[e],value:i[e]});else a.push({key:this.inputs[0],value:i});const o=new gm(a);return bm(this.outputs,o)}).forEach((e,t)=>i[t].push(e));return Tf(i.map(e=>Mo(e,0)))})}predict(e,t={}){const n=_y(e);My(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Cy(e),this.predictLoop(n,e)}finally{Dy(n,e)}}predictOnBatch(e){My(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new yf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Zm?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t){const n=Ff(e.map(e=>e.shape[0]));n.sort();const r=Ff(t.map(e=>e.shape[0]));if(r.sort(),n.length>1)throw new bf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(r.length>1)throw new bf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(n.length>0&&r.length>0&&!Z(n,r))throw new bf(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Ly(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ly(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[qm,Qm,Jm];for(let s=0;s<e.length;++s){const i=e[s],a=t[s],o=n[s];if(null!=a){if(a===Jm&&1===i.shape[i.shape.length-1])throw new bf(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new bf(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new bf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(e,t,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=ky(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Iy(o[t],null,e[t]))}return[a,o,l]}testLoop(e,t,n,r=0,s){return bi(()=>{const i=this.checkNumSamples(t,n,s,"steps"),a=[];if(r>0)throw new xf("Verbose mode is not implemented yet.");if(null!=s)throw new xf("steps mode in testLoop() is not implemented yet");{const r=Ay(i,n),s=ou(cg(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=gg(s,i,o-i),u=Ry(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)a.push(pa(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=ia(a[e],la(o-i,t))}}for(let e=0;e<a.length;++e)a[e]=oa(a[e],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Sf(e,r)>1&&(s+=`_${Sf(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new gm(e),o=bm(this.outputs,a,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Sy(n,s[e]));const i=Nl(n);t.push(i),l=0===e?n:ia(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Nl(t(r[s],o[s]))}vi(n),i.push(n)}return l=Nl(l),this.calculateLosses().forEach(e=>{l=ia(l,e)}),l},!0,a)].concat(i)}}makeTestFunction(){this.testFunction=e=>bi(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const a=new gm(i),o=bm(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=Nl(r(s[e],o[e]));n=0===e?i:ia(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=Nl(n(s[r],o[r]));t.push(i)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,i,a,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;Cy(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],s=f[1],h=f[2];let g,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new xf("validationData including sample weights is not supported yet."):new bf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],c=t[1],g=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=$y(r,e,t),i=r,r=$y(r,0,e),c=$y(s,e,t),a=s,s=$y(s,0,e),g=u.concat(c)}else null!=n.validationSteps&&(m=!0);const y=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;m?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map(e=>"val_"+e))):(v=null,g=[],w=x.slice());const k=Gm(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,d,n.epochs,n.verbose,k,v,g,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,Dy(r,e),Dy(s,t),Dy(i,e),Dy(a,t),Dy(u,o),Dy(c,l),null!=h&&xi(h)}}async fitLoop(e,t,n,r,s,i,a,o,l,u,c,h,d,p){null==r&&(r=32),null==s&&(s=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=p&&(f=!0,null==d))throw new bf("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,d,"steps_per_epoch");let m;null!=g&&(m=cg(0,g)),null==i&&(i=1);const{callbackList:y,history:b}=Hm(a,i,s,h,g,d,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let i=h;i<s;++i){await y.onEpochBegin(i);const s={};if(null!=d)throw new xf("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new xf("batch shuffling is not implemneted yet");u&&V(m);const i=ou(m),a=Ay(g,r);for(let u=0;u<a.length;++u){const c={};if(await y.onBatchBegin(u,c),bi(()=>{const h=a[u][0],d=a[u][1],p=gg(i,h,d-h);c.batch=u,c.size=d-h;const g=Ry(t,p),m=e(g);for(let e=0;e<n.length;++e){const t=n[e],r=m[e];c[t]=r,vi(r)}if(u===a.length-1&&f){const e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){const r=n[t],i=e[t];vi(i),s["val_"+r]=i}}}),await y.onBatchEnd(u,c),Lm(c),this.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(q(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),q(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),q(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),q(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),q(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(Ny(n.validationData))q(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const e=function(e){if(3===e.length)throw new xf("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,a=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map(e=>"val_"+e)):l.slice();const c=Gm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Hm(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Ty(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const t=ky(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await Iy(s[e],null,t[e]))}const u=r.concat(s).concat(a),p=o(u);xi(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];i[t]=n,vi(n)}await d.onBatchEnd(h,i),Lm(i),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Ny(n.validationData)?Ef(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ef(e.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),a=[];for(const e of i){const t=await e.data();a.push(t[0])}return xi(i),Dy(n[0],e),Dy(n[1],t),Tf(a)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=yi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-yi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Nf(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>Nf(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Nf(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Nf(hy(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Nf(hy(e)));{const e={};for(const t in this.metrics)e[t]=Nf(hy(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=jm(by(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Cf(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>Cf(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Cf(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>Cf(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Cf(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Ai.getSaveHandlers(n));if(0===t.length)throw new bf(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new bf(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new bf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await ki(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${vy}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await ki(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=(i=[r.data,t],gi.join(i))}var i;if(null!=this.userDefinedMetadata){const e=!0;dy(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){dy(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Py.className="Model",ba(Py);class zy extends Py{}async function By(e,t){if(null==t&&(t={}),"string"==typeof e){const s=(n=e,r=t,Ai.getLoadHandlers(n,r));if(0===s.length)s.push(function(e,t){return Ga(e,t)}(e,t));else if(s.length>1)throw new bf(`Found more than one (${s.length}) load handlers for URL '${e}'`);e=s[0]}var n,r;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new bf("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const i=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&i,o=jm(by(s),void 0,a),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new bf("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n=new gi(e),r={};let s=0;for(const e of t){const t=Ii(e,(e,t)=>n.slice(s+e,s+t));r[e.name]=Si(e,n.slice(s,s+t)),s+=t}return r}(e,t),r={},s=[];return t.forEach(e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),xi(e),xi(t.map(e=>e.tensor))}return o}(e,0,t)}zy.className="Functional",ba(zy);class Wy extends Py{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Vf("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new bf(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Wy||e instanceof Py;let n;if(t){if(n=e,1!==n.outputs.length)throw new bf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new bf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new bf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=fm({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new bf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new bf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=dm(this.outputs[0])}this.inboundNodes=[],new um({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:kf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(em(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Py({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new yf("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new yf("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new yf("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new yf("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new bf("Legacy serialization format not supported yet.");s=t}else q(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof Wy))throw new xf(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const e of s){const t=jm(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(e){if(null==this.model)throw new bf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new bf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Uy(e){return new Py(e)}Wy.className="Sequential",ba(Wy);class Gy extends ma{getConfig(){return{}}}class Vy extends Gy{apply(e,t=1){return function(e,t=1){if(1!==t)throw new xf(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Jo(e)}(e,t)}}Vy.className="elu",ba(Vy);class Hy extends Gy{apply(e){return jl(e)}}Hy.className="selu",ba(Hy);class jy extends Gy{apply(e){return Vl(e)}}jy.className="relu",ba(jy);class Ky extends Gy{apply(e){return bi(()=>$l(6,Vl(e)))}}Ky.className="relu6",ba(Ky);class qy extends Gy{apply(e){return e}}qy.className="linear",ba(qy);class Xy extends Gy{apply(e){return ql(e)}}Xy.className="sigmoid",ba(Xy);class Yy extends Gy{apply(e){return function(e){return bi(()=>{const t=ia(.5,la(.2,e));return Lo(t,0,1)})}(e)}}Yy.className="hardSigmoid",ba(Yy);class Jy extends Gy{apply(e){return nu(e)}}Jy.className="softplus",ba(Jy);class Zy extends Gy{apply(e){return function(e){return bi(()=>oa(e,ia(Ea(e),1)))}(e)}}Zy.className="softsign",ba(Zy);class Qy extends Gy{apply(e){return au(e)}}Qy.className="tanh",ba(Qy);class eb extends Gy{apply(e,t=-1){return tu(e,t)}}eb.className="softmax",ba(eb);class tb extends Gy{apply(e,t=-1){return pl(e,t)}}tb.className="logSoftmax",ba(tb);class nb extends Gy{apply(e){return bi(()=>bi(()=>{const t=Math.sqrt(2),n=la(.5,ia(1,Qo(oa(e,t))));return la(e,n)}))}}nb.className="gelu",ba(nb);class rb extends Gy{apply(e){return bi(()=>la(.5,la(e,ia(1,au(la(ua(oa(2,Math.PI)),ia(e,la(.044715,Ia(e,3)))))))))}}rb.className="gelu_new",ba(rb);class sb extends Gy{apply(e){return bi(()=>la(e,au(nu(e))))}}sb.className="mish",ba(sb);class ib extends Gy{apply(e,t=1){return bi(()=>la(ql(la(e,t)),e))}}function ab(e){return e.getClassName()}function ob(e,t={}){return _f(e,ya.getMap().classNameMap,t,"activation")}function lb(e){if(null==e){return ob({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},ob(t)}return e instanceof Gy?e:ob(e)}ib.className="swish",ba(ib);class ub extends ma{}class cb extends ub{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return bi(()=>{let t=Fl([1]);return this.hasL1&&(t=ia(t,dl(la(this.l1,Ea(e))))),this.hasL2&&(t=ia(t,dl(la(this.l2,Sg(e))))),Co(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}cb.className="L1L2",ba(cb);const hb={l1l2:"L1L2"};function db(e){return Rf(e)}function pb(e,t={}){return _f(e,ya.getMap().classNameMap,t,"regularizer")}function fb(e){return null==e?null:"string"==typeof e?pb({className:e in hb?hb[e]:e,config:{}}):e instanceof ub?e:pb(e)}class gb extends hm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Qg(e);let n=Vl(e);return null!=this.maxValue&&(n=Lo(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}gb.className="ReLU",ba(gb);class mb extends hm{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Qg(e);return ll(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}mb.className="LeakyReLU",ba(mb);class yb extends hm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Yg(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=fb(e.alphaRegularizer),this.alphaConstraint=Am(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new bf(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=em(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new am({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Qg(e),Pl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Xg(this.alphaInitializer),alphaRegularizer:db(this.alphaRegularizer),alphaConstraint:$m(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}yb.className="PReLU",ba(yb);class bb extends hm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new xf(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Qg(e);return Jo(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}bb.className="ELU",ba(bb);class xb extends hm{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Qg(e);return la(n,ra(al(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}xb.className="ThresholdedReLU",ba(xb);class vb extends hm{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new eb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return bi(()=>{let n=Qg(e);const r=t.mask;if(null!=r){const e=la(Sa(Ol(n.shape),ra(r,n.dtype)),pa(-1e9));n=ia(n,e)}return this.axis instanceof Array?this.axis.length>1?el(Sa(n,kl(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function wb(e,t,n){if("number"==typeof e)return kf(e,t);if(e.length!==t)throw new bf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if(!ag(s))throw new bf(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function kb(e,t,n,r,s=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((i+r-1)/r)}function Ib(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+ug([n-t,0]);else{if("same"!==r)throw new bf(`Unsupport padding mode: ${r}.`);e*=t}return e}function Sb(e,t){return bi(()=>(Jf(t),"channelsFirst"===t?fu(e,[0,2,3,1]):e))}function Tb(e,t){return bi(()=>(Jf(t),"channelsFirst"===t?fu(e,[0,2,3,4,1]):e))}function Eb(e,t,n,r=[1,1],s="valid",i,a,o=null){return bi(()=>{if(null==i&&(i="channelsLast"),Jf(i),3!==e.rank&&4!==e.rank)throw new bf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new bf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Sb(e,i);if("causal"===s)throw new xf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Nu({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=fu(l,[0,3,1,2])),l})}vb.className="Softmax",ba(vb);class Nb extends hm{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Nb.verifyArgs(t),this.rank=e,Pf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new xf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=wb(t.kernelSize,e,"kernelSize"),this.strides=wb(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Zf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Jf(this.dataFormat),this.activation=lb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Yg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Am(t.biasConstraint),this.biasRegularizer=fb(t.biasRegularizer),this.activityRegularizer=fb(t.activityRegularizer),this.dilationRate=wb(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new bf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new bf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new bf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(If("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Mf(e.kernelSize,"number",1,3))throw new bf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ab(this.activation),useBias:this.useBias,biasInitializer:Xg(this.biasInitializer),biasRegularizer:db(this.biasRegularizer),activityRegularizer:db(this.activityRegularizer),biasConstraint:$m(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Cb extends Nb{constructor(e,t){super(e,t),this.kernel=null,Cb.verifyArgs(t),this.filters=t.filters,Pf(this.filters,"filters"),this.kernelInitializer=Yg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Am(t.kernelConstraint),this.kernelRegularizer=fb(t.kernelRegularizer)}build(e){e=em(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new bf(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return bi(()=>{let t;e=Qg(e);const n=null==this.bias?null:this.bias.read(),r=Bf(this.activation.getClassName());if(null!=r&&2===this.rank)t=Eb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",i,a=1){return bi(()=>{if(null==i&&(i="channelsLast"),Jf(i),3!==e.shape.length)throw new bf(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new bf(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new bf(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===i&&(e=fu(e,[0,2,1])),"causal"===s)throw new xf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Go(e,t,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=Eg(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Eb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new xf("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",i,a){return bi(()=>{if(null==i&&(i="channelsLast"),Jf(i),4!==e.rank&&5!==e.rank)throw new bf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new bf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Tb(e,i);if("causal"===s)throw new xf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=jo(o,t,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=Eg(o,n)),"channelsFirst"===i&&(o=fu(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=em(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=kb(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Xg(this.kernelInitializer),kernelRegularizer:db(this.kernelRegularizer),kernelConstraint:$m(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new bf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class $b extends Cb{constructor(e){super(2,e),$b.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Mf(e.kernelSize,"number",1,2))throw new bf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}$b.className="Conv2D",ba($b);class Rb extends Cb{constructor(e){super(3,e),Rb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new bf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Rb.className="Conv3D",ba(Rb);class Ab extends $b{constructor(e){if(super(e),this.inputSpec=[new am({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new bf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=em(e)).length)throw new bf("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new bf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new am({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return bi(()=>{let t=Qg(e);if(4!==t.shape.length)throw new bf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Ib(a,c,l,this.padding),Ib(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=fu(t,[0,2,3,1]));let p=Ho(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=fu(p,[0,3,1,2])),null!=this.bias&&(p=Eg(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(e){const t=(e=em(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Ib(t[r],o,i,this.padding),t[s]=Ib(t[s],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ab.className="Conv2DTranspose",ba(Ab);class _b extends Rb{constructor(e){if(super(e),this.inputSpec=[new am({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new bf(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=em(e)).length)throw new bf("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new bf("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new am({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return bi(()=>{let t=Qg(e);if(5!==t.shape.length)throw new bf(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i,a;"channelsFirst"===this.dataFormat?(a=2,s=3,i=4):(a=1,s=2,i=3);const o=n[a],l=n[s],u=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[r,Ib(o,p,c,this.padding),Ib(l,f,h,this.padding),Ib(u,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=fu(t,[0,2,3,4,1]));let y=qo(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=fu(y,[0,4,1,2,3])),null!==this.bias&&(y=Eg(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y})}computeOutputShape(e){const t=(e=em(e)).slice();let n,r,s,i;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,i=4):(n=4,r=1,s=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Ib(t[r],u,a,this.padding),t[s]=Ib(t[s],c,o,this.padding),t[i]=Ib(t[i],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}_b.className="Conv3DTranspose",ba(_b);class Db extends Cb{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new bf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new bf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new bf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Yg(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=fb(t.depthwiseRegularizer),this.depthwiseConstraint=Am(t.depthwiseConstraint),this.pointwiseInitializer=Yg(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=fb(t.pointwiseRegularizer),this.pointwiseConstraint=Am(t.pointwiseConstraint)}build(e){if((e=em(e)).length<this.rank+2)throw new bf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new bf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new am({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return bi(()=>{let t;if(e=Qg(e),1===this.rank)throw new xf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=fu(e,[0,2,3,1])),t=Kl(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Eg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=fu(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Xg(this.depthwiseInitializer),e.pointwiseInitializer=Xg(this.pointwiseInitializer),e.depthwiseRegularizer=db(this.depthwiseRegularizer),e.pointwiseRegularizer=db(this.pointwiseRegularizer),e.depthwiseConstraint=$m(this.depthwiseConstraint),e.pointwiseConstraint=$m(this.pointwiseConstraint),e}}Db.className="SeparableConv";class Fb extends Db{constructor(e){super(2,e)}}Fb.className="SeparableConv2D",ba(Fb);class Ob extends Cb{constructor(e){super(1,e),Ob.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Mf(e.kernelSize,"number",1,1))throw new bf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ob.className="Conv1D",ba(Ob);class Lb extends hm{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return bi(()=>{if(e=Qg(e),"channelsLast"===this.dataFormat){const t=yg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return yg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=yg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return yg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Lb.className="Cropping2D",ba(Lb);class Mb extends hm{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Lf(jf,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return bi(()=>{let t=Qg(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=fu(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?wc.resizeNearestNeighbor(t,[e,r]):wc.resizeBilinear(t,[e,r]);return fu(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?wc.resizeNearestNeighbor(t,[e,r]):wc.resizeBilinear(t,[e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Mb.className="UpSampling2D",ba(Mb);class Pb extends Nb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Yg(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Am(e.depthwiseConstraint),this.depthwiseRegularizer=fb(e.depthwiseRegularizer)}build(e){if((e=em(e)).length<4)throw new bf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new bf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bi(()=>{let t=function(e,t,n=[1,1],r="valid",s,i){return bi(()=>{null==s&&(s="channelsLast"),Jf(s);let a=Sb(e,s);if(4!==e.rank)throw new bf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new bf(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=Yo(a,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=fu(a,[0,3,1,2])),a})}(e=Qg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Eg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=em(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=kb(t,this.kernelSize[0],this.padding,this.strides[0]),i=kb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,i]:[e[0],s,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Xg(this.depthwiseInitializer),e.depthwiseRegularizer=db(this.depthwiseRegularizer),e.depthwiseConstraint=$m(this.depthwiseRegularizer),e}}function zb(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new bf("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Bb(e,t,n,r=!1,s,i,a=!1,o=!1){return bi(()=>{const l=t.shape.length;if(l<3)throw new bf(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(cg(2,l));if(t=fu(t,u),null!=i)throw new xf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=ra(ra(s,"bool"),"float32")).rank===l-1&&(s=tl(s,-1)),s=fu(s,u)),r&&(t=Hl(t,0),null!=s&&(s=Hl(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=cu(t);let g,m;null!=s&&(g=cu(s));for(let t=0;t<p;++t){const n=f[t],r=bi(()=>e(n,d));if(null==s)h=r[0],d=r[1];else{const e=bi(()=>{const e=g[t],n=Sa(Ll(e),e);return{output:ia(la(r[0],e),la(d[0],n)),newStates:d.map((t,s)=>ia(la(r[1][s],e),la(t,n)))}});h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=iu(c,1)),[h,m,d]})}Pb.className="DepthwiseConv2D",ba(Pb);class Wb extends hm{constructor(e){let t;if(super(e),null==e.cell)throw new bf("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Xb({cells:e.cell}):e.cell,null==t.stateSize)throw new bf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new am({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?cg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Jg(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return bi(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new xf("Constants support is not implemented in RNN yet.");Jg(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new am({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Z(this.stateSpec.map(e=>e.shape[e.shape.length-1]),s))throw new bf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(e=>new am({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){bi(()=>{if(!this.stateful)throw new mf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new bf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Fl([n,e])):this.states_=[Fl([n,this.cell.stateSize])];else if(null==e)xi(this.states_),null!=this.keptStates&&(xi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Fl([n,e])):this.states_[0]=Fl([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new bf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):xi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!Z(r.shape,i))throw new bf(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>vi(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=zb(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new am({shape:e.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof om){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return bi(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Qg(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new bf(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=Bb((e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h})}getInitialState(e){return bi(()=>{let t=Fl(e.shape);return t=dl(t,[1,2]),t=fg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?vg(t,[1,e]):t):this.cell.stateSize>1?[vg(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Wb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=jm(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Wb.className="RNN",ba(Wb);class Ub extends hm{}class Gb extends Ub{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Pf(this.units,"units"),this.activation=lb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Yg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fb(e.kernelRegularizer),this.recurrentRegularizer=fb(e.recurrentRegularizer),this.biasRegularizer=fb(e.biasRegularizer),this.kernelConstraint=Am(e.kernelConstraint),this.recurrentConstraint=Am(e.recurrentConstraint),this.biasConstraint=Am(e.biasConstraint),this.dropout=lg([1,ug([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=lg([1,ug([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=em(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bi(()=>{if(2!==e.length)throw new bf(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Yb({ones:()=>Ll(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Yb({ones:()=>Ll(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=kg(null!=i?la(e,i):e,this.kernel.read()),null!=this.bias&&(s=Eg(s,this.bias.read())),null!=a&&(n=la(n,a));let o=ia(s,kg(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ab(this.activation),useBias:this.useBias,kernelInitializer:Xg(this.kernelInitializer),recurrentInitializer:Xg(this.recurrentInitializer),biasInitializer:Xg(this.biasInitializer),kernelRegularizer:db(this.kernelRegularizer),recurrentRegularizer:db(this.recurrentRegularizer),biasRegularizer:db(this.biasRegularizer),activityRegularizer:db(this.activityRegularizer),kernelConstraint:$m(this.kernelConstraint),recurrentConstraint:$m(this.recurrentConstraint),biasConstraint:$m(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Gb.className="SimpleRNNCell",ba(Gb);class Vb extends Wb{constructor(e){e.cell=new Gb(e),super(e)}call(e,t){return bi(()=>{null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return new e(t)}}Vb.className="SimpleRNN",ba(Vb);class Hb extends Ub{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new bf("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Pf(this.units,"units"),this.activation=lb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Yg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fb(e.kernelRegularizer),this.recurrentRegularizer=fb(e.recurrentRegularizer),this.biasRegularizer=fb(e.biasRegularizer),this.kernelConstraint=Am(e.kernelConstraint),this.recurrentConstraint=Am(e.recurrentConstraint),this.biasConstraint=Am(e.biasConstraint),this.dropout=lg([1,ug([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=lg([1,ug([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=em(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bi(()=>{if(2!==e.length)throw new bf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Yb({ones:()=>Ll(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Yb({ones:()=>Ll(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(e=la(e,s[0]));let u=kg(e,this.kernel.read());this.useBias&&(u=Eg(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=la(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=ru(c,[2*this.units,this.units],c.rank-1),p=kg(r,h),[f,g,m]=ru(u,3,u.rank-1),[y,b]=ru(p,2,p.rank-1);a=this.recurrentActivation.apply(ia(f,y)),o=this.recurrentActivation.apply(ia(g,b));const x=kg(la(o,r),d);l=this.activation.apply(ia(m,x));const v=ia(la(a,r),la(ia(1,Al(a)),l));return[v,v]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ab(this.activation),recurrentActivation:ab(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xg(this.kernelInitializer),recurrentInitializer:Xg(this.recurrentInitializer),biasInitializer:Xg(this.biasInitializer),kernelRegularizer:db(this.kernelRegularizer),recurrentRegularizer:db(this.recurrentRegularizer),biasRegularizer:db(this.biasRegularizer),activityRegularizer:db(this.activityRegularizer),kernelConstraint:$m(this.kernelConstraint),recurrentConstraint:$m(this.recurrentConstraint),biasConstraint:$m(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Hb.className="GRUCell",ba(Hb);class jb extends Wb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hb(e),super(e)}call(e,t){return bi(()=>{null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}jb.className="GRU",ba(jb);class Kb extends Ub{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Pf(this.units,"units"),this.activation=lb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=lb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Yg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=fb(e.kernelRegularizer),this.recurrentRegularizer=fb(e.recurrentRegularizer),this.biasRegularizer=fb(e.biasRegularizer),this.kernelConstraint=Am(e.kernelConstraint),this.recurrentConstraint=Am(e.recurrentConstraint),this.biasConstraint=Am(e.biasConstraint),this.dropout=lg([1,ug([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=lg([1,ug([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=em(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Ag{apply(t,r){const s=e.apply([n]),i=(new Dg).apply([n]),a=e.apply([2*n]);return xg(xg(s,i),a)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return bi(()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new bf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Yb({ones:()=>Ll(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Yb({ones:()=>Ll(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=la(e,i[0]));let h=kg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=la(r,a[0])),h=ia(h,kg(r,this.recurrentKernel.read())),this.useBias&&(h=Eg(h,this.bias.read()));const[d,p,f,g]=ru(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=ia(la(l,s),la(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=la(c,this.activation.apply(u));return[m,m,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ab(this.activation),recurrentActivation:ab(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xg(this.kernelInitializer),recurrentInitializer:Xg(this.recurrentInitializer),biasInitializer:Xg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:db(this.kernelRegularizer),recurrentRegularizer:db(this.recurrentRegularizer),biasRegularizer:db(this.biasRegularizer),activityRegularizer:db(this.activityRegularizer),kernelConstraint:$m(this.kernelConstraint),recurrentConstraint:$m(this.recurrentConstraint),biasConstraint:$m(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Kb.className="LSTMCell",ba(Kb);class qb extends Wb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kb(e),super(e)}call(e,t){return bi(()=>{null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}qb.className="LSTM",ba(qb);class Xb extends Ub{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return bi(()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),s.push(i.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[i[0]].concat(n)})}build(e){let t;Jg(e)&&(e=e[0]),this.cells.forEach((n,r)=>{tg(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(jm(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return sm(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}im(t)}}function Yb(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=e,a=()=>null!=i?i(t(),n):Ng(t(),n),o=()=>Cg(a,t,r);return!s||s<=1?vi(o().clone()):Array(s).fill(void 0).map(o).map(e=>vi(e.clone()))}Xb.className="StackedRNNCells",ba(Xb);class Jb extends Wb{constructor(e){if(e.unroll)throw new xf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new xf("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new am({ndim:5})]}call(e,t){return bi(()=>{if(null!=this.cell.dropoutMask&&(xi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new bf("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return bi(()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Fl([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){bi(()=>{if(!this.stateful)throw new mf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new bf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Fl(s)):this.states_=[Fl(s)];else if(null==e)xi(this.states_),null!=this.keptStates&&(xi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Fl(s)):this.states_[0]=Fl(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new bf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):xi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!Z(n.shape,r))throw new bf(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>vi(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=kb(l,r[0],s,i[0],a[0]),h=kb(u,r[1],s,i[1],a[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Jb.className="ConvRNN2D";class Zb extends Kb{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Pf(this.filters,"filters"),this.kernelSize=wb(n,2,"kernelSize"),this.kernelSize.forEach(e=>Pf(e,"kernelSize")),this.strides=wb(r||1,2,"strides"),this.strides.forEach(e=>Pf(e,"strides")),this.padding=s||"valid",Zf(this.padding),this.dataFormat=i||"channelsLast",Jf(this.dataFormat),this.dilationRate=wb(a||1,2,"dilationRate"),this.dilationRate.forEach(e=>Pf(e,"dilationRate"))}build(e){var t;e=em(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new bf(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Ag{apply(e,t){return bg([n.apply([r]),Ol([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return bi(()=>{if(3!==e.length)throw new bf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Yb({ones:()=>Ll(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(e,t,n)=>t&&t[n]?la(t[n],e):e;let l=o(r,a,0),u=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Yb({ones:()=>Ll(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),g=o(s,d,2),m=o(s,d,3);const[y,b,x,v]=ru(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?ru(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[T,E,N,C]=ru(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,T),f=this.recurrentConv(f,E),g=this.recurrentConv(g,N),m=this.recurrentConv(m,C);const $=this.recurrentActivation.apply(ia(l,p)),R=this.recurrentActivation.apply(ia(u,f)),A=ia(la(R,i),la($,this.activation.apply(ia(c,g)))),_=la(this.recurrentActivation.apply(ia(h,m)),this.activation.apply(A));return[_,_,A]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Uo(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Eg(s,n,this.dataFormat):s}recurrentConv(e,t){return Uo(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Zb.className="ConvLSTM2DCell",ba(Zb);class Qb extends Jb{constructor(e){const t=new Zb(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Qb.className="ConvLSTM2D",ba(Qb);class ex extends hm{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return bi(()=>{this.invokeCallHook(e,t);const n=Qg(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Cg(()=>Ng(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ex.className="Dropout",ba(ex);class tx extends ex{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}tx.className="SpatialDropout1D",ba(tx);class nx extends hm{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Pf(this.units,"units"),this.activation=lb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Yg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Yg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Am(e.kernelConstraint),this.biasConstraint=Am(e.biasConstraint),this.kernelRegularizer=fb(e.kernelRegularizer),this.biasRegularizer=fb(e.biasRegularizer),this.activityRegularizer=fb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=em(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=em(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return bi(()=>{this.invokeCallHook(e,t);const n=Qg(e),r=Bf(this.activation.getClassName());let s;return null!=r?s=kg(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=kg(n,this.kernel.read()),null!=this.bias&&(s=Eg(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const e={units:this.units,activation:ab(this.activation),useBias:this.useBias,kernelInitializer:Xg(this.kernelInitializer),biasInitializer:Xg(this.biasInitializer),kernelRegularizer:db(this.kernelRegularizer),biasRegularizer:db(this.biasRegularizer),activityRegularizer:db(this.activityRegularizer),kernelConstraint:$m(this.kernelConstraint),biasConstraint:$m(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}nx.className="Dense",ba(nx);class rx extends hm{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=em(e);for(const t of e.slice(1))if(null==t)throw new bf(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],og(e,1)]}call(e,t){return bi(()=>{this.invokeCallHook(e,t);let n=Qg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=fu(n,e)}return function(e){if(e.rank<=1)throw new bf(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],og(e.shape,1)];return Co(e,t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}rx.className="Flatten",ba(rx);class sx extends hm{constructor(e){super(e),this.supportsMasking=!0,this.activation=lb(e.activation)}call(e,t){return bi(()=>{this.invokeCallHook(e,t);const n=Qg(e);return this.activation.apply(n)})}getConfig(){const e={activation:ab(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}sx.className="Activation",ba(sx);class ix extends hm{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return bi(()=>{return e=Qg(e),t=e,n=this.n,bi(()=>{if(2!==t.shape.length)throw new bf(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return vg(fg(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ix.className="RepeatVector",ba(ix);class ax extends hm{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,i=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==i)throw new bf("Can only specifiy one unknown dimension.");i=e}else s*=t}const a=og(e);if(null!==i){if(0===s||a%s!==0)throw new bf(n);r[i]=a/s}else if(a!==s)throw new bf(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return bi(()=>{this.invokeCallHook(e,t);const n=Qg(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Co(n,s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ax.className="Reshape",ba(ax);class ox extends hm{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=cg(1,e.dims.length+1);if(!Z(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new am({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=em(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return fu(Qg(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ox.className="Permute",ba(ox);class lx extends hm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Qg(e);return co(_l(n,this.maskValue),-1)}call(e,t){return bi(()=>{this.invokeCallHook(e,t);const n=Qg(e),r=co(_l(n,this.maskValue),-1,!0);return la(n,ra(r,n.dtype))})}}lx.className="Masking",ba(lx);class ux extends hm{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ef(e.inputLength))}this.inputDim=e.inputDim,Pf(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Pf(this.outputDim,"outputDim"),this.embeddingsInitializer=Yg(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=fb(e.embeddingsRegularizer),this.activityRegularizer=fb(e.activityRegularizer),this.embeddingsConstraint=Am(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return bi(()=>this.maskZero?(e=Qg(e),_l(e,ha(e))):null)}computeOutputShape(e){if(e=em(e),null==this.inputLength)return[...e,this.outputDim];const t=Ef(this.inputLength);if(t.length!==e.length-1)throw new bf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],i=e[r+1];if(null!=s&&null!=i&&s!==i)throw new bf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return bi(()=>{this.invokeCallHook(e,t);let n=Qg(e);"int32"!==n.dtype&&(n=pg(n,"int32"));const r=Ig(this.embeddings.read(),Co(n,[n.size]));return Co(r,em(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Xg(this.embeddingsInitializer),embeddingsRegularizer:db(this.embeddingsRegularizer),activityRegularizer:db(this.activityRegularizer),embeddingsConstraint:$m(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ux.className="Embedding",ba(ux);class cx extends hm{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new xf}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],i=t[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new bf("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[em(e)]),e.length<2)throw new bf(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ff(t),t.length>1)throw new bf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map(e=>e.length);-1===e.indexOf(null)&&1===Ff(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return bi(()=>{if(this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=ug(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=fg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],i=e.slice(1).concat([s]);let a=Co(r,[s].concat(og(e.slice(1))));a=fu(a,[1,0]),a=Co(a,i),t.push(a),n=!0}else if(e>1){const s=cg(1,e).concat([0]);t.push(fu(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Co(fu(Co(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(cg(0,s-1));r=fu(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ff(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return bi(()=>{if(null==t)return null;if(!Array.isArray(t))throw new bf("`mask` should be an Array");if(!Array.isArray(e))throw new bf("`inputs` should be an Array");if(t.length!==e.length)throw new bf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:tl(e,0)))[0];for(let e=1;e<t.length-1;++e)n=Il(n,t[e]);return n})}}class hx extends cx{constructor(e){super(e)}mergeFunction(e){return bi(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ia(t,e[n]);return t})}}hx.className="Add",ba(hx);class dx extends cx{constructor(e){super(e)}mergeFunction(e){return bi(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=la(t,e[n]);return t})}}dx.className="Multiply",ba(dx);class px extends cx{constructor(e){super(e)}mergeFunction(e){return bi(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ia(t,e[n]);return la(1/e.length,t)})}}px.className="Average",ba(px);class fx extends cx{constructor(e){super(e)}mergeFunction(e){return bi(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ra(t,e[n]);return t})}}fx.className="Maximum",ba(fx);class gx extends cx{constructor(e){super(e)}mergeFunction(e){return bi(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=$l(t,e[n]);return t})}}gx.className="Minimum",ba(gx);class mx extends cx{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new bf("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(Z(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new bf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return bi(()=>bg(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new bf("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new bf("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new bf("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new bf(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return bi(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(ra(Ll(e[n]),"bool")):t[n].rank<e[n].rank?r.push(tl(t[n],-1)):r.push(t[n]);const s=Mo(r,this.axis);return uo(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function yx(e,t){for(;e<0;)e+=t;return e}mx.className="Concatenate",ba(mx);class bx extends cx{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){q(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new xf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new bf(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new bf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>yx(t,e[n].shape.length)):[yx(this.axes,n.shape.length),yx(this.axes,r.shape.length)],this.normalize&&(n=Km(n,t[0]),r=Km(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new xf("batchDot is not implemented for tensors of 4D or higher rank yet");if(q(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),q(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new xf("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return bi(()=>{let n,a;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Co(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Co(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=i[0]===i[1]?dl(la(e,t),i[0]):dl(la(fu(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;a=Sl(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);a=su(a,t)}return 1===a.shape.length&&(a=tl(a,1)),a})}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[yx(this.axes,e.length),yx(this.axes,t.length)],n}computeOutputShape(e){q(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new xf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}bx.className="Dot",ba(bx);class xx extends hm{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return bi(()=>{this.invokeCallHook(e,t);const n=Qg(e);return Cg(()=>ia(wg(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}xx.className="GaussianNoise",ba(xx);class vx extends hm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return bi(()=>{this.invokeCallHook(e,t);const n=Qg(e);return this.rate>0&&this.rate<1?Cg(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return la(n,wg(n.shape,1,e))},()=>n,t.training||!1):n})}}vx.className="GaussianDropout",ba(vx);class wx extends hm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Qg(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return bi(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Cg(()=>{const t=Qg(e),r=-1.7580993408473766;let s=ol(Ul(n),this.rate);s=pg(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-i*r*this.rate,o=ia(la(t,s),la(ia(s,-1),r));return ia(la(o,i),a)},()=>Qg(e),t.training||!1)}return e})}}function kx(e,t,n,r,s,i=.001){let a;if(2===e.rank)a=_o(e,t,n,r,s,i);else if(3===e.rank)a=Do(e,t,n,r,s,i);else{if(4!==e.rank)throw new xf(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=Fo(e,t,n,r,s,i)}return a}wx.className="AlphaDropout",ba(wx);class Ix extends hm{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Yg(e.betaInitializer||"zeros"),this.gammaInitializer=Yg(e.gammaInitializer||"ones"),this.movingMeanInitializer=Yg(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Yg(e.movingVarianceInitializer||"ones"),this.betaConstraint=Am(e.betaConstraint),this.gammaConstraint=Am(e.gammaConstraint),this.betaRegularizer=fb(e.betaRegularizer),this.gammaRegularizer=fb(e.gammaRegularizer)}build(e){e=em(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new bf(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new am({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return bi(()=>{const n=null!=t.training&&t.training,r=Qg(e),s=r.shape,i=s.length,a=cg(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=kf(1,i);l[o]=s[o];const u=a.slice();u.sort();const c=!Z(u,cg(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const e=Co(this.movingMean.read(),l),t=Co(this.movingVariance.read(),l),n=this.center?Co(this.beta.read(),l):null,s=this.scale?Co(this.gamma.read(),l):null;return kx(r,e,t,n,s,this.epsilon)}return kx(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return Z(r.slice().sort(),cg(0,e.rank-1))?function(e,t,n,r,s=.001){return bi(()=>{const i=Rl(e,r),a=i.mean,o=i.variance;return[kx(e,a,o,n,t,s),a,o]})}(e,t,n,r,s):function(e,t,n,r,s=.001){return bi(()=>{const i=Rl(e,r),a=i.mean,o=i.variance,l=[];for(const t of cg(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Co(a,l),c=Co(o,l),h=null==t?null:Co(t,l),d=null==n?null:Co(n,l);return[kx(e,u,c,d,h,s),a,o]})}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(e,t,n)=>{bi(()=>{const r=1-n,s=e.read(),i=la(Sa(s,t),r);e.write(Sa(s,i))})};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xg(this.betaInitializer),gammaInitializer:Xg(this.gammaInitializer),movingMeanInitializer:Xg(this.movingMeanInitializer),movingVarianceInitializer:Xg(this.movingVarianceInitializer),betaRegularizer:db(this.betaRegularizer),gammaRegularizer:db(this.gammaRegularizer),betaConstraint:$m(this.betaConstraint),gammaConstraint:$m(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ix.className="BatchNormalization",ba(Ix);class Sx extends hm{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Yg(e.betaInitializer||"zeros"),this.gammaInitializer=Yg(e.gammaInitializer||"ones"),this.betaRegularizer=fb(e.betaRegularizer),this.gammaRegularizer=fb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=em(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ff(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(t=>e[t]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=Qg(e),r=n.shape,s=r.length;return bi(()=>{let{mean:e,variance:t}=Rl(n,this.axis,!0);const i=kf(1,s);for(const e of this.axis)i[e]=r[e];const a=e=>null!=e&&e.shape.length!==s?Co(e,i):e;let o=this.scale?a(this.gamma.read()):null,l=this.center?a(this.beta.read()):null;const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=nl(e,u),t=nl(t,u),null!=o&&(o=nl(o,c)),null!=l&&(l=nl(l,c)),kx(n,e,t,l,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xg(this.betaInitializer),gammaInitializer:Xg(this.gammaInitializer),betaRegularizer:db(this.betaRegularizer),gammaRegularizer:db(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Sx.className="LayerNormalization",ba(Sx);class Tx extends hm{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new bf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new bf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new bf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new am({ndim:4})]}computeOutputShape(e){let t,n;return e=em(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return bi(()=>{return t=Qg(e),n=this.padding,r=this.dataFormat,bi(()=>{if(4!==t.rank)throw new bf(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new bf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new bf(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Ml(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Ex(e,t,n,r,s,i){return bi(()=>{let a;Jf(s),Qf(i),Zf(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Sb(e,s);const o="same"===r?"same":"valid";return a="max"===i?Tl(e,t,n,o):$o(e,t,n,o),"channelsFirst"===s&&(a=fu(a,[0,3,1,2])),a})}function Nx(e,t,n,r,s,i){return bi(()=>{let a;Jf(s),Qf(i),Zf(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Tb(e,s);const o="same"===r?"same":"valid";return a="max"===i?El(e,t,n,o):Ro(e,t,n,o),"channelsFirst"===s&&(a=fu(a,[0,4,1,2,3])),a})}Tx.className="ZeroPadding2D",ba(Tx);class Cx extends hm{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new bf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Pf(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new bf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Pf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Zf(this.padding),this.inputSpec=[new am({ndim:3})]}computeOutputShape(e){const t=kb((e=em(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return bi(()=>{this.invokeCallHook(e,t),e=fg(Qg(e),2);const n=this.poolingFunction(Qg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return su(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class $x extends Cx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Jf(s),Zf(r),Ex(e,t,n,r,s,"max")}}$x.className="MaxPooling1D",ba($x);class Rx extends Cx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Jf(s),Zf(r),Ex(e,t,n,r,s,"avg")}}Rx.className="AveragePooling1D",ba(Rx);class Ax extends hm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new bf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Pf(this.poolSize,"poolSize"),Pf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jf(this.dataFormat),Zf(this.padding),this.inputSpec=[new am({ndim:4})]}computeOutputShape(e){e=em(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=kb(t,this.poolSize[0],this.padding,this.strides[0]),n=kb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return bi(()=>(this.invokeCallHook(e,t),this.poolingFunction(Qg(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class _x extends Ax{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Jf(s),Zf(r),Ex(e,t,n,r,s,"max")}}_x.className="MaxPooling2D",ba(_x);class Dx extends Ax{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Jf(s),Zf(r),Ex(e,t,n,r,s,"avg")}}Dx.className="AveragePooling2D",ba(Dx);class Fx extends hm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new bf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Pf(this.poolSize,"poolSize"),Pf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jf(this.dataFormat),Zf(this.padding),this.inputSpec=[new am({ndim:5})]}computeOutputShape(e){e=em(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=kb(t,this.poolSize[0],this.padding,this.strides[0]),n=kb(n,this.poolSize[1],this.padding,this.strides[1]),r=kb(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return bi(()=>(this.invokeCallHook(e,t),this.poolingFunction(Qg(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ox extends Fx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Jf(s),Zf(r),Nx(e,t,n,r,s,"max")}}Ox.className="MaxPooling3D",ba(Ox);class Lx extends Fx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Jf(s),Zf(r),Nx(e,t,n,r,s,"avg")}}Lx.className="AveragePooling3D",ba(Lx);class Mx extends hm{constructor(e){super(e),this.inputSpec=[new am({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new xf}}class Px extends Mx{constructor(e){super(e||{})}call(e,t){return bi(()=>{const t=Qg(e);return Nl(t,1)})}}Px.className="GlobalAveragePooling1D",ba(Px);class zx extends Mx{constructor(e){super(e||{})}call(e,t){return bi(()=>{const t=Qg(e);return hl(t,1)})}}zx.className="GlobalMaxPooling1D",ba(zx);class Bx extends hm{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Jf(this.dataFormat),this.inputSpec=[new am({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new xf}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Wx extends Bx{call(e,t){return bi(()=>{const t=Qg(e);return"channelsLast"===this.dataFormat?Nl(t,[1,2]):Nl(t,[2,3])})}}Wx.className="GlobalAveragePooling2D",ba(Wx);class Ux extends Bx{call(e,t){return bi(()=>{const t=Qg(e);return"channelsLast"===this.dataFormat?hl(t,[1,2]):hl(t,[2,3])})}}Ux.className="GlobalMaxPooling2D",ba(Ux);class Gx extends hm{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=jm(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Vx extends Gx{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=em(e)).length<3)throw new bf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=em(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return bi(()=>Bb((e,n)=>[Qg(this.layer.call(e,t)),[]],e=Qg(e),[],!1,null,null,!1,!0)[1])}}Vx.className="TimeDistributed",ba(Vx);class Hx extends Gx{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=jm(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=jm(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Lf(Xf,"BidirectionalMergeMode",s),e.weights)throw new xf("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Tf(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=zb(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new bf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const r=n.map(e=>new am({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),a.push(...r)}if(null!=r)throw new xf("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof om;for(const e of i)if(e instanceof om!==o)throw new bf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return bi(()=>{const n=t.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Hl(s,1)),"concat"===this.mergeMode?a=bg([r,s]):"sum"===this.mergeMode?a=ia(r,s):"ave"===this.mergeMode?a=la(.5,ia(r,s)):"mul"===this.mergeMode?a=la(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){tg(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),tg(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=jm(t.layer);if(delete t.layer,null!=t.numConstants)throw new xf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Hx.className="Bidirectional",ba(Hx);class jx extends hm{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return bi(()=>("float32"!==(e=Qg(e)).dtype&&(e=pg(e,"float32")),ia(la(e,this.scale),this.offset)))}}jx.className="Rescaling",ba(jx);const{resizeBilinear:Kx,cropAndResize:qx}=wc;class Xx extends hm{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,i,a,o){return bi(()=>{let l,u=!1;const c=[t/i,n/a,(r+t)/i,(s+n)/a],h=[];3===e.rank?(u=!0,l=iu([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=pi(h,[h.length,4]),p=Gl(0,h.length,1,"int32"),f=qx(l,d,p,[r,s],"nearest");return pg(u?Qg(cu(f)):f,o)})}upsize(e,t,n,r){return bi(()=>pg(Kx(e,[t,n]),r))}call(e,t){return bi(()=>{const t=Qg(e),n=t.dtype,r=t.shape,s=r[r.length-3],i=r[r.length-2];let a=0;s!==this.height&&(a=Math.floor((s-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),a>=0&&o>=0?this.centerCrop(t,a,o,this.height,this.width,s,i,n):this.upsize(e,this.height,this.width,n)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=em(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Xx.className="CenterCrop",ba(Xx);class Yx extends hm{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=em(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return bi(()=>{let n;if("int32"!==(e=Qg(e)).dtype&&(e=pg(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new bf(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Qg(t.countWeights)}const r=hl(e),s=Cl(e),i=al(this.numTokens,r).bufferSync().get(0),a=ol(s,0).bufferSync().get(0);if(!i||!a)throw new bf(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=Qg(e);if("int32"!==s.dtype&&(s=pg(s,"int32")),"int"===t)return s;const i=s.shape;if(0===s.rank&&(s=tl(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=tl(s,-1)),s.rank>2)throw new bf(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);const a=["multiHot","oneHot"].includes(t);let o;if(o=Xo(s,void 0!==r&&"count"===t?r:[],n,a),"tfIdf"!==t)return o;if(r)return la(o,r);throw new bf("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}}Yx.className="CategoryEncoding",ba(Yx);const Jx=new Set(["bilinear","nearest"]);class Zx extends hm{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Jx.has(e.interpolation))throw new bf(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=em(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return bi(()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return wc.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return wc.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Jx]} are supported`)})}}Zx.className="Resizing",ba(Zx);class Qx{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Qx.className="RandomSeed";class ev extends hm{constructor(e){super(e),this.randomGenerator=new Qx(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}ev.className="BaseRandomLayer";const tv=new Set(["bilinear","nearest"]);class nv extends ev{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new bf(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new bf(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new bf(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!tv.has(n))throw new bf(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=em(e))[2];return[this.imgHeight,-1,t]}call(e,t){return bi(()=>{const t=Qg(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Ul([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return wc.resizeBilinear(e,s);case"nearest":return wc.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...tv]} are supported`)}})}}function rv(e){return new $b(e)}function sv(e){return new nx(e)}var iv,av,ov,lv;function uv(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(pv(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const a=uv(e[i],t,n,r);s[i]=a}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function cv(e,t=dv){return hv(e,t)}function hv(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(pv(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=hv(e.map(e=>e[i]),t,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function dv(e){return null===e?null:pv(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function pv(e){let t=!1;if(Ce().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=__webpack_require__(551);t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ds)&&!(e instanceof Promise)&&!t)}function fv(e){return uv(e,gv)}function gv(e){return e instanceof Ds?{value:e.clone(),recurse:!1}:pv(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}nv.className="RandomWidth",ba(nv),Ce().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(iv||(iv={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(av||(av={})),Error,new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);class mv{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class yv extends mv{constructor(){super(yv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}yv.INITIAL_CAPACITY=32;class bv{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Nv(this,e)}filter(e){return new Tv(this,e)}map(e){return new Ev(this,e)}mapAsync(e){return new Cv(this,e)}serialMapAsync(e){return new Cv(this,e).serial()}flatmap(e){return new Rv(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new Sv(this,e,t)}columnMajorBatch(e,t=!0,n=dv){return this.rowMajorBatch(e,t).map(e=>cv(e,n))}concatenate(e,t){return new Av(new xv([this,e]),t)}take(e){return e<0||null==e?this:new Iv(this,e)}skip(e){return e<0||null==e?this:new kv(this,e)}prefetch(e){return new _v(this,e)}shuffle(e,t){return new Dv(this,e,t)}serial(){return new wv(this)}}class xv extends bv{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:fv(e),done:!1}}}class vv extends bv{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class wv extends bv{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class kv extends bv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;xi(e.value)}return this.upstream.next()}}class Iv extends bv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Sv extends bv{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Tv extends bv{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;xi(e.value)}}}class Ev extends bv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=qs(e.value),n=this.transform(e.value),r=qs(n);for(const e of t)Ks(e,r)||e.dispose();return{value:n,done:!1}}}class Nv extends bv{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Cv extends bv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=qs(e.value),n=await this.transform(e.value),r=qs(n);for(const e of t)Ks(e,r)||e.dispose();return{value:n,done:!1}}}class $v extends bv{constructor(){super(),this.outputQueue=new yv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Rv extends $v{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=qs(e.value),n=this.transform(e.value),r=qs(n);this.outputQueue.pushAll(n);for(const e of t)Ks(e,r)||e.dispose();return!0}}class Av extends bv{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(lv=ov||(ov={}))[lv.FAIL=0]="FAIL",lv[lv.SHORTEST=1]="SHORTEST",lv[lv.LONGEST=2]="LONGEST";class _v extends bv{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new mv(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Dv extends _v{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=y.alea(n||ms().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Fv{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return q(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Ov(async()=>(await n.iterator()).columnMajorBatch(e,t,Lv),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Ov(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Ov(async()=>(await t.iterator()).filter(t=>bi(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Ov(async()=>(await t.iterator()).map(t=>bi(()=>e(t))),this.size)}mapAsync(e){const t=this;return Ov(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Ov(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Ov(async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new vv(s)).take(e),new Av(n,r);var n,r,s},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Ov(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=y.alea(t||ms().toString());return Ov(async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Ov(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Ov(e,t=null){return new class extends Fv{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Lv(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Ds||xs(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ds?iu(e):pi(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Mv(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&q("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}Fv.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Pv=Lh;class zv extends U{nextDataId(){return zv.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new W(this,mi())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ce().get("IS_NODE")&&Gr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ce(n[0])){const s=n.map(e=>ys(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?eh(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>bs(e));return na(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return na(e.shape,e.dtype,t)}makeOutput(e,t,n){return mi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ms();return e(),{kernelMs:ms()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Mv([e],"where");const t=this.readSync(e.dataId);return Pv(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Bv(e){return(t,n,r)=>{const s=oe(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function Wv(e,t,n){return Uv(e,Bv(t),n)}function Uv(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;Mv(a,e);const o=i,l=o.data.get(a.dataId).values;let u;if("string"===a.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Fh(l)}else u=l;const c=n||a.dtype,h=t(u,c,s);return o.makeTensorInfo(a.shape,c,h)}}zv.nextDataId=0,wi("cpu",()=>new zv,1);const Gv=Wv(Rt,e=>e>=0?e:Math.exp(e)-1),Vv={kernelName:Rt,backendName:"cpu",kernelFunc:Gv};function Hv(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const jv={kernelName:Kt,backendName:"cpu",kernelFunc:Hv};function Kv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r;Mv([s],"leakyRelu");const a=J(s.shape),o=n.data.get(s.dataId).values,l=ae("float32",a);for(let e=0;e<o.length;e++)l[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const qv={kernelName:Qt,backendName:"cpu",kernelFunc:Kv};function Xv(e){return(t,n,r,s,i)=>{const a=$a(t,n),o=a.length,l=ge(a),u=ae(i,J(a)),c=t.length,h=n.length,d=ge(t),p=ge(n),f=Na(t,a),g=Na(n,a);if(f.length+g.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=Ie(t,o,l),i=n.slice(-c);f.forEach(e=>i[e]=0);const a=ke(i,c,d),m=n.slice(-h);g.forEach(e=>m[e]=0);const y=ke(m,h,p);u[t]=e(r[a],s[y])}return[u,a]}}const Yv=Xv((e,t)=>e<0?t*e:e);function Jv(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Mv([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,l]=Yv(r.shape,s.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const Zv={kernelName:On,backendName:"cpu",kernelFunc:Jv},Qv=Wv(Gn,e=>Math.max(0,e)),ew={kernelName:Gn,backendName:"cpu",kernelFunc:Qv},tw=Wv(Xn,e=>Math.min(Math.max(0,e),6)),nw={kernelName:Xn,backendName:"cpu",kernelFunc:tw},rw=Bv(e=>1/(1+Math.exp(-e))),sw=Wv(lr,e=>1/(1+Math.exp(-e))),iw={kernelName:lr,backendName:"cpu",kernelFunc:sw};function aw(e,t,n,r,s){if("linear"===n)return Hv({inputs:{x:t},backend:e});if("relu"===n)return Qv({inputs:{x:t},backend:e});if("elu"===n)return Gv({inputs:{x:t},backend:e});if("relu6"===n)return tw({inputs:{x:t},backend:e});if("prelu"===n)return Jv({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Kv({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return sw({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ow(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const lw={kernelName:it,backendName:"cpu",kernelFunc:ow};function uw(e,t,n="float32"){if("complex64"===n)return ow({inputs:{real:uw(e,t,"float32"),imag:uw(e,t,"float32")},backend:e});const r=xe(J(t),n);return e.makeTensorInfo(t,n,r)}function cw(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const hw={kernelName:Wn,backendName:"cpu",kernelFunc:cw};function dw(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=gs([0],n),[s,i]=Xv((e,t)=>e!==t?1:0)(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function pw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return Hv({inputs:{x:s},backend:n});const e=uw(n,s.shape,s.dtype),t=pw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=ow({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=cw({inputs:{input:s},backend:n}),t=pw({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!le(s.dtype,i)){const e=Hv({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const a=n.data.get(s.dataId).values,[o,l,u]=dw(a,s.shape,s.dtype,i);return n.makeTensorInfo(o,l,u)}const fw={kernelName:nt,backendName:"cpu",kernelFunc:pw};function gw(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:a}=n,o=s;Mv([i,a],e);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c="string"===i.dtype?Fh(l):l,h="string"===i.dtype?Fh(u):u,d=r||i.dtype,[p,f]=t(i.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a:i,b:a}=e,o=s;if("complex64"===i.dtype||"complex64"===a.dtype){const e=pw({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=pw({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,y,b]=n(i.shape,a.shape,l,u,f,g),x=o.makeTensorInfo(b,"float32",m),v=o.makeTensorInfo(b,"float32",y),w=ow({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,s=r||i.dtype,[l,u]=t(i.shape,a.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function mw(e){return(t,n,r,s,i,a)=>{const o=$a(t,n),l=J(o),u=o.length,c=ge(o),h=ae("float32",l),d=ae("float32",l),p=Na(t,o),f=Na(n,o),g=eh(r,s),m=eh(i,a),y=t.length,b=ge(t),x=n.length,v=ge(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%m.length,s=e(g[2*n],g[2*n+1],m[2*r],m[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Ie(t,u,c),r=n.slice(-y);p.forEach(e=>r[e]=0);const s=ke(r,y,b),i=n.slice(-x);f.forEach(e=>i[e]=0);const a=ke(i,x,v),o=e(g[2*s],g[2*s+1],m[2*a],m[2*a+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const yw=Xv((e,t)=>e+t),bw=mw((e,t,n,r)=>({real:e+n,imag:t+r})),xw=gw(Le,yw,bw),vw={kernelName:Le,backendName:"cpu",kernelFunc:xw};function ww(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=J(s.shape),o=re(i,a),l=J(o);q(a===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const kw={kernelName:Vn,backendName:"cpu",kernelFunc:ww};function Iw(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;Mv([s,i],"matMul");const l=s.shape.length,u=i.shape.length,c=a?s.shape[l-2]:s.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],d=a?s.shape[l-1]:s.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],f=s.shape.slice(0,-2),g=i.shape.slice(0,-2),m=J(f),y=J(g),b=$a(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);q(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`);const x=o?[y,p,h]:[y,h,p],v=ww({inputs:{x:s},backend:n,attrs:{shape:a?[m,c,d]:[m,d,c]}}),w=ww({inputs:{x:i},backend:n,attrs:{shape:x}}),k=a?v.shape[1]:v.shape[2],I=a?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],T=Math.max(m,y),E=n.data.get(v.dataId).values,N=n.data.get(w.dataId).values,C=ge(v.shape),$=ge(w.shape),[R,A,_]=a?[C[0],1,C[1]]:[C[0],C[1],1],[D,F,O]=o?[1,$[1],$[0]]:[$[1],1,$[0]],L=I*S,M=na([T,I,S],v.dtype),P=M.values,z=n.blockSize;for(let e=0;e<T;e++){const t=e%m,n=e%y;for(let r=0;r<I;r+=z){const s=Math.min(r+z,I);for(let i=0;i<S;i+=z){const a=Math.min(i+z,S);for(let o=0;o<k;o+=z){const l=Math.min(o+z,k);for(let u=r;u<s;u++)for(let r=i;r<a;r++){let s=0;for(let e=o;e<l;e++)s+=E[t*R+u*A+e*_]*N[e*D+r*F+n*O];P[e*L+(u*S+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,M.dtype,M.values)}const Sw={kernelName:Je,backendName:"cpu",kernelFunc:Iw},Tw={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[];d=Iw({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=xw({inputs:{a:d,b:a},backend:n}),g.push(d),d=p),c&&(f=aw(n,d,c,o,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};function Ew(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Nw={kernelName:De,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Mv(t,"abs");let r=new Float32Array(J(t.shape));return r=Ew(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},Cw=Wv(Fe,e=>Math.acos(e)),$w={kernelName:Fe,backendName:"cpu",kernelFunc:Cw},Rw=Wv(Oe,e=>Math.acosh(e)),Aw={kernelName:Oe,backendName:"cpu",kernelFunc:Rw},_w={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Mv(t,"addN");const s=r.map(e=>n.data.get(e.dataId).values),i=na(r[0].shape,r[0].dtype),a=i.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<a.length;e++)a[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function Dw(e,t,n,r,s){const i=t.length,a=J(t),o=ge(t),l=ge(s),u=ae(n,J(s));for(let t=0;t<a;++t){const n=Ie(t,i,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[ke(s,i,l)]=e[t]}return u}function Fw(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:i}=n;Mv(s,"transpose");const a=s.shape.length,o=new Array(a);for(let e=0;e<o.length;e++)o[e]=s.shape[i[e]];const l=Dw(r.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const Ow={kernelName:Dr,backendName:"cpu",kernelFunc:Fw},Lw={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;Mv(s,"all");const o=se(i,s.shape);let l=o;const u=xl(l,s.shape.length);let c=s;null!=u&&(c=Fw({inputs:{x:s},backend:n,attrs:{perm:u}}),l=wl(l.length,s.shape.length)),bl("all",l,c.shape.length);const[h,d]=ml(c.shape,l),p=J(d),f=xe(J(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=ww({inputs:{x:m},backend:n,attrs:{shape:yl(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},Mw={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;Mv(s,"any");const o=se(i,s.shape);let l=o;const u=xl(l,s.shape.length);let c=s;null!=u&&(c=Fw({inputs:{x:s},backend:n,attrs:{perm:u}}),l=wl(l.length,s.shape.length)),bl("any",l,c.shape.length);const[h,d]=ml(c.shape,l),p=J(d),f=xe(J(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=ww({inputs:{x:m},backend:n,attrs:{shape:yl(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},Pw={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;Mv(s,"argMax");let a=se(i,s.shape);const o=xl(a,s.shape.length);let l=s;const u=[];null!=o&&(l=Fw({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=wl(a.length,l.shape.length)),a=[a[0]],bl("argMax",a,l.shape.length);const[c,h]=ml(l.shape,a),d=xe(J(c),"int32"),p=J(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",d)}},zw={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;Mv(s,"argMin");let a=se(i,s.shape);const o=xl(a,s.shape.length);let l=s;const u=[];null!=o&&(l=Fw({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=wl(a.length,l.shape.length)),a=[a[0]],bl("argMin",a,l.shape.length);const[c,h]=ml(l.shape,a),d=xe(J(c),"int32"),p=J(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",d)}},Bw=Wv(Ue,e=>Math.asin(e)),Ww={kernelName:Ue,backendName:"cpu",kernelFunc:Bw},Uw=Wv(Ge,e=>Math.asinh(e)),Gw={kernelName:Ge,backendName:"cpu",kernelFunc:Uw},Vw=Wv(Ve,e=>Math.atan(e)),Hw={kernelName:Ve,backendName:"cpu",kernelFunc:Vw},jw=Xv((e,t)=>Math.atan2(e,t)),Kw=gw(je,jw),qw={kernelName:je,backendName:"cpu",kernelFunc:Kw},Xw=Wv(He,e=>Math.atanh(e)),Yw={kernelName:He,backendName:"cpu",kernelFunc:Xw};function Jw(e,t,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=na(s.outShape,n),m=g.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,g=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const v=y*a-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+y*b;for(let n=0;n<s.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let y=f,b=0,v=0;for(let n=w;n<k;n+=l){const s=g+n*r[1];for(let n=c;n<d;n+=u){const a=e[s+n*r[2]+t];"max"===i&&a>y?y=a:"avg"===i&&(b+=a,v++)}if(isNaN(y))break}m[I+n*x+t]="avg"===i?b/v:y}}}return g}function Zw(e,t,n,r,s=!1,i=!1){const a=na(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=na(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const m=n*o-p;let y=m;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+m);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const a=n-m;for(let o=p;o<x;o+=c){const l=o-h,u=g.get(e,n,o,t);u>v&&(v=u,w=s?i?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:a*d+l)}}a.set(w,e,n,o,t)}}return a}function Qw(e,t,n,r,s,i){const a=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,y=s.padInfo.left,b="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=na(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const T=w*a-g;let E=T;for(;E<0;)E+=u;const N=Math.min(s.inDepth,d+T),C=n+w*k;for(let n=0;n<s.outHeight;++n){const a=n*o-m;let d=a;for(;d<0;)d+=c;const g=Math.min(s.inHeight,p+a),w=C+n*I;for(let n=0;n<s.outWidth;++n){const a=n*l-y;let o=a;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+a),m=w+n*S;let k=b,I=0,T=0;for(let n=E;n<N;n+=u){const s=x+n*r[1];for(let n=d;n<g;n+=c){const a=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[a+n*r[3]+t];if("max"===i&&s>k?k=s:"avg"===i&&(I+=s,T++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[m+t]="avg"===i?I/Math.max(T,1):k}}}}return x}const ek={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Mv(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;q(So(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=fo(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Z(u.inShape,u.outShape))c=Hv({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=ge(s.shape),r=Jw(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},tk={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;Mv(s,"avgPool3d");const c=go(s.shape,i,a,1,o,l,u),h=Qw(n.data.get(s.dataId).values,s.shape,s.dtype,ge(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},nk={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;Mv([s,i],"avgPool3DGrad");const c=go(i.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,T=w-1-c.padInfo.top,E=na(i.shape,"float32"),N=1/(f*g*m),C=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const i=n-I,a=r-T,o=s-S;let l=0;for(let n=0;n<v;n+=y){const r=(i+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const s=(a+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const i=(o+n)/p;i<0||i>=c.outWidth||Math.floor(i)!==i||(l+=C.get(e,r,s,i,t))}}}E.set(l*N,e,n,r,s,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}},rk={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;Mv([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=fo(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=na(a.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,S=na(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,i=r-x;let a=0;for(let n=0;n<y;n+=g){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=m){const s=(i+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(a+=S.get(e,r,s,t))}}w.set(a*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},sk={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:i,offset:a,mean:o,variance:l}=t;q(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),q(null==a||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),q(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Mv([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)g[e]=f[v++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[I++]+u),v>=m&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function ik(e,t,n,r,s){const i=so(r,t,n),a=J(n),o=ge(r);if(i){const n=io(t,o);return"string"===s?e.slice(n,n+a):e.subarray(n,n+a)}const l=na(r,s,"string"===s?Fh(e):e),u=na(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map((e,n)=>e+t[n]);u.set(l.get(...r),...n)}return"string"===s?Oh(u.values):u.values}function ak(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r;Mv(s,"slice");const[o,l]=ao(s,i,a);ja(s,o,l);const u=ik(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const ok={kernelName:sr,backendName:"cpu",kernelFunc:ak},lk={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;Mv([s],"batchToSpaceND");const o=i.reduce((e,t)=>e*t),l=Mc(s.shape,i,o),u=Pc(l.length,i.length),c=zc(s.shape,i,o),h=Bc(a,i.length),d=Wc(c,a,i.length),p=ww({inputs:{x:s},backend:n,attrs:{shape:l}}),f=Fw({inputs:{x:p},backend:n,attrs:{perm:u}}),g=ww({inputs:{x:f},backend:n,attrs:{shape:c}}),m=ak({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function uk(e,t,n,r,s){const i=J(r),a=xe(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(a[r]+=i>0?t[n]:1)}return a}function ck(e,t,n,r=!1){const s=e.shape[0],i=e.shape[1],a=na([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=e.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?a.set(1,o,i):t.size>0?a.set(a.get(o,i)+t.get(o,s),o,i):a.set(a.get(o,i)+1,o,i))}return a}const hk={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=uk(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}},dk=Xv((e,t)=>e&t),pk={kernelName:et,backendName:"cpu",kernelFunc:gw(et,dk)},fk={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=$a(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},gk=Bv(e=>Math.ceil(e)),mk=Uv(rt,gk),yk={kernelName:rt,backendName:"cpu",kernelFunc:mk},bk=Wv(st,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),xk={kernelName:st,backendName:"cpu",kernelFunc:bk},vk={kernelName:at,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(J(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function wk(e,t,n,r){const s=oe(n,J(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=J(e.shape);s.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const i="string"===n?Fh(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=i[a++]}r+=e.shape[1]})}return s}function kk(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Ik={kernelName:Xt,backendName:"cpu",kernelFunc:kk};function Sk(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=se(s,t[0].shape)[0];Nc(t.map(e=>e.shape),i);let a=Cc(t.map(e=>e.shape),i);if(0===J(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter(e=>J(e.shape)>0);if(1===o.length)return Hv({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map(e=>cw({inputs:{input:e},backend:n})),t=o.map(e=>kk({inputs:{input:e},backend:n})),r=Sk({inputs:e,backend:n,attrs:{axis:i}}),s=Sk({inputs:t,backend:n,attrs:{axis:i}}),a=ow({inputs:{real:r,imag:s},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const l=o.map(e=>{const t=J(e.shape.slice(i));return ww({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),u=l.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));a=Cc(l.map(e=>e.shape),1);const c=1===l[0].shape[0],h=wk(u,a,t[0].dtype,c),d=Cc(o.map(e=>e.shape),i),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}const Tk={kernelName:ot,backendName:"cpu",kernelFunc:Sk};function Ek(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;Mv([s,i],"conv2d");const h=Eo(l),d=mo(s.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new $s(d.outShape,s.dtype),w=ge(s.shape),k=ge(i.shape),I=w[0],S=x?w[1]:w[2],T=x?w[2]:1,E=x?1:w[1],N=v.strides[0],C=x?v.strides[1]:v.strides[2],$=x?v.strides[2]:1,R=x?1:v.strides[1],A=n.data.get(s.dataId).values,_=n.data.get(i.dataId).values,D=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*N;for(let e=0;e<d.outHeight;++e){const r=n+e*C,s=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const i=e*k[0],a=t+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*$,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=a+r*T;let o=i+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*E];for(let e=0;e<d.outChannels;++e)D[t+e*R]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const Nk={kernelName:lt,backendName:"cpu",kernelFunc:Ek},Ck={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;Mv([s,i],"conv2dBackpropFilter");const h=Eo(l),d=mo(s.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,y="channelsLast"===d.dataFormat,b=new $s(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new $s(s.shape,s.dtype,w),S=new $s(i.shape,i.dtype,k);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((x-r)/f)),i=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<i;++e){const n=r+e*f-x;l+=y?I.get(u,t,n,a)*S.get(u,c,e,o):I.get(u,a,t,n)*S.get(u,o,c,e)}}b.set(l,e,r,a,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},$k={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;Mv([s,i],"conv2dBackpropInput");const h=ge(i.shape),d=ge(s.shape);let p=Eo(u);const f=mo(a,i.shape,o,1,l,c,!1,p),g=new $s(f.inShape,"float32"),m=g.values,y=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:T,inHeight:E,inWidth:N,outChannels:C,outHeight:$,outWidth:R,strideHeight:A,strideWidth:_}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,F=S-1-f.padInfo.left,O="channelsLast"===p,L=g.strides[0],M=O?g.strides[1]:g.strides[2],P=O?g.strides[2]:1,z=O?1:g.strides[1],B=d[0],W=O?d[1]:d[2],U=O?d[2]:1,G=O?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<T;++t)for(let n=0;n<E;++n){const r=n-D,s=Math.max(0,Math.ceil(r/A)),i=Math.min($,(I+r)/A);for(let a=0;a<N;++a){const o=a-F,l=Math.max(0,Math.ceil(o/_)),u=Math.min(R,(S+o)/_);let c=0;for(let n=s;n<i;++n){const s=n*A-r;for(let r=l;r<u;++r){const i=B*e+W*n+U*r,a=x*(I-1-s)+v*(S-1-(r*_-o))+w*t;for(let e=0;e<C;++e)c+=y[i+G*e]*b[a+e]}}m[L*e+M*n+P*a+z*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Rk={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r;Mv([s,i],"conv3d");const u=yo(s.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,y=m.front,b=m.left,x=m.top,v=new $s(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=v.values,S=ge(s.shape),T=ge(i.shape);for(let e=0;e<u.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const i=e*T[0],a=t+n*S[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=i+e*T[1],o=a+r*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=u.inWidth)continue;const i=s+e*T[2],a=o+t*u.inChannels;let l=i;for(let e=0;e<u.inChannels;++e){const t=w[a+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Ak={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:l}=r;Mv([s,i],"conv3dBackpropFilterV2");const u=ge(s.shape),c=ge(i.shape),h=yo(s.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,y=h.filterWidth,b=new $s(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(i.dataId).values,[T,E,N,C]=c,$=n.data.get(s.dataId).values,[R,A,_,D]=u,F=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((F-e)/d)),n=Math.min(h.outDepth,(h.inDepth+F-e)/d),r=e*v;for(let s=0;s<m;++s){const i=Math.max(0,Math.ceil((L-s)/p)),a=Math.min(h.outHeight,(h.inHeight+L-s)/p),o=s*w+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((O-r)/f)),u=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const g=o*I+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*R,y=g*T;for(let g=t;g<n;++g){const t=(e+g*d-F)*A+h,n=g*E+y;for(let e=i;e<a;++e){const i=(s+e*p-L)*_+t,a=e*N+n;for(let e=l;e<u;++e){const t=e*C+a;m+=$[(r+e*f-O)*D+i+o]*S[t+c]}}}}x[g+c]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},_k={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:l}=r;Mv([s],"conv3dBackpropInputV2");const u=ge(s.shape),c=ge(i.shape),h=yo(l,i.shape,o,1,a),d=new $s(h.inShape,"float32"),p=d.values,[f,g,m,y]=d.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=u,I=n.data.get(i.dataId).values,[S,T,E,N]=c,{batchSize:C,filterDepth:$,filterHeight:R,filterWidth:A,inChannels:_,inDepth:D,inHeight:F,inWidth:O,outChannels:L,outDepth:M,outHeight:P,outWidth:z,strideDepth:B,strideHeight:W,strideWidth:U}=h,G=$-1-h.padInfo.front,V=R-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<_;++t)for(let n=0;n<D;++n){const r=n-G,s=Math.max(0,Math.ceil(r/B)),i=Math.min(M,($+r)/B);for(let a=0;a<F;++a){const o=a-V,l=Math.max(0,Math.ceil(o/W)),u=Math.min(P,(R+o)/W);for(let c=0;c<O;++c){const h=c-H,d=Math.max(0,Math.ceil(h/U)),C=Math.min(z,(A+h)/U);let _=0;for(let n=s;n<i;++n){const s=n*B-r;for(let r=l;r<u;++r){const i=r*W-o;for(let a=d;a<C;++a){const o=x*e+v*n+w*r+k*a,l=S*($-1-s)+T*(R-1-i)+E*(A-1-(a*U-h))+N*t;for(let e=0;e<L;++e)_+=b[o+e]*I[l+e]}}}p[f*e+g*n+m*a+y*c+t]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Dk=Wv(ft,e=>Math.cos(e)),Fk={kernelName:ft,backendName:"cpu",kernelFunc:Dk},Ok=Wv(gt,e=>Math.cosh(e)),Lk={kernelName:gt,backendName:"cpu",kernelFunc:Ok},Mk={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=i.shape[0],[g,m]=o,y=na([f,g,m,p],"float32"),b=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,v=n.data.get(s.dataId).values,w=ge(s.shape),k=ge(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],i=b[t+3],a=x[e];if(a>=c)continue;const o=g>1?(s-n)*(h-1)/(g-1):0,f=m>1?(i-r)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<m;l++){const c=m>1?r*(d-1)+l*f:.5*(r+i)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const h=Math.floor(c),g=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let i=r+h*w[2]+n*w[1]+a*w[0];const u=v[i];i=r+g*w[2]+n*w[1]+a*w[0];const c=v[i];i=r+h*w[2]+s*w[1]+a*w[0];const d=v[i];i=r+g*w[2]+s*w[1]+a*w[0];const p=u+(c-u)*b,f=d+(v[i]-d)*b;i=r+l*k[2]+t*k[1]+e*k[0],y.values[i]=p+(f-p)*o}}}else for(let n=0;n<m;++n){const s=m>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+a*w[0],i=r+n*k[2]+t*k[1]+e*k[0];y.values[i]=v[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Pk={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;Mv(s,"cumprod");const l=xl([i],s.shape.length);let u=s;null!=l&&(u=Fw({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=wl(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Us(u.dtype,"int32"),d=be(J(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=a?1:p[n];else{const r=g(e,t-1);d[n]=a?p[r]*d[r]:p[n]*d[r]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Fw({inputs:{x:m},backend:n,attrs:{perm:vl(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}},zk={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;Mv(s,"cumsum");const l=xl([i],s.shape.length);let u=s;null!=l&&(u=Fw({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=wl(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Us(u.dtype,"int32"),d=xe(J(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=a?0:p[n];else{const r=g(e,t-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Fw({inputs:{x:m},backend:n,attrs:{perm:vl(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}},Bk={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=uk(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,e)}if(2===s.shape.length){const e=ck(n.bufferSync(s),n.bufferSync(i),a,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Wk={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r;q("NHWC"===a,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*i,d=u*i,p=c/(i*i),f=n.data.get(s.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<d;++t){const s=Math.floor(t/i),a=(r*i+t%i)*p;for(let t=0;t<p;++t){const r=t+a+c*(s+u*(n+l*e));g[m++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,g)}};function Uk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;Mv([s,i],"depthwiseConv2DNative");const c=ge(s.shape),h=ge(i.shape);let d=l;null==d&&(d=[1,1]),q(So(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=mo(s.shape,i.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new $s(p.outShape,s.dtype),I=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,T=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],s=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const i=e*h[0],a=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=i+e*h[1],o=a+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)T[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Gk={kernelName:wt,backendName:"cpu",kernelFunc:Uk},Vk={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;Mv([s,i],"depthwiseConv2dNativeBackpropFilter");const h=mo(s.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new $s(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new $s(s.shape,s.dtype,v),k=n.data.get(i.dataId).values,I=new $s(i.shape,i.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((y-r)/p)),i=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/x),l=a%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=s;e<i;++e){const n=r+e*p-y;u+=w.get(l,t,n,o)*I.get(l,c,e,a)}}m.set(u,e,r,o,l)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Hk={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;Mv([s,i],"depthwiseConv2DNativeBackpropInput");const h=ge(s.shape),d=ge(i.shape),p=mo(c,i.shape,a,o,l,u,!0),f=new $s(p.inShape,"float32"),g=f.values,[m,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(i.dataId).values,[S,T,E]=d,{batchSize:N,filterHeight:C,filterWidth:$,inChannels:R,inHeight:A,inWidth:_,outChannels:D,outHeight:F,outWidth:O,strideHeight:L,strideWidth:M}=p,P=C-1-p.padInfo.top,z=$-1-p.padInfo.left,B=D/R;for(let e=0;e<N;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const r=n-P,s=Math.max(0,Math.ceil(r/L)),i=Math.min(F,(C+r)/L);for(let a=0;a<_;++a){const o=a-z,l=Math.max(0,Math.ceil(o/M)),u=Math.min(O,($+o)/M);let c=0;for(let n=s;n<i;++n){const s=n*L-r;for(let r=l;r<u;++r){const i=v*e+w*n+k*r,a=S*(C-1-s)+T*($-1-(r*M-o))+E*t;for(let e=0;e<B;++e)c+=x[i+(t*B+e)]*I[a+e]}}g[m*e+y*n+b*a+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},jk={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=J(r.shape),i=n.data.get(r.dataId).values,a=na([s,s],r.dtype),o=a.values;for(let e=0;e<i.length;e++)o[e*s+e]=i[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},Kk={kernelName:Tt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:i,pad:a,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:T,outShape:E}=po(r.shape,s.shape,i,a,"NHWC",o),N=J(E),C=E.length,$=oe(r.dtype,N);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let i=0;i<b;++i){const a=i*w-x.left;for(let o=0;o<m;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const i=n+t*S;if(i>=0&&i<f)for(let n=0;n<I;++n){const p=a+n*T;if(p>=0&&p<g){const a=ke([e,i,p,o],c,ge(r.shape)),f=ke([t,n,o],d,ge(s.shape)),g=u[a]+h[f];g>l&&(l=g)}}}$[ke([e,t,i,o],C,ge(E))]=l}}}return{dataId:l.write(gs($,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},qk={kernelName:Nt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=ye(r.shape,u.data.get(r.dataId).values),h=ye(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:T}=po(r.shape,s.shape,a,o,"NHWC",l);q(i.rank===T.length,()=>`Error in ${Nt}, dy must have the same rank as output ${T.length}, but got ${i.rank}`);const E=ye(T,u.data.get(i.dataId).values),N=ve(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*S;if(u>=0&&u<f){const s=c[e][r][u][i]+h[t][n][i];s>a&&(a=s,o=t,l=n)}}}N[o][l][i]+=E[e][t][r][i]}}}return{dataId:u.write(gs(N,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Xk={kernelName:Et,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=ye(r.shape,u.data.get(r.dataId).values),h=ye(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:T}=po(r.shape,s.shape,a,o,"NHWC",l);q(i.rank===T.length,()=>`Error in ${Et}, dy must have the same rank as output ${T.length}, but got ${i.rank}`);const E=ye(T,u.data.get(i.dataId).values),N=ve(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*S;if(u>=0&&u<f){const s=c[e][r][u][i]+h[t][n][i];s>a&&(a=s,o=r,l=u)}}}N[e][o][l][i]+=E[e][t][r][i]}}}return{dataId:u.write(gs(N,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Yk={kernelName:"Draw",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:i,options:a}=r,{contextOptions:o,imageOptions:l}=a||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],g=n.data.get(s.dataId).values,m="float32"===s.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*u];for(let n=0;n<f;n++){const r=g[e*f+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*m,t[1]=r*m,t[2]=r*m):t[n]=r*m}const n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}i.width=p,i.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),s}},Jk=Xv((e,t)=>e*t),Zk=mw((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),Qk=gw(Sn,Jk,Zk),eI={kernelName:Sn,backendName:"cpu",kernelFunc:Qk};function tI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;let o;Mv(s,"sum"),o="bool"===s.dtype?pw({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Hv({inputs:{x:s},backend:n});const l=o.shape.length,u=se(i,o.shape),c=xl(u,l);let h=u,d=o;null!=c&&(d=Fw({inputs:{x:o},backend:n,attrs:{perm:c}}),h=wl(h.length,l)),bl("sum",h,d.shape.length);const[p,f]=ml(d.shape,h);let g=uw(n,p,Us(d.dtype,"int32"));const m=J(f),y=n.data.get(g.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*m;let n=0;for(let e=0;e<m;++e)n+=b[t+e];y[e]=n}if(a){const e=g;g=ww({inputs:{x:g},backend:n,attrs:{shape:yl(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const nI={kernelName:hr,backendName:"cpu",kernelFunc:tI},rI={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:l}=dh(s,i.length);fh(a.length,l,i);const{path:u,steps:c}=gh(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=ph(p,l[t]);let s;mh(e)?s=i[t]:(s=Fw({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);Z(s.shape,a)||(s=ww({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=Qk({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=tI({inputs:{x:d},backend:n,attrs:{axis:u[e]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},sI={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;Mv([r,s],"eluGrad");const i=new Float32Array(J(s.shape)),a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<a.length;++e){const t=a[e];i[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",i)}},iI=Xv((e,t)=>e===t?1:0),aI=gw(Dt,iI,null,"bool"),oI={kernelName:Dt,backendName:"cpu",kernelFunc:aI},lI=qc,uI=Xc,cI=Yc,hI=Jc,dI=Zc,pI=Qc,fI=Wv(_t,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+lI*n);return t*(1-((((pI*r+dI)*r+hI)*r+cI)*r+uI)*r*Math.exp(-n*n))}),gI={kernelName:_t,backendName:"cpu",kernelFunc:fI},mI=Bv(e=>Math.exp(e)),yI=Uv(Ft,mI,"float32"),bI={kernelName:Ft,backendName:"cpu",kernelFunc:yI};function xI(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(q(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+i+1),o.splice(l,0,1),ww({inputs:{x:s},backend:n,attrs:{shape:o}})}const vI={kernelName:Ot,backendName:"cpu",kernelFunc:xI},wI=Bv(e=>Math.expm1(e)),kI=Uv(Lt,wI),II={kernelName:Lt,backendName:"cpu",kernelFunc:kI},SI=Xv((e,t)=>e/t),TI=gw(Ct,SI),EI={kernelName:Ct,backendName:"cpu",kernelFunc:TI},NI=Xv((e,t)=>e-t),CI=mw((e,t,n,r)=>({real:e-n,imag:t-r})),$I=gw(Nr,NI,CI),RI={kernelName:Nr,backendName:"cpu",kernelFunc:$I};function AI(e,t,n){const r=e.shape,s=r[0],i=r[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],c=J(u),h=ae("float32",c),d=ae("float32",c);for(let e=0;e<s;e++){const r=ak({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=ak({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,i]}}),a=ow({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=_I(a,t,n),p=eh(u,c);for(let t=0;t<i;t++){const n=sh(p,t);h[e*i+t]=n.real,d[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=ow({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function _I(e,t,n){const r=J(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if((o=r)&o-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,a=0;for(let r=0;r<t;r++){const o=oh(s*r,t,n),l=sh(e,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=t,a/=t),ih(r,i,a,s)}return r}(eh(i,a),r,t);return th(e)}{const s=DI(i,a,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",fs(r,"float32")),a=Hv({inputs:{x:i},backend:n}),l=EI.kernelFunc({inputs:{a:e,b:i},backend:n}),u=EI.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}var o}function DI(e,t,n,r,s){if(1===n)return{real:e,imag:t};const i=eh(e,t),a=n/2,o=nh(i),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=ow({inputs:{real:h,imag:d},backend:s}),f=rh(i),g=f.real,m=f.imag,y=[g.length],b=s.makeTensorInfo(y,"float32",g),x=s.makeTensorInfo(y,"float32",m),v=ow({inputs:{real:b,imag:x},backend:s}),w=DI(l,u,a,r,s),k=w.real,I=w.imag,S=[k.length],T=s.makeTensorInfo(S,"float32",k),E=s.makeTensorInfo(S,"float32",I),N=ow({inputs:{real:T,imag:E},backend:s}),C=DI(g,m,a,r,s),$=C.real,R=C.imag,A=[$.length],_=s.makeTensorInfo(A,"float32",$),D=s.makeTensorInfo(A,"float32",R),F=ow({inputs:{real:_,imag:D},backend:s}),O=ah(n,r),L=[O.real.length],M=s.makeTensorInfo(L,"float32",O.real),P=s.makeTensorInfo(L,"float32",O.imag),z=ow({inputs:{real:M,imag:P},backend:s}),B=Qk({inputs:{a:z,b:F},backend:s}),W=xw({inputs:{a:N,b:B},backend:s}),U=$I({inputs:{a:N,b:B},backend:s}),G=cw({inputs:{input:W},backend:s}),V=cw({inputs:{input:U},backend:s}),H=kk({inputs:{input:W},backend:s}),j=kk({inputs:{input:U},backend:s}),K=Sk({inputs:[G,V],backend:s,attrs:{axis:0}}),q=Sk({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(K.dataId).values,Y=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}const FI={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=J(r.shape),i=r.shape[r.shape.length-1],a=ww({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=AI(a,!1,n),l=ww({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function OI(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:i}=n,a=i||de(s),o=oe(a,J(r));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(r,a,o)}const LI={kernelName:Pt,backendName:"cpu",kernelFunc:OI},MI={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,i=ae(r.dtype,J(r.shape)),[a,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<a;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let s=0;s<u;s++){const a=Math.round(l-e-1),o=t+n+r+s;let h=c[o];a>=0&&a<l&&(h=c[t+n+a*u+s]),i[o]=h}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},PI=Bv(e=>Math.floor(e)),zI=Uv(Bt,PI),BI={kernelName:Bt,backendName:"cpu",kernelFunc:zI},WI=Xv((e,t)=>Math.floor(e/t)),UI=gw(Wt,WI,null,"int32"),GI={kernelName:Wt,backendName:"cpu",kernelFunc:UI},VI={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Ek({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const e=ww({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});g=xw({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=xw({inputs:{a:g,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=ww({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=aw(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=aw(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}},HI={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Uk({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;g=xw({inputs:{a:g,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=aw(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}};function jI(e,t,n,r,s,i,a,o,l){const u=na([r,i],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const i=e[n*s+t];c+=i*a[t],r.push(i)}if(c<0||c>=l/i)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<i;e++)u.values[n*i+e]=t.get(...t.indexToLoc(c*i+e))}return u}const KI={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=J(r.shape),a=s.shape,o=a[a.length-1],[l,u,c,h]=Uc(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=jI(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,i);return n.makeTensorInfo(l,r.dtype,d.values)}};function qI(e,t,n){const r=na(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),i=s[0],a=s[2],o=t.locToIndex([i,a]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const XI={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r;Mv([s,i],"gatherV2");const l=se(a,s.shape)[0],u=n.data.get(i.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];q(t<=c-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}let h=o;null==o&&(h=0);const d=J(i.shape),p=Dh(s,i,l,h),f=ww({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=ww({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(g),b=qI(n.bufferSync(f),y,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},YI=Xv((e,t)=>e>t?1:0),JI=gw(Ht,YI,null,"bool"),ZI={kernelName:Ht,backendName:"cpu",kernelFunc:JI},QI=Xv((e,t)=>e>=t?1:0),eS=gw(jt,QI,null,"bool"),tS={kernelName:jt,backendName:"cpu",kernelFunc:eS},nS={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=J(r.shape),i=r.shape[r.shape.length-1],a=ww({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=AI(a,!0,n),l=ww({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},rS=Wv(Yt,e=>Number.isFinite(e)?1:0,"bool"),sS={kernelName:Yt,backendName:"cpu",kernelFunc:rS},iS=Wv(Jt,e=>Math.abs(e)===1/0?1:0,"bool"),aS={kernelName:Jt,backendName:"cpu",kernelFunc:iS},oS=Wv(Zt,e=>Number.isNaN(e)?1:0,"bool"),lS={kernelName:Zt,backendName:"cpu",kernelFunc:oS},uS=Xv((e,t)=>e<t?1:0),cS=gw(en,uS,null,"bool"),hS={kernelName:en,backendName:"cpu",kernelFunc:cS},dS=Xv((e,t)=>e<=t?1:0),pS=gw(tn,dS,null,"bool"),fS={kernelName:tn,backendName:"cpu",kernelFunc:pS};function gS(e,t,n){const r=(t-e)/(n-1),s=xe(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const mS={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=gS(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}},yS=Bv(e=>Math.log(e)),bS=Uv(rn,yS),xS={kernelName:rn,backendName:"cpu",kernelFunc:bS},vS=Wv(sn,e=>Math.log1p(e)),wS={kernelName:sn,backendName:"cpu",kernelFunc:vS},kS=Xv((e,t)=>e&&t),IS=gw(an,kS,null,"bool"),SS={kernelName:an,backendName:"cpu",kernelFunc:IS},TS=Wv(on,e=>e?0:1,"bool"),ES={kernelName:on,backendName:"cpu",kernelFunc:TS},NS=Xv((e,t)=>e||t),CS=gw(ln,NS,null,"bool"),$S={kernelName:ln,backendName:"cpu",kernelFunc:CS},RS={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=r;Mv(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=J(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(a+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},AS={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;Mv(a,"LRNGrad");const h=J(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,m=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*g[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],m[t]+=n}}return n.makeTensorInfo(a.shape,s.dtype,m)}};function _S(e,t,n,r){const s=ae(r,J(n));for(let n=0;n<s.length;++n){const r=n*t;let i=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>i)&&(i=t)}s[n]=i}return s}function DS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=n;let l=s.shape;const u=l.length,c=se(i,l);let h=c;const d=xl(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=Dw(p,l,s.dtype,d,e),h=wl(h.length,u),l=e}Mv(s,"max"),bl("max",h,u);const[f,g]=ml(l,h),m=_S(p,J(g),f,s.dtype),y=o.write(m,f,s.dtype);let b=f;return a&&(b=yl(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const FS={kernelName:hn,backendName:"cpu",kernelFunc:DS},OS=Xv((e,t)=>Math.max(e,t)),LS=gw(dn,OS),MS={kernelName:dn,backendName:"cpu",kernelFunc:LS},PS={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Mv(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;q(So(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=fo(s.shape,i,a,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Z(u.inShape,u.outShape))c=Hv({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=ge(s.shape),r=Jw(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},zS={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;Mv(s,"maxPool3d");const c=go(s.shape,i,a,1,o,l,u),h=Qw(n.data.get(s.dataId).values,s.shape,s.dtype,ge(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},BS={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;Mv([s,i],"maxPool3DGrad");const c=go(i.shape,a,o,1,l,u),h=function(e,t){const n=na(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,i=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=a;const v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*i-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,T=-1;for(let t=x;t<v;t+=a){const n=t-b;for(let r=d;r<w;r+=o){const s=r-u;for(let i=k;i<I;i+=l){const a=i-p,o=e.get(g,t,r,i,m);o>=S&&(S=o,T=n*c*h+s*c+a)}}}n.set(T,g,y,r,s,m)}}}return n}(n.bufferSync(i),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,m=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,S=na(i.shape,"float32"),T=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const i=n-w,a=r-I,o=s-k;let l=0;for(let n=0;n<b;n+=g){const r=(i+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=m){const i=(a+s)/p;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let a=0;a<v;a+=y){const u=(o+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=b*x*v-1-h.get(e,r,i,u,t)===n*x*v+s*v+a?1:0;0!==d&&(l+=T.get(e,r,i,u,t)*d)}}}S.set(l,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},WS={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;Mv([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=fo(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=na(d.outShape,o.dtype,Zw(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=na(o.shape,"float32"),S=n.data.get(s.dataId).values,T=na(s.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,i=r-w;let a=0;for(let n=0;n<x;n+=y){const r=(s+n)/g;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const o=(i+s)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;0!==l&&(a+=T.get(e,r,o,t)*l)}}I.set(a,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},US={kernelName:yn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;Mv(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=fo(r.shape,s,i,[1,1],a),[h,d]=function(e,t,n,r,s){const i=Jw(e,0,n,ge(t),s,"max"),a=Zw(e,t,n,s,!0,r);return[i.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},GS={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=se(i,s.shape),l=J(ml(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=pw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=TI({inputs:{a:h,b:c},backend:n});u.push(d);const p=tI({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:a}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},VS={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;Mv(s,"min");const o=se(i,s.shape);let l=o;const u=xl(l,s.shape.length);let c=s;null!=u&&(c=Fw({inputs:{x:s},backend:n,attrs:{perm:u}}),l=wl(l.length,s.shape.length)),bl("min",l,c.shape.length);const[h,d]=ml(c.shape,l),p=J(d),f=xe(J(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=ww({inputs:{x:m},backend:n,attrs:{shape:yl(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},HS=Xv((e,t)=>Math.min(e,t)),jS=gw(vn,HS),KS={kernelName:vn,backendName:"cpu",kernelFunc:jS},qS={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,mode:a}=r;Mv(s,"mirrorPad");const o=i.map((e,t)=>e[0]+s.shape[t]+e[1]),l=i.map(e=>e[0]),u=i.map((e,t)=>e[0]+s.shape[t]),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=ge(s.shape),f=J(o),g=o.length,m=ge(o),y=ae(s.dtype,f);for(let e=0;e<f;e++){let t=Ie(e,g,m);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map((e,t)=>e-l[t]);const n=ke(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},XS=Xv((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),YS=gw(kn,XS),JS={kernelName:kn,backendName:"cpu",kernelFunc:YS};function ZS(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=s.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=se([o],s.shape),u=DS({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=yl(u.shape,l),h=ww({inputs:{x:u},backend:n,attrs:{shape:c}}),d=$I({inputs:{a:s,b:h},backend:n}),p=yI({inputs:{x:d},backend:n}),f=tI({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=ww({inputs:{x:f},backend:n,attrs:{shape:c}}),m=TI({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const QS={kernelName:fr,backendName:"cpu",kernelFunc:ZS},eT={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r;Mv(s,"multinomial");const l=o?s:ZS({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],p=xe(J(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=y.alea(a.toString()),s=e*i;for(let e=0;e<i;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function tT(e,t,n){const r=fs(-1,n);return Jk([],t,r,e,n)}const nT={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Mv(r,"neg");const s=n.data.get(r.dataId).values,[i,a]=tT(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}},rT=Wu,sT={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;Mv(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=rT(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},iT=Uu,aT={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Mv(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=iT(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},oT=Gu,lT={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Mv(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:y}=oT(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},uT=Xv((e,t)=>e!==t?1:0),cT=gw(En,uT,null,"bool"),hT={kernelName:En,backendName:"cpu",kernelFunc:cT},dT={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:l}=r;Mv(s,"oneHot");const u=J(s.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(s.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<a&&(c[e*a+h[e]]=o);return n.makeTensorInfo([...s.shape,a],i,c)}};function pT(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=cw({inputs:{input:r},backend:n}),t=pT({inputs:{x:e},backend:n}),s=kk({inputs:{input:r},backend:n}),i=pT({inputs:{x:s},backend:n}),a=ow({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return OI({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const fT={kernelName:Mr,backendName:"cpu",kernelFunc:pT},gT={kernelName:Rn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=cw({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),i=kk({inputs:{input:s},backend:r}),a=pT({inputs:{x:i},backend:r}),o=ow({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return OI({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function mT(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return xI({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach(e=>{X(i,e.shape,"All tensors passed to stack must have matching shapes"),q(a===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=Sk({inputs:t.map(e=>{const t=xI({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}const yT={kernelName:_n,backendName:"cpu",kernelFunc:mT},bT={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;Mv(s,"pad");const o=i.map((e,t)=>e[0]+s.shape[t]+e[1]),l=i.map(e=>e[0]),u=n.data.get(s.dataId).values,c=J(s.shape),h=s.shape.length,d=ge(s.shape),p=J(o),f=o.length,g=ge(o),m=ae(s.dtype,p);0!==a&&m.fill(a);for(let e=0;e<c;e++)m[ke(Ie(e,h,d).map((e,t)=>e+l[t]),f,g)]=u[e];return{dataId:n.write(m,o,s.dtype),shape:o,dtype:s.dtype}}},xT=Xv((e,t)=>Math.pow(e,t)),vT=gw(Fn,xT),wT={kernelName:Fn,backendName:"cpu",kernelFunc:vT};function kT(e,t,n,r){const[s,i]=ml(e,r),a=Us(t,"int32"),o=xe(J(s),a),l=J(i);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:a}}const IT={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;Mv(s,"prod");const o=s.shape.length,l=se(i,s.shape),u=xl(l,o);let c=l,h=s;const d=[];null!=u&&(h=Fw({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=wl(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=kT(h.shape,h.dtype,p,c);let y=g;return a&&(y=yl(g,l)),d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,m,f)}};function ST(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function TT(e,t,n,r,s,i,a,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach((e,r)=>{if(e<0||e>=n){const s=Ie(r,t.length,ge(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}})}(i,a,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let i=0;const a=t.length-1+n.length,o=new Array(a).fill(null).map(()=>[0]);!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let a=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[a];for(let e=a;e<l;++e)o[s].push(r[e+1]+t)}a=r[a],l=r[l]}l!==a&&(s.push([a,l]),i+=l-a)}return{outSplits:o,valueSlices:s,numValues:i}}(i,a,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=oe("int32",e[n].length);t.push(r),e[n].forEach((e,t)=>r[t]=e)}return t}(u),p=function(e,t,n,r,s){const i=t.slice();i[0]=s;const a=oe(n,J(i)),o=e.length;return function(e,t,n,r,s,i){const a=ST(t,2)[1],o=ST(i,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[l*o+t]=e[n*a+t];++l}}(e,t,r,0===o?0:o/t[0],a,i),[a,i]}(n,r,s,c,h);return[d,p[0],p[1]]}const ET={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,l=s.map(e=>n.data.get(e.dataId).values),u=s.map(e=>e.shape),c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=TT(l,u,c,i.shape,i.dtype,h,a.shape),g=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}},NT=2147483647;function CT(e,t,n,r,s,i,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===a.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(a[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=oe("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=l?r[0]:r[t],a=u?i[0]:i[t];if(0===a)throw new Error("Requires delta != 0");let c;if(a>0&&s<n||a<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/a)),c>NT)throw new Error(`Requires ((limit - start) / delta) <= ${NT}`);d[t+1]=d[t]+c}const p=oe(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const s=u?i[0]:i[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[d,p]}const $T={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=CT(a,r.shape,r.dtype,o,s.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};var RT=$c;class AT{constructor(e,t,n,r,s,i,a,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Ac(u),this.raggedRank=_c(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===RT.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===RT.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case RT.VALUE_ROWIDS:return AT.getMaxWidthValueRowID(t);case RT.ROW_SPLITS:return AT.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${RT[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let i=1;i<t;++i){const t=e[i];t!==r&&(r=t,s=Math.max(i-n,s),n=i)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return DT(e,n)}calculateOutputSize(e){const t=this.valuesShape;Dc(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Rc(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let i=0;for(let e=0;e<r;++e,i+=t)s.push(i);for(let t=r;t<e;++t)s.push(-1);return q(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,i=[];for(let a=0;a<s-1;++a){const s=e[a+1]-e[a];let o=Math.min(r,s),l=t[a];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<s-o;++e)i.push(-1)}if(s>0&&i.length!==e[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,i=[];if(0===s)return[];let a=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++a,a<r?l+=n:l=-1);else{if(a=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case RT.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case RT.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${RT[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case RT.FIRST_DIM_SIZE:return e[0];case RT.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case RT.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${RT[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=DT(t,!1),s=oe(this.valuesDType,J(r));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)i=this.calculateOutputIndex(e-1,i,n[e],t[e]);this.setOutput(this.raggedRank,i,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,i=n;let a=r.slice();a=a.slice(e+1);const o=J(a),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;bi(()=>{const t=Co(u,e),n=Oo(t,a);u=n.dataSync()})}let c=0,h=0,d=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*o);_T(i.subarray(h*o),e,(d-h)*o)}if(e>=l){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)i.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)_T(i.slice(d*o),u,o),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function _T(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function DT(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function FT(e,t,n,r,s,i,a,o,l,u){return new AT(e,t,n,r,s,i,a,o,l,u).compute()}const OT={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,d=o.map(e=>n.data.get(e.dataId).values),p=o.map(e=>e.shape),[f,g]=FT(u,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}};function LT(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return xe(0,r);const s=xe(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const MT={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:i,step:a}=n,o=LT(r,s,a,i);return t.makeTensorInfo([o.length],i,o)}},PT=Wv(Un,e=>1/e),zT={kernelName:Un,backendName:"cpu",kernelFunc:PT},BT={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;Mv(s,"resizeBilinear");const l=ge(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(J([h,u,c,f])),y=[i&&u>1?d-1:d,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=a?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),s=n-r,i=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+i*l[1];for(let e=0;e<c;e++){let t;t=a?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+i*l[2],y=u+i*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],i=t+(g[d+e]-t)*r,a=i+(n+(g[y+e]-n)*r-i)*s;m[x++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}},WT={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;Mv([i,s],"resizeBilinearGrad");const o=ge(s.shape),[l,u,c,h]=s.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),g=[a&&d>1?u-1:u,a&&p>1?c-1:c],m=[a&&d>1?d-1:d,a&&p>1?p-1:p],y=g[0]/m[0],b=g[1]/m[1],x=n.data.get(i.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),i=t+r*o[1],a=t+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=i+n*o[2],g=i+r*o[2],m=a+n*o[2],y=a+r*o[2],w=d*u,k=d*s,I=l*u,S=l*s;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},UT={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;Mv(s,"resizeNearestNeighbor");const l=ge(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*u*c*f),y=[i&&u>1?d-1:d,i&&c>1?p-1:p],b=[i&&u>1?u-1:u,i&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=a?x*(e+.5):x*e;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=a?v*(e+.5):v*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=g[r+e];m[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,m)}},GT={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;Mv([i,s],"resizeNearestNeighborGrad");const o=ge(s.shape),l=ge(i.shape),[u,c,h,d]=s.shape,[,p,f]=i.shape,g=new Float32Array(u*c*h*d),m=n.data.get(i.dataId).values,y=[a&&p>1?c-1:c,a&&f>1?h-1:h],b=[a&&p>1?p-1:p,a&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const i=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const u=i+s;if(u<0||u>=p)continue;const d=t+u*l[1],g=u*x;if(e===Math.min(c-1,a?Math.round(g):Math.floor(g)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const s=d+t*l[2],i=t*v;r===Math.min(h-1,a?Math.round(i):Math.floor(i))&&(o+=m[s+n])}}g[i+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},VT={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r;Mv(s,"reverse");const a=s.shape.length,o=se(i,s.shape);if(0===a)return Hv({inputs:{x:s},backend:n});const l=new $s(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=s.shape[e]-1-n[e]),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},HT={kernelName:zr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,l=ae(r.dtype,J(r.shape)),[u,c,h,d]=r.shape,[p,f]=Lc(a,c,h),g=Math.sin(s),m=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const o=[u,e,r,a],b=o[2],x=o[1];let v=(b-p)*m-(x-f)*g,w=(b-p)*g+(x-f)*m;v=Math.round(v+p),w=Math.round(w+f);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),v>=0&&v<h&&w>=0&&w<c&&(k=y[t+w*(h*d)+v*d+a]),l[t+n+s+a]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},jT=Wv(Jn,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),KT={kernelName:Jn,backendName:"cpu",kernelFunc:jT},qT=Bv(e=>1/Math.sqrt(e)),XT=Uv(Zn,qT),YT={kernelName:Zn,backendName:"cpu",kernelFunc:XT};function JT(e,t,n,r,s,i,a,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return na(n,t.dtype);const p=l instanceof $s?l:na(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<i;e++){const i=[];let l=0;for(let t=0;t<a;t++){const n=h[e*a+t];i.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const ZT={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Hc(0,s,a),d=JT(n.bufferSync(s),n.bufferSync(i),a,h,u,l,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}};function QT(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function eE(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const tE={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=function(e,t,n,r,s,i){const a=oe("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)a[l+e]="left"===i?QT(n,t[e+l]):eE(n,t[e+l])}return a}(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",o)}},nE={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t;Mv([r,s,i],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=Us(s.dtype,i.dtype),h=xe(J(s.shape),c);let d=0;const p=0===a||a>1||1===s.shape.length?1:J(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},rE=jc,sE=Kc,iE=Wv(rr,e=>e>=0?sE*e:rE*(Math.exp(e)-1)),aE={kernelName:rr,backendName:"cpu",kernelFunc:iE},oE=Wv(or,e=>e<0?-1:e>0?1:0),lE={kernelName:or,backendName:"cpu",kernelFunc:oE},uE=Wv(ir,e=>Math.sin(e)),cE={kernelName:ir,backendName:"cpu",kernelFunc:uE},hE=Wv(ar,e=>Math.sinh(e)),dE={kernelName:ar,backendName:"cpu",kernelFunc:hE},pE=Math.log(1.1920928955078125e-7)+2,fE=Wv(ur,e=>{const t=e>-pE,n=e<pE,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s}),gE={kernelName:ur,backendName:"cpu",kernelFunc:fE},mE={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;Mv([s],"spaceToBatchND");const o=J(i),l=[[0,0]];l.push(...a);for(let e=1+i.length;e<s.shape.length;++e)l.push([0,0]);const u=bT.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Mc(u.shape,i,o,!1),h=Pc(c.length,i.length,!1),d=zc(u.shape,i,o,!1),p=ww({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Fw({inputs:{x:p},backend:n,attrs:{perm:h}}),g=ww({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};function yE(e,t,n,r,s,i,a){const o=t[0],l=i[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(xh(o));return[oe(n,0),[0,h],oe(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(vh(t,n));if(n>=l)throw new Error(wh(t,n,l));++f[n],d=d&&n>=p,p=n}let g=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,g=g&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],i=oe(n,t*h),d=oe(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],a=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)i[a*h+n]=e[t*h+n];d[a]=r[t],c[t]=a}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=a}return[i,[t,h],d,u,c]}}const bE={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,g]=yE(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}};function xE(e,t,n,r,s){const i=J(r),a=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(kh(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Ih(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/u);if(u*e!==i)throw new Error(Th(r,l));l[c]=e}if(J(l)!==i)throw new Error(Eh(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=oe(n,a*o);for(let t=0;t<a;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[a,o],l]}const vE={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,c,h]=xE(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};function wE(e,t,n,r,s,i=!1,a=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=oe(n,h.reduce((e,t)=>e*t,1));if(0===o)return c>0&&d.fill(a),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,g=0,m=s[p];for(;;){let t=0;if(f<o){if(t=s[f],m===t){++f;continue}if(m>=t)throw new Error(Ch())}if(m<0||m>=c)throw new Error($h(m,c));m>g&&d.fill(a,g*u,m*u);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(Rh(t,r[t],l[0]));for(let t=0;t<u;t++)d[m*u+t]+=e[n*u+t]}if(i)for(let e=0;e<u;e++)d[m*u+e]/=f-p;if(p=f,++f,g=m+1,m=t,f>o)break}return g<c&&d.fill(a,g*u,c*u),[d,h]}const kE={kernelName:yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=wE(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},IE={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=wE(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},SE={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Hc(0,s,o),p=!1,f=n.bufferSync(s);let g;switch(i.dtype){case"bool":g=JT(f,n.bufferSync(i),o,d,c,u,l,h,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":case"int32":g=JT(f,n.bufferSync(i),o,d,c,u,l,h,n.data.get(a.dataId).values[0],p);break;case"string":g=JT(f,n.bufferSync(i),o,d,c,u,l,h,bs(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}},TE={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=se(a,s.shape)[0],l=bh(s,i,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map(e=>{const t=[...c];t[o]=e;const r=ak({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r})}},EE=Bv(e=>Math.sqrt(e)),NE=Wv(cr,e=>Math.sqrt(e)),CE={kernelName:cr,backendName:"cpu",kernelFunc:NE},$E={kernelName:wr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Mv(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];i[e]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},RE=Xv((e,t)=>{const n=e-t;return n*n}),AE=gw(vr,RE),_E={kernelName:vr,backendName:"cpu",kernelFunc:AE},DE=Bv((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)}),FE={kernelName:kr,backendName:"cpu",kernelFunc:Uv(kr,DE)},OE=Wv(Pr,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),LE={kernelName:Pr,backendName:"cpu",kernelFunc:OE};function ME(e,t,n,r){const s=na(e,t.dtype);for(let e=0;e<s.size;e++){const i=s.indexToLoc(e),a=new Array(i.length);for(let e=0;e<a.length;e++)a[e]=i[e]*n[e]+r[e];s.set(t.get(...a),...i)}return s}const PE={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;Mv(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:b,end:x,strides:v}=oo(s.shape,i,a,o,l,u,c,h,d);let w;if(g)w=ww({inputs:{x:s},backend:n,attrs:{shape:f}});else if(m||y){q(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const e=qa(b,x,v),t=ak({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=ww({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=ME(p,n.bufferSync(s),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class zE{constructor(e,t,n,r,s,i){this.separator=ys(e),this.nGramWidths=t,this.leftPad=ys(n),this.rightPad=ys(r),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,i){for(let a=0;a<s;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(s-(a+1))),c=i-(l+u),h=t+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const g=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[h+t]),g(this.separator);if(c>0){g(e[h+c-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,i=oe("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach(e=>{r+=this.getNumNGrams(n,e)}),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const a=new Array(i[s]);for(let n=0;n<s;++n){const r=t[n];let s=i[n];if(this.nGramWidths.forEach(i=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,i);this.createNGrams(e,r,a,s,l,i),s+=l}),this.preserveShort&&s===i[n]){const i=t[n+1]-t[n];if(0===i)continue;const o=i+2*this.padWidth,l=1;this.createNGrams(e,r,a,s,l,o)}}return[a,i]}}function BE(e,t,n,r,s,i,a,o){return new zE(n,r,s,i,a,o).compute(e,t)}const WE={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=BE(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};function UE(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let i=e.indexOf(s);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||r.push(t),i=(e=e.subarray(i+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(s,i);n&&0===t.length||r.push(t),s=i+1}}function GE(e,t,n){const r=e.length,s=[];let i=0,a=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;UE(e[l],t,n,s);const u=s.length-r;o[l]=u,i+=u,a=Math.max(a,u)}const l=oe("int32",2*i),u=new Array(i),c=[r,a];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=s[h],++h;return[l,u,c]}const VE={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=GE(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function HE(e,t){const n=oe("int32",e.length);for(let r=0;r<e.length;++r)n[r]=ps(e[r]).modulo(t).getLowBitsUnsigned();return n}const jE={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=HE(n.data.get(i.dataId).values,s);return n.makeTensorInfo(i.shape,"int32",a)}},KE=Wv(Cr,e=>Math.tan(e)),qE={kernelName:Cr,backendName:"cpu",kernelFunc:KE},XE=Wv($r,e=>Math.tanh(e)),YE={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:i}=t,{sliceRank:a,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=Hc(0,s,r.shape),h=n.bufferSync(s),d=n.bufferSync(i),p=n.bufferSync(r),f=JT(h,d,r.shape,c,l,o,a,u,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};function JE(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=na(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const i=e.locToIndex(s);r.values[t]=e.values[i]}return r}const ZE={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;Mv(s,"tile");const a=JE(n.bufferSync(s),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},QE=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function eN(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,i=t-n+1,a=Math.log(s),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(s-o)/s)*Math.sign(i-s/2);eN(e,t,Math.max(n,Math.floor(t-i*o/s+l)),Math.min(r,Math.floor(t+(s-i)*o/s+l)))}const s=e[t];let i=n,a=r;for(K(e,n,t),QE(e[r],s)>0&&K(e,n,r);i<a;){for(K(e,i,a),i++,a--;QE(e[i],s)<0;)i+=1;for(;QE(e[a],s)>0;)a-=1}0===QE(e[n],s)?K(e,n,a):(a+=1,K(e,a,r)),a<=t&&(n=a+1),t<=a&&(r=a-1)}}function tN(e,t,n,r,s){const i=t[t.length-1],[a,o]=[e.length/i,i],l=ae(n,a*r),u=ae("int32",a*r);for(let t=0;t<a;t++){const n=t*o,i=e.subarray(n,n+o);let a=new Array(i.length);i.forEach((e,t)=>a[t]={value:e,index:t}),r<a.length&&(eN(a,r),a=a.slice(0,r)),s&&a.sort(QE);const c=t*r,h=l.subarray(c,c+r),d=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=a[e].value,d[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[na(c,n,l),na(c,"int32",u)]}const nN={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r;Mv(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=tN(o,s.shape,s.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},rN={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],y=ge(s.shape),b=y[0],x=y[1],v=y[2],w=ge(m),k=w[0],I=w[1],S=w[2],T=ae(s.dtype,J(m));T.fill(l);const E=r.data.get(s.dataId).values,N=r.data.get(i.dataId).values;for(let e=0;e<c;++e){const t=1===i.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<g;++r)for(let s=0;s<p;++s){let i;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,f=sN(c,d,o),g=sN(p,h,o);switch(a){case"nearest":i=aN(E,h,d,b,x,v,e,g,f,s,l);break;case"bilinear":i=oN(E,h,d,b,x,v,e,g,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}T[e*k+n*I+r*S+s]=i}return r.makeTensorInfo(m,s.dtype,T)}return{dataId:r.write(T,m,s.dtype),shape:s.shape,dtype:s.dtype}}};function sN(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return H(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return H(0,n,t-1)}(e,t);case"nearest":return function(e,t){return H(0,e,t-1)}(e,t);default:return e}}function iN(e,t,n,r,s,i,a,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[a*r+o*s+l*i+u]:c}function aN(e,t,n,r,s,i,a,o,l,u,c){return iN(e,t,n,r,s,i,a,Math.round(o),Math.round(l),u,c)}function oN(e,t,n,r,s,i,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*iN(e,t,n,r,s,i,a,h,d,u,c)+(l-d)*iN(e,t,n,r,s,i,a,h,f,u,c))+(o-h)*((f-l)*iN(e,t,n,r,s,i,a,p,d,u,c)+(l-d)*iN(e,t,n,r,s,i,a,p,f,u,c))}function lN(e,t,n,r){const s=se(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const a=new Map,o=new Int32Array(n[s]),l=new $s(i,r,e),u=[],c=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(l.get(n,t,r));n=e.join(",")}const r=a.get(n);if(null!=r)o[t]=r;else{const e=a.size;a.set(n,e),o[t]=e,u.push(t)}}const h=i.slice();h[1]=a.size;const d=new $s(h,r);u.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,e,r),n,t,r)});const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const uN={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;Mv(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=lN(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},cN={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],l=new Array(a-1);let u=0;for(let e=0;e<a;e++)e!==i&&(l[u++]=s.shape[e]);const c=new Array(a).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[i]=e;const t=ak({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=ww({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},hN={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r;Mv(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-i.shape.length;let c=i;for(let e=0;e<u;++e){const t=xI({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<a;++e){const t=fs(e,"int32"),r=n.makeTensorInfo([],"int32",t),i=aI({inputs:{a:r,b:c},backend:n}),a=pw({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=Qk({inputs:{a,b:s},backend:n}),h=tI({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(i),l.push(a),l.push(u),l.push(h)}const h=mT({inputs:o,backend:n,attrs:{axis:0}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},dN=[Tw,Nw,$w,Aw,vw,_w,Lw,Mw,Pw,zw,Ww,Gw,Hw,qw,Yw,ek,tk,nk,rk,Sw,sk,lk,hk,pk,fk,fw,yk,xk,lw,vk,Tk,Nk,Ck,$k,Rk,Ak,_k,Fk,Lk,Mk,Pk,zk,Bk,Wk,Gk,Vk,Hk,jk,Kk,qk,Xk,Yk,rI,Vv,sI,oI,gI,bI,vI,II,FI,LI,MI,BI,GI,VI,HI,KI,XI,ZI,tS,jv,nS,Ik,sS,aS,lS,qv,hS,fS,mS,xS,wS,SS,ES,$S,RS,AS,FS,MS,PS,zS,BS,WS,US,GS,VS,KS,qS,JS,eT,eI,nT,sT,aT,lT,hT,dT,gT,yT,bT,wT,Zv,IT,ET,$T,OT,MT,hw,EI,zT,ew,nw,kw,BT,WT,UT,GT,VT,HT,KT,YT,ZT,tE,nE,aE,iw,lE,cE,dE,ok,QS,gE,mE,bE,vE,kE,IE,SE,TE,CE,$E,_E,FE,LE,PE,WE,VE,jE,RI,nI,qE,{kernelName:$r,backendName:"cpu",kernelFunc:XE},YE,ZE,nN,rN,Ow,uN,cN,hN,fT];for(const e of dN)Yr(e);const pN={},fN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function gN(e,t){if(!(e in pN)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Ce().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete pN[e]},!1),Ce().getBool("SOFTWARE_WEBGL_ENABLED")&&(fN.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",fN)||n.getContext("experimental-webgl",fN):n.getContext("webgl2",fN)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;pN[e]=n}const n=pN[e];return null==n||n.isContextLost()?(delete pN[e],gN(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),pN[e])}var mN,yN,bN;function xN(e,t){return[t,e]}function vN(e){const t=J(e);return ee(Math.ceil(t/4))}function wN(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function kN(e,t){const n=e;let r,s,i,a,o,l,u,c,h,d;return 2===Ce().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,i=e.RGBA,a=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function IN(e,t){const n=t();return Ce().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function SN(e){return!!(Ce().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function TN(e,t){return FN(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(mN||(mN={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(yN||(yN={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(bN||(bN={}));const EN=/ERROR: [0-9]+:([0-9]+):/g;function NN(e,t){const n=EN.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),i=s.length.toString().length+2,a=s.map((e,t)=>te((t+1).toString(),i)+e);let o=0;for(let e=0;e<a.length;e++)o=Math.max(a[e].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${te(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function CN(e,t){if(IN(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function $N(e,t,n,r,s,i,a){const o=e.getAttribLocation(t,n);return-1!==o&&(IN(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),IN(e,()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,i,a)),IN(e,()=>e.enableVertexAttribArray(o)),!0)}function RN(e,t,n,r){IN(e,()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),IN(e,()=>e.activeTexture(e.TEXTURE0+n)),IN(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),IN(e,()=>e.uniform1i(n,r))}function AN(e,t,n){IN(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),IN(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function _N(e,t){IN(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),IN(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function DN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function FN(e,t,n){const r=IN(e,()=>t());if(null==r)throw new Error(n);return r}function ON(e,t=2){return J(e.slice(0,e.length-t))}function LN(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function MN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ON(e),...LN(e)]),t}function PN(e){return e%2==0}function zN(e,t){if(Z(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(PN(n)&&PN(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&PN(e[0])&&PN(t[0])}let BN,WN;function UN(e,t){return null!=e.getExtension(t)}function GN(e){try{if(null!=gN(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function VN(e){const t=kN(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function HN(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&q("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const jN=Ce();function KN(){let e,t,n,r,s,i,a,o,l,u;return 2===Ce().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o=Ce().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function qN(e,t,n="index"){const r=ge(t);return r.map((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`).join("")}function XN(e,t,n="index"){const r=ge(t);return r.map((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`).join("")}function YN(e){const t=ge(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}jN.registerFlag("HAS_WEBGL",()=>jN.getNumber("WEBGL_VERSION")>0),jN.registerFlag("WEBGL_VERSION",()=>GN(2)?2:GN(1)?1:0),jN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),jN.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===jN.get("WEBGL_VERSION")),jN.registerFlag("WEBGL_CPU_FORWARD",()=>!0),jN.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),jN.registerFlag("WEBGL_PACK",()=>jN.getBool("HAS_WEBGL")),jN.registerFlag("WEBGL_PACK_NORMALIZATION",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_PACK_CLIP",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_PACK_REDUCE",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_LAZILY_UNPACK",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_CONV_IM2COL",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>jN.getBool("WEBGL_PACK")),jN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==BN){const t=gN(e);BN=t.getParameter(t.MAX_TEXTURE_SIZE)}return BN}(jN.getNumber("WEBGL_VERSION"))),jN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==WN){const t=gN(e);WN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,WN)}(jN.getNumber("WEBGL_VERSION"))),jN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=jN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=gN(e);return t=UN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:UN(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),jN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>jN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ni()),jN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=gN(e);if(1===e){if(!UN(t,"OES_texture_float"))return!1}else if(!UN(t,"EXT_color_buffer_float"))return!1;return VN(t)}(jN.getNumber("WEBGL_VERSION"))),jN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!jN.getBool("WEBGL_FORCE_F16_TEXTURES")&&jN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),jN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=gN(e);if(1!==e){if(UN(t,"EXT_color_buffer_float"))return VN(t);const e="EXT_color_buffer_half_float";if(UN(t,e)){const n=t.getExtension(e);return function(e,t){const n=kN(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),i}(t,n)}return!1}return!!UN(t,"OES_texture_float")&&!!UN(t,"WEBGL_color_buffer_float")&&VN(t)}(jN.getNumber("WEBGL_VERSION"))),jN.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=jN.getNumber("WEBGL_VERSION"))&&null!=gN(e).fenceSync;var e}),jN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>jN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),jN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),jN.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ni()?1:-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),jN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),jN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),jN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),jN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),jN.registerFlag("WEBGL_EXP_CONV",()=>!1),jN.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>jN.getBool("IS_TEST")),jN.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),jN.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),jN.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),jN.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const JN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:ZN}=n;function QN(e,t,n){const r=[];if(e.forEach(e=>{const t=J(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=uC(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const s=r.join("\n"),i=e.map(e=>function(e,t,n=!1,r){let s="";s+=n?tC(e,r):eC(e,r);const i=e.shapeInfo.logicalShape,a=t.logicalShape;return i.length<=a.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=ZN(e.shapeInfo.logicalShape,t.logicalShape),l=lC(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${h[e+u]} = 0;`).join("\n");let d="";d=a<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${h[t+u]}`).join(", ");let p="return outputValue;";const f=1===J(e.shapeInfo.logicalShape),g=1===J(t.logicalShape);if(1!==i||f||g){if(f&&!g)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&Z(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=lC(l),c=ZN(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map(e=>`coords.${p[e+h]} = 0;`).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+h]}`).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),a=t.texShape,o=KN(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${nC}\n    ${rC}\n    ${sC}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Z(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),i=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),i=s*Math.ceil(e[e.length-2]/2);let a=i,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],o=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,a,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return Z(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${XN(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=qN(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${XN(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=qN(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=qN(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=qN(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,a,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=iC),[h,l,c,s,u,i,n.userCode].join("\n")}function eC(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=e.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=aC(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${oC(e)}\n      }\n    `;const s=e.shapeInfo.texShape,i=s[0],a=s[1];if(1===a&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=aC(n);return 1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&Z(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=ie(n),l=a;if(l.length<n.length){const n=["row","col"];return`\n      ${eC(cC(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${hC(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${oC(e)}\n      }\n    `;const u=i[0],c=i[1],h=aC(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=ie(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${eC(cC(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${hC(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${oC(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=aC(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=ie(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${eC(cC(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${hC(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${oC(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,m=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=aC(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:u}=ie(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${eC(cC(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${hC(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${oC(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${aC(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=ie(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${eC(cC(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${hC(t,i)});\n      }\n    `}const a=t[5],o=t[4]*a,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${oC(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${aC(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function tC(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${KN().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=KN();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=i[0],o=i[1],l=KN();if(null!=i&&Z(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${tC(cC(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${hC(i,r)});\n        }\n      `}const o=KN();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=KN();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,a=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<a-1;e++)p=`int b${e}, `+p,d*=i[a-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const nC="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",sC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function aC(e){return`offset${e}`}function oC(e){const t=e.name,n=J(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function lC(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function uC(e,t,n){const{newShape:r,keptDims:s}=ie(t),i=t.length,a=e&&3===i&&1===t[0],o=a?t.slice(1):r,l=!e&&i>1&&!Z(t,n)&&r.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function cC(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function hC(e,t){return t.map(t=>e[t]).join(", ")}function dC(e,t,n){const r=[],s=[];let i,a,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Ce().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const i={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(i.shape=e.getUniformLocation(n,`${s}Shape`,c),i.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(i)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),a=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:a}}function pC(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,s=t[n],i=s.shape;if(!Z(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const a=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!Z(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)})}function fC(e){return Ce().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class gC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=mN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=KN();this.outputShape=e,this.enableShapeUniforms=fC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?XN(["r","c","d"],e):qN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class mC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=mN.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=KN();this.outputShape=e,this.enableShapeUniforms=fC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?XN(["r","c","d"],e):qN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class yC{constructor(e){this.variableNames=["A"],this.outTexUsage=yN.DOWNLOAD;const t=KN();this.outputShape=e,this.userCode=`\n      ${JN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class bC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=yN.DOWNLOAD;const t=KN();this.outputShape=e,this.userCode=`\n      ${JN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const xC={R:0,G:1,B:2,A:3};class vC{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=KN();this.outputShape=e,this.enableShapeUniforms=fC(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let i="";for(let e=0;e<n.length;e++){const t=n[e];i+=`\n          if(offset == ${e}) {\n            result = values[${xC[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${i}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class wC{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=KN();this.outputShape=e,this.enableShapeUniforms=fC(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const i=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YN(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function kC(e,t,n,r,s,i){!function(e,t){const n=Ce().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const a=function(e){return FN(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return IN(e,()=>e.bindTexture(o,a)),IN(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),IN(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),IN(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),IN(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===Ce().getNumber("WEBGL_VERSION")?IN(e,()=>e.texImage2D(o,0,r,t,n,0,s,i,null)):IN(e,()=>e.texStorage2D(o,1,r,t,n)),IN(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:a,texShape:[n,t]}}function IC(e){return e.internalFormatFloat}function SC(e){return e.internalFormatHalfFloat}function TC(e){return e.downloadTextureFormat}function EC(e){return e.internalFormatPackedFloat}function NC(e){return e.internalFormatPackedHalfFloat}class CC{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Ce().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){pN[e]=t}(t,e)):this.gl=gN(t),e=this.gl,2===Ce().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>IN(t,()=>t.createVertexArray()),this.bindVertexArray=e=>IN(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>IN(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>IN(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>IN(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>IN(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>IN(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>IN(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ce().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=TN(this.gl,e),UN(this.gl,t))this.textureHalfFloatExtension=TN(this.gl,t);else if(Ce().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),UN(this.gl,r))this.colorBufferHalfFloatExtension=TN(this.gl,r);else if(Ce().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",UN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!UN(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=FN(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return IN(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),IN(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=FN(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return IN(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),IN(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return FN(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=kN(this.gl,this.textureHalfFloatExtension)}get debug(){return Ce().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;IN(e,()=>e.finish()),IN(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),IN(e,()=>e.deleteFramebuffer(this.framebuffer)),IN(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),IN(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),IN(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=xN(t,n);return kC(e,s,i,IC(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=xN(t,n);return kC(e,s,i,SC(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=xN(t,n);return kC(e,s,i,TC(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){IN(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===Ce().getNumber("WEBGL_VERSION")?IN(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):IN(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===Ce().getNumber("WEBGL_VERSION")?IN(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):IN(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),IN(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,i){let a,o,l;IN(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(a=new Float32Array(n*r*4),o=e.FLOAT,l=i.internalFormatPackedFloat),a.set(s),2===Ce().getNumber("WEBGL_VERSION")?IN(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,a)):IN(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,a)),IN(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=wN(t,n);return kC(e,s,i,NC(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=wN(t,n);return kC(e,s,i,EC(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(_N(this.gl,this.framebuffer),this.outputTexture=null),IN(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[s,i]=xN(t,n),a=new Uint8Array(t*n*4);return IN(e,()=>e.readPixels(0,0,s,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,i){return function(e,t,n,r,s,i,a){const o=e,l=new Float32Array(function(e,t){const[n,r]=wN(e,t);return n*r*4}(i,a));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,l),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();IN(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));const s=16*t*n;return IN(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),IN(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),IN(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ce().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return IN(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=KN();return function(e,t){const n=FN(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(IN(e,()=>e.shaderSource(n,t)),IN(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return FN(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);IN(t,()=>t.attachShader(n,this.vertexShader)),IN(t,()=>t.attachShader(n,e)),function(e,t){if(IN(e,()=>e.linkProgram(t)),!Ce().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&CN(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;IN(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function(e,t,n){IN(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),$N(e,t,"clipSpacePos",n,3,20,0)&&$N(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(IN(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&CN(this.gl,this.program),IN(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return FN(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),IN(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),RN(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=wN(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&CN(this.gl,this.program),DN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}IN(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),IN(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=TN(this.gl,2===Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ne(()=>this.disposed||this.isQueryAvailable(e,Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Ce().platform&&(n=Ce().platform.setTimeoutCustom.bind(Ce().platform)),ne(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),AN(this.gl,e,this.framebuffer),this.debug&&DN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AN(this.gl,this.outputTexture,this.framebuffer),this.debug&&DN(this.gl)):_N(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;AN(r,e,this.framebuffer),this.debug&&DN(r),this.outputTexture=e,IN(r,()=>r.viewport(0,0,t,n)),IN(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),IN(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:$C,XI:RC,Nk:AC,f6:_C,ct:DC,YG:FC,hH:OC,z3:LC,sG:MC,uM:PC,vS:zC,qB:BC,GG:WC,rq:UC,lg:GC,WR:VC,cu:HC,GE:jC,px:KC,jC:qC,He:XC,hE:YC,BF:JC,Dk:ZC,cl:QC,_B:e$,ub:t$,_f:n$,Ku:r$,qy:s$,Zy:i$,bu:a$,zv:o$,dH:l$,HS:u$,yH:c$,l3:h$,z9:d$,x6:p$,_m:f$,eW:g$,GK:m$,SP:y$,yr:b$,dl:x$,Dw:v$,xT:w$,_X:k$,wz:I$}=r;function S$(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function T$(e,t){return 1===t?[e]:S$(e,t)}class E${constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=fC(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=T$("rc",this.rank),t=lC(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class N${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=fC(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map(e=>`${t}[${e}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map((e,t)=>t),t);return r.map((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`).join("")}(["r","c","d"],"inputShape"):qN(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class C${constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=R$(t,n),s=A$(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=$$(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let a;return r===bN.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===bN.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===bN.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===bN.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===bN.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=R$(n,r),i=A$(t,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=$$(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Ce().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function $$(e,t,n,r,s){const i=function(e,t){switch(e){case bN.PACKED_2X2_FLOAT32:return EC(t);case bN.PACKED_2X2_FLOAT16:return NC(t);case bN.UNPACKED_FLOAT32:return IC(t);case bN.UNPACKED_FLOAT16:return SC(t);case bN.PACKED_4X1_UNSIGNED_BYTE:return TC(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let a;if(s){const[t,n]=wN(e[0],e[1]);a=t*n}else{const[t,n]=xN(e[0],e[1]);a=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return a*o}function R$(e,t){if(e===yN.UPLOAD)return bN.PACKED_2X2_FLOAT32;if(e===yN.RENDER||null==e)return function(e){return Ce().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?bN.PACKED_2X2_FLOAT32:bN.UNPACKED_FLOAT32:e?bN.PACKED_2X2_FLOAT16:bN.UNPACKED_FLOAT16}(t);if(e===yN.DOWNLOAD||e===yN.PIXELS)return bN.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function A$(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class _${constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=fC(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const D$="if (isnan(x)) return x;",F$="return abs(x);",O$=D$+"\n  return (x < 0.0) ? 0.0 : x;\n",L$=D$+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",M$="return x;";class P${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=fC(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class z${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=fC(this.outputShape.length);const t=e.length,n=T$("rc",t),r=lC(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const B$=Lh,W$={},U$=Ce().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class G$ extends U{nextDataId(){return G$.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ce().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof CC)t=e;else{const n=gN(Ce().getNumber("WEBGL_VERSION"),e);t=new CC(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=gN(Ce().getNumber("WEBGL_VERSION"));t=new CC(e),this.binaryCache=((n=Ce().getNumber("WEBGL_VERSION"))in W$||(W$[n]={}),W$[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new C$(this.gpgpu),this.numMBBeforeWarning=null==Ce().global.screen?1024:Ce().global.screen.height*Ce().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new W(this,mi())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,i){const a=this.makeTensorInfo(t,n),o=this.texData.get(a.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=MN(t),u=new vC(l,!1,i),c=this.runWebGLProgram(u,[a],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(a),c.dataId}write(e,t,n){if((Ce().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ce().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:yN.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(Ce().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:yN.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=t;if(null!=i){let t;t=o?new P$(a,M$):new _$(a,M$);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=ms()),c="complex64"===r?eh(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=ms()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=t;if(null!=s){let t;t=o?new P$(r,M$):new _$(r,M$);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ce().getBool("DEBUG")&&!Ce().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ce().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&Ce().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...vN(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=eh(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=J(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;IN(e,()=>e.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&mi().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:i,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new P$(s,M$):new _$(s,M$);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:a}],a),i=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),i}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=mi().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>bs(e));return na(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return na(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!SN(n)){if(Ce().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=J(t);if(Ce().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...vN(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=Ce().getBool("WEBGL_PACK")&&!0===r,a=i?MN(t):t,o=i?new bC(a):new yC(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=vs(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=vs(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);a.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),a.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ms(),endMs:null}}endTimer(e){return Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ms(),e)}async getQueryTime(e){if(Ce().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=U$){return Ce().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&J(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Gr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return B$(e.shape,t)}packedUnaryOp(e,t,n){const r=new P$(e.shape,t),s=this.compileAndRun(r,[e],n);return mi().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=l$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ce().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,F$,e.dtype);const t=new _$(e.shape,F$),n=this.compileAndRun(t,[e]);return mi().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ce(n[0])){const s=n.map(e=>ys(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return mi().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new z$(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new E$(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[ON(e.shape),...LN(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[ON(t),...LN(t)],i=new N$(s,n),a=[n],o=this.runWebGLProgram(i,[r],e.dtype,a,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:i}=n;null!=t&&q(J(s)<=t[0]*t[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const a=MN(s);let o;o=r?new mC(a):new gC(a);const l=[null!=t?t:vN(a)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:e}],i,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,i){const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===mN.DENSE){const t=null!=i?i:vN(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===J(a.shape))return o.values=ae(a.dtype,0),a;const l=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&J(t.shape)<=Ce().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!zN(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach(t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=uC(e.packedInputs,t.shape,i);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ge(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&Z(t.shape,i),f=1===J(t.shape),g=Na(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&Z(i,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${m}_${a?l:""}_${o.length}_${f}_${g}_${p}_${u}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}});const s=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+s+`${Ce().getNumber("WEBGL_VERSION")}`,i}(e,u,c),d=this.getAndSaveBinary(h,()=>function(e,t,n,r){const s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=s.map(e=>e.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=QN(s,a,t),l=function(e,t){const n=FN(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(IN(e,()=>e.shaderSource(n,t)),IN(e,()=>e.compileShader(n)),Ce().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw NN(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return Ce().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},dC(e,t,u)))}(this.gpgpu,e,u,c)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Ce().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(pC(t.inShapeInfos,n),pC([t.outShapeInfo],[r]));const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):e.setOutputMatrixTexture(i.texture,a[0],a[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Ce().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:i,offset:a,shape:o,texShape:l}=t.variablesLocations[r];if(o){const{uniformShape:n}=uC(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=i)if(s.isUniform)if(J(s.shape)<2)e.gl.uniform1f(i,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=s.texData.slice&&null!=a&&e.gl.uniform1i(a,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,i,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=ge(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],i=t.customUniformLocations[n],a=s[n];if("float"===r.type)e.gl.uniform1fv(i,a);else if("vec2"===r.type)e.gl.uniform2fv(i,a);else if("vec3"===r.type)e.gl.uniform3fv(i,a);else if("vec4"===r.type)e.gl.uniform4fv(i,a);else if("int"===r.type)e.gl.uniform1iv(i,a);else if("ivec2"===r.type)e.gl.uniform2iv(i,a);else if("ivec3"===r.type)e.gl.uniform3iv(i,a);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(i,a)}}e.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=Ce().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=ms();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ce().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ce().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=bi(()=>{if(!Ce().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ce().getBool("DEBUG");Ce().set("DEBUG",!1);const t=this.abs(pa(1e-8)).dataSync()[0];if(Ce().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=t;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=ms());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Ce().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Ce().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Ce().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map((t,n)=>n>=e.length-2?j(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=ie(e);e=t.newShape}let s=J(e),i=null;e.length<=1&&s<=n?i=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const a=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||a)if(t){const t=ON(e);let n=2,r=2;e.length&&([n,r]=LN(e)),s=t*(n/2)*(r/2),i=ee(s).map(e=>2*e)}else i=ee(s);return i}(n,o),t.texShape=c),null!=s){const e=MN(n);let i,a=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([a,h]=wN(c[0],c[1])),i=o?new wC(e,d):new vC(e,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,r),g=this.texData.get(f.dataId);g.usage=d?yN.PIXELS:yN.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,s);const m=[[h,a]],y=!0,b=this.runWebGLProgram(i,[f],r,m,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Ce().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=ms()-u)}else{const e=this.acquireTexture(c,a,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ue(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Ec(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw NN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:o}=dC(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:i,channels:a}=e,o=mi().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,i,a);return mi().makeTensorFromDataId(l,t,n,o)}}G$.nextDataId=0,ri()&&wi("webgl",()=>new G$,2);const V$="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class H${constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=$a(t,n),this.enableShapeUniforms=fC(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const j$="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class K${constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=$a(t,n);const s=this.outputShape.length;this.enableShapeUniforms=fC(s);let i="";if(r)if(0===s||1===J(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${lC(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=T$("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function q$(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const X$={kernelName:Kt,backendName:"webgl",kernelFunc:q$};function Y$(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=q$({inputs:{x:r},backend:n}),l=q$({inputs:{x:s},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const J$={kernelName:it,backendName:"webgl",kernelFunc:Y$},Z$="return (a < 0.) ? b * a : a;",Q$="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",eR={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,a=n.makeTensorInfo([],"float32",fs(i,"float32")),o=Ce().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new K$(Q$,s.shape,a.shape):new H$(Z$,s.shape,a.shape),l=n.runWebGLProgram(o,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),l}},tR="return (a < 0.) ? b * a : a;",nR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",rR={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=Ce().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new K$(nR,r.shape,s.shape):new H$(tR,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}},sR="if (isnan(x)) return x;";function iR({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.texData.get(a.dataId),t=n(e.values,l);return o.makeTensorInfo(a.shape,l,t)}let u;return u=Ce().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new P$(a.shape,t):new _$(a.shape,e),o.runWebGLProgram(u,[a],l)}}function aR({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new H$(e,l.shape,u.shape);return c.runWebGLProgram(a,[s,i],Us(n.dtype,r.dtype))}),i=Y$({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||Us(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Fh(e):e,r="string"===l.dtype?Fh(t):t,[i,a]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(a,h);return c.texData.get(o.dataId).values=i,o}let d;return d=Ce().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new K$(t,l.shape,u.shape,n):new H$(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function oR(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":O$;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":L$;if("prelu"===e)return t?nR:tR;if("leakyrelu"===e)return t?Q$:Z$;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class lR{constructor(e,t,n,r=!1,s=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=fC(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";a&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,m="result = activation(result);");const y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class uR{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=$a(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const cR="return a * b;";function hR(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=Us(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),i=new uR("return areal * breal - aimag * bimag;",r.shape,s.shape),a=new uR("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=Y$({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,o]=JC(r.shape,s.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=Ce().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new K$(cR,r.shape,s.shape):new H$(cR,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}const dR={kernelName:Sn,backendName:"webgl",kernelFunc:hR};function pR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=n,o=J(s.shape),l=re(i,o),u=J(l);q(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=a.texData.get(s.dataId);return!c.isPacked||zN(s.shape,l)||null!==c.texture&&zN(c.shape,l)?(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[ON(e.shape),...LN(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},i=[ON(t),...LN(t)],a=new N$(i,r),o=[r],l=n.runWebGLProgram(a,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,a)}const fR={kernelName:Vn,backendName:"webgl",kernelFunc:pR};class gR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${Q(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class mR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function yR(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Oc(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,h;c="mean"===n?0===a?new gR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new gR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new mR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}class bR{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=lC(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class xR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=lC(this.rank),s=S$("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=s[e];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function vR(e,t,n){const r=Ce().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xR(e.shape,t):new bR(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function wR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;return function(e,t,n,r){const s=t,i=e.shape.length,a=se(s,e.shape);let o=a;const l=xl(o,i),u=null!=l;let c=e;u&&(c=vR(e,l,r),o=wl(o.length,i)),bl("sum",o,i);const[h,d]=ml(c.shape,o);let p=h;n&&(p=yl(h,a));const f=J(d),g=pR({inputs:{x:c},attrs:{shape:[J(e.shape)/f,f]},backend:r}),m=yR(g,Gs(e.dtype),"sum",r),y=pR({inputs:{x:m},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),u&&r.disposeIntermediateTensorInfo(c),y}(s,i,a,n)}const kR={kernelName:hr,backendName:"webgl",kernelFunc:wR};function IR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:i}=r,a=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[i[e]];let u;if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,t=k$(e,s.shape,s.dtype,i,l);u=a.makeTensorInfo(l,s.dtype),a.texData.get(u.dataId).values=t}else u=vR(s,i,a);return u}const SR={kernelName:Dr,backendName:"webgl",kernelFunc:IR};function TR({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),y=J(g),b=J(m),x=$a(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);q(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const v=n?[y,h,p]:[y,p,h],w=r?[b,f,d]:[b,d,f],k=pR({inputs:{x:e},backend:s,attrs:{shape:v}}),I=pR({inputs:{x:t},backend:s,attrs:{shape:w}}),S=[k,I],T=Math.max(y,b),E=n?k.shape[1]:k.shape[2],N=null!=i,C=null!=a,$="leakyrelu"===l,R=null!=l?oR(l,!0):null;let A;if((1===p||1===f)&&E>1e3&&!1===(N||C||$||null!=R)){let e=k,t=I;n&&(e=IR({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=IR({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(t));const i=1===f;let a=e;1!==f&&(a=pR({inputs:{x:e},backend:s,attrs:{shape:[T,E,1]}}),S.push(a));const o=1===f?2:1;let l=t;i&&(l=pR({inputs:{x:t},backend:s,attrs:{shape:[T,1,E]}}),S.push(l));const u=hR({inputs:{a,b:l},backend:s});A=wR({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),S.push(u)}else{const l=Us(e.dtype,t.dtype),u=new lR(v,w,[T,p,f],n,r,N,R,C,$),c=[k,I];if(null!=i&&c.push(i),C&&c.push(a),$){const e=s.makeTensorInfo([],"float32",fs(o,"float32"));c.push(e),S.push(e)}A=s.runWebGLProgram(u,c,l)}const _=pR({inputs:{x:A},backend:s,attrs:{shape:x}});S.push(A);for(const e of S)s.disposeIntermediateTensorInfo(e);return _}const ER={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return TR({a:s,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},NR="return abs(x);",CR={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=l$(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Ce().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new P$(r.shape,NR):new _$(r.shape,NR),n.runWebGLProgram(s,[r],r.dtype)}},$R=iR({opSnippet:D$+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),RR={kernelName:Fe,backendName:"webgl",kernelFunc:$R},AR=iR({opSnippet:D$+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),_R={kernelName:Oe,backendName:"webgl",kernelFunc:AR},DR="return a + b;",FR=aR({opSnippet:DR,packedOpSnippet:DR,supportsComplex:!0,cpuKernelImpl:$C}),OR={kernelName:Le,backendName:"webgl",kernelFunc:FR};class LR{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class MR{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const PR={kernelName:Me,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return q$({inputs:{x:s[0]},backend:r});if(s.length>Ce().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),i=e({inputs:s.slice(t),backend:r});return e({inputs:[n,i],backend:r})}const i=s.map(e=>e.dtype).reduce((e,t)=>Us(e,t)),a=s.map(e=>e.shape),o=Ce().getBool("WEBGL_PACK")?new MR(s[0].shape,a):new LR(s[0].shape,a);return r.runWebGLProgram(o,s,i)}},zR={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=se(i,s.shape);let u=l;const c=xl(u,o);let h=s;null!=c&&(h=IR({inputs:{x:s},backend:n,attrs:{perm:c}}),u=wl(u.length,o)),bl("all",u,o);const[d,p]=ml(h.shape,u),f=pR({inputs:{x:h},backend:n,attrs:{shape:[-1,J(p)]}}),g=yR(f,f.dtype,"all",n);let m;return m=pR(a?{inputs:{x:g},backend:n,attrs:{shape:yl(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},BR={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=se(i,s.shape);let u=l;const c=xl(u,o);let h=s;null!=c&&(h=IR({inputs:{x:s},backend:n,attrs:{perm:c}}),u=wl(u.length,o)),bl("any",u,o);const[d,p]=ml(h.shape,u),f=pR({inputs:{x:h},backend:n,attrs:{shape:[-1,J(p)]}}),g=yR(f,f.dtype,"any",n);let m;return m=pR(a?{inputs:{x:g},backend:n,attrs:{shape:yl(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}};class WR{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class UR{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,q(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=lC(o),u=T$("coords",o);let c,h;if(1===i){h=o+1;const e=lC(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(e=>"int "+e),g=T$("sourceLocR",h-1).concat("inIdx.r"),m=T$("sourceLocG",h-1).concat("inIdx.g"),y=T$("sourceLocB",h-1).concat("inIdx.b"),b=T$("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function GR(e,t,n,r=null){let s=t.shape[0],i=t.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const a=Oc(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},l=new WR(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=GR(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function VR(e,t,n,r=null){const s=null!=r?r.shape:t.shape,i=Oc(s[s.length-1]),a=new UR(s,i,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(a,o,"int32");if(l.shape.length===t.shape.length){const r=VR(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function HR(e,t,n,r){const s=[n];if(bl("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Ce().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let a=t;null!==i&&i.isPacked&&(a=e.unpackTensor(t),n.push(a));const[o,l]=ml(a.shape,s),u=J(l),c=pR({inputs:{x:a},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=GR(e,c,r);n.push(h);const d=pR({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),d}return VR(e,t,r)}const jR={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=se(i,s.shape);const o=xl(a,s.shape.length);let l=s;const u=[];null!=o&&(l=IR({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=wl(a.length,l.shape.length)),bl("argMax",[a[0]],l.shape.length);const c=HR(n,l,a[0],"max");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},KR={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=se(i,s.shape);const o=xl(a,s.shape.length);let l=s;const u=[];null!=o&&(l=IR({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=wl(a.length,l.shape.length)),bl("argMin",[a[0]],l.shape.length);const c=HR(n,l,a[0],"min");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},qR=iR({opSnippet:D$+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),XR={kernelName:Ue,backendName:"webgl",kernelFunc:qR},YR=iR({opSnippet:D$+"return log(x + sqrt(x * x + 1.0));"}),JR={kernelName:Ge,backendName:"webgl",kernelFunc:YR},ZR=iR({opSnippet:D$+"\n  return atan(x);\n"}),QR={kernelName:Ve,backendName:"webgl",kernelFunc:ZR},eA=aR({opSnippet:V$+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+j$+"\n  return result;\n"}),tA={kernelName:je,backendName:"webgl",kernelFunc:eA},nA=iR({opSnippet:D$+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),rA={kernelName:He,backendName:"webgl",kernelFunc:nA};class sA{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(i/4),v=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class iA{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(i/4),k=i%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const aA={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;HN(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;q(So(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=fo(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Z(u.inShape,u.outShape))return q$({inputs:{x:s},backend:n});const c=new sA(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},oA={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=go(s.shape,i,a,[1,1,1],o,l,u),h=new iA(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class lA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class uA{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const cA={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=go(a.shape,o,l,[1,1,1],u,c),d=new uA(h);return n.runWebGLProgram(d,[s],a.dtype)}},hA={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;HN([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=fo(a.shape,o,l,1,u),h=new lA(c);return n.runWebGLProgram(h,[s],a.dtype)}},dA={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;return TR({a:s,b:i,transposeA:a,transposeB:o,backend:n})}};class pA{constructor(e,t,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],$a(e,t),$a(e,n);let a="0.0";null!=r&&($a(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&($a(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class fA{constructor(e,t,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],$a(e,t),$a(e,n);let a="vec4(0.0)";null!=r&&($a(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&($a(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const gA={kernelName:Ut,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=e;q(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),q(null==a||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),q(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,i];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=Ce().getBool("WEBGL_PACK_NORMALIZATION")?new fA(r.shape,s.shape,i.shape,c,h,l):new pA(r.shape,s.shape,i.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class mA{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=lC(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return yA.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${yA[t]} = start[${t}] + coords.${yA[t]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const yA=["x","y","z","w","u","v"];class bA{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=lC(this.rank),n=T$("coords",this.rank),r=T$("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function xA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r,[o,l]=ao(s,i,a);if(ja(s,o,l),0===J(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=u$(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=so(s.shape,o,l);if(u||!c){const e=Ce().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bA(l):new mA(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=io(t,ge(e.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),i}(s,o,l,n)}const vA={kernelName:sr,backendName:"webgl",kernelFunc:xA},wA={kernelName:Ze,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;q(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((e,t)=>e*t),l=Mc(s.shape,i,o),u=Pc(l.length,i.length),c=zc(s.shape,i,o),h=Bc(a,i.length),d=Wc(c,a,i.length),p=[],f=pR({inputs:{x:s},backend:n,attrs:{shape:l}}),g=IR({inputs:{x:f},backend:n,attrs:{perm:u}}),m=pR({inputs:{x:g},backend:n,attrs:{shape:c}}),y=xA({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},kA={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=n.readSync(s.dataId),l=n.readSync(i.dataId),u=RC(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}},IA={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=Ce().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=Ce().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===a){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[i,a]=_C(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(a,r.dtype);return n.texData.get(o.dataId).values=i,o}let o;return o=i?new K$("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new H$("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}},SA={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.readSync(r.dataId),a=n.readSync(s.dataId),o=$a(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},TA=aR({opSnippet:"return float(a != b);",cpuKernelImpl:QC,dtype:"bool"}),EA={kernelName:En,backendName:"webgl",kernelFunc:TA};function NA(e){const{inputs:t,backend:n}=e,{input:r}=t;return q$({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const CA={kernelName:Wn,backendName:"webgl",kernelFunc:NA},$A={kernelName:nt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===i.dtype)return q$({inputs:{x:i},backend:r});const t=Fl(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=Y$({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=NA({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(t),n}if(!le(i.dtype,a)){const e=q$({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:a}}if(r.shouldExecuteOnCPU([i])){const e=r.texData.get(i.dataId).values,[t,n,s]=DC(e,i.shape,i.dtype,a);return r.makeTensorInfo(t,n,s)}if("int32"===a)return function(e,t){const n=new _$(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===a){const e=r.makeTensorInfo([],"bool",ae("bool",1)),t=TA({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},RA="return ceil(x);",AA=iR({opSnippet:RA,packedOpSnippet:RA,cpuKernelImpl:FC}),_A={kernelName:rt,backendName:"webgl",kernelFunc:AA};class DA{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class FA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const OA={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:a}=r;let o;o=Ce().getBool("WEBGL_PACK_CLIP")?new FA(s.shape):new DA(s.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class LA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function MA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const PA={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),i=new LA(r.shape),a=[MA(r,s.complexTensorInfos.real),MA(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class zA{constructor(e){this.outputShape=[],this.outputShape=Cc(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class BA{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cc(e,t);const n=this.outputShape,r=n.length,s=lC(r),i=T$("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=a[t],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${WA(a,l,t)}),\n            vec2(${WA(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${WA(a,l,p)}),\n          vec2(${WA(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function WA(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function UA(e){const{inputs:t,backend:n}=e,{input:r}=t;return q$({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const GA={kernelName:Xt,backendName:"webgl",kernelFunc:UA};function VA(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>NA({inputs:{input:e},backend:n})),s=e.map(e=>UA({inputs:{input:e},backend:n})),i=VA(r,t,n),a=VA(s,t,n),o=Y$({inputs:{real:i,imag:a},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),s.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map(e=>{const r=J(e.shape.slice(t));return pR({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})}),i=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),a=Cc(s.map(e=>e.shape),1),o=1===s[0].shape[0],l=OC(i,a,r,o),u=Cc(e.map(e=>e.shape),t),c=n.makeTensorInfo(u,r,l);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}const i=e.filter(e=>J(e.shape)>0),a=Ce().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=a?new _$(e[0].shape,M$):new P$(e[0].shape,M$);return n.runWebGLProgram(t,e,r)}const o=Ce().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let r=0;r<i.length;r+=o){const s=i.slice(r,r+o);e.push(VA(s,t,n))}const r=VA(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(a){const e=new BA(i.map(e=>e.shape),t);return n.runWebGLProgram(e,i,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=Cc(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>pR({inputs:{x:e},attrs:{shape:[-1,J(e.shape.slice(t))]},backend:n})),outShape:r}}(i,t,n),c=new zA(l.map(e=>e.shape)),h=n.runWebGLProgram(c,l,r);l.forEach(e=>n.disposeIntermediateTensorInfo(e));const d=pR({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function HA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=se(s,t[0].shape)[0];Nc(t.map(e=>e.shape),i);const a=Cc(t.map(e=>e.shape),i);if(0===J(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter(e=>J(e.shape)>0);return 1===o.length?q$({inputs:{x:o[0]},backend:n}):VA(o,i,n)}const jA={kernelName:ot,backendName:"webgl",kernelFunc:HA};class KA{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,y=g?2:3,b=g?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class qA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XA{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fC(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===a){if(n<u&&(i%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=i%2==0?j(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(i%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class YA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=fC(this.outputShape.length);const{dataFormat:n}=t,r=KN(),s="channelsLast"===n,i=s?1:2,a=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function JA(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function ZA({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1;let g;const m=[];if(null!=i){const e=JA(i.shape,p);null!=e&&(i=pR({inputs:{x:i},backend:r,attrs:{shape:e}}),m.push(i))}if(null!=s){const e=JA(s.shape,p);null!=e&&(s=pR({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&Z(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,q(zN(u.shape,h.shape),()=>`packed reshape ${u.shape} to ${h.shape} isn't free`);const p=pR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const y=TR({a:h,b:p,backend:r,transposeA:!1,transposeB:f,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),b=r.texData.get(y.dataId);q(b.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=d,b.shape=n.outShape,g=q$({inputs:{x:y},backend:r}),g.shape=n.outShape,m.push(y)}else{const l=n.outHeight*n.outWidth,u=pR({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=pR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=TR({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:f,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});g=pR({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return g}function QA({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=l*u*c,m=d*h,y=[n.batchSize,g,m],b=[];if(null!=i){const e=JA(i.shape,f);null!=e&&(i=pR({inputs:{x:i},backend:r,attrs:{shape:e}}),b.push(i))}if(null!=s){const e=JA(s.shape,f);null!=e&&(s=pR({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=pR({inputs:{x:t},backend:r,attrs:{shape:[1,g,J(t.shape)/g]}});b.push(x);const v=new YA(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(v,[e],"float32",w),I=pR({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);const S=null!=s,T=null!=i,E="leakyrelu"===o,N=o?oR(o,!0):null,C=new lR(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,m,n.outChannels]:[n.batchSize,n.outChannels,m],!0,!1,S,N,T,E),$=f?[I,x]:[x,I];if(s&&$.push(s),T&&$.push(i),E){const e=r.makeTensorInfo([],"float32",fs(a,"float32"));$.push(e),b.push(e)}const R=r.runWebGLProgram(C,$,"float32"),A=pR({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});b.push(R);for(const e of b)r.disposeIntermediateTensorInfo(e);return A}const e_={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Eo(l),d=mo(s.shape,i.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&Ce().getBool("WEBGL_EXP_CONV")){const e=new XA(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,i],"float32",t)}else if(Ce().getBool("WEBGL_CONV_IM2COL"))p=QA({x:s,filter:i,convInfo:d,backend:n});else{const e=new KA(d);p=n.runWebGLProgram(e,[s,i],"float32")}else p=ZA({x:s,filter:i,convInfo:d,backend:n});const f=pR({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class t_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class n_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class r_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class s_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const i_={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Eo(l),d=mo(s.shape,c,a,1,o,u,!1,h),p=new t_(d);return n.runWebGLProgram(p,[s,i],"float32")}};class a_{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=fC(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const o_={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Eo(u),d=mo(a,i.shape,o,1,l,c,!1,h);if(Ce().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new a_(d);return n.runWebGLProgram(t,[s,i],"float32",e)}{const e=new n_(d);return n.runWebGLProgram(e,[s,i],"float32")}}},l_={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=yo(s.shape,i.shape,a,l,o),c=new qA(u);return n.runWebGLProgram(c,[s,i],"float32")}},u_={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:l}=r,u=yo(s.shape,l,a,1,o),c=new r_(u);return n.runWebGLProgram(c,[s,i],"float32")}},c_={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:l}=r,u=yo(l,i.shape,o,1,a),c=new s_(u);return n.runWebGLProgram(c,[s,i],"float32")}},h_=iR({opSnippet:sR+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${j$}\n  return result;\n`}),d_={kernelName:ft,backendName:"webgl",kernelFunc:h_},p_=iR({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),f_={kernelName:gt,backendName:"webgl",kernelFunc:p_};class g_{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const m_={kernelName:bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new g_(s.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[s,i,a],"float32")}};var y_;!function(e){e.Prod="*",e.Sum="+"}(y_||(y_={}));class b_{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,i=this.op===y_.Prod?"1.0":"0.0",a=n?i:`getX(${x_(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${lC(s)} coords = getOutputCoords();\n        int end = ${v_(s,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${v_(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${x_(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function x_(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function v_(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function w_(e,t,n,r,s,i){const a=t.shape.length,o=xl([r],a);let l=t;null!=o&&(l=IR({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=wl(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=q$({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new b_(e,l.shape,!1,i),s=[[t]],a=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(a)}if(s){const t=new b_(e,l.shape,s,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=IR({inputs:{x:h},backend:n,attrs:{perm:vl(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const k_={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return w_(y_.Prod,s,n,i,a,o)}},I_={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return w_(y_.Sum,s,n,i,a,o)}},S_={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(i.dataId),r=RC(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(i),r=AC(e,t,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class T_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const E_={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r,o=s.shape[0],l=("NHWC"===a?s.shape[1]:s.shape[2])*i,u=("NHWC"===a?s.shape[2]:s.shape[3])*i,c=("NHWC"===a?s.shape[3]:s.shape[1])/(i*i),h=new T_("NHWC"===a?[o,l,u,c]:[o,c,l,u],i,a);return n.runWebGLProgram(h,[s],s.dtype)}};class N_{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fC(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class C_{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fC(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=a%2==0?j(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(a%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${f}\n        setOutput(result);\n      }\n    `}}const $_={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),q(So(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const h=mo(s.shape,i.shape,a,c,o,u,!0);let d;d=Ce().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new C_(h):new N_(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,i],"float32",p)}};class R_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class A_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const __={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=mo(s.shape,c,a,o,l,u,!0),d=new R_(h);return n.runWebGLProgram(d,[s,i],"float32")}},D_={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=mo(c,i.shape,a,o,l,u,!0),d=new A_(h);return n.runWebGLProgram(d,[s,i],"float32")}};class F_{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const O_={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=J(r.shape),a=pR({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new F_(i),l=n.runWebGLProgram(o,[a],a.dtype),u=pR({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class L_{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const M_={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=po(s.shape,i.shape,a,o,"NHWC",l);let c;const h=new L_(u);c=n.runWebGLProgram(h,[s,i],"float32");const d=pR({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},P_={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:l}=dh(s,i.length);fh(a.length,l,i);const{path:u,steps:c}=gh(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=ph(p,l[t]);let s;mh(e)?s=i[t]:(s=IR({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);Z(s.shape,a)||(s=pR({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=hR({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=wR({inputs:{x:d},backend:n,attrs:{axis:u[e]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},z_=iR({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),B_={kernelName:Rt,backendName:"webgl",kernelFunc:z_},W_={kernelName:At,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=Ce().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new K$("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new H$("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},U_=aR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:LC}),G_={kernelName:Dt,backendName:"webgl",kernelFunc:U_},V_=iR({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${qc};\n  float a1 = ${Xc};\n  float a2 = ${Yc};\n  float a3 = ${Jc};\n  float a4 = ${Zc};\n  float a5 = ${Qc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),H_={kernelName:_t,backendName:"webgl",kernelFunc:V_},j_=iR({opSnippet:sR+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:MC,dtype:"float32"}),K_={kernelName:Ft,backendName:"webgl",kernelFunc:j_};function q_(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(q(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),o.splice(l,0,1),pR({inputs:{x:i},backend:r,attrs:{shape:o}})}const X_={kernelName:Ot,backendName:"webgl",kernelFunc:q_},Y_="return exp(x) - 1.0;",J_=iR({opSnippet:Y_,packedOpSnippet:Y_,cpuKernelImpl:PC}),Z_={kernelName:Lt,backendName:"webgl",kernelFunc:J_};class Q_{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function eD(e,t,n){const r=n.texData.get(e.dataId),s=J(e.shape),i=e.shape[e.shape.length-1],a=pR({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),o=a.shape,l=new Q_("real",o,t),u=new Q_("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=Y$({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=pR({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const tD={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eD(r,!1,n)}};class nD{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function rD(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||de(s),"string"===i){const e=oe(i,J(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new nD(r,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const sD={kernelName:Pt,backendName:"webgl",kernelFunc:rD};class iD{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const aD={kernelName:zt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new iD(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},oD="return floor(x);",lD=iR({opSnippet:oD,packedOpSnippet:oD,cpuKernelImpl:zC}),uD={kernelName:Bt,backendName:"webgl",kernelFunc:lD},cD=aR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),hD={kernelName:Wt,backendName:"webgl",kernelFunc:cD};class dD{constructor(e){this.variableNames=["A"];const t=KN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class pD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=KN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const fD={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,i];if(o||a){const e=Ce().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=gD&&e===mD||(mD=e,gD=document.createElement("canvas").getContext("2d",{willReadFrequently:mD})),gD.canvas.width=l,gD.canvas.height=u,gD.drawImage(s,0,0,l,u),s=gD.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=yN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=Ce().getBool("WEBGL_PACK")?new pD(h):new dD(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let gD,mD=Ce().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const yD={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=Eo(c),m=mo(s.shape,i.shape,l,h,u,d,!1,g);let y;const b=[],x=null!=a,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=pR({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(a,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",fs(f,"float32"));e.push(t),b.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&Ce().getBool("WEBGL_EXP_CONV")){const e=p?oR(p,!0):null,t=new XA(m,x,e,v,w),r=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(Ce().getBool("WEBGL_CONV_IM2COL"))y=QA({x:s,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?oR(p,!1):null,t=new KA(m,x,e,v,w),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=ZA({x:s,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=pR({inputs:{x:y},backend:n,attrs:{shape:m.outShape}});return b.push(y),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}},bD={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let g=c;null==g&&(g=[1,1]),q(So(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=mo(s.shape,i.shape,l,g,u,h,!0),y=Ce().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,b=d?oR(d,y):null,x=[s,i],v=null!=a,w=null!=o,k="leakyrelu"===d;if(v&&x.push(a),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",fs(p,"float32"));x.push(e),f.push(e)}let I;I=y?new C_(m,v,b,w,k):new N_(m,v,b,w,k);const S=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],T=n.runWebGLProgram(I,x,"float32",S);return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),T}};class xD{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=lC(n.length);let i="\n    int index;";for(let e=0;e<this.sliceDim;e++)i+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const vD={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,a=i[i.length-1],o=J(r.shape),[l,u,c,h]=Uc(r,s),d=pR({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),p=pR({inputs:{x:r},backend:n,attrs:{shape:[J(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),i=BC(e,t,r.dtype,u,a,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,i.values)}const f=new xD(a,h,[u,c],r.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=pR({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}};class wD{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=lC(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function kD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r,l=se(a,s.shape)[0];if(Ce().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];q(r<=t-1&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`)}}const u=Dh(s,i,l,o),c=J(i.shape),h=[],d=pR({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=pR({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=WC(t,e,f);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const g=new wD(d.shape,f),m=n.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const y=pR({inputs:{x:m},backend:n,attrs:{shape:u.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}const ID={kernelName:Gt,backendName:"webgl",kernelFunc:kD},SD=aR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:UC,dtype:"bool"}),TD={kernelName:Ht,backendName:"webgl",kernelFunc:SD},ED=aR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:GC}),ND={kernelName:jt,backendName:"webgl",kernelFunc:ED},CD={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eD(r,!0,n)}},$D=iR({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),RD={kernelName:Yt,backendName:"webgl",kernelFunc:$D},AD=iR({opSnippet:"return float(isinf(x));",dtype:"bool"}),_D={kernelName:Jt,backendName:"webgl",kernelFunc:AD},DD=iR({opSnippet:"return float(isnan(x));",dtype:"bool"}),FD={kernelName:Zt,backendName:"webgl",kernelFunc:DD},OD=aR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:VC,dtype:"bool"}),LD={kernelName:en,backendName:"webgl",kernelFunc:OD},MD=aR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:HC,dtype:"bool"}),PD={kernelName:tn,backendName:"webgl",kernelFunc:MD},zD={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=jC(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}},BD=iR({opSnippet:sR+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:KC}),WD={kernelName:rn,backendName:"webgl",kernelFunc:BD},UD=iR({opSnippet:sR+"\n  return log(1.0 + x);\n"}),GD={kernelName:sn,backendName:"webgl",kernelFunc:UD},VD=aR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),HD={kernelName:an,backendName:"webgl",kernelFunc:VD},jD=iR({opSnippet:"return float(!(x >= 1.0));"}),KD={kernelName:on,backendName:"webgl",kernelFunc:jD},qD=aR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),XD={kernelName:ln,backendName:"webgl",kernelFunc:qD};class YD{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class JD{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const ZD={kernelName:un,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=r,u=Ce().getBool("WEBGL_PACK_NORMALIZATION")?new JD(s.shape,i,a,o,l):new YD(s.shape,i,a,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class QD{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const eF={kernelName:cn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new QD(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,i,a],s.dtype)}};function tF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,l=se(i,s.shape);let u=l;const c=xl(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=k$(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=vR(s,c,n);u=wl(u.length,o)}bl("max",u,o);const[f,g]=ml(p.shape,u);let m,y=f;if(a&&(y=yl(f,l)),d){const e=n.texData.get(p.dataId).values,t=qC(e,J(g),y,s.dtype);m=n.makeTensorInfo(y,s.dtype),n.texData.get(m.dataId).values=t}else m=function(e,t,n,r){const s=J(t),i=pR({inputs:{x:e},attrs:{shape:[J(e.shape)/s,s]},backend:r}),a=yR(i,e.dtype,"max",r),o=pR({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(p,g,y,n);return h&&n.disposeIntermediateTensorInfo(p),m}const nF={kernelName:hn,backendName:"webgl",kernelFunc:tF},rF=aR({opSnippet:V$+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+j$+"\n  return result;\n",cpuKernelImpl:XC}),sF={kernelName:dn,backendName:"webgl",kernelFunc:rF},iF={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;HN(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;q(So(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const u=fo(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Z(u.inShape,u.outShape))return q$({inputs:{x:s},backend:n});const c=new sA(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},aF={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=go(s.shape,i,a,[1,1,1],o,u,l),h=new iA(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class oF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,o=i-1-e.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const uF={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=go(a.shape,o,l,[1,1,1],u,c),d=new iA(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new lF(h),g=n.runWebGLProgram(f,[s,p],a.dtype);return n.disposeIntermediateTensorInfo(p),g}},cF={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;HN([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=fo(o.shape,l,u,1,c,h),p=new sA(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new oF(d),m=n.runWebGLProgram(g,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},hF={kernelName:yn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;q(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];q(So(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=fo(r.shape,s,i,u,a),[h,d]=function(e,t,n,r){let s=new sA(n,"max",!1);const i=r.runWebGLProgram(s,[e],"float32");return s=new sA(n,"max",!0,!0,t),[i,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,d]}},dF={kernelName:bn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:i}=t,a=n,o=r.shape.length,l=se(i,r.shape);let u=l;const c=xl(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=a.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=k$(e,r.shape,r.dtype,c,t);f=a.makeTensorInfo(t,r.dtype),a.texData.get(f.dataId).values=n}else f=vR(r,c,a);p.push(f),u=wl(u.length,o)}bl("sum",u,o);const[g,m]=ml(f.shape,u);let y=g;s&&(y=yl(g,l));const b=function(e,t,n,r){const s=J(t),i=pR({inputs:{x:e},attrs:{shape:[J(e.shape)/s,s]},backend:r}),a=yR(i,"float32","mean",r),o=pR({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(f,m,y,a);for(const e of p)a.disposeIntermediateTensorInfo(e);return b}},pF={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=se(i,s.shape);let u=l;const c=xl(u,o);let h=s;null!=c&&(h=IR({inputs:{x:s},backend:n,attrs:{perm:c}}),u=wl(u.length,s.shape.length)),bl("min",u,o);const[d,p]=ml(h.shape,u),f=pR({inputs:{x:h},backend:n,attrs:{shape:[-1,J(p)]}}),g=yR(f,f.dtype,"min",n);let m;return m=pR(a?{inputs:{x:g},backend:n,attrs:{shape:yl(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},fF=aR({opSnippet:V$+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+j$+"\n  return result;\n",cpuKernelImpl:YC}),gF={kernelName:vn,backendName:"webgl",kernelFunc:fF};class mF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=lC(r),i=t.map(e=>e[0]).join(","),a=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class yF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=lC(r),i=t.map(e=>e[0]).join(","),a=t.map((t,n)=>t[0]+e[n]).join(","),o=T$("rc",r),l=T$("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const bF={kernelName:wn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:i}=n,a=Ce().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yF(r.shape,s,i):new mF(r.shape,s,i);return t.runWebGLProgram(a,[r],r.dtype)}},xF=aR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+j$+"\n  return result;\n"}),vF={kernelName:kn,backendName:"webgl",kernelFunc:xF};class wF{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const kF=aR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),IF={kernelName:Ct,backendName:"webgl",kernelFunc:kF},SF="return a - b;",TF=aR({opSnippet:SF,packedOpSnippet:SF,supportsComplex:!0,cpuKernelImpl:x$}),EF={kernelName:Nr,backendName:"webgl",kernelFunc:TF};function NF(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=se([i],s.shape),o=tF({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=yl(o.shape,a),u=pR({inputs:{x:o},backend:n,attrs:{shape:l}}),c=TF({inputs:{a:s,b:u},backend:n}),h=j_({inputs:{x:c},backend:n}),d=wR({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=pR({inputs:{x:d},backend:n,attrs:{shape:l}}),f=kF({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const CF={kernelName:fr,backendName:"webgl",kernelFunc:NF},$F={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r,l=o?s:NF({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new wF(u,c,i),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},RF=D$+"\n  return -x;\n",AF={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=ZC(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Ce().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new P$(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new _$(r.shape,RF),n.runWebGLProgram(s,[r],r.dtype)}},_F=Wu,DF={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){Gr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=_F(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},FF=Uu,OF={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){Gr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=FF(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},LF=Gu,MF={kernelName:$n,backendName:"webgl",kernelFunc:function(e){Gr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:y}=LF(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class PF{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const zF={kernelName:An,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:l}=r,u=J(s.shape),c=new PF(u,a,o,l),h=pR({inputs:{x:s},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=pR({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(d),p}};function BF(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=NA({inputs:{input:r},backend:n}),t=BF({inputs:{x:e},backend:n}),s=UA({inputs:{input:r},backend:n}),i=BF({inputs:{x:s},backend:n}),a=Y$({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return rD({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const WF={kernelName:Mr,backendName:"webgl",kernelFunc:BF},UF={kernelName:Rn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=NA({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),i=UA({inputs:{input:s},backend:r}),a=BF({inputs:{x:i},backend:r}),o=Y$({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return rD({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},GF={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return q_({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach(e=>{X(i,e.shape,"All tensors passed to stack must have matching shapes"),q(a===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=HA({inputs:t.map(e=>{const t=q_({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}};class VF{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=lC(r),i=t.map(e=>e[0]).join(","),a=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class HF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=lC(r),i=t.map(e=>e[0]).join(","),a=t.map((t,n)=>t[0]+e[n]).join(","),o=T$("rc",r),l=T$("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const jF=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;if(0===J(s.shape)){const e=i.map((e,t)=>e[0]+s.shape[t]+e[1]);return rD({backend:n,attrs:{shape:e,value:a,dtype:s.dtype}})}const o=Ce().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HF(s.shape,i,a):new VF(s.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[s],s.dtype,l)},KF={kernelName:Dn,backendName:"webgl",kernelFunc:jF},qF=aR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+j$+"\n  return result;\n"}),XF={kernelName:Fn,backendName:"webgl",kernelFunc:qF},YF={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=[],u=se(i,s.shape);let c=u;const h=xl(c,o);let d,p=s;if(null!=h&&(p=IR({inputs:{x:s},backend:n,attrs:{perm:h}}),c=wl(c.length,o),l.push(p)),bl("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=e$(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=ml(p.shape,c),r=J(t),i=pR({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=yR(i,Gs(s.dtype),"prod",n);d=pR({inputs:{x:a},backend:n,attrs:{shape:e}}),l.push(i),l.push(a)}if(a){l.push(d);const e=yl(d.shape,u);d=pR({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},JF={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,l=s.map(e=>n.readSync(e.dataId)),u=s.map(e=>e.shape),c=n.readSync(i.dataId),h=n.readSync(a.dataId),[d,p,f]=t$(l,u,c,i.shape,i.dtype,h,a.shape,o),g=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}},ZF={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=n$(a,r.shape,r.dtype,o,s.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}},QF={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=o.map(e=>n.readSync(e.dataId)),p=o.map(e=>e.shape),[f,g]=r$(u,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}},eO=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:i,dtype:a}=n,o=s$(r,s,i,a);return t.makeTensorInfo([o.length],a,o)},tO={kernelName:Bn,backendName:"webgl",kernelFunc:eO},nO=iR({opSnippet:"return 1.0 / x;"}),rO={kernelName:Un,backendName:"webgl",kernelFunc:nO},sO=iR({opSnippet:D$+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iO={kernelName:Gn,backendName:"webgl",kernelFunc:sO},aO=iR({opSnippet:D$+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),oO={kernelName:Xn,backendName:"webgl",kernelFunc:aO};class lO{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class uO{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const cO={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=Ce().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new uO(s.shape,l,u,i,a):new lO(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],"float32")}};class hO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const dO={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new hO(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class pO{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class fO{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const gO={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=Ce().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fO(s.shape,l,u,i,a):new pO(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],s.dtype)}};class mO{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const yO={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new mO(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class bO{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=lC(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class xO{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=T$("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=lC(n);function o(n){const r=e.map((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const vO={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,a=s.shape.length,o=se(i,s.shape);if(0===a)return q$({inputs:{x:s},backend:n});const l=Ce().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xO(s.shape,o):new bO(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class wO{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const kO={kernelName:zr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,l=new wO(r.shape,i),[u,c]=Lc(a,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},IO=iR({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),SO={kernelName:Jn,backendName:"webgl",kernelFunc:IO},TO=iR({opSnippet:"return inversesqrt(x);",cpuKernelImpl:i$}),EO={kernelName:Zn,backendName:"webgl",kernelFunc:TO};class NO{constructor(e,t,n,r,s,i,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=lC(s.length),u=lC(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${g}, sum, float(found)));\n        }\n      `}}class CO{constructor(e,t,n,r,s,i,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const l=lC(s.length),u=lC(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${g}, sum, found));\n        }\n      `}}const $O={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Hc(0,s,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,s.dtype);const p=pR({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=pR({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=Ce().getBool("WEBGL_PACK")?new CO(l,o,p.shape.length,f.shape.length,c,d):new NO(l,o,p.shape.length,f.shape.length,c,d);const y=n.runWebGLProgram(m,[f,p,g],f.dtype),b=pR({inputs:{x:y},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),b}};class RO{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Ce().getNumber("WEBGL_VERSION")?"while (left < right) {":s,a="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${a} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const AO={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=new RO(s.shape[0],s.shape[1],i.shape[1],a),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,i],"int32",l)}};class _O{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<t.length;r++)a.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=lC(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const DO={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,a=new _O(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,i],Us(s.dtype,i.dtype))}},FO=iR({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${jc};\n  float scale = ${Kc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),OO={kernelName:rr,backendName:"webgl",kernelFunc:FO},LO=iR({opSnippet:sR+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:o$}),MO={kernelName:lr,backendName:"webgl",kernelFunc:LO},PO=iR({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),zO={kernelName:or,backendName:"webgl",kernelFunc:PO},BO=iR({opSnippet:sR+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${j$}\n  return result;\n`}),WO={kernelName:ir,backendName:"webgl",kernelFunc:BO},UO=iR({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),GO={kernelName:ar,backendName:"webgl",kernelFunc:UO},VO=iR({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),HO={kernelName:ur,backendName:"webgl",kernelFunc:VO},jO={kernelName:dr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;q(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((e,t)=>e*t),l=[[0,0]];l.push(...a);for(let e=1+i.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=jF({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Mc(c.shape,i,o,!1),d=Pc(h.length,i.length,!1),p=zc(c.shape,i,o,!1),f=pR({inputs:{x:c},backend:n,attrs:{shape:h}}),g=IR({inputs:{x:f},backend:n,attrs:{perm:d}}),m=pR({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}},KO={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,g]=c$(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}},qO={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(i.dataId)),[u,c,h]=h$(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}},XO={kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=d$(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},YO={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=d$(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},JO={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Hc(0,s,o),p=!1;if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),r=bs(n.readSync(a.dataId)[0]),f=a$(e,t,o,d,c,u,l,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new NO(u,l,s.shape.length,i.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[i,s,a],i.dtype),m=pR({inputs:{x:g},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(g),m}},ZO={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=se(a,s.shape)[0],l=bh(s,i,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map(e=>{const t=[...h];t[o]=e;const r=xA({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r})}},QO="return sqrt(x);",eL=iR({opSnippet:QO,packedOpSnippet:QO,cpuKernelImpl:p$}),tL={kernelName:cr,backendName:"webgl",kernelFunc:eL},nL={kernelName:wr,backendName:"webgl",kernelFunc:iR({opSnippet:"return x * x;"})},rL="return (a - b) * (a - b);",sL=aR({opSnippet:rL,packedOpSnippet:rL}),iL={kernelName:vr,backendName:"webgl",kernelFunc:sL},aL={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const i=Fh(n.readSync(s.dataId)),a=f$(i,"string",r);return n.makeTensorInfo(s.shape,"string",a)}},oL={kernelName:Pr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=D$+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new _$(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class lL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=lC(n.length),i=lC(n.length);let a="";if(1===r)a="coords * strides + begin";else{let e=0;a=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const uL={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:b,end:x,strides:v}=oo(s.shape,i,a,o,l,u,c,h,d);let w;if(g)w=pR({inputs:{x:s},backend:n,attrs:{shape:f}});else if(m||y){q(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const e=qa(b,x,v),t=xA({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=pR({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=na(s.shape,s.dtype,e),r=g$(p,t,v,b);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new lL(b,v,p);w=n.runWebGLProgram(e,[s],s.dtype)}const k=pR({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}},cL={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=m$(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}},hL={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=y$(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},dL={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=b$(a,s);return n.makeTensorInfo(i.shape,"int32",o)}},pL=iR({opSnippet:"return tan(x);"}),fL={kernelName:Cr,backendName:"webgl",kernelFunc:pL},gL=iR({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),mL={kernelName:$r,backendName:"webgl",kernelFunc:gL},yL={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:i,updates:a}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Hc(0,i,s.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,i.dtype);const p=pR({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=pR({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=pR({inputs:{x:s},backend:n,attrs:{shape:d}}),m=new NO(l,o,p.shape.length,f.shape.length,c,d,!1,!0),y=n.runWebGLProgram(m,[f,p,g],g.dtype),b=pR({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),b}};class bL{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=lC(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function xL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>bs(e)):e,r=na(s.shape,s.dtype,t),a=v$(r,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new bL(s.shape,i);return n.runWebGLProgram(a,[s],s.dtype)}const vL={kernelName:Rr,backendName:"webgl",kernelFunc:xL};class wL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class kL{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function IL(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function SL(e){let t=1;for(;t<e;)t*=2;return t}const TL={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r,o=Ce().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ce().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||i>l){const e=n.readSync(s.dataId),[t,r]=w$(e,u,s.dtype,i,a);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,rD({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=J(u)/c,g=pR({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&IL(n,p);const m=SL(i),y=SL(c);let b=null;const x=()=>null===b?[g,g]:[g,b],v=(e,t,r)=>{const s=x(),i=new wL(r),a=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(i,s,"int32",a),IL(n,o)};for(let e=1;e<m;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>m;e/=2){const t=x(),r=new kL([f,e/2]),s=[[c],[null===b?1:0],[m]],i=b;b=n.runWebGLProgram(r,t,"int32",s),IL(n,i);const a=m/2,o=2*a;for(let e=a;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=xA({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,i]}}),IL(n,w);let k=kD({inputs:{x:g,indices:b},backend:n,attrs:{axis:1,batchDims:1}});IL(n,g);const I=u.slice(0,-1);I.push(i),w=b,b=pR({inputs:{x:b},attrs:{shape:I},backend:n}),IL(n,w);const S=k;return k=pR({inputs:{x:k},attrs:{shape:I},backend:n}),IL(n,S),[k,b]}};class EL{constructor(e,t,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const NL={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=new EL(h,d,a,o,l,[c,f,g,p]);return n.runWebGLProgram(m,[s,i],"float32")}},CL={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;HN(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=I$(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},$L={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==i&&(u[c++]=a.shape[e]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[i]=e;const t=xA({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=pR({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class RL{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const AL={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const c=xl([u],o);let h=s;null!=c&&(h=IR({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=wl(1,o)[0]);const d=_h(h.shape,u,a),p=J([h.shape[u]]),f=pR({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=Gs(s.dtype),m=(e,t,r,s,i)=>{const a=e.shape[0],o=e.shape[1],u=Ah(o,i),c=new RL({windowSize:u,inSize:o,batchSize:a,numSegments:i},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===i)return h;const d=eO({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=xL({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),m(h,t,p,s,i)},y=pR({inputs:{x:m(f,"unsortedSegmentSum",i,g,a)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){l.push(y);const e=vl(c);b=IR({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},_L=[ER,CR,RR,_R,OR,PR,zR,BR,jR,KR,XR,JR,QR,tA,rA,aA,oA,cA,hA,dA,gA,wA,kA,IA,SA,$A,_A,OA,J$,PA,jA,e_,i_,o_,l_,u_,c_,d_,f_,m_,k_,I_,S_,E_,$_,__,D_,O_,M_,P_,B_,W_,G_,H_,K_,X_,Z_,tD,sD,aD,uD,hD,fD,yD,bD,vD,ID,TD,ND,X$,CD,GA,RD,_D,FD,eR,LD,PD,zD,WD,GD,HD,KD,XD,ZD,eF,nF,sF,iF,aF,uF,cF,hF,dF,pF,gF,bF,vF,$F,dR,AF,DF,OF,MF,EA,zF,UF,GF,KF,XF,rR,YF,JF,ZF,QF,tO,CA,IF,rO,iO,oO,fR,cO,dO,gO,yO,vO,kO,SO,EO,$O,AO,DO,OO,MO,zO,WO,GO,vA,CF,HO,jO,KO,qO,XO,YO,JO,ZO,tL,nL,iL,aL,oL,uL,cL,hL,dL,EF,kR,fL,mL,yL,vL,TL,NL,SR,CL,$L,AL,WF];for(const e of _L)Yr(e);var DL=function(){function e(){if(u(this,e),e.instance)return e.instance;e.instance=this}return p(e,[{key:"loadModel",value:(d=i(o().mark(function t(n){var r,s;return o().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(r="".concat(n,"/model.json"),!e.modelCache.has(r)){t.next=1;break}return t.abrupt("return",e.modelCache.get(r));case 1:return t.next=2,By(r);case 2:return s=t.sent,e.modelCache.set(r,s),t.abrupt("return",s);case 3:case"end":return t.stop()}},t)})),function(e){return d.apply(this,arguments)})},{key:"loadModelMetadata",value:(h=i(o().mark(function t(n){var r;return o().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(!e.metadataCache.has(n)){t.next=1;break}return t.abrupt("return",e.metadataCache.get(n));case 1:return t.next=2,e.fileReader.readJSON(n);case 2:return r=t.sent,e.metadataCache.set(n,r),t.abrupt("return",r);case 3:case"end":return t.stop()}},t)})),function(e){return h.apply(this,arguments)})},{key:"loadSelectedModel",value:(c=i(o().mark(function t(){return o().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(e.selectedModel){t.next=1;break}return t.next=1,this.selectDefaultModel();case 1:return t.abrupt("return",this.loadModel(e.selectedModel.location));case 2:case"end":return t.stop()}},t,this)})),function(){return c.apply(this,arguments)})},{key:"loadModelList",value:(a=i(o().mark(function t(){var n,r;return o().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(e.modelListCache){t.next=3;break}return t.next=1,fetch(this.modelAPILocation||l.DefaultAIModelsListAPI);case 1:return n=t.sent,t.next=2,n.json();case 2:r=t.sent,e.modelListCache=r;case 3:case"end":return t.stop()}},t,this)})),function(){return a.apply(this,arguments)})},{key:"getModelList",value:(s=i(o().mark(function t(){return o().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=1,this.loadModelList();case 1:return t.abrupt("return",e.modelListCache);case 2:case"end":return t.stop()}},t,this)})),function(){return s.apply(this,arguments)})},{key:"getSelectedModel",value:function(){return e.selectedModel}},{key:"selectModel",value:(r=i(o().mark(function t(n){var r;return o().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=1,this.loadModelList();case 1:(r=e.modelListCache.find(function(e){return e.id===n}))?e.selectedModel=r:this.selectDefaultModel();case 2:case"end":return t.stop()}},t,this)})),function(e){return r.apply(this,arguments)})},{key:"selectCustomModel",value:(n=i(o().mark(function t(n){return o().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:e.selectedModel={id:"custom",location:n,isDefault:!1};case 1:case"end":return t.stop()}},t)})),function(e){return n.apply(this,arguments)})},{key:"selectDefaultModel",value:(t=i(o().mark(function e(){return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=1,this.loadModelList();case 1:this.selectModel(this.getDefaultModel().id);case 2:case"end":return e.stop()}},e,this)})),function(){return t.apply(this,arguments)})},{key:"isModelCompatible",value:function(e){return!!e&&B().valid(e.gameVersion)&&B().lte(e.gameVersion,l.Setting.APP_VERSION)&&!e.isDeprecated}},{key:"getDefaultModel",value:function(){var t=e.modelListCache,n=t.filter(this.isModelCompatible),r=n.find(function(e){return e.isDefault});return r||(t.find(function(e){return e.isDefaultFallback})||(n.length>0?n.sort(function(e,t){return new Date(t.createdAt)-new Date(e.createdAt)})[0]:t.length>0?t.sort(function(e,t){return new Date(e.createdAt)-new Date(t.createdAt)})[0]:null))}},{key:"setModelListAPI",value:function(e){this.modelAPILocation=e}}],[{key:"getInstance",value:function(t){return e.instance||(e.instance=new e),t&&(e.fileReader=t),e.instance}}]);var t,n,r,s,a,c,h,d}();P(DL,"instance",null),P(DL,"modelCache",new Map),P(DL,"metadataCache",new Map),P(DL,"modelListCache",null),P(DL,"selectedModel",null),P(DL,"modelAPILocation",null),P(DL,"fileReader",null);var FL=function(){return p(function e(){u(this,e)},[{key:"cleanOldMemory",value:function(e){var t,n;e&&null!==(t=e.state)&&void 0!==t&&t.dispose&&e.state.dispose(),e&&null!==(n=e.nextState)&&void 0!==n&&n.dispose&&e.nextState.dispose()}},{key:"changeEnvironment",value:function(e){}}])}(),OL=function(){return p(function e(t){u(this,e),this.capacity=t,this.tree=new Float32Array(2*t-1),this.data=new Array(t),this.size=0,this.write=0,this.maxPriority=1},[{key:"total",value:function(){return this.tree[0]}},{key:"add",value:function(e,t){var n=this.write+this.capacity-1;this.data[this.write]=t,this.update(n,e),this.write=(this.write+1)%this.capacity,this.size=Math.min(this.size+1,this.capacity)}},{key:"update",value:function(e,t){var n=this.tree[e],r=t-n;for(this.tree[e]=t,t>this.maxPriority?this.maxPriority=t:n===this.maxPriority&&t<n&&this.recalculateMaxPriority();0!==e;)e=Math.floor((e-1)/2),this.tree[e]+=r}},{key:"getMaxPriority",value:function(){return this.maxPriority}},{key:"recalculateMaxPriority",value:function(){for(var e=this.capacity-1,t=0,n=e;n<e+this.size;n++){var r=this.tree[n];r>t&&(t=r)}this.maxPriority=t}},{key:"get",value:function(e){if(e>this.total())throw new Error("SumTree: value is greater than total");for(var t=0;2*t+1<this.tree.length;){var n=2*t+1,r=n+1;e<=this.tree[n]?t=n:(t=r,e-=this.tree[n])}return{index:t,value:this.tree[t],data:this.getData(t)}}},{key:"getData",value:function(e){var t=e-(this.capacity-1);return this.data[t]}},{key:"serializeToJson",value:function(){return{capacity:this.capacity,tree:Array.from(this.tree),data:this.data,size:this.size,maxPriority:this.maxPriority,write:this.write}}},{key:"deserializeFromJSON",value:function(e){if(!e||"object"!==c(e))throw new Error("Invalid or missing memory data.");if("number"!=typeof e.capacity||e.capacity<=0)throw new Error("Property 'capacity' is missing or invalid.");if(!Array.isArray(e.tree))throw new Error("Property 'tree' must be an array.");if(!Array.isArray(e.data))throw new Error("Property 'data' must be an array.");if("number"!=typeof e.size||e.size<0||e.size>e.capacity)throw new Error("Property 'size' is missing or invalid.");if("number"!=typeof e.maxPriority)throw new Error("Property 'maxPriority' is missing or invalid.");if("number"!=typeof e.write||e.write<0||e.write>=e.capacity)throw new Error("Property 'write' is missing or invalid.");if(e.tree.length!==2*e.capacity-1)throw new Error("Length of 'tree' array is inconsistent with capacity.");this.capacity=e.capacity,this.tree=new Float32Array(e.tree),this.data=e.data.slice(0,this.capacity),this.size=e.size,this.maxPriority=e.maxPriority,this.write=e.write}}])}();function LL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(LL=function(){return!!e})()}var ML=function(e){function t(e,n,r){var s,i,a,o,l=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.6,h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.4,d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1e-5,p=arguments.length>7&&void 0!==arguments[7]?arguments[7]:.001;return u(this,t),i=this,a=T(a=t),(s=S(i,LL()?Reflect.construct(a,[],T(i).constructor):a.apply(i,o))).capacity=e,s.rng=n,s.logger=r,s.calculateWeight=l,s.alpha=c,s.beta=h,s.espilon=d,s.betaIncrementPerSampling=p,s.sumTree=new OL(e),s}return C(t,e),p(t,[{key:"add",value:function(e,t,n,r,s){var i={state:e,action:t,reward:n,nextState:r,done:s},a=this.sumTree.data[this.sumTree.write];a&&this.cleanOldMemory(a),this.sumTree.add(Math.pow(this.sumTree.getMaxPriority(),this.alpha),i)}},{key:"sample",value:function(e){var t=[],n=[],r=[];this.beta=Math.min(1,this.beta+this.betaIncrementPerSampling);for(var s=this.sumTree.total(),i=s/e,a=0,o=0;o<e;o++){var l=i*o,u=i*(o+1),c=this.sampleOneWithRetry(l,u);if(c){var h=c.index,d=c.value,p=c.data;if(n.push(h),t.push(p),this.calculateWeight){var f=d/s,g=Math.pow(this.sumTree.size*f,-this.beta);r.push(g),g>a&&(a=g)}}}return{samples:t,indices:n,weights:this.calculateWeight?r.map(function(e){return e/a}):null}}},{key:"sampleOneWithRetry",value:function(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,r=0;r<n;r++){var s=e+this.rng()*(t-e),i=this.sumTree.get(s),a=i.index,o=i.value,l=i.data;if(l)return{index:a,value:o,data:l};this.logger.warn("PrioritizedReplayBuffer: Retry sampling, null data at value ".concat(s," (attempt ").concat(r+1,")\n"))}return this.logger.error("PrioritizedReplayBuffer: Failed to sample valid data after ".concat(n," attempts\n")),null}},{key:"updatePriority",value:function(e,t,n){var r=Math.pow(Math.abs(t)+this.espilon,this.alpha);this.sumTree.update(e,r)}},{key:"size",value:function(){return this.sumTree.size}},{key:"changeEnvironment",value:function(e){}},{key:"serializeToJson",value:function(){return{capacity:this.capacity,calculateWeight:this.calculateWeight,alpha:this.alpha,beta:this.beta,espilon:this.espilon,betaIncrementPerSampling:this.betaIncrementPerSampling,sumtree:this.sumTree.serializeToJson()}}},{key:"deserializeFromJSON",value:function(e){if(!e||"object"!==c(e))throw new Error("Invalid or missing memory data.");if("number"!=typeof e.capacity||e.capacity<=0)throw new Error("Property 'capacity' is missing or invalid.");if("boolean"!=typeof e.calculateWeight)throw new Error("Property 'calculateWeight' is missing or invalid.");if("number"!=typeof e.alpha||e.alpha<0)throw new Error("Property 'alpha' is missing or invalid.");if(!e.sumtree||"object"!==c(e.sumtree))throw new Error("Property 'sumtree' is missing or invalid.");this.capacity=e.capacity,this.calculateWeight=e.calculateWeight,this.alpha=e.alpha,this.sumTree.deserializeFromJSON(e.sumtree)}}],[{key:"getType",value:function(){return"PrioritizedReplayBuffer"}}])}(FL);function PL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(PL=function(){return!!e})()}var zL=function(e){function t(e,n,r){var s,i,a,o;return u(this,t),i=this,a=T(a=t),(s=S(i,PL()?Reflect.construct(a,[],T(i).constructor):a.apply(i,o))).capacity=e,s.rng=n,s.logger=r,s.buffer=new Array(e),s.position=0,s.totalSize=0,s}return C(t,e),p(t,[{key:"add",value:function(e,t,n,r,s){var i=this.buffer[this.position];i&&this.cleanOldMemory(i),this.buffer[this.position]={state:e,action:t,reward:n,nextState:r,done:s},this.position=(this.position+1)%this.capacity,this.totalSize<this.capacity&&this.totalSize++}},{key:"sample",value:function(e){for(var t=[],n=[],r=0;r<e;r++){var s=Math.floor(this.rng()*this.totalSize);t.push(this.buffer[s]),n.push(s)}return{samples:t,indices:n,weight:null}}},{key:"updatePriority",value:function(e,t){}},{key:"size",value:function(){return this.totalSize}},{key:"changeEnvironment",value:function(e){}},{key:"serializeToJson",value:function(){return{capacity:this.capacity,buffer:this.buffer,position:this.position,totalSize:this.totalSize}}},{key:"deserializeFromJSON",value:function(e){if(!e||"object"!==c(e))throw new Error("Invalid or missing memory data.");if("number"!=typeof e.capacity||e.capacity<=0)throw new Error("Property 'capacity' is missing or invalid.");if("number"!=typeof e.totalSize||e.totalSize<0||e.totalSize>e.capacity)throw new Error("Property 'totalSize' is missing or invalid.");if("number"!=typeof e.position||e.position<0||e.position>=e.capacity)throw new Error("Property 'position' is missing or invalid.");if(!Array.isArray(e.buffer))throw new Error("Property 'buffer' must be an array.");this.capacity=e.capacity,this.buffer=e.buffer.slice(0,this.capacity),this.position=e.position,this.totalSize=e.totalSize}}],[{key:"getType",value:function(){return"UniformReplayBuffer"}}])}(FL);function BL(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function WL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(WL=function(){return!!e})()}var UL=function(e){function t(e,n,r){var s,i,a,o,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"uniform",c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"cycling";return u(this,t),i=this,a=T(a=t),(s=S(i,WL()?Reflect.construct(a,[],T(i).constructor):a.apply(i,o))).capacity=e,s.rng=n,s.logger=r,s.buffers=new Map,s.currentEnvironment=null,s.selectMode=c||"classic",s.currentBufferIndex=0,s.bufferType=l,s.createBuffer=function(e,t){return"prioritized"===e?new ML(t,n,s.logger):new zL(t,n,s.logger)},s}return C(t,e),p(t,[{key:"changeEnvironment",value:function(e){this.currentEnvironment=e,this.buffers.has(e)||this.buffers.set(e,this.createBuffer(this.bufferType,this.capacity))}},{key:"add",value:function(e,t,n,r,s){if(!this.currentEnvironment)throw new Error("No environment selected. Please use changeEnvironment(envId) to setup the current environment.");this.buffers.get(this.currentEnvironment).add(e,t,n,r,s)}},{key:"sample",value:function(e){var t=Array.from(this.buffers.keys()),n=this.size();if(0===t.length||0===n)return{samples:[],indices:[],weight:null};switch(this.selectMode){case"cycling":return this.cyclingSample(t,e);case"random":return this.randomSample(t,e,n);case"balanced":return this.balancedSample(t,e,n);default:return this.classicSample(t,e,n)}}},{key:"classicSample",value:function(e,t,n){var r=this,s=e.map(function(e){var s=r.buffers.get(e),i=s.size();return 0===i?null:r.sampleBuffer(s,Math.max(1,Math.floor(t*(i/n))),e)}).filter(Boolean);return{samples:s.flatMap(function(e){return e.samples}),indices:s.flatMap(function(e){return e.indices}),weight:s.some(function(e){return e.weight})?s.flatMap(function(e){return e.weight}):null,envAssignments:s.flatMap(function(e){return e.envAssignments})}}},{key:"balancedSample",value:function(e,t){var n=this,r=Math.max(1,Math.floor(t/e.length)),s=e.map(function(e){return n.sampleBuffer(n.buffers.get(e),r,e)});return{samples:s.flatMap(function(e){return e.samples}),indices:s.flatMap(function(e){return e.indices}),weight:s.flatMap(function(e){return e.weight}).filter(function(e){return null!==e}),envAssignments:s.flatMap(function(e){return e.envAssignments})}}},{key:"cyclingSample",value:function(e,t){var n=e[this.currentBufferIndex],r=this.buffers.get(n);return this.currentBufferIndex=(this.currentBufferIndex+1)%e.length,this.sampleBuffer(r,t,n)}},{key:"randomSample",value:function(e,t,n){var r=this,s=e.map(function(e){return r.buffers.get(e).size()/n}),i=this.weightedRandomChoice(e,s);return this.sampleBuffer(this.buffers.get(i),t,i)}},{key:"weightedRandomChoice",value:function(e,t){for(var n=t.reduce(function(e,t){return e+t},0),r=this.rng()*n,s=0;s<e.length;s++){if(r<t[s])return e[s];r-=t[s]}return e[e.length-1]}},{key:"sampleBuffer",value:function(e,t,n){var r=e.sample(t),s=r.samples,i=r.indices,a=r.weight;return{samples:s,indices:i,weight:(null==a?void 0:a.length)>0?a:null,envAssignments:Array(i.length).fill(n)}}},{key:"updatePriority",value:function(e,t,n){var r=this.buffers.get(n);r&&r.updatePriority(e,t)}},{key:"cleanOldMemory",value:function(e){var t=this.buffers.get(this.currentEnvironment);t&&t.cleanOldMemory(e)}},{key:"size",value:function(){var e,t=0,n=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return BL(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?BL(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,s=function(){};return{s,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){o=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(o)throw i}}}}(this.buffers.values());try{for(n.s();!(e=n.n()).done;)t+=e.value.size()}catch(e){n.e(e)}finally{n.f()}return t}},{key:"serializeToJson",value:function(){var e=this;return{capacity:this.capacity,bufferType:this.bufferType,buffers:Array.from(this.buffers.keys()).map(function(t){return{name:t,buffer:e.buffers.get(t).serializeToJson()}}),currentEnvironment:this.currentEnvironment,selectMode:this.selectMode,currentBufferIndex:this.currentBufferIndex}}},{key:"deserializeFromJSON",value:function(e){var t=this;if(!e||"object"!==c(e))throw new Error("Memory data is invalid or missing.");if("number"!=typeof e.capacity||e.capacity<=0)throw new Error("Property 'capacity' is missing or invalid.");if("string"!=typeof e.bufferType||!["uniform","prioritized"].includes(e.bufferType))throw new Error("Property 'bufferType' is invalid or not supported.");if(!Array.isArray(e.buffers))throw new Error("Property 'buffers' must be an array.");if("string"!=typeof e.selectMode)throw new Error("Property 'selectMode' is missing or invalid.");if("number"!=typeof e.currentBufferIndex||e.currentBufferIndex<0)throw new Error("Property 'currentBufferIndex' is missing or invalid.");this.capacity=e.capacity,this.bufferType=e.bufferType,this.currentEnvironment=e.currentEnvironment||null,this.selectMode=e.selectMode,this.currentBufferIndex=e.currentBufferIndex,this.buffers.clear(),e.buffers.forEach(function(e){if(!e||"object"!==c(e))throw new Error("An element in 'buffers' is invalid.");if("string"!=typeof e.name)throw new Error("A buffer has an invalid or missing 'name'.");if(!e.buffer||"object"!==c(e.buffer))throw new Error("The buffer associated with '".concat(e.name,"' is invalid or missing."));var n=t.createBuffer(t.bufferType,t.capacity);n.deserializeFromJSON(e.buffer),t.buffers.set(e.name,n)})}}],[{key:"getType",value:function(){return"MultiEnvironmentReplayBuffer"}}])}(FL);function GL(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function VL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(VL=function(){return!!e})()}var HL=function(e){function t(e){return u(this,t),n=this,s=[e||{}],r=T(r=t),S(n,VL()?Reflect.construct(r,s||[],T(n).constructor):r.apply(n,s));var n,r,s}return C(t,e),p(t,[{key:"computeOutputShape",value:function(e){return e[1]}},{key:"call",value:function(e){return bi(function(){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,s,i,a,o=[],l=!0,u=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(o.push(r.value),o.length!==t);l=!0);}catch(e){u=!0,s=e}finally{try{if(!l&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(u)throw s}}return o}}(t,n)||function(e,t){if(e){if("string"==typeof e)return GL(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?GL(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=r[0],i=r[1],a=i.mean(1,!0);return s.add(i.sub(a))})}}],[{key:"className",get:function(){return"DuelingQLayer"}}])}(hm);function jL(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function KL(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?jL(Object(n),!0).forEach(function(t){P(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):jL(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function qL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(qL=function(){return!!e})()}function XL(e,t,n,r){var s=E(T(1&r?e.prototype:e),t,n);return 2&r&&"function"==typeof s?function(e){return s.apply(n,e)}:s}function YL(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return bi(function(){var r=Wl(e,0,1,t,n);return la(Xl(r),ua(Ea(r)))})}ba(HL);var JL=function(e){function t(e){var n,r,s,i;u(this,t);var a,o,l,c=KL(KL({},e),{},{sigma:null!==(n=e.sigma)&&void 0!==n?n:.5,useFactorised:null===(r=e.useFactorised)||void 0===r||r,useBias:null===(s=e.useBias)||void 0===s||s,dtype:e.dtype||"float32",seed:e.seed||1});return a=this,l=[c],o=T(o=t),(i=S(a,qL()?Reflect.construct(o,l||[],T(a).constructor):o.apply(a,l))).sigma=c.sigma,i.useFactorised=c.useFactorised,i.dtype=c.dtype,i.seed=c.seed,i}return C(t,e),p(t,[{key:"build",value:function(e){if(this.lastDim=e[e.length-1],null==this.lastDim)throw new Error("The last dimension of the input must be defined.");var n=Math.sqrt(this.lastDim),r=this.useFactorised?1/n:Math.sqrt(3/this.lastDim),s=this.useFactorised?this.sigma/n:.017;this.muKernel=this.addWeight("muKernel",[this.lastDim,this.units],this.dtype,Fm({minval:-r,maxval:r,seed:this.seed})),this.sigmaKernel=this.addWeight("sigmaKernel",[this.lastDim,this.units],this.dtype,Dm({value:s})),this.epsKernel=this.addWeight("epsKernel",[this.lastDim,this.units],this.dtype,_m(),void 0,!1),this.useBias&&(this.muBias=this.addWeight("muBias",[this.units],this.dtype,Fm({minval:-r,maxval:r,seed:this.seed+1})),this.sigmaBias=this.addWeight("sigmaBias",[this.units],this.dtype,Dm({value:s})),this.epsBias=this.addWeight("epsBias",[this.units],this.dtype,_m(),void 0,!1)),this.resetNoise(),XL(t,"build",this,3)([e])}},{key:"kernel",get:function(){var e=this;return bi(function(){return ia(e.muKernel.read(),la(e.sigmaKernel.read(),e.epsKernel.read()))})}},{key:"bias",get:function(){var e=this;return this.useBias?bi(function(){return ia(e.muBias.read(),la(e.sigmaBias.read(),e.epsBias.read()))}):null}},{key:"call",value:function(e){return XL(t,"call",this,3)([e])}},{key:"resetNoise",value:function(){var e=this;bi(function(){if(e.seed++,e.useFactorised){var t=YL([e.lastDim,1],e.dtype,e.seed),n=YL([1,e.units],e.dtype,e.seed+1),r=Sl(t,n);e.epsKernel.write(r),e.useBias&&e.epsBias.write(n.flatten())}else e.epsKernel.write(Wl([e.lastDim,e.units],null,null,e.dtype,e.seed)),e.useBias&&e.epsBias.write(Wl([e.units],null,null,e.dtype,e.seed+1))})}},{key:"removeNoise",value:function(){var e=this;bi(function(){e.epsKernel.write(Fl([e.lastDim,e.units])),e.useBias&&e.epsBias.write(Fl([e.units]))})}},{key:"getConfig",value:function(){return KL(KL({},XL(t,"getConfig",this,3)([])),{},{sigma:this.sigma,useFactorised:this.useFactorised,dtype:this.dtype,seed:this.seed})}}],[{key:"className",get:function(){return"NoisyDense"}}])}(sv);function ZL(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(ZL=function(){return!!e})()}ba(JL);var QL=function(e){function t(e,n,r,s,a){var l,c,h,d,p;return u(this,t),c=this,h=T(h=t),(l=S(c,ZL()?Reflect.construct(h,[],T(c).constructor):h.apply(c,d))).aiLevelText="ultra",l.enableTrainingMode=e,l.modelLocation=n,l.trainingRandomSeed=r||(new(b())).int32(),l.trainingRng=new(b())(l.trainingRandomSeed,{state:!0}),l.logger=s||console,l.fileReader=a||{readJSON:(p=i(o().mark(function e(t){return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=1,fetch(t);case 1:return e.next=2,e.sent.json();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e)})),function(e){return p.apply(this,arguments)})},l.mainModel=null,l.targetModel=null,l.modelHeight=25,l.modelWidth=25,l.modelDepth=2,l.numberOfPossibleActions=4,l.dtype="float32",l.enableTargetModel=!0,l.enableDuelingQLearning=!0,l.enableNoisyNetwork=!0,l.enableVariableInputSize=!1,l.syncTargetEvery=1e3,l.gamma=.95,l.epsilonMax=1,l.epsilonMin=.005,l.epsilon=l.epsilonMax,l.learningRate=.001,l.batchSize=32,l.maxMemoryLength=1e5,l.memory=new UL(l.maxMemoryLength,l.trainingRng,l.logger,"prioritized"),l.currentEnv=null,l.lastAction=null,l.currentQValue=0,l.currentEpoch=0,l.stepsSinceLastSync=0,l.summaryWriter=null,l}return C(t,e),p(t,[{key:"setup",value:(m=i(o().mark(function e(t){return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=1,this.createOrLoadModel(this.enableTrainingMode,this.modelLocation);case 1:if(this.mainModel=e.sent,!this.modelLocation){e.next=2;break}return e.next=2,this.loadMetadata("".concat(this.modelLocation,"/metadata.json"));case 2:if(!this.enableTrainingMode){e.next=4;break}if(!this.modelLocation){e.next=3;break}return e.next=3,this.loadMemory("".concat(this.modelLocation,"/memory.json"));case 3:this.enableTargetModel&&(this.targetModel=this.createModel(),this.targetModel.setWeights(this.mainModel.getWeights())),this.summaryWriter=t,this.logger.info("INFO: The current seed for this training process is: ".concat(this.trainingRandomSeed,"\n")),this.enableNoisyNetwork&&this.resetNoisyLayers(),e.next=5;break;case 4:this.enableNoisyNetwork&&this.clearNoisyLayers();case 5:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"createOrLoadModel",value:(d=i(o().mark(function e(t,n){var r;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=DL.getInstance(this.fileReader),!t){e.next=1;break}return e.abrupt("return",this.loadModelTrainingMode(n,r));case 1:return e.abrupt("return",this.loadModelStandardMode(n,r));case 2:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"loadModelTrainingMode",value:(h=i(o().mark(function e(t,n){var r,s;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=2;break}return e.next=1,n.loadModel(this.processModelLocation(t));case 1:s=e.sent,e.next=3;break;case 2:s=this.createModel();case 3:return r=s,this.compileModel(r),e.abrupt("return",r);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return h.apply(this,arguments)})},{key:"loadModelStandardMode",value:(c=i(o().mark(function e(t,n){var r;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=1;break}return e.abrupt("return",n.loadModel(this.processModelLocation(t)));case 1:return e.next=2,n.loadSelectedModel();case 2:return r=e.sent,this.modelLocation=n.getSelectedModel().location,e.abrupt("return",r);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return c.apply(this,arguments)})},{key:"processModelLocation",value:function(e){return"undefined"!=typeof process&&"node"===process.release.name?"file://".concat(e):"".concat(e)}},{key:"createModel",value:function(){var e,t,n=this,r=function(e){return n.enableNoisyNetwork?new JL(e):sv(e)},s=fm({shape:[this.enableVariableInputSize?null:this.modelHeight,this.enableVariableInputSize?null:this.modelWidth,this.modelDepth]}),i=rv({filters:32,kernelSize:3,activation:"relu",padding:"same",dtype:this.dtype}).apply(s),a=rv({filters:64,kernelSize:3,activation:"relu",padding:"same",dtype:this.dtype}).apply(i),o=this.enableVariableInputSize?(e={dataFormat:"channelsLast",trainable:!0,dtype:this.dtype},new Wx(e)).apply(a):function(e){return new rx(e)}({dtype:this.dtype}).apply(a),l=r({units:64,activation:"relu",dtype:this.dtype,seed:this.trainingRng()}).apply(o),u=r({units:this.numberOfPossibleActions,activation:"linear",dtype:this.dtype,seed:this.trainingRng()}).apply(l);if(this.enableDuelingQLearning){var c=r({units:64,activation:"relu",dtype:this.dtype,seed:this.trainingRng()}).apply(o),h=r({units:1,activation:"linear",dtype:this.dtype,seed:this.trainingRng()}).apply(c);t=Uy({inputs:s,outputs:(new HL).apply([h,u]),dtype:this.dtype})}else t=Uy({inputs:s,outputs:u,dtype:this.dtype});return t}},{key:"compileModel",value:function(e){e.compile({optimizer:Sc.rmsprop(this.learningRate),loss:function(e,t){return Ic.huberLoss(e,t)}})}},{key:"resetNoisyLayers",value:function(){this.enableNoisyNetwork&&this.enableTrainingMode&&(this.mainModel.layers.forEach(function(e){e instanceof JL&&e.resetNoise()}),this.enableTargetModel&&this.targetModel&&this.targetModel.layers.forEach(function(e){e instanceof JL&&e.resetNoise()}))}},{key:"clearNoisyLayers",value:function(){this.enableNoisyNetwork&&(this.mainModel.layers.forEach(function(e){e instanceof JL&&e.removeNoise()}),this.enableTargetModel&&this.targetModel&&this.targetModel.layers.forEach(function(e){e instanceof JL&&e.removeNoise()}))}},{key:"ai",value:function(e){var t;return t=this.trainingRng()<this.epsilon&&this.enableTrainingMode&&!this.enableNoisyNetwork?this.getRandomAction():this.getBestAction(e),this.lastAction=t,this.actionToKey(e,t)}},{key:"getRandomAction",value:function(){return g(0,this.numberOfPossibleActions-1,this.trainingRng)}},{key:"getBestAction",value:function(e){var t=this;return this.enableTrainingMode&&this.resetNoisyLayers(),bi(function(){var n=t.stateToTensor(t.getState(e)).expandDims(0),r=function(e){for(var t=-1/0,n=-1,r=0;r<e.length;r++)e[r]>t&&(t=e[r],n=r);return{maxValue:t,maxIndex:n}}(t.mainModel.predict(n).dataSync()),s=r.maxValue,i=r.maxIndex;return t.summaryWriter&&(t.currentQValue=s),i})}},{key:"actionToKey",value:function(e,t){if(4===this.numberOfPossibleActions)return l.ActionMappingInverse[t];if(3!==this.numberOfPossibleActions)throw new Error("Error: this number of possible actions (".concat(this.numberOfPossibleActions,") is not supported"));var n=e.getHeadPosition().direction;if(t===l.AIActions.CONTINUE)return l.ActionMappingInverse[n];if(t===l.AIActions.TURN_LEFT)switch(n){case l.Direction.UP:return l.ActionMappingInverse[l.Direction.LEFT];case l.Direction.BOTTOM:return l.ActionMappingInverse[l.Direction.RIGHT];case l.Direction.RIGHT:return l.ActionMappingInverse[l.Direction.TOP];case l.Direction.LEFT:return l.ActionMappingInverse[l.Direction.BOTTOM]}if(t===l.AIActions.TURN_RIGHT)switch(n){case l.Direction.UP:return l.ActionMappingInverse[l.Direction.RIGHT];case l.Direction.BOTTOM:return l.ActionMappingInverse[l.Direction.LEFT];case l.Direction.RIGHT:return l.ActionMappingInverse[l.Direction.BOTTOM];case l.Direction.LEFT:return l.ActionMappingInverse[l.Direction.TOP]}throw new Error("Error: no action was mapped for actionIndex ".concat(t))}},{key:"getState",value:function(e){for(var t=e.grid,n=new Array(t.height).fill(0).map(function(){return new Array(t.width).fill(0)}),r=new Array(t.height).fill(0).map(function(){return new Array(t.width).fill(0)}),s=0;s<t.height;s++)for(var i=0;i<t.width;i++){var a=new f(i,s),o=t.get(a);e.positionInQueue(a)?e.getHeadPosition().equals(a)?n[s][i]=3:e.getTailPosition().equals(a)?n[s][i]=2:n[s][i]=1:o===l.CaseType.SNAKE&&(n[s][i]=4),o===l.CaseType.FRUIT?r[s][i]=1:o===l.CaseType.FRUIT_GOLD&&(r[s][i]=2),o!==l.CaseType.WALL&&o!=l.CaseType.SNAKE_DEAD||(r[s][i]=3)}return{snakesLayer:n,fruitsAndWallsLayer:r}}},{key:"stateToTensor",value:function(e){for(var t=e.snakesLayer.length,n=e.snakesLayer[0].length,r=this.enableVariableInputSize?t:this.modelHeight,s=this.enableVariableInputSize?n:this.modelWidth,i=new Float32Array(r*s*2),a=0;a<r;a++)for(var o=0;o<s;o++){var l=2*(a*s+o),u=a<t&&o<n;i[l]=u?e.snakesLayer[a][o]:-1,i[l+1]=u?e.fruitsAndWallsLayer[a][o]:-1}return pi(i,[r,s,2],this.dtype)}},{key:"findPositionInState",value:function(e,t){for(var n=0;n<e.length;n++)for(var r=0;r<e[n].length;r++)if(e[n][r]===l.CaseTypeAIValue[t])return{x:r,y:n};return null}},{key:"remember",value:function(e,t,n,r,s){this.memory.add(e,t,n,r,s)}},{key:"train",value:(a=i(o().mark(function e(){var t,n,r,s,i,a,l=this;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(this.memory.size()<this.batchSize)){e.next=1;break}return e.abrupt("return");case 1:return t=this.loadBatches(),n=bi(function(){var e=iu(t.samples.map(function(e){var t=e.nextState;return l.stateToTensor(t)})),n=iu(t.samples.map(function(e){var t=e.state;return l.stateToTensor(t)})),r=ou(t.samples.map(function(e){return e.reward}),l.dtype),s=ou(t.samples.map(function(e){return e.done?0:1}),l.dtype),i=ou(t.samples.map(function(e){return e.action}),"int32"),a=(l.enableTargetModel?l.targetModel:l.mainModel).predict(e),o=l.mainModel.predict(n),u=a.max(1),c=o.clone(),h=u.mul(l.gamma).mul(s),d=r.add(h),p=Dl(i,c.shape[1],void 0,void 0,l.dtype),f=o.mul(p).sum(1),g=d.sub(f).abs(),m=g.mean().dataSync()[0];return g.dataSync().forEach(function(e,n){l.memory.updatePriority(t.indices[n],e,t.envAssignments?t.envAssignments[n]:null)}),{inputs:n,targets:c.mul(pa(1).sub(p)).add(p.mul(d.expandDims(1))),meanTDError:m}}),r=n.inputs,s=n.targets,i=n.meanTDError,e.next=2,this.mainModel.fit(r,s,{batchSize:this.batchSize,epochs:1,verbose:0,shuffle:!0});case 2:a=e.sent,this.summaryWriter&&(this.summaryWriter.scalar("loss",a.history.loss[0],this.currentEpoch),this.summaryWriter.scalar("td_error",i,this.currentEpoch),this.summaryWriter.scalar("epsilon",this.epsilon,this.currentEpoch)),r.dispose(),s.dispose(),this.stepsSinceLastSync>=this.syncTargetEvery&&(this.synchronizeTargetNetwork(),this.stepsSinceLastSync=0),this.stepsSinceLastSync++,this.currentEpoch++;case 3:case"end":return e.stop()}},e,this)})),function(){return a.apply(this,arguments)})},{key:"loadBatches",value:function(){return this.memory.sample(this.batchSize)}},{key:"synchronizeTargetNetwork",value:function(){this.enableTargetModel&&(this.targetModel.setWeights(this.mainModel.getWeights()),this.logger.info("Target network synchronized!\n"))}},{key:"calculateReward",value:function(e,t,n){var r=e.gameOver,s=e.getHeadPosition(),i=this.findPositionInState(t.fruitsAndWallsLayer,l.CaseType.FRUIT),a=this.findPositionInState(t.fruitsAndWallsLayer,l.CaseType.FRUIT_GOLD);if(i||this.logger.warn("No fruit detected\n"),r){for(var o=0,u=0,c=[l.Direction.UP,l.Direction.DOWN,l.Direction.LEFT,l.Direction.RIGHT];u<c.length;u++){var h=c[u],d=e.getNextPosition(s,h);e.grid.isDeadPosition(d)||o++}return o>=1?l.AIRewards.GAME_OVER_WITH_EMPTY_CASES_AROUND:l.AIRewards.GAME_OVER}return n&&e.isAIStuck(3)?l.AIRewards.STUCK:i&&s.x===i.x&&s.y===i.y?l.AIRewards.FRUIT_EATEN:a&&s.x===a.x&&s.y===a.y?l.AIRewards.GOLD_FRUIT_EATEN:l.AIRewards.MOVE}},{key:"step",value:(s=i(o().mark(function e(t,n,r){var s,i;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:s=this.getState(t),i=this.calculateReward(t,n,r),this.remember(n,this.lastAction,i,s,r);case 1:case"end":return e.stop()}},e,this)})),function(e,t,n){return s.apply(this,arguments)})},{key:"changeEnvironment",value:function(e){this.currentEnv!==e&&(this.logger.info("Changing environment to: ".concat(e,"\n")),this.memory&&this.memory.changeEnvironment(e),this.currentEnv=e)}},{key:"beginEpisode",value:function(){this.resetNoisyLayers()}},{key:"exportMemory",value:function(){var e="";return this.memory instanceof zL?e=zL.getType():this.memory instanceof ML?e=ML.getType():this.memory instanceof UL&&(e=UL.getType()),{memory:this.memory.serializeToJson(),type:e,maxMemoryLength:this.maxMemoryLength}}},{key:"exportMetadata",value:function(){return{trainingConfig:{dtype:this.dtype,trainingRandomSeed:this.trainingRandomSeed,enableDuelingQLearning:this.enableDuelingQLearning,enableNoisyNetwork:this.enableNoisyNetwork,syncTargetEvery:this.syncTargetEvery,gamma:this.gamma,epsilonMax:this.epsilonMax,epsilonMin:this.epsilonMin,epsilon:this.epsilon,learningRate:this.learningRate,batchSize:this.batchSize},modelInfo:{modelHeight:this.modelHeight,modelWidth:this.modelWidth,modelDepth:this.modelDepth,numberOfPossibleActions:this.numberOfPossibleActions,enableVariableInputSize:this.enableVariableInputSize},trainingState:{trainingRng:this.trainingRng.state(),currentEnv:this.currentEnv,lastAction:this.lastAction,currentQValue:this.currentQValue,currentEpoch:this.currentEpoch,stepsSinceLastSync:this.stepsSinceLastSync}}}},{key:"loadMemory",value:(r=i(o().mark(function e(t){var n,r,s;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,this.logger.info("Loading memory from file: ".concat(t,"\n")),e.next=1,this.fileReader.readJSON(t);case 1:if(n=e.sent){e.next=2;break}return this.logger.warn("No memory found at location: ".concat(t,"\n")),e.abrupt("return");case 2:if("type"in n){e.next=3;break}throw new Error("The 'type' property is missing in the memory file.");case 3:"maxMemoryLength"in n&&"number"==typeof n.maxMemoryLength?this.maxMemoryLength=n.maxMemoryLength:this.logger.warn("maxMemoryLength missing or invalid in the memory file.\n"),r=n.type,e.next=r===zL.getType()?4:r===ML.getType()?5:r===UL.getType()?6:7;break;case 4:return this.memory=new zL(this.maxMemoryLength,this.trainingRng,this.logger),e.abrupt("continue",8);case 5:return this.memory=new ML(this.maxMemoryLength,this.trainingRng,this.logger),e.abrupt("continue",8);case 6:return this.memory=new UL(this.maxMemoryLength,this.trainingRng,this.logger),e.abrupt("continue",8);case 7:throw new Error("Unknown memory type: ".concat(n.type));case 8:if("memory"in n){e.next=9;break}throw new Error("The memory data to deserialize are missing or are invalid.");case 9:this.memory.deserializeFromJSON(n.memory),this.logger.info("Memory correctly loaded from file\n"),e.next=11;break;case 10:e.prev=10,s=e.catch(0),this.logger.error("Error loading memory: ".concat(s.message,"\n")),this.memory=new UL(this.maxMemoryLength,this.trainingRng,this.logger);case 11:case"end":return e.stop()}},e,this,[[0,10]])})),function(e){return r.apply(this,arguments)})},{key:"loadMetadata",value:(n=i(o().mark(function e(t){var n,r,s,i,a,l;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,this.logger.info("Loading metadata from file: ".concat(t,"\n")),n=DL.getInstance(this.fileReader),e.next=1,n.loadModelMetadata(t);case 1:if(r=e.sent){e.next=2;break}return this.logger.warn("No metadata found at location: ".concat(t,"\n")),e.abrupt("return");case 2:r.trainingConfig&&((s=r.trainingConfig).dtype&&(this.dtype=s.dtype),"number"==typeof s.trainingRandomSeed&&(this.trainingRandomSeed=s.trainingRandomSeed,this.trainingRng=new(b())(this.trainingRandomSeed,{state:!0})),"boolean"==typeof s.enableDuelingQLearning&&(this.enableDuelingQLearning=s.enableDuelingQLearning),"boolean"==typeof s.enableNoisyNetwork&&(this.enableNoisyNetwork=s.enableNoisyNetwork),"number"==typeof s.syncTargetEvery&&(this.syncTargetEvery=s.syncTargetEvery),"number"==typeof s.gamma&&(this.gamma=s.gamma),"number"==typeof s.epsilonMax&&(this.epsilonMax=s.epsilonMax),"number"==typeof s.epsilonMin&&(this.epsilonMin=s.epsilonMin),"number"==typeof s.epsilon&&(this.epsilon=s.epsilon),"number"==typeof s.learningRate&&(this.learningRate=s.learningRate),"number"==typeof s.batchSize&&(this.batchSize=s.batchSize)),r.modelInfo&&("number"==typeof(i=r.modelInfo).modelHeight&&(this.modelHeight=i.modelHeight),"number"==typeof i.modelWidth&&(this.modelWidth=i.modelWidth),"number"==typeof i.modelDepth&&(this.modelDepth=i.modelDepth),"number"==typeof i.numberOfPossibleActions&&(this.numberOfPossibleActions=i.numberOfPossibleActions),"boolean"==typeof i.enableVariableInputSize&&(this.enableVariableInputSize=i.enableVariableInputSize)),r.trainingState&&((a=r.trainingState).trainingRng&&(this.trainingRng=b()("",{state:a.trainingRng})),void 0!==a.currentEnv&&(this.currentEnv=a.currentEnv),void 0!==a.lastAction&&(this.lastAction=a.lastAction),void 0!==a.currentQValue&&(this.currentQValue=a.currentQValue),void 0!==a.currentEpoch&&(this.currentEpoch=a.currentEpoch),void 0!==a.stepsSinceLastSync&&(this.stepsSinceLastSync=a.stepsSinceLastSync)),this.logger.info("Metadata correctly loaded from file\n"),e.next=4;break;case 3:e.prev=3,l=e.catch(0),this.logger.error("Error loading metadata: ".concat(l.message,"\n"));case 4:case"end":return e.stop()}},e,this,[[0,3]])})),function(e){return n.apply(this,arguments)})}]);var n,r,s,a,c,h,d,m}(I);function eM(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(eM=function(){return!!e})()}var tM=function(e){function t(){var e,n,r,s;return u(this,t),n=this,r=T(r=t),(e=S(n,eM()?Reflect.construct(r,[],T(n).constructor):r.apply(n,s))).aiLevelText="mock",e}return C(t,e),p(t,[{key:"ai",value:function(){return null}}])}(I);function nM(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var rM=function(){function e(t,n,r,s,i,a,o,c){u(this,e),this.direction=null==t?l.Direction.RIGHT:t,this.initialDirection=this.direction,this.initialLength=null==n?3:n,this.initTriedDirections=[],this.errorInit=!1,this.grid=r||new k,this.queue=[],this.lastKey=-1,this.lastTail,this.lastHead,this.lastTailMoved,this.lastHeadMoved,this.ticksDead=0,this.player=null==s?l.PlayerType.HUMAN:s,this.aiLevel=null==i?l.AiLevel.DEFAULT:i,this.autoRetry=null!=a&&a,this.score=0,this.gameOver=!1,this.scoreMax=!1,this.color,this.name=null==o?"Snake":o,this.snakeAI=new I,this.customAI=c,this.lastPositions=[],this.stuckCounter=0}return p(e,[{key:"init",value:(n=i(o().mark(function e(){var t,n,r,s,i,a,u,c,h;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(this.initialLength<=0)){e.next=1;break}return this.errorInit=!0,e.abrupt("return",!1);case 1:if(this.grid.maze&&this.initTriedDirections.length<=0&&(this.initialDirection=this.grid.mazeFirstPosition.direction,this.direction=this.initialDirection),t=0,n=0,r=Object.values(l.HorizontalDirection),s=Object.values(l.VerticalDirection),r.includes(this.initialDirection)&&!this.initTriedDirections.includes(this.initialDirection)?t=this.checkSpace(!1):s.includes(this.initialDirection)&&!this.initTriedDirections.includes(this.initialDirection)&&(n=this.checkSpace(!0)),this.initTriedDirections.push(this.initialDirection),!(t<=0&&r.includes(this.initialDirection)||n<=0&&s.includes(this.initialDirection))){e.next=2;break}return e.abrupt("return",this.handleNoSpace());case 2:i=!0,a=[];case 3:if(!i){e.next=6;break}if(i=!1,u=this.getStartPosition()){e.next=4;break}return this.errorInit=!0,e.abrupt("return",!1);case 4:if((c=this.generateSnakePositions(u))?a=c:i=!0,!this.grid.maze||!i){e.next=5;break}return e.abrupt("return",this.init());case 5:e.next=3;break;case 6:return(h=this.isNearDeadPosition(a))&&(this.direction=this.grid.invertDirection(this.direction)),this.placeSnakeOnGrid(a,h),this.grid.maze&&this.player==l.PlayerType.HYBRID_HUMAN_AI&&(this.player=l.PlayerType.HUMAN),this.player==l.PlayerType.HYBRID_HUMAN_AI&&(this.aiLevel=l.AiLevel.HIGH),this.lastTail=this.getTailPosition(),this.lastHead=this.getHeadPosition(),e.next=7,this.initAI();case 7:return e.abrupt("return",!0);case 8:case"end":return e.stop()}},e,this)})),function(){return n.apply(this,arguments)})},{key:"checkSpace",value:function(e){for(var t=0,n=e?this.grid.width:this.grid.height,r=e?this.grid.height:this.grid.width,s=0;s<n;s++)for(var i=0,a=0;a<r;a++){var o=e?s:a,u=e?a:s;if(this.grid.get(new f(o,u))==l.CaseType.EMPTY?i++:i=0,i>=this.initialLength){t++;break}}return t}},{key:"handleNoSpace",value:function(){for(var e=0,t=Object.values(l.SimpleDirection);e<t.length;e++){var n=t[e];if(!this.initTriedDirections.includes(n))return this.initialDirection=n,this.direction=n,this.init()}return this.errorInit=!0,!1}},{key:"getStartPosition",value:function(){return this.grid.maze?this.grid.mazeFirstPosition:this.grid.getRandomPosition()}},{key:"generateSnakePositions",value:function(e){for(var t=[],n=new f(e.x,e.y,this.initialDirection),r=this.initialLength-1;r>=0;r--){if(r<this.initialLength-1&&(n=this.grid.getNextPosition(n,this.initialDirection)),this.grid.get(n)!=l.CaseType.EMPTY)return null;t.push(new f(n.x,n.y,n.direction))}return t}},{key:"isNearDeadPosition",value:function(e){if(!this.grid.maze)for(var t=new f(e[e.length-1].x,e[e.length-1].y,this.direction),n=0,r=Object.values(l.SimpleDirection);n<r.length;n++){var s=r[n];if(this.grid.isDeadPosition(this.grid.getNextPosition(t,s),!1)&&this.direction==s)return!0}return!1}},{key:"placeSnakeOnGrid",value:function(e,t){for(var n=0;n<e.length;n++)if(t){var r=e[e.length-n-1];r.direction=this.grid.invertDirection(r.direction),this.insert(e[e.length-n-1])}else this.insert(e[n])}},{key:"initAI",value:(t=i(o().mark(function e(){var t,n,r;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.customAI){e.next=12;break}n=this.aiLevel,e.next=n===l.AiLevel.RANDOM?1:n===l.AiLevel.LOW?2:n===l.AiLevel.DEFAULT?3:n===l.AiLevel.HIGH?4:n===l.AiLevel.ULTRA?5:n===l.AiLevel.MOCK?9:10;break;case 1:return this.snakeAI=new R,e.abrupt("continue",11);case 2:return this.snakeAI=new _,e.abrupt("continue",11);case 3:return this.snakeAI=new O,e.abrupt("continue",11);case 4:return this.snakeAI=new M,e.abrupt("continue",11);case 5:return e.prev=5,t=new QL(!1),e.next=6,t.setup();case 6:this.snakeAI=t,e.next=8;break;case 7:e.prev=7,r=e.catch(5),console.error(r),this.errorInit=!0;case 8:return e.abrupt("continue",11);case 9:return this.snakeAI=new tM,e.abrupt("continue",11);case 10:return this.snakeAI=new O,e.abrupt("continue",11);case 11:e.next=13;break;case 12:this.snakeAI=this.customAI,this.aiLevel=l.AiLevel.CUSTOM;case 13:case"end":return e.stop()}},e,this,[[5,7]])})),function(){return t.apply(this,arguments)})},{key:"reset",value:function(){this.direction=this.initialDirection,this.initTriedDirections=[],this.errorInit=!1,this.queue=[],this.score=0,this.gameOver=!1,this.scoreMax=!1,this.lastTailMoved=!0,this.lastHeadMoved=!0,this.lastTail=void 0,this.lastHead=void 0,this.lastKey=-1,this.ticksDead=0,this.lastPositions=[],this.stuckCounter=0,this.snakeAI&&(this.snakeAI.aiFruitGoal=l.CaseType.FRUIT)}},{key:"insert",value:function(e){this.queue.unshift(e),this.grid.set(l.CaseType.SNAKE,e)}},{key:"remove",value:function(){var e=this.queue.pop();this.grid.set(l.CaseType.EMPTY,e),this.lastTail=e,this.lastHead=this.getHeadPosition()}},{key:"length",value:function(){return this.queue.length}},{key:"get",value:function(e){return this.queue&&null!=this.queue[e]?this.queue[e].copy():null}},{key:"set",value:function(e,t){e>=0&&e<this.length()&&(this.queue[e]=t)}},{key:"increaseScore",value:function(e){this.score+=e,this.stuckCounter=0,this.lastPositions=[]}},{key:"getHeadPosition",value:function(){return this.get(0)}},{key:"getTailPosition",value:function(){return this.get(this.length()-1)}},{key:"positionInQueue",value:function(e){var t,n=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return nM(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?nM(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,s=function(){};return{s,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){o=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(o)throw i}}}}(this.queue);try{for(n.s();!(t=n.n()).done;){var r=t.value;if(r&&r.x==e.x&&r.y==e.y)return!0}}catch(e){n.e(e)}finally{n.f()}return!1}},{key:"hasMaxScore",value:function(){return this.grid.getTotal(l.CaseType.EMPTY)<=0&&!this.grid.fruitPosGold&&!this.grid.fruitPos}},{key:"setGameOver",value:function(e){this.gameOver=!0,this.ticksDead=e;for(var t=0;t<this.length();t++)this.grid.set(l.CaseType.SNAKE_DEAD,this.get(t))}},{key:"kill",value:function(){this.autoRetry=!1,this.grid=null,this.queue=null}},{key:"keyToDirection",value:function(e){return e==l.Key.LEFT&&this.direction!=l.Direction.RIGHT&&this.direction!=l.Direction.LEFT?l.Direction.LEFT:e==l.Key.UP&&this.direction!=l.Direction.BOTTOM&&this.direction!=l.Direction.UP?l.Direction.UP:e==l.Key.RIGHT&&this.direction!=l.Direction.LEFT&&this.direction!=l.Direction.RIGHT?l.Direction.RIGHT:e==l.Key.BOTTOM&&this.direction!=l.Direction.UP&&this.direction!=l.Direction.BOTTOM?l.Direction.BOTTOM:null}},{key:"moveTo",value:function(e){var t=this.keyToDirection(e);null!=t&&(this.direction=t),this.addMoveToHistory()}},{key:"addMoveToHistory",value:function(){var e=this.getHeadPosition(),t="".concat(e.x,",").concat(e.y,",").concat(e.direction);this.lastPositions.includes(t)?this.stuckCounter++:this.stuckCounter=Math.max(0,this.stuckCounter-1),this.lastPositions.push(t),this.lastPositions.size>this.maxLastMoves&&this.lastPositions.shift()}},{key:"maxLastMoves",get:function(){return Math.max(this.grid.width,this.grid.height)}},{key:"getNextPosition",value:function(e,t){return this.grid.getNextPosition(e,t)}},{key:"getDirectionTo",value:function(e,t){return this.grid.getDirectionTo(e,t)}},{key:"getGraphicDirectionFor",value:function(e,t,n){if(null==t||null==n)return e.direction;var r=this.getDirectionTo(e,n),s=this.getDirectionTo(e,t);return r==l.Direction.LEFT&&s==l.Direction.BOTTOM||r==l.Direction.BOTTOM&&s==l.Direction.LEFT?l.Direction.ANGLE_1:r==l.Direction.RIGHT&&s==l.Direction.BOTTOM||r==l.Direction.BOTTOM&&s==l.Direction.RIGHT?l.Direction.ANGLE_2:r==l.Direction.UP&&s==l.Direction.RIGHT||r==l.Direction.RIGHT&&s==l.Direction.UP?l.Direction.ANGLE_3:r==l.Direction.UP&&s==l.Direction.LEFT||r==l.Direction.LEFT&&s==l.Direction.UP?l.Direction.ANGLE_4:e.direction}},{key:"getGraphicDirection",value:function(e){return this.getGraphicDirectionFor(this.get(e),this.get(e-1),this.get(e+1))}},{key:"copy",value:function(){for(var t=new e(this.direction,3,new k(this.grid.width,this.grid.height,!1,!1),this.player,this.aiLevel,!1),n=0;n<t.grid.height;n++)for(var r=0;r<t.grid.width;r++)t.grid.set(this.grid.get(new f(r,n)),new f(r,n));t.queue=[];for(var s=0;s<this.queue.length;s++)t.queue.push(JSON.parse(JSON.stringify(this.queue[s])));return t}},{key:"ai",value:function(){return this.snakeAI&&this.snakeAI.ai?this.snakeAI.ai(this):null}},{key:"isAIStuck",value:function(e){return!(!this.snakeAI||!this.snakeAI.ai)&&this.stuckCounter>=this.maxLastMoves*e}},{key:"getAILevelText",value:function(){return this.snakeAI?this.snakeAI.aiLevelText:"???"}}]);var t,n}(),sM=function(){return p(function e(t){u(this,e),this.name=t,this.callbacks=[]},[{key:"registerCallback",value:function(e){this.callbacks.push(e)}}])}(),iM=function(){return p(function e(){u(this,e),this.events={}},[{key:"registerEvent",value:function(e){this.events[e]=new sM(e)}},{key:"dispatchEvent",value:function(e,t){for(var n=this.events[e].callbacks,r=0,s=n.length;r<s;r++)n[r](t)}},{key:"addEventListener",value:function(e,t){this.events[e].registerCallback(t)}}])}();function aM(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return oM(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?oM(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,s=function(){};return{s,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){o=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(o)throw i}}}}function oM(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var lM,uM=function(){return p(function e(t,n,r,s,i,a,o,l,c){u(this,e),this.grid=t,this.snakes=n,this.speed=null==r?8:r,this.initialSpeed=null==r?8:r,this.initialSpeedUntouched=null==r?8:r,this.enablePause=null==s||s,this.enableRetry=null==i||i,this.progressiveSpeed=null!=a&&a,this.aiStuckLimit=null==o?3:o,this.disableStuckAIDetection=null!=l&&l,this.aiUltraModelSettings=c,this.countBeforePlay=3,this.lastKey=-1,this.numFruit=1,this.ticks=0,this.isInit=!1,this.engineLoading=!0,this.firstStart=!0,this.starting=!1,this.paused=!0,this.exited=!1,this.killed=!1,this.isReseted=!0,this.gameOver=!1,this.gameFinished=!1,this.gameMazeWin=!1,this.scoreMax=!1,this.errorOccurred=!1,this.clientSidePredictionsMode=!1,this.aiStuck=!1,this.intervalPlay,this.reactor=new iM,this.reactor.registerEvent("onStart"),this.reactor.registerEvent("onPause"),this.reactor.registerEvent("onContinue"),this.reactor.registerEvent("onReset"),this.reactor.registerEvent("onStop"),this.reactor.registerEvent("onExit"),this.reactor.registerEvent("onKill"),this.reactor.registerEvent("onScoreIncreased"),this.reactor.registerEvent("onUpdate"),this.reactor.registerEvent("onUpdateCounter")},[{key:"init",value:(r=i(o().mark(function e(){var t,n,r,s;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.clientSidePredictionsMode){e.next=4;break}if(this.engineLoading=!0,null==this.snakes?(this.errorOccurred=!0,this.snakes=[]):Array.isArray(this.snakes)?(Array.isArray(this.snakes)&&this.snakes.length<=0||this.grid.maze&&this.snakes.length>1)&&(this.errorOccurred=!0):this.snakes=[this.snakes],this.grid instanceof k!=0){e.next=1;break}this.errorOccurred=!0,e.next=3;break;case 1:if(this.errorOccurred){e.next=3;break}return e.next=2,this.initGridAndSnakes();case 2:t=g(0,360,this.grid?new(b())(this.grid.seedGame):null),n=aM(this.snakes);try{for(n.s();!(r=n.n()).done;)(s=r.value)instanceof rM==0||s.errorInit?this.errorOccurred=!0:(t=m(t,Math.round(360/this.snakes.length)),s.color=t)}catch(e){n.e(e)}finally{n.f()}case 3:this.engineLoading=!1;case 4:this.isInit=!0;case 5:case"end":return e.stop()}},e,this)})),function(){return r.apply(this,arguments)})},{key:"initGridAndSnakes",value:(n=i(o().mark(function e(){var t,n,r,s,i,a;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.grid.reset(),this.grid.init(),null==this.snakes){e.next=8;break}if(!this.snakes.find(function(e){return!e.customAI&&e.aiLevel===l.AiLevel.ULTRA})||!this.aiUltraModelSettings){e.next=1;break}return e.next=1,this.initAIUltra();case 1:t=aM(this.snakes);try{for(t.s();!(n=t.n()).done;)n.value.reset()}catch(e){t.e(e)}finally{t.f()}r=aM(this.snakes),e.prev=2,r.s();case 3:if((s=r.n()).done){e.next=5;break}return i=s.value,e.next=4,i.init();case 4:e.next=3;break;case 5:e.next=7;break;case 6:e.prev=6,a=e.catch(2),r.e(a);case 7:return e.prev=7,r.f(),e.finish(7);case 8:this.grid.setFruit(this.snakes.length);case 9:case"end":return e.stop()}},e,this,[[2,6,7,8]])})),function(){return n.apply(this,arguments)})},{key:"initAIUltra",value:(t=i(o().mark(function e(){var t,n,r,s;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,t=DL.getInstance(),this.aiUltraModelSettings.modelListAPIURL&&t.setModelListAPI(this.aiUltraModelSettings.modelListAPIURL),n=this.aiUltraModelSettings.modelID,r=this.aiUltraModelSettings.customURL,"custom"!==n){e.next=2;break}return e.next=1,t.selectCustomModel(r);case 1:e.next=3;break;case 2:return e.next=3,t.selectModel(n);case 3:e.next=5;break;case 4:e.prev=4,s=e.catch(0),console.error(s),this.errorOccurred=!0;case 5:case"end":return e.stop()}},e,this,[[0,4]])})),function(){return t.apply(this,arguments)})},{key:"reset",value:(e=i(o().mark(function e(){return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.paused=!0,this.isReseted=!0,this.exited=!1,this.clearIntervalPlay(),this.numFruit=1,this.ticks=0,this.lastKey=-1,this.scoreMax=!1,this.errorOccurred=!1,this.gameOver=!1,this.gameFinished=!1,this.gameMazeWin=!1,this.starting=!1,this.initialSpeed=this.initialSpeedUntouched,this.speed=this.initialSpeedUntouched,this.aiStuck=!1,this.grid.seedGrid&&(this.grid.seedGrid=""+(parseInt(this.grid.seedGrid)+1)),this.grid.seedGame&&(this.grid.seedGame=""+(parseInt(this.grid.seedGame)+1)),e.next=1,this.initGridAndSnakes();case 1:this.reactor.dispatchEvent("onReset"),this.start();case 2:case"end":return e.stop()}},e,this)})),function(){return e.apply(this,arguments)})},{key:"start",value:function(){var e=this;if(this.reactor.dispatchEvent("onUpdateCounter"),!this.errorOccurred){if(null!=this.snakes){var t,n=aM(this.snakes);try{for(n.s();!(t=n.n()).done;)t.value.errorInit&&(this.errorOccurred=!0,this.stop())}catch(e){n.e(e)}finally{n.f()}}!this.paused||this.gameOver||this.killed||this.scoreMax||this.starting||(this.starting=!0,this.firstStart||this.reactor.dispatchEvent("onContinue"),this.countBeforePlay=3,this.clearIntervalPlay(),this.reactor.dispatchEvent("onUpdateCounter"),this.intervalPlay=setInterval(function(){e.countBeforePlay--,e.reactor.dispatchEvent("onUpdateCounter"),e.countBeforePlay<0&&e.forceStart()},1e3))}}},{key:"forceStart",value:function(){this.clearIntervalPlay(),this.countBeforePlay=-1,this.paused=!1,this.isReseted=!1,this.firstStart=!1,this.starting=!1,this.reactor.dispatchEvent("onStart"),this.tick()}},{key:"clearIntervalPlay",value:function(){clearInterval(this.intervalPlay)}},{key:"continue",value:function(){this.clientSidePredictionsMode||(this.start(),this.reactor.dispatchEvent("onContinue"))}},{key:"stop",value:function(e){this.gameOver||this.clientSidePredictionsMode||(this.paused=!0,this.gameOver=!0,e&&(this.gameFinished=!0),this.clearIntervalPlay(),this.reactor.dispatchEvent("onStop"))}},{key:"pause",value:function(){this.paused||this.clientSidePredictionsMode||(this.paused=!0,this.clearIntervalPlay(),this.reactor.dispatchEvent("onPause"))}},{key:"kill",value:function(){if(!this.killed){if(this.paused=!0,this.gameOver=!0,this.killed=!0,null!=this.snakes){var e,t=aM(this.snakes);try{for(t.s();!(e=t.n()).done;)e.value.kill()}catch(e){t.e(e)}finally{t.f()}this.snakes=[]}this.clearIntervalPlay(),this.grid=null,this.snakes=null,this.reactor.dispatchEvent("onKill")}}},{key:"exit",value:function(){this.exited||(this.stop(),this.exited=!0,this.reactor.dispatchEvent("onExit"))}},{key:"destroySnakes",value:function(e,t){for(var n=0;n<this.snakes.length;n++)e&&Array.isArray(e)&&e.indexOf(n)<0&&t.indexOf(this.snakes[n].player)>-1&&this.snakes[n].setGameOver(this.ticks)}},{key:"getNBPlayer",value:function(e){var t=0;if(null!=this.snakes){var n,r=aM(this.snakes);try{for(r.s();!(n=r.n()).done;)n.value.player==e&&t++}catch(e){r.e(e)}finally{r.f()}}return t}},{key:"getPlayer",value:function(e,t){var n=0;if(null!=this.snakes){var r,s=aM(this.snakes);try{for(s.s();!(r=s.n()).done;){var i=r.value;if(i.player==t&&n++,n==e)return i}}catch(e){s.e(e)}finally{s.f()}}return null}},{key:"tick",value:function(){var e=this;setTimeout(function(){e.doTick()},this.initialSpeed*l.Setting.TIME_MULTIPLIER)}},{key:"shouldUpdateEngine",value:function(){var e,t=this.grid.maze,n=this.grid.mazeForceAuto,r=this.getNBPlayer(l.PlayerType.HUMAN)+this.getNBPlayer(l.PlayerType.HYBRID_HUMAN_AI),s=null===(e=this.getPlayer(1,l.PlayerType.HYBRID_HUMAN_AI)||this.getPlayer(1,l.PlayerType.HUMAN))||void 0===e?void 0:e.lastKey;return this.grid&&(!t||n||0===r||r>0&&-1!==s)}},{key:"doTick",value:function(){if(!this.paused&&!this.killed){if(this.shouldUpdateEngine()){var e,t=!1;this.ticks++;var n,r=aM(this.snakes);try{for(r.s();!(n=r.n()).done;){var s=n.value,i=s.direction;if(t=!1,s.lastTailMoved=!1,s.lastHeadMoved=!1,!s.gameOver&&!s.scoreMax){var a=this.moveSnake(s,i);if(a)if(this.grid.isDeadPosition(a))s.setGameOver(this.ticks);else{var o=this.handleSnakeMoveResult(a,s),l=o.scoreHasIncreased,u=o.setFruit;l&&(e=!0),this.scoreMax||!u||this.clientSidePredictionsMode||(t=!this.grid.setFruit(this.snakes.length))}}}}catch(e){r.e(e)}finally{r.f()}(this.checkEndGameCondition()||(t=this.handleStuckFruits(t)))&&this.endGame(),this.reactor.dispatchEvent("onUpdate"),e&&this.reactor.dispatchEvent("onScoreIncreased")}this.tick()}}},{key:"moveSnake",value:function(e,t){e.player==l.PlayerType.HUMAN||e.player==l.PlayerType.HYBRID_HUMAN_AI?(e.moveTo(e.lastKey),e.lastKey=-1):e.player==l.PlayerType.AI&&(!this.clientSidePredictionsMode||this.clientSidePredictionsMode&&e.aiLevel!=l.AiLevel.RANDOM)&&e.moveTo(e.ai());var n=e.getHeadPosition(),r=this.grid.isDeadPosition(e.getNextPosition(n,e.direction));return e.player==l.PlayerType.HYBRID_HUMAN_AI&&r&&(e.direction=t,e.moveTo(e.ai()),e.lastKey=-1),this.grid.maze&&e.player==l.PlayerType.HUMAN&&r?(e.direction=t,e.lastKey=-1,null):e.getNextPosition(n,e.direction)}},{key:"handleSnakeMoveResult",value:function(e,t){var n=this.grid.get(e);return n==l.CaseType.FRUIT||n==l.CaseType.FRUIT_GOLD?this.handleScoreIncrease(t,n,e):(t.insert(e),this.grid.maze||(t.remove(),t.lastTailMoved=!0,t.lastHeadMoved=!0),{goldFruit:!1,scoreHasIncreased:!1,setFruit:!1})}},{key:"handleScoreIncrease",value:function(e,t,n){var r=!1,s=!1;return t==l.CaseType.FRUIT?(e.increaseScore(1),this.grid.set(l.CaseType.EMPTY,this.grid.fruitPos),this.grid.fruitPos=null):t==l.CaseType.FRUIT_GOLD&&(e.increaseScore(3),s=!0,this.grid.set(l.CaseType.EMPTY,this.grid.fruitPosGold),this.grid.fruitPosGold=null),e.insert(n),this.grid.maze?(this.gameMazeWin=!0,this.gameFinished=!0,this.stop()):e.hasMaxScore()&&this.snakes.length<=1?(this.scoreMax=!0,e.scoreMax=!0,this.stop()):(this.numFruit++,s||(r=!0)),this.handleSpeedIncrease(e),{goldFruit:s,scoreHasIncreased:!0,setFruit:r}}},{key:"handleSpeedIncrease",value:function(e){this.snakes.length<=1&&this.progressiveSpeed&&e.score>0&&this.initialSpeed>1&&(this.initialSpeed=Math.ceil(-this.initialSpeedUntouched/100*e.score+this.initialSpeedUntouched),this.initialSpeed=this.initialSpeed<1?1:this.initialSpeed)}},{key:"handleStuckFruits",value:function(e){return this.scoreMax||e||!this.grid.detectCorridor(this.grid.fruitPos)&&!this.grid.isFruitSurrounded(this.grid.fruitPos,!0)||this.clientSidePredictionsMode||(e=!this.grid.setFruit(this.snakes.length)),this.scoreMax||null==this.grid.fruitPosGold||!this.grid.detectCorridor(this.grid.fruitPosGold)&&!this.grid.isFruitSurrounded(this.grid.fruitPosGold,!0)||(this.grid.set(l.CaseType.EMPTY,this.grid.fruitPosGold),this.grid.fruitPosGold=null),e}},{key:"checkSnakeAIStuckStatus",value:function(e){var t=!this.disableStuckAIDetection&&e.isAIStuck(this.aiStuckLimit/2);return{isPartiallyStuck:t,isFullyStuck:!this.disableStuckAIDetection&&t&&e.isAIStuck(this.aiStuckLimit),isHumanPlayer:(e.player===l.PlayerType.HUMAN||e.player===l.PlayerType.HYBRID_HUMAN_AI)&&!e.gameOver}}},{key:"checkEndGameCondition",value:function(){var e,t=0,n=!0,r=!0,s=!1,i=aM(this.snakes);try{for(i.s();!(e=i.n()).done;){var a=e.value;if(a.gameOver||a.scoreMax)t++;else{var o=this.checkSnakeAIStuckStatus(a),l=o.isPartiallyStuck,u=o.isFullyStuck;o.isHumanPlayer&&(s=!0),l?u||(r=!1):(n=!1,r=!1)}}}catch(e){i.e(e)}finally{i.f()}var c=t>=this.snakes.length||r&&!s;return this.aiStuck=n&&!s&&!c,c}},{key:"endGame",value:function(){this.stop(),this.snakes.length>1&&(this.gameFinished=!0)}},{key:"onReset",value:function(e){this.reactor.addEventListener("onReset",e)}},{key:"onStart",value:function(e){this.reactor.addEventListener("onStart",e)}},{key:"onContinue",value:function(e){this.reactor.addEventListener("onContinue",e)}},{key:"onStop",value:function(e){this.reactor.addEventListener("onStop",e)}},{key:"onPause",value:function(e){this.reactor.addEventListener("onPause",e)}},{key:"onExit",value:function(e){this.reactor.addEventListener("onExit",e)}},{key:"onKill",value:function(e){this.reactor.addEventListener("onKill",e)}},{key:"onScoreIncreased",value:function(e){this.reactor.addEventListener("onScoreIncreased",e)}},{key:"onUpdate",value:function(e){this.reactor.addEventListener("onUpdate",e)}},{key:"onUpdateCounter",value:function(e){this.reactor.addEventListener("onUpdateCounter",e)}}]);var e,t,n,r}();function cM(e){var t=[];return e&&e.forEach(function(e){if(e){var n=new rM;n.color=e.color,n.direction=e.direction,n.errorInit=e.errorInit,n.gameOver=e.gameOver,n.autoRetry=e.autoRetry,n.aiLevel=e.aiLevel,e.lastTail&&(n.lastTail=JSON.parse(JSON.stringify(e.lastTail))),e.lastHead&&(n.lastHead=JSON.parse(JSON.stringify(e.lastHead))),n.lastTailMoved=e.lastTailMoved,n.lastHeadMoved=e.lastHeadMoved,n.name=e.name,n.player=e.player,e.queue&&(n.queue=JSON.parse(JSON.stringify(e.queue))),n.score=e.score,n.scoreMax=e.scoreMax,n.ticksDead=e.ticksDead,n.ticksWithoutAction=e.ticksWithoutAction,n.grid=null,e.snakeAI&&e.snakeAI.aiLevelText&&(n.snakeAI.aiLevelText=e.snakeAI.aiLevelText),t.push(n)}}),t}function hM(e){var t=JSON.parse(JSON.stringify(e));return t&&(t.rngGrid=null,t.rngGame=null),t}function dM(e,t){var n,r=lM?null!=t?t:lM.grid:t;r=Object.assign(new k,r),e=null!=e?e:null===(n=lM)||void 0===n?void 0:n.snakes;var s=(Array.isArray(e)?e:[e]).map(function(e){var t=Object.assign(new rM,e);return t.grid=r,t.queue=t.queue.map(function(e){return Object.assign(new f,e)}),t});return{grid:r,snakes:s}}onmessage=function(){var e=i(o().mark(function e(t){var n,r,s,i,a,u,c,h,d,p;return o().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!((n=t.data).length>1&&"init"==n[0])){e.next=5;break}return e.prev=1,r=dM(n[1].snakes,n[1].grid),s=r.grid,i=r.snakes,(lM=new uM(s,i,n[1].speed,n[1].enablePause,n[1].enableRetry,n[1].progressiveSpeed,n[1].aiStuckLimit,n[1].disableStuckAIDetection,n[1].aiUltraModelSettings)).onExit(function(){self.postMessage(["exit",{paused:lM.paused,gameOver:lM.gameOver,gameFinished:lM.gameFinished,exited:lM.exited,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:lM.errorOccurred}])}),e.next=2,lM.init();case 2:e.next=4;break;case 3:return e.prev=3,d=e.catch(1),console.error(d),self.postMessage(["init",{errorOccurred:!0}]),e.abrupt("return");case 4:self.postMessage(["init",{snakes:cM(lM.snakes),grid:hM(lM.grid),enablePause:lM.enablePause,enableRetry:lM.enableRetry,progressiveSpeed:lM.progressiveSpeed,offsetFrame:lM.speed*l.Setting.TIME_MULTIPLIER,errorOccurred:lM.errorOccurred}]),lM.onReset(function(){self.postMessage(["reset",{paused:lM.paused,isReseted:lM.isReseted,exited:lM.exited,snakes:cM(lM.snakes),grid:hM(lM.grid),numFruit:lM.numFruit,ticks:lM.ticks,scoreMax:lM.scoreMax,gameOver:lM.gameOver,gameFinished:lM.gameFinished,gameMazeWin:lM.gameMazeWin,starting:lM.starting,initialSpeed:lM.initialSpeed,speed:lM.speed,offsetFrame:lM.speed*l.Setting.TIME_MULTIPLIER,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:lM.errorOccurred,aiStuck:lM.aiStuck,precAiStuck:!1}])}),lM.onStart(function(){self.postMessage(["start",{snakes:cM(lM.snakes),grid:hM(lM.grid),starting:lM.starting,countBeforePlay:lM.countBeforePlay,paused:lM.paused,isReseted:lM.isReseted,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:lM.errorOccurred}])}),lM.onPause(function(){self.postMessage(["pause",{paused:lM.paused,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:lM.errorOccurred}])}),lM.onContinue(function(){self.postMessage(["continue",{confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:lM.errorOccurred}])}),lM.onStop(function(){self.postMessage(["stop",{paused:lM.paused,scoreMax:lM.scoreMax,gameOver:lM.gameOver,gameFinished:lM.gameFinished,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:lM.errorOccurred}])}),lM.onKill(function(){self.postMessage(["kill",{paused:lM.paused,gameOver:lM.gameOver,killed:lM.killed,snakes:cM(lM.snakes),grid:hM(lM.grid),gameFinished:lM.gameFinished,confirmReset:!1,confirmExit:!1,getInfos:!1,getInfosGame:!1,errorOccurred:lM.errorOccurred}])}),lM.onScoreIncreased(function(){self.postMessage(["scoreIncreased",{}])}),lM.onUpdate(function(){self.postMessage(["update",{paused:lM.paused,isReseted:lM.isReseted,exited:lM.exited,snakes:cM(lM.snakes),grid:hM(lM.grid),numFruit:lM.numFruit,ticks:lM.ticks,scoreMax:lM.scoreMax,gameOver:lM.gameOver,gameFinished:lM.gameFinished,gameMazeWin:lM.gameMazeWin,starting:lM.starting,initialSpeed:lM.initialSpeed,speed:lM.speed,countBeforePlay:lM.countBeforePlay,offsetFrame:0,errorOccurred:lM.errorOccurred,aiStuck:lM.aiStuck}])}),lM.onUpdateCounter(function(){self.postMessage(["updateCounter",{paused:lM.paused,isReseted:lM.isReseted,exited:lM.exited,snakes:cM(lM.snakes),grid:hM(lM.grid),numFruit:lM.numFruit,ticks:lM.ticks,scoreMax:lM.scoreMax,gameOver:lM.gameOver,gameFinished:lM.gameFinished,gameMazeWin:lM.gameMazeWin,starting:lM.starting,initialSpeed:lM.initialSpeed,speed:lM.speed,countBeforePlay:lM.countBeforePlay,errorOccurred:lM.errorOccurred}])}),e.next=21;break;case 5:if(null==lM){e.next=20;break}a=n[0],p=a,e.next="reset"===p?6:"start"===p?7:"stop"===p?8:"finish"===p?9:"pause"===p?10:"kill"===p?11:"tick"===p?12:"ping"===p?13:"exit"===p?14:"forceStart"===p?15:"key"===p?16:"update"===p?17:"destroySnakes"===p?18:19;break;case 6:return lM.reset(),e.abrupt("continue",19);case 7:return lM.start(),e.abrupt("continue",19);case 8:return lM.stop(!1),e.abrupt("continue",19);case 9:return lM.stop(!0),e.abrupt("continue",19);case 10:return lM.pause(),e.abrupt("continue",19);case 11:return lM.kill(),e.abrupt("continue",19);case 12:return lM.paused=!1,lM.countBeforePlay=-1,lM.tick(),e.abrupt("continue",19);case 13:return self.postMessage("pong"),e.abrupt("continue",19);case 14:return lM.exit(),e.abrupt("continue",19);case 15:return lM.forceStart(),e.abrupt("continue",19);case 16:return n.length>1&&(lM.lastKey=n[1],null!=(u=lM.getPlayer(1,l.PlayerType.HUMAN)||lM.getPlayer(1,l.PlayerType.HYBRID_HUMAN_AI))&&null!=u.lastKey&&(u.lastKey=n[1])),e.abrupt("continue",19);case 17:return n.length>1&&("snakes"==n[1].key?(c=dM(n[1].data))&&(lM.snakes=c.snakes):"grid"==n[1].key?(h=dM(null,n[1].data))&&(lM.grid=h.grid):lM[n[1].key]=n[1].data),e.abrupt("continue",19);case 18:return n[1]&&n[2]&&lM.destroySnakes(n[1],n[2]),e.abrupt("continue",19);case 19:e.next=21;break;case 20:"ping"==n&&self.postMessage("pong");case 21:case"end":return e.stop()}},e,null,[[1,3]])}));return function(t){return e.apply(this,arguments)}}(),self.postMessage("ready")})()})();